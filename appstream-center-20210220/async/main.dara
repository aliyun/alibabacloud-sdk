/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'appstream-center';
  @version = '2021-02-20';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model RefreshLoginTokenRequest {
  clientId: string(name='ClientId', example='f4a0dc8e-1702-4728-9a60-95b27a35****', position='Query'),
  clientType?: string(name='ClientType', example='windows', position='Query'),
  endUserId?: string(name='EndUserId', example='alice', position='Query'),
  loginIdentifier?: string(name='LoginIdentifier', example='Alibaba****', position='Query'),
  loginToken: string(name='LoginToken', example='v1046341d8d4e2f05c4aa168196009613594aaf451499bfc75e54699efa7230bc968e1debb1fa4063b01e5d327b467****', position='Query'),
  officeSiteId?: string(name='OfficeSiteId', example='cn-shenzhen+dir-436909****', position='Query'),
  sessionId: string(name='SessionId', example='6442b2fd-ed3e-423a-8e6e-352d26a4****', position='Query'),
  uuid?: string(name='Uuid', example='2943802884B27030B6759F9132B2****', position='Query'),
}

model RefreshLoginTokenResponseBody = {
  loginToken?: string(name='LoginToken', example='v12369636c721ba6b3ddb1683341016775c3f63e4d0e78f120f9a0544ed826b7af7daf747c402f0d0730b52f451b70****'),
  requestId?: string(name='RequestId', example='419F31B9-1FDF-5644-ABA3-D00026FA****'),
}

model RefreshLoginTokenResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RefreshLoginTokenResponseBody(name='body'),
}

async function refreshLoginToken(request: RefreshLoginTokenRequest): RefreshLoginTokenResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RefreshLoginToken', 'POST', '/', 'json', false, 'json', request);
}

