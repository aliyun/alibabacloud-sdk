/**
 *
 */
import Util;
import OpenApi;

import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = '';
  
  checkConfig(config);
  @endpoint = getEndpoint('intelligentcreation', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model ActualDeductResourceCmd {
  cost?: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  taskId?: string(name='taskId', example='12249732894'),
}

model ActualDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
}

model DirectDeductResourceCmd {
  accountId?: string(name='accountId', example='123123424'),
  cost?: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  resourceType?: long(name='resourceType'),
  subAccountId?: string(name='subAccountId', example='123123424'),
  token?: string(name='token', example='dfshskdfjsdlfjafjls'),
}

model DirectDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
}

model ExpectDeductResourceCmd {
  accountId?: string(name='accountId', example='123123424'),
  cost?: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  resourceType?: long(name='resourceType'),
  subAccountId?: string(name='subAccountId', example='123123424'),
  token?: string(name='token', example='dfshskdfjsdlfjafjls'),
}

model ExpectDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
  taskId?: string(name='taskId'),
}

