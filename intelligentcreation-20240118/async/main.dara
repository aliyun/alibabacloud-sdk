/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'IntelligentCreation';
  @version = '2024-01-18';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model ActualDeductResourceCmd {
  cost: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  taskId: string(name='taskId', example='12249732894'),
}

model ActualDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
}

model DirectDeductResourceCmd {
  accountId: string(name='accountId', example='123123424'),
  cost: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  resourceType: long(name='resourceType'),
  subAccountId: string(name='subAccountId', example='123123424'),
  token: string(name='token', example='dfshskdfjsdlfjafjls'),
}

model DirectDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
}

model ExpectDeductResourceCmd {
  accountId: string(name='accountId', example='123123424'),
  cost: long(name='cost', example='60'),
  extraInfo?: string(name='extraInfo', example='12249732894'),
  idempotentId?: string(name='idempotentId', example='28274623764834'),
  resourceType: long(name='resourceType'),
  subAccountId: string(name='subAccountId', example='123123424'),
  token: string(name='token', example='dfshskdfjsdlfjafjls'),
}

model ExpectDeductResourceResult {
  errorMessage?: string(name='errorMessage'),
  errorcode?: string(name='errorcode'),
  requestId?: string(name='requestId', example='3239281273464326823'),
  success?: boolean(name='success'),
  taskId?: string(name='taskId'),
}

