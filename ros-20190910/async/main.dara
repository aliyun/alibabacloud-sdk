/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'ROS';
  @version = '2019-09-10';
  @endpointRule = 'central';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model CancelStackOperationRequest {
  allowedStackOperations?: [ string ](name='AllowedStackOperations', description='The operation N that you want to cancel on the stack.', position='Query'),
  cancelType?: string(name='CancelType', description='The method that you want to use to cancel the operation. Default value: Safe. Valid values:

*   Quick: cancels the operation on the stack at the earliest opportunity. In this case, ROS stops scheduling new resources and stops running resources at the earliest opportunity. If you use this method, the resource status may become invalid and subsequent stack operations may be affected.
*   Safe: cancels the operation on the stack in a secure manner. In this case, ROS stops scheduling new resources and waits for running resources to be stopped.', example='Safe', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model CancelStackOperationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model CancelStackOperationResponse = {
  headers: map[string]string(name='headers'),
  body: CancelStackOperationResponseBody(name='body'),
}

async function cancelStackOperation(request: CancelStackOperationRequest): CancelStackOperationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelStackOperation', 'POST', '/', 'json', false, 'json', request);
}

model CancelUpdateStackRequest {
  cancelType?: string(name='CancelType', description='The method to cancel the update operation. Valid values:

*   Quick: cancels the update of a stack as soon as possible.
*   Safe: cancels the update of a stack as safely as possible.', example='Safe', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model CancelUpdateStackResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model CancelUpdateStackResponse = {
  headers: map[string]string(name='headers'),
  body: CancelUpdateStackResponseBody(name='body'),
}

async function cancelUpdateStack(request: CancelUpdateStackRequest): CancelUpdateStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelUpdateStack', 'POST', '/V2/CancelUpdateStack', 'json', false, 'json', request);
}

model ContinueCreateStackRequest {
  dryRun?: boolean(name='DryRun', description='Specifies whether only to validate the stack in the request. Default value: false. Valid values:

*   true: only validates the stack.
*   false: validates and continues to create the stack.', example='false', position='Query'),
  mode?: string(name='Mode', description='The mode in which ROS continues to create the stack. Default value: Recreate. Valid values:

*   Recreate

    If you set this parameter to Recreate, ROS continues to create only the following types of resources:

    *   Resources that fail to be created

    *   Resources that you specify for the RecreatingResources.N parameter

    *   Dependencies of the resources that you specify for the RecreatingResources.N parameter

    *   Resources that you have not created

>  The RecreatingResources.N, TemplateBody, and TemplateURL parameters, and the Parameters section take effect only when the Mode parameter is set to Recreate.

*   Ignore

    *   ROS ignores and discards resources that fail to be created and you have not created, and marks the stack as successfully created.

    *   The body of the template that you use to create the stack is changed.

>  This value is valid only for ROS stacks.', example='Recreate', position='Query'),
  parallelism?: long(name='Parallelism', description='The maximum number of concurrent operations that can be performed on resources.

By default, this parameter is empty. You can set this parameter to an integer that is greater than or equal to 0.

> 
*   If you set this parameter to an integer that is greater than 0, the integer is used.
*   If you set this parameter to 0, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.
*   If you leave this parameter empty, the value that you specified for this parameter in the previous request is used. If you left this parameter empty in the previous request, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.
*   If you set this parameter to a specific value, ROS associates the value with the stack. The value affects subsequent operations on the stack.', example='1', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of template parameter N that you want to use to override another parameter. If you do not specify the name and value of a template parameter, ROS uses the name and value specified in the previous operation that was performed to create the stack. Maximum value of N: 200.

>  This parameter takes effect only when the Mode parameter is set to Recreate.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of template parameter N that you want to use to override another parameter. Maximum value of N: 200.

For ROS stacks, the following limits are imposed on the template parameters that you use to override other parameters:

*   You cannot change the condition values in the Conditions section of a template from true to false or from false to true.
*   The template parameters can be referenced only by resources that ROS continues to create.

>  This parameter takes effect only when the Mode parameter is set to Recreate.', example='12'),
    }
  ](name='Parameters', description='The parameters of the template.', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role. Resource Orchestration Service (ROS) assumes the RAM role to create the stack and uses the credentials of the role to call the APIs of Alibaba Cloud services.

ROS assumes the RAM role to perform operations on the stack. If you have permissions to perform operations on the stack but do not have permissions to use the RAM role, ROS still assumes the RAM role. You must make sure that the least privileges are granted to the RAM role.

If you do not specify this parameter, ROS assumes the existing RAM role that is associated with the stack. If no RAM roles are available, ROS uses a temporary credential that is generated from the credentials of your account.

The name of the RAM role can be up to 64 bytes in length.', example='test-role', position='Query'),
  recreatingOptions?: [ string ](name='RecreatingOptions', description='Option N that ROS adopts when ROS continues to create the stack.', position='Query'),
  recreatingResources?: [ string ](name='RecreatingResources', description='Resource N that ROS continues to create after the resource failed to be created.', example='WebServer', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

An ROS template is subject to the following limits:

*   You can modify only the following sections in the template: Description, Metadata, Resources, and Outputs.

*   You cannot add sections to or remove sections from the template.

*   The Resources section is subject to the following limits:

    *   You cannot delete the resources or change the template body for the resources that you do not want to continue to create.

    *   You can delete the resources or change the template body for the resources that you want to continue to create.

    *   You can add resources to this section.

> *   This parameter takes effect only when the Mode parameter is set to Recreate.
   *   You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId. If you do not specify the parameters, the existing template is used.', example='{"ROSTemplateFormatVersion": "2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared templates and private templates.

> 
*   This parameter takes effect when the `Mode` parameter is set to `Recreate`. When you specify the TemplateId parameter in a template, the template is subject to the limits that are described for the `TemplateBody` parameter in this topic.
*   You can specify only one of the following parameters: `TemplateBody`, `TemplateURL`, and `TemplateId`. If you do not specify the parameters, the existing template is used.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length.

If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

> 
*   This parameter takes effect only when the Mode parameter is set to Recreate. When you specify the TemplateURL parameter in a template, the template is subject to the limits that are described for the TemplateBody parameter in this topic.
*   You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId. If you do not specify the parameters, the existing template is used.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
}

model ContinueCreateStackResponseBody = {
  dryRunResult?: {
    parametersAllowedToBeModified?: [ string ](name='ParametersAllowedToBeModified', description='The parameters that can be modified. The operation that is performed to modify the parameters does not cause a validation error.

>  This parameter is returned only if the DryRun parameter is set to `true`. The value of the ParametersAllowedToBeModified parameter varies based on the values of the Mode, Template\\*, RecreatingResources.N, and RecreatingOptions.N parameters.'),
    parametersConditionallyAllowedToBeModified?: [ string ](name='ParametersConditionallyAllowedToBeModified', description='The parameters that can be modified under specific conditions.

The new values of the parameters determine whether the operation that is performed to modify the parameters causes a validation error.

>  This parameter is returned only if the DryRun parameter is set to `true`. The value of the ParametersConditionallyAllowedToBeModified parameter varies based on the values of the Mode, Template\\*, RecreatingResources.N, and RecreatingOptions.N parameters.'),
    parametersNotAllowedToBeModified?: [ string ](name='ParametersNotAllowedToBeModified', description='The parameters that cannot be modified. The operation that is performed to modify the parameters causes a validation error.

>  This parameter is returned only if the DryRun parameter is set to `true`. The value of the ParametersNotAllowedToBeModified parameter varies based on the values of the Mode, Template\\*, RecreatingResources.N, and RecreatingOptions.N parameters.'),
  }(name='DryRunResult', description='The validation result.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model ContinueCreateStackResponse = {
  headers: map[string]string(name='headers'),
  body: ContinueCreateStackResponseBody(name='body'),
}

/**
  * This topic provides an example on how to continue to create a stack that failed to be created. In this example, the stack whose ID is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****` failed to be created in the China (Hangzhou) region.
  *
 */
async function continueCreateStack(request: ContinueCreateStackRequest): ContinueCreateStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ContinueCreateStack', 'POST', '/', 'json', false, 'json', request);
}

model CreateChangeSetRequest {
  changeSetName: string(name='ChangeSetName', description='The name of the change set.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.

>  Make sure that the name is unique among names of all change sets that are associated with the specified stack.', example='MyChangeSet', position='Query'),
  changeSetType?: string(name='ChangeSetType', description='The type of the change set. Default value: UPDATE. Valid values:

*   CREATE: creates a change set for a new stack.
*   UPDATE: creates a change set for an existing stack.
*   IMPORT: creates a change set for a new stack or an existing stack to import resources that are not managed by ROS.

If you create a change set for a new stack, ROS generates a unique stack ID for the stack. The stack remains in the REVIEW_IN_PROGRESS state until you execute the change set.

You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.', example='UPDATE', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  description?: string(name='Description', description='The description of the change set. The description can be up to 1,024 bytes in length.', example='It is a demo.', position='Query'),
  disableRollback?: boolean(name='DisableRollback', description='Specifies whether to disable rollback when the stack fails to be created.

Default value: false. Valid values:

*   true
*   false

>  This parameter takes effect only when the ChangeSetType parameter is set to CREATE or IMPORT.', example='false', position='Query'),
  notificationURLs?: [ string ](name='NotificationURLs', description='The callback URL that is used to receive stack event N.', example='http://my-site.com/ros-notify', position='Query'),
  parallelism?: long(name='Parallelism', description='The maximum number of concurrent operations that can be performed on resources. By default, this parameter is empty. You can set this parameter to an integer that is greater than or equal to 0. If you set this parameter to a specific value, ROS associates the value with the stack. The value can affect subsequent operations on the stack.

This parameter takes effect only when the ChangeSetType parameter is set to CREATE or UPDATE. Valid values:

*   Valid values for change sets of the CREATE type:

    *   If you set this parameter to an integer that is greater than 0, the integer is used.
    *   If you set this parameter to 0 or leave this parameter empty, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.

*   Valid values for change set of the UPDATE type:

    *   If you set this parameter to an integer that is greater than 0, the integer is used.
    *   If you set this parameter to 0, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.
    *   If you leave this parameter empty, the value that you specified for this parameter in the previous request is used. If you left this parameter empty in the previous request, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.', example='1', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N that is defined in the template. If you do not specify the name and value of a parameter, ROS uses the default name and value that are defined in the template. Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify Parameters, you must specify Parameters.N.ParameterKey.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N that is defined in the template. Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify Parameters, you must specify Parameters.N.ParameterValue.', example='12'),
    }
  ](name='Parameters', description='The list of parameters.', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role. ROS assumes the RAM role to create the stack and uses credentials of the role to call the APIs of Alibaba Cloud services.

ROS assumes the RAM role to perform operations on the stack. If you have permissions to perform operations on the stack but do not have permissions to use the RAM role, ROS still assumes the RAM role. You must make sure that the least privileges are granted to the RAM role.

If you do not specify this parameter, ROS assumes the existing RAM role that is associated with the stack. If no RAM roles are available, ROS uses a temporary credential that is generated from the credentials of your account.

The name of the RAM role can be up to 64 bytes in length.', example='test-role', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the change set. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  replacementOption?: string(name='ReplacementOption', description='Specifies whether to enable replacement update if a resource property is changed but you cannot change the resource property. For a change, the physical ID of the resource remains unchanged. For a replacement update, the existing resource is deleted, a new resource is created, and the physical ID of the resource is changed. Default value: Disabled. Valid values:

*   Enabled
*   Disabled

>  Changes have higher priorities than replacement updates. This parameter takes effect only when the ChangeSetType parameter is set to UPDATE.', example='Disabled', position='Query'),
  resourcesToImport?: [ 
    {
      logicalResourceId: string(name='LogicalResourceId', description='The logical ID of resource N that you want to import. The logical ID specifies the name of a resource that is defined in the template.

>  This parameter takes effect only when the ChangeSetType parameter is set to IMPORT. The ResourcesToImport parameter is optional. If you specify ResourcesToImport, you must specify ResourcesToImport.N.LogicalResourceId.', example='Vpc'),
      resourceIdentifier: string(name='ResourceIdentifier', description='The key-value mapping between strings. The value is a JSON string that identifies resource N to be imported.

A key is an identifier for a resource and a value is an assignment of data to the key. For example, VpcId is a key that specifies the ID of a virtual private cloud (VPC), and `vpc-2zevx9ios****` is a value that is assigned to VpcId. You can call the [GetTemplateSummary](~~172485~~) operation to obtain the key of a resource.

>  This parameter takes effect only when the ChangeSetType parameter is set to IMPORT. The ResourcesToImport parameter is optional. If you specify ResourcesToImport, you must specify ResourcesToImport.N.ResourceIdentifier.', example='{"VpcId": "vpc-2zevx9ios******"}'),
      resourceType: string(name='ResourceType', description='The type of resource N that you want to import. The resource type must be the same as the resource type that is defined in the template.

>  This parameter takes effect only when the ChangeSetType parameter is set to IMPORT. The ResourcesToImport parameter is optional. If you specify ResourcesToImport, you must specify ResourcesToImport.N.ResourceType.', example='ALIYUN::ECS::VPC'),
    }
  ](name='ResourcesToImport', description='The key-value mapping between strings.', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack for which you want to create the change set. ROS compares the stack information with the information that you specify, such as a modified template or a changed parameter value, to generate the change set.

>  This parameter takes effect only when the ChangeSetType parameter is set to UPDATE or IMPORT.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  stackName?: string(name='StackName', description='The name of the stack for which you want to create the change set.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.

>  This parameter takes effect only when the ChangeSetType parameter is set to CREATE or IMPORT.', example='MyStack', position='Query'),
  stackPolicyBody?: string(name='StackPolicyBody', description='The structure that contains the stack policy body. The policy body must be 1 to 16,384 bytes in length. If you set the ChangeSetType parameter to CREATE, you can specify the StackPolicyBody or StackPolicyURL parameter. If you set the ChangeSetType parameter to UPDATE, you can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='{"Statement":[{"Effect":"Allow","Action":"Update:*","Principal":"*","Resource":"*"}]}', position='Query'),
  stackPolicyDuringUpdateBody?: string(name='StackPolicyDuringUpdateBody', description='The structure that contains the body of the temporary overriding stack policy. The policy body must be 1 to 16,384 bytes in length.

If you want to update protected resources, specify a temporary overriding stack policy for the resources during the update. If you do not specify the policy, the existing stack policy that is associated with the stack is used.

This parameter takes effect only when the ChangeSetType parameter is set to UPDATE. You can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='{"Statement":[{"Effect":"Allow","Action":"Update:*","Principal":"*","Resource":"*"}]}', position='Query'),
  stackPolicyDuringUpdateURL?: string(name='StackPolicyDuringUpdateURL', description='The URL of the file that contains the temporary overriding stack policy. The URL must point to a policy that is located on an HTTP or HTTPS web server or in an OSS bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The policy file can be up to 16,384 bytes in length.

>  If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

The URL can be up to 1,350 bytes in length.

If you want to update protected resources, specify a temporary overriding stack policy for the resources during the update. If you do not specify the policy, the existing policy that is associated with the stack is used. This parameter takes effect only when the ChangeSetType parameter is set to UPDATE. You can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='oss://ros/stack-policy/demo', position='Query'),
  stackPolicyURL?: string(name='StackPolicyURL', description='The URL of the file that contains the stack policy. The URL must point to a policy that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The policy file can be up to 16,384 bytes in length.

>  If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

You can specify the StackPolicyBody or StackPolicyURL parameter.

The URL can be up to 1,350 bytes in length.

If you set the ChangeSetType parameter to CREATE, you can specify the StackPolicyBody or StackPolicyURL parameter. If you set the ChangeSetType parameter to UPDATE, you can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='oss://ros/stack-policy/demo', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared templates and private templates.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario template.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an OSS bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length.

>  If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.

The URL can be up to 1,024 bytes in length.', example='oss://ros/template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template.

>  This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', description='The amount of time that can elapse before the stack enters the CREATE_FAILED or UPDATE_FAILED state.

If you set the ChangeSetType parameter to CREATE, this parameter is required. If you set the ChangeSetType parameter to UPDATE, this parameter is optional.

*   Unit: minutes.
*   Valid values: 10 to 1440.
*   Default value: 60.', example='12', position='Query'),
  usePreviousParameters?: boolean(name='UsePreviousParameters', description='Specifies whether to use the values that specified in the previous request for the parameters that you do not specify in the current request. Default value: false. Valid values:

*   true
*   false

>  This parameter takes effect only when the ChangeSetType parameter is set to UPDATE or IMPORT.', example='true', position='Query'),
}

model CreateChangeSetResponseBody = {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set.', example='e85abe0c-6528-43fb-ae93-fdf8de22****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model CreateChangeSetResponse = {
  headers: map[string]string(name='headers'),
  body: CreateChangeSetResponseBody(name='body'),
}

/**
  * You can create and execute change sets to update running stacks. For more information about change sets, see [Overview](~~156038~~).
  * ## Limits
  * - A stack can contain up to 20 change sets.
  * - Change sets reflect only the changes of stacks. Change sets do not reflect whether stacks are updated.
  * - You cannot use change sets to check the following items: whether the upper limit of your account is reached, whether to update resources that cannot be updated, and whether your account is not granted the required permissions to modify resources. These items may cause stack updates to fail. If stacks fail to be updated, Resource Orchestration Service (ROS) attempts to roll back the resources to the original status.
  * This topic provides an example on how to create a change set. In this example, a change set named `MyChangeSet` is created in the `China (Hangzhou)` region. The change set is used to change the template body of a stack to `{"ROSTemplateFormatVersion":"2015-09-01"}`. The ID of the stack is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****`.
  *
 */
async function createChangeSet(request: CreateChangeSetRequest): CreateChangeSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateChangeSet', 'POST', '/', 'json', false, 'json', request);
}

model CreateStackRequest {
  clientToken?: string(name='ClientToken', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  createOption?: string(name='CreateOption', example='KeepStackOnCreationComplete', position='Query'),
  createOptions?: [ string ](name='CreateOptions', description='创建选项列表。', position='Query'),
  deletionProtection?: string(name='DeletionProtection', example='Enabled', position='Query'),
  disableRollback?: boolean(name='DisableRollback', example='false', position='Query'),
  notificationURLs?: [ string ](name='NotificationURLs', example='http://my-site.com/ros-event', position='Query'),
  parallelism?: long(name='Parallelism', example='1', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', example='InstanceId'),
      parameterValue: string(name='ParameterValue', example='i-xxxxxx'),
    }
  ](name='Parameters', position='Query'),
  ramRoleName?: string(name='RamRoleName', example='test-role', position='Query'),
  regionId: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', example='rg-acfmxazb4ph6aiy****', position='Query'),
  stackName: string(name='StackName', example='MyStack', position='Query'),
  stackPolicyBody?: string(name='StackPolicyBody', example='{"Statement": [{"Action": "Update:*", "Resource": "*", "Effect": "Allow", "Principal": "*"}]}', position='Query'),
  stackPolicyURL?: string(name='StackPolicyURL', example='oss://ros-stack-policy/demo', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', example='usage'),
      value?: string(name='Value', example='test'),
    }
  ](name='Tags', position='Query'),
  templateBody?: string(name='TemplateBody', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', example='ts-aa9c62feab844a6b****', position='Query'),
  templateScratchRegionId?: string(name='TemplateScratchRegionId', example='cn-hangzhou', position='Query'),
  templateURL?: string(name='TemplateURL', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', example='v1', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', example='10', position='Query'),
}

model CreateStackResponseBody = {
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stackId?: string(name='StackId', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model CreateStackResponse = {
  headers: map[string]string(name='headers'),
  body: CreateStackResponseBody(name='body'),
}

/**
  * | Error code | Error message | HTTPS status code | Description |
  * | ---------- | ------------- | ----------------- | ----------- |
  * | CircularDependency | Circular Dependency Found: {reason}. | 400 | The error message returned because the template contains circular dependencies. reason indicates the cause of the error. |
  * | InvalidSchema | {reason}. | 400 | The error message returned because the format of the template is invalid. reason indicates the cause of the error. |
  * | InvalidTemplateAttribute | The Referenced Attribute ({resource} {name}) is incorrect. | 400 | The error message returned because the resource property that is referenced in the Outputs section of the template is invalid. resource indicates the resource name. name indicates the property name. |
  * | InvalidTemplatePropertyType | The specified value type of ({resource} {section}) is incorrect. | 400 | The error message returned because the type of the resource property that is defined in a section of the template is invalid. resource indicates the resource name. section indicates the section name. |
  * | InvalidTemplateReference | The specified reference "{name}" (in {referencer}) is incorrect. | 400 | The error message returned because the template contains an invalid reference. name indicates the reference name. referencer indicates the referencer name. |
  * | InvalidTemplateSection | The template section is invalid: {section}. | 400 | The error message returned because the template contains an invalid section. section indicates the section name. |
  * | InvalidTemplateVersion | The template version is invalid: {reason}. | 400 | The error message returned because the template version is invalid. reason indicates the cause of the error. |
  * | StackValidationFailed | {reason}. | 400 | The error message returned because the stack failed to be validated. reason indicates the cause of the error. |
  * | UnknownUserParameter | The Parameter ({name}) was not defined in template. | 400 | The error message returned because the specified parameter is not defined in the template. name indicates the parameter name. |
  * | UserParameterMissing | The Parameter {name} was not provided. | 400 | The error message returned because no value is specified for the specified parameter that is defined in the template. name indicates the parameter name. |
  * | ActionInProgress | Stack {name} already has an action ({action}) in progress. | 409 | The error message returned because the stack is being changed. name indicates the name or ID of the stack. action indicates the change operation. |
  * | StackExists | The Stack ({name}) already exists. | 409 | The error message returned because a stack that has the same name already exists. name indicates the stack name. |
  * | TemplateNotFound | The Template ({ ID }) could not be found. | 404 | The error message returned because the specified template does not exist. ID indicates the template ID. |
  * | TemplateNotFound | The Template { ID } with version { version } could not be found. | 404 | The error message returned because the specified template or template version does not exist. ID indicates the template ID. version indicates the template version. |
  *
 */
async function createStack(request: CreateStackRequest): CreateStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateStack', 'POST', '/', 'json', false, 'json', request);
}

model CreateStackGroupRequest {
  administrationRoleName?: string(name='AdministrationRoleName', description='The ID of the template. This parameter applies to shared and private templates.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='AliyunROSStackGroupAdministrationRole', position='Query'),
  autoDeployment?: {
    enabled?: boolean(name='Enabled', description='The ID of the request.', example='true'),
    retainStacksOnAccountRemoval?: boolean(name='RetainStacksOnAccountRemoval', description='The ID of the stack group.', example='true'),
  }(name='AutoDeployment', description='Specifies whether to retain stacks within a member when you remove the member from the folder.

Valid values:

*   true: retains the stacks.
*   false: deletes the stacks.

>  This parameter is required if the Enabled parameter is set to true.', example='{"Enabled": true, "RetainStacksOnAccountRemoval": true}', shrink='json', position='Query'),
  capabilities?: [ string ](name='Capabilities', position='Query'),
  clientToken?: string(name='ClientToken', description='The name of the RAM role that you specify for the execution account when you create a self-managed stack group. The administrator role AliyunROSStackGroupAdministrationRole assumes the execution role to perform operations. If you do not specify this parameter, the default value AliyunROSStackGroupExecutionRole is used. ROS assumes the execution role to perform operations on the stacks in the stack group.

The name must be 1 to 64 characters in length, and can contain letters, digits, and hyphens (-).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  description?: string(name='Description', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body must be 1 to 524,288 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='StackGroup Description', position='Query'),
  executionRoleName?: string(name='ExecutionRoleName', description='The version of the template. If you do not specify this parameter, the latest version is used.

>  This parameter takes effect only when the TemplateId parameter is specified.', example='AliyunROSStackGroupExecutionRole', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The ID of the resource group. If you do not specify this parameter, the stack group is added to the default resource group.

For more information about resource groups, see the "Resource Group" section of the [What is Resource Management?](~~94475~~) topic.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The permission model.

Default value: SELF_MANAGED. Valid values:

*   SELF_MANAGED: the self-managed permission model. If you create a self-managed stack group, you must create RAM roles within the administrator and execution accounts and establish a trust relationship between the accounts. Then, you can deploy stacks within the execution account.
*   SERVICE_MANAGED: the service-managed permission model. If you create a service-managed stack group, ROS creates service-linked roles for the administrator and execution accounts, and the administrator account uses its role to deploy stacks within the execution account.

>  When you use the service-managed permission model to deploy stacks, make sure that your account is the management account or a delegated administrator account in the resource directory and the trusted access feature is enabled for your account. For more information, see [Step 1: (Optional) Create a delegated administrator account](~~308253~~) and [Step 2: Enable trusted access](~~298229~~).', example='12'),
    }
  ](name='Parameters', description='The value of parameter N.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterValue parameter.', position='Query'),
  permissionModel?: string(name='PermissionModel', description='The key of tag N that you want to add to the stack group.

>  The Tags parameter is optional. If you specify the Tags parameter, you must specify the Tags.N.Key parameter.', example='SELF_MANAGED', position='Query'),
  regionId: string(name='RegionId', description='The description of the stack group.

The description must be 1 to 256 characters in length.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The tags.', example='rg-acfmxazb4ph6aiy****', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='MyStackGroup', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The information about automatic deployment settings.

>  This parameter is required only if the PermissionModel parameter is set to SERVICE_MANAGED.', example='usage'),
      value?: string(name='Value', description='Specifies whether to enable automatic deployment.

Valid values:

*   true: enables automatic deployment. If you add a member to the folder to which the stack group belongs after you enable automatic deployment, ROS automatically adds the stacks in the stack group to the member. If you remove a member from the folder, ROS automatically deletes the stacks from the member.
*   false: disables automatic deployment. After you disable automatic deployment, the stacks remain unchanged when you change the members in the folder.', example='test'),
    }
  ](name='Tags', description='The value of tag N that you want to add to the stack group.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The parameters.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The name of the RAM role that you specify for the administrator account when you create a self-managed stack group. ROS assumes the administrator role to perform operations. If you do not specify this parameter, the default value AliyunROSStackGroupAdministrationRole is used. ROS uses the administrator role to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks in the stack group.

The name must be 1 to 64 characters in length, and can contain letters, digits, and hyphens (-).', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The name of parameter N. If you do not specify the name and value of a parameter, ROS uses the default name and value that are defined in the template.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterKey parameter.', example='v1', position='Query'),
}

model CreateStackGroupResponseBody = {
  requestId?: string(name='RequestId', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroupId?: string(name='StackGroupId', example='2c036e78-9e82-428e-afd6-177f5d04****'),
}

model CreateStackGroupResponse = {
  headers: map[string]string(name='headers'),
  body: CreateStackGroupResponseBody(name='body'),
}

/**
  * | Error code | Error message | HTTP status code | Description |
  * | ---------- | ------------- | ---------------- | ----------- |
  * | CircularDependency | Circular Dependency Found: {reason}. | 400 | The error message returned because the template contains circular dependencies. reason indicates the cause of the error. |
  * | InvalidSchema | {reason}. | 400 | The error message returned because the template format is invalid. reason indicates the cause of the error. |
  * | InvalidTemplateAttribute | The Referenced Attribute ({resource} {name}) is incorrect. | 400 | The error message returned because the resource property that is referenced in the Outputs section of the template is invalid. resource indicates the resource name. name indicates the property name. |
  * | InvalidTemplatePropertyType | The specified value type of ({resource} {section}) is incorrect. | 400 | The error message returned because the type of the resource property that is defined in a template section is invalid. resource indicates the resource name. section indicates the section name. |
  * | InvalidTemplateReference | The specified reference "{name}" (in {referencer}) is incorrect. | 400 | The error message returned because the template contains an invalid reference. name indicates the reference name. referencer indicates the referencer name. |
  * | InvalidTemplateSection | The template section is invalid: {section}. | 400 | The error message returned because the template contains an invalid section. section indicates the section name. |
  * | InvalidTemplateVersion | The template version is invalid: {reason}. | 400 | The error message returned because the template version is invalid. reason indicates the cause of the error. |
  * | UnknownUserParameter | The Parameter ({name}) was not defined in template. | 400 | The error message returned because the specified parameter is not defined in the template. name indicates the parameter name. |
  * | UserParameterMissing | The Parameter {name} was not provided. | 400 | The error message returned because no value is specified for a parameter in the template. name indicates the parameter name. |
  * | StackGroupExists | The StackGroup ({name}) already exists. | 409 | The error message returned because a stack group that has the same name already exists. name indicates the name of the stack group. |
  * | TemplateNotFound | The Tempalte ({ ID }) could not be found. | 404 | The error message returned because the template does not exist. ID indicates the ID of the template. |
  * | TemplateNotFound | The Template { ID } with version { version } could not be found. | 404 | The error message returned because the specified template or template version does not exist. ID indicates the ID of the template. version indicates the version of the template. |
  *
 */
async function createStackGroup(request: CreateStackGroupRequest): CreateStackGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateStackGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreateStackInstancesRequest {
  accountIds?: [ string ](name='AccountIds', description='The IDs of the accounts within which you want to use the self-managed permission model to deploy stacks. You can specify up to 20 account IDs.

>  You must specify only one of the `AccountIds` and `DeploymentTargets` parameters.', example='["151266687691****","141261387191****"]', shrink='json', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  deploymentTargets?: {
    rdFolderIds?: [ string ](name='RdFolderIds', description='The IDs of the folders in the resource directory. You can add up to five folder IDs.

You can create stacks within all members in the specified folders. If you create stacks in the Root folder, the stacks are created within all members in the resource directory.

>  To view the folder IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the basic information of a folder](~~111223~~).'),
  }(name='DeploymentTargets', description='The folders in which you want to use the service-managed permission model to deploy stacks.

>  You must specify only one of the `AccountIds` and `DeploymentTargets` parameters.', example='{"RdFolderId": "fd-4PvlVLOL8v"}', shrink='json', position='Query'),
  disableRollback?: boolean(name='DisableRollback', description='Specifies whether to disable rollback when the stacks fail to be created.

Default value: false. Valid values:

*   true
*   false', example='false', position='Query'),
  operationDescription?: string(name='OperationDescription', description='The description of the stack creation operation.

The description must be 1 to 256 characters in length.', example='Create stack instances in hangzhou and beijing', position='Query'),
  operationPreferences?: map[string]any(name='OperationPreferences', description='The custom preferences on how Resource Orchestration Service (ROS) creates the stacks.

The following parameters are included:

*   {"FailureToleranceCount": N}

    The number of accounts within which stack operation failures can occur in each region. If the value of this parameter is exceeded in a region, ROS stops the operation in the region. If the operation is stopped in one region, the operation is no longer performed in other regions.

    Valid values of N: 0 to 20.

    If you do not specify the FailureToleranceCount parameter, the default value 0 is used.

*   {"FailureTolerancePercentage": N}

    The percentage of the number of accounts within which stack operation failures can occur to the total number of accounts in each region. If the value of this parameter is exceeded in a region, ROS stops the operation in the region.

    Valid values of N: 0 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify the FailureTolerancePercentage parameter, the default value 0 is used.

*   {"MaxConcurrentCount": N}

    The maximum number of accounts within which stacks are deployed at the same time in each region.

    Valid values of N: 1 to 20.

    If you do not specify the MaxConcurrentCount parameter, the default value 1 is used.

*   {"MaxConcurrentPercentage": N}

    The percentage of the maximum number of accounts within which stacks are deployed at the same time to the total number of accounts in each region.

    Valid values: 1 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify the MaxConcurrentPercentage parameter, the default value 1 is used.

*   {"RegionConcurrencyType": N}

    The mode that you want to use to deploy stacks across regions. Default value: SEQUENTIAL. Valid values:

    *   SEQUENTIAL: deploys stacks in each specified region based on the specified sequence of regions. ROS deploys stacks in one region at a time.
    *   PARALLEL: deploys stacks in parallel across all specified regions.

Separate multiple parameters with commas (,).

> 
*   You can specify one of the MaxConcurrentCount and MaxConcurrentPercentage parameters.
*   You can specify one of the FailureToleranceCount and FailureTolerancePercentage parameters.', example='{"FailureToleranceCount": 1, "MaxConcurrentCount": 2}', shrink='json', position='Query'),
  parameterOverrides?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N that you want to use to override a specific parameter. If you do not specify the name of parameter N, ROS uses the name that you specify when you create the stack group.

Maximum value of N: 200.

> 
*   The ParameterOverrides parameter is optional.
*   If you specify the ParameterOverrides parameter, you must specify the ParameterOverrides.N.ParameterKey and ParameterOverrides.N.ParameterValue parameters.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N that you want to use to override a specific parameter. If you do not specify the name and value of parameter N, ROS uses the name and value that you specify when you create the stack group.

Maximum value of N: 200.

> 
*   The ParameterOverrides parameter is optional.
*   If you specify the ParameterOverrides parameter, you must specify the ParameterOverrides.N.ParameterKey and ParameterOverrides.N.ParameterValue parameters.', example='1'),
    }
  ](name='ParameterOverrides', description='The parameters.', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  regionIds: [ string ](name='RegionIds', description='The IDs of the regions in which you want to create the stacks. You can specify up to 20 region IDs.', example='["cn-hangzhou", "cn-beijing"]', shrink='json', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique within a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or a letter.', example='MyStackGroup', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', description='The timeout period that is allowed to create the stack.

*   Default value: 60.
*   Unit: minutes.', example='10', minimum=10, maximum=1440, position='Query'),
}

model CreateStackInstancesResponseBody = {
  operationId?: string(name='OperationId', description='The ID of the operation.', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model CreateStackInstancesResponse = {
  headers: map[string]string(name='headers'),
  body: CreateStackInstancesResponseBody(name='body'),
}

/**
  * Before you call this operation, make sure that a stack group is created. For more information, see [CreateStackGroup](~~151333~~).
  * This topic provides an example on how to create stacks in a stack group. In this example, stacks are created in a stack group named `MyStackGroup`. The stacks are created within the `151266687691****` and `141261387191****` Alibaba Cloud accounts in the China (Hangzhou) and China (Beijing) regions. The stack group is granted self-managed permissions and created in the China (Hangzhou) region.
  *
 */
async function createStackInstances(request: CreateStackInstancesRequest): CreateStackInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateStackInstances', 'POST', '/', 'json', false, 'json', request);
}

model CreateTemplateRequest {
  description?: string(name='Description', description='The description of the template. The description can be up to 256 characters in length.', example='It is a demo.', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.

For more information about resource groups, see the "Resource Group" section of [What is Resource Management?](~~94475~~)', example='rg-acfmxazb4ph6aiy****', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The key of tag N that you want to add to the template.

>  The Tags parameter is optional. If you specify the Tags parameter, you must specify the Tags.N.Key parameter.', example='usage'),
      value?: string(name='Value', description='The value of tag N that you want to add to the template.', example='test'),
    }
  ](name='Tags', description='The tags.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

>  You must specify the TemplateBody or TemplateURL parameter.

You can create a Terraform template based on your business requirements. The following sample code provides an example on how to create a Terraform template:

```

{
  "ROSTemplateFormatVersion": "2015-09-01",
  "Transform": "Aliyun::Terraform-v1.0",
  "Workspace": {
    "main.tf": "variable  \\"name\\" {  default = \\"auto_provisioning_group\\"}"
  },
  "Outputs": {}
}
```

For more information about Terraform templates, see [Structure of Terraform templates](~~184397~~).', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateName: string(name='TemplateName', description='The name of the template.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyTemplate', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou.

The template body must be 1 to 1,024 bytes in length.

If you do not specify the region of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify the TemplateBody or TemplateURL parameter.', example='oss://ros/template/demo', position='Query'),
}

model CreateTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8C5D90E1-66B6-496C-9371-3807F8DA80A8'),
  templateId?: string(name='TemplateId', description='The ID of the template.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****'),
}

model CreateTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: CreateTemplateResponseBody(name='body'),
}

/**
  * This topic provides an example on how to create a template. In this example, a template named `MyTemplate` is created in the `China (Hangzhou)` region. The `TemplateBody` parameter is set to `{"ROSTemplateFormatVersion": "2015-09-01"}`.
  *
 */
async function createTemplate(request: CreateTemplateRequest): CreateTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateTemplate', 'POST', '/', 'json', false, 'json', request);
}

model CreateTemplateScratchRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  description?: string(name='Description', description='The description of the scenario.', example='Replicate a VPC.', position='Query'),
  executionMode?: string(name='ExecutionMode', description='The execution mode. Default value: Async. Valid values:

*   Async: asynchronous mode
*   Sync: synchronous mode

>  If a wide scope of resources exist, the synchronous mode takes a longer period of time than the asynchronous mode. If you set the ExecutionMode parameter to Sync, we recommend that you configure the ClientToken parameter to prevent a timeout error.', example='Sync', position='Query'),
  logicalIdStrategy?: string(name='LogicalIdStrategy', description='The policy based on which the logical ID is generated. Default value: LongTypePrefixAndIndexSuffix. Valid values:

*   LongTypePrefixAndIndexSuffix: long-type prefix + index-type suffix
*   LongTypePrefixAndHashSuffix: long-type prefix + hash-type suffix
*   ShortTypePrefixAndHashSuffix: short-type prefix + hash-type suffix', example='LongTypePrefixAndIndexSuffix', position='Query'),
  preferenceParameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of the parameter.

For more information about the valid values of the ParameterKey parameter, see the "**Additional information about request parameters**" section of this topic.

> 
*   The PreferenceParameters parameter is optional. If you want to specify the PreferenceParameters parameter, you must specify both the ParameterKey and ParameterValue parameters.
*   If you set the TemplateScratchType parameter to ResourceImport, you must set the ParameterKey parameter to DeletionPolicy.', example='DeletionPolicy'),
      parameterValue: string(name='ParameterValue', description='The value of the parameter. The value of the ParameterValue parameter varies based on the value of the ParameterKey parameter.

For more information about the valid values of the ParameterValue parameter, see the "**Additional information about request parameters**" section of this topic.

>  The PreferenceParameters parameter is optional. If you want to specify the PreferenceParameters parameter, you must specify both the ParameterKey and ParameterValue parameters.', example='Retain'),
    }
  ](name='PreferenceParameters', description='The parameters that you want to configure for the scenario.', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which you want to create the scenario.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  sourceResourceGroup?: {
    resourceGroupId: string(name='ResourceGroupId', description='The ID of the source resource group.', example='rg-acfmzawhxxc****'),
    resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types. If you specify this parameter, only the resources of the specified types and in the specified resource groups are scanned. If you do not specify this parameter, all resources in the specified resource groups are scanned.

You can specify up to 20 resource types.'),
  }(name='SourceResourceGroup', description='The source resource group.', shrink='json', position='Query'),
  sourceResources?: [ 
    {
      resourceId: string(name='ResourceId', description='The ID of the resource.', example='vpc-bp1m6fww66xbntjyc****'),
      resourceType: string(name='ResourceType', description='The resource type.', example='ALIYUN::ECS::VPC'),
    }
  ](name='SourceResources', description='The source resources.', shrink='json', position='Query'),
  sourceTag?: {
    resourceTags: map[string]any(name='ResourceTags', description='The source tags that consist of key-value pairs.

If you want to specify only the tag key, you must leave the tag value empty. Example: `{"TagKey": ""}`.

You can add up to 10 source tags.', example='{"a": "b"}'),
    resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types. If you specify this parameter, only the resources of the specified types and have the specified tags are scanned. If you do not specify this parameter, all resources that have the specified tags are scanned.

You can specify up to 20 resource types.'),
  }(name='SourceTag', description='The source tag.', shrink='json', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The key of tag N that you want to add to the scenario.

>  The Tags parameter is optional. If you specify the Tags parameter, you must specify the Tags.N.Key parameter.', example='usage'),
      value?: string(name='Value', description='The value of tag N that you want to add to the scenario.', example='test'),
    }
  ](name='Tags', description='The tags.', position='Query'),
  templateScratchType: string(name='TemplateScratchType', description='The type of the scenario. Valid values:

*   ResourceImport: resource management
*   ArchitectureReplication: resource replication
*   ResourceMigration: resource migration', example='ArchitectureReplication', position='Query'),
}

model CreateTemplateScratchResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='84980977-22F0-5421-B30D-B201311D5DCF'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****'),
}

model CreateTemplateScratchResponse = {
  headers: map[string]string(name='headers'),
  body: CreateTemplateScratchResponseBody(name='body'),
}

/**
  * You can call this operation to create a scenario that allows you to specify a resource scope on a visualized interface and easily replicate and manage the resources that you specify. For more information about scenarios, see [Overview](~~352074~~).
  * This topic provides an example on how to create a scenario of the resource replication type in the China (Hangzhou) region. In this example, a virtual private cloud (VPC) named `vpc-bp1m6fww66xbntjyc****` is replicated by using the scenario.
  *
 */
async function createTemplateScratch(request: CreateTemplateScratchRequest): CreateTemplateScratchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateTemplateScratch', 'POST', '/', 'json', false, 'json', request);
}

model DeleteChangeSetRequest {
  changeSetId: string(name='ChangeSetId', description='The ID of the change set.', example='1f6521a4-05af-4975-afe9-bc4b45ad****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the change set. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model DeleteChangeSetResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model DeleteChangeSetResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteChangeSetResponseBody(name='body'),
}

/**
  * Limits:
  * *   Before you call this operation, make sure that the following requirements are met:
  *     *   The status of the change set is CREATE_COMPLETE, CREATE_FAILED, or DELETE_FAILED.
  *     *   The execution status is UNAVAILABLE or AVAILABLE.
  * *   After a change set is executed, other change sets associated with the same stack as this change set are deleted.
  * *   After a stack is deleted, change sets associated with the stack are deleted.
  * *   If a change set of the CREATE type is deleted, you must delete stacks associated with the change set.
  * In this example, a change set in the China (Hangzhou) region whose ID is `1f6521a4-05af-4975-afe9-bc4b45ad****` is deleted.
  *
 */
async function deleteChangeSet(request: DeleteChangeSetRequest): DeleteChangeSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteChangeSet', 'POST', '/V2/DeleteChangeSet', 'json', false, 'json', request);
}

model DeleteStackRequest {
  deleteOptions?: [ string ](name='DeleteOptions', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role. Resource Orchestration Service (ROS) assumes the RAM role to create the stack and uses the credentials of the role to call the APIs of Alibaba Cloud services.\\
ROS assumes the role to perform operations on the stack. If you have permissions to perform operations on the stack but do not have permissions to use the RAM role, ROS still assumes the RAM role. You must make sure that the least privileges are granted to the RAM role.\\
If you leave this parameter empty when you call the DeleteStack operation, ROS cannot assume the existing RAM role that is associated with the stack. If you want ROS to assume a RAM role, you must specify this parameter. If no RAM roles are available, ROS uses a temporary credential that is generated from the credentials of your account.\\
The name of the RAM role can be up to 64 bytes in length.', example='test-role', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  retainAllResources?: boolean(name='RetainAllResources', description='Specifies whether to retain all resources in the stack.

Valid values:

*   true
*   false (default)', example='false', position='Query'),
  retainResources?: [ string ](name='RetainResources', description='The resources that you want to retain.', example='WebServer', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model DeleteStackResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model DeleteStackResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteStackResponseBody(name='body'),
}

async function deleteStack(request: DeleteStackRequest): DeleteStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteStack', 'POST', '/', 'json', false, 'json', request);
}

model DeleteStackGroupRequest {
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique in a region.

The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or a letter.', example='MyStackGroup', position='Query'),
}

model DeleteStackGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model DeleteStackGroupResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteStackGroupResponseBody(name='body'),
}

/**
  * A stack group can be deleted only when the stack group does not contain stacks. You can call the [DeleteStackInstances](~~151715~~) operation to delete stacks.
  * This topic provides an example on how to delete a stack group. In this example, a stack group named `MyStackGroup` in the China (Hangzhou) region is deleted.
  *
 */
async function deleteStackGroup(request: DeleteStackGroupRequest): DeleteStackGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteStackGroup', 'POST', '/V2/DeleteStackGroup', 'json', false, 'json', request);
}

model DeleteStackInstancesRequest {
  accountIds?: [ string ](name='AccountIds', description='The IDs of the accounts within the self-managed permission model is used to deploy stacks. You can specify up to 20 account IDs.', example='["151266687691****"]', shrink='json', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  deploymentTargets?: {
    rdFolderIds?: [ string ](name='RdFolderIds', description='The IDs of the folders in the resource directory. You can specify up to five folder IDs.

You can create stacks within all members in the specified folders. If you create stacks in the Root folder, the stacks are created within all members in the resource directory.

>  To view the folder IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the basic information of a folder](~~111223~~).'),
  }(name='DeploymentTargets', description='The folders in which the service-managed permission model is used to deploy stacks.', shrink='json', position='Query'),
  operationDescription?: string(name='OperationDescription', description='The description of the operation that you want to perform to delete the stacks.

The description must be 1 to 256 characters in length.', example='Delete stack instances in hangzhou and beijing', position='Query'),
  operationPreferences?: map[string]any(name='OperationPreferences', description='The settings that you configure to delete the stacks.

The following parameters are included:

*   {"FailureToleranceCount": N}

    The number of accounts within which stack operation failures can occur in each region. If the value of this parameter is exceeded in a region, Resource Orchestration Service (ROS) stops the operation in the region. If the operation is stopped in one region, the operation is no longer performed in other regions.

    Valid values of N: 0 to 20.

    If you do not specify the FailureToleranceCount parameter, the default value 0 is used.

*   {"FailureTolerancePercentage": N}

    The percentage of the number of accounts within which stack operation failures can occur to the total number of accounts in each region. If the value of this parameter is exceeded in a region, ROS stops the operation in the region.

    Valid values of N: 0 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify the FailureTolerancePercentage parameter, the default value 0 is used.

*   {"MaxConcurrentCount": N}

    The maximum number of accounts within which stacks are deployed at the same time in each region.

    Valid values of N: 1 to 20.

    If you do not specify the MaxConcurrentCount parameter, the default value 1 is used.

*   {"MaxConcurrentPercentage": N}

    The percentage of the maximum number of accounts within which stacks are deployed at the same time to the total number of accounts in each region.

    Valid values of N: 1 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify the MaxConcurrentPercentage parameter, the default value 1 is used.

*   {"RegionConcurrencyType": N}

    The mode that you want to use to deploy stacks across regions. Default value: SEQUENTIAL. Valid values:

    *   SEQUENTIAL: deploys stacks in each specified region based on the specified sequence of regions. ROS deploys stacks in one region at a time.
    *   PARALLEL: deploys stacks in parallel in all specified regions.

Separate multiple parameters with commas (,).

> 
*   You can specify only one of the MaxConcurrentCount and MaxConcurrentPercentage parameters.
*   You can specify only one of the FailureToleranceCount and FailureTolerancePercentage parameters.', example='{"FailureToleranceCount": 1, "MaxConcurrentCount": 2}', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  regionIds: [ string ](name='RegionIds', description='The IDs of the regions from which you want to delete the stacks. You can specify up to 20 region IDs.', example='["cn-hangzhou", "cn-beijing"]', shrink='json', position='Query'),
  retainStacks: boolean(name='RetainStacks', description='Specifies whether to retain the stacks.

Valid values:

*   true: retains the stacks.
*   false: deletes the stacks.', example='false', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique in a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyStackGroup', position='Query'),
}

model DeleteStackInstancesResponseBody = {
  operationId?: string(name='OperationId', description='The ID of the operation.', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model DeleteStackInstancesResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteStackInstancesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to delete stacks from a stack group. In this example, the stacks that are deployed within the `151266687691****` Alibaba Cloud account in the China (Beijing) region are deleted from a stack group named `MyStackGroup`. The stack group is deployed in the China (Hangzhou) region and granted self-managed permissions.
  *
 */
async function deleteStackInstances(request: DeleteStackInstancesRequest): DeleteStackInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteStackInstances', 'POST', '/', 'json', false, 'json', request);
}

model DeleteTemplateRequest {
  templateId: string(name='TemplateId', description='The ID of the template. This parameter applies to only private templates.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
}

model DeleteTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8C5D90E1-66B6-496C-9371-3807F8DA80A8'),
}

model DeleteTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteTemplateResponseBody(name='body'),
}

/**
  * If the template is shared with other Alibaba Cloud accounts, you must unshare the template before you delete it.
  *
 */
async function deleteTemplate(request: DeleteTemplateRequest): DeleteTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteTemplate', 'POST', '/V2/DeleteTemplate', 'json', false, 'json', request);
}

model DeleteTemplateScratchRequest {
  regionId: string(name='RegionId', description='The ID of the region in which the scenario is created.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  templateScratchId: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-4f83704400994409****', position='Query'),
}

model DeleteTemplateScratchResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='1B9C6333-5904-5A1E-9845-CB17A369AFDC'),
}

model DeleteTemplateScratchResponse = {
  headers: map[string]string(name='headers'),
  body: DeleteTemplateScratchResponseBody(name='body'),
}

/**
  * This topic describes how to delete a scenario. In this topic, the `ts-4f83704400994409****` scenario in the China (Hangzhou) region is deleted.
  *
 */
async function deleteTemplateScratch(request: DeleteTemplateScratchRequest): DeleteTemplateScratchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteTemplateScratch', 'POST', '/', 'json', false, 'json', request);
}

model DeregisterResourceTypeRequest {
  resourceType: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
  versionId?: string(name='VersionId', example='v1', position='Query'),
}

model DeregisterResourceTypeResponseBody = {
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
}

model DeregisterResourceTypeResponse = {
  headers: map[string]string(name='headers'),
  body: DeregisterResourceTypeResponseBody(name='body'),
}

async function deregisterResourceType(request: DeregisterResourceTypeRequest): DeregisterResourceTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeregisterResourceType', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRegionsRequest {
  acceptLanguage?: string(name='AcceptLanguage', description='The language in which the returned results are displayed.

Default value: zh-CN. Valid values:

*   zh-CN: Chinese
*   en-US: English
*   ja: Japanese', example='zh-CN', position='Query'),
}

model DescribeRegionsResponseBody = {
  regions?: [ 
    {
      localName?: string(name='LocalName', description='The name of the region.', example='ccn-cn-shanghai-finance-1'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of the region.', example='ros.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
    }
  ](name='Regions', description='The list of regions.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='59F0F0A0-A637-4292-9B91-251EF5010913'),
}

model DescribeRegionsResponse = {
  headers: map[string]string(name='headers'),
  body: DescribeRegionsResponseBody(name='body'),
}

async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRegions', 'POST', '/V2/DescribeRegions', 'json', false, 'json', request);
}

model DetectStackDriftRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The value can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  logicalResourceId?: [ string ](name='LogicalResourceId', description='The logical ID of resource.', example='ScalingRule', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model DetectStackDriftResponseBody = {
  driftDetectionId?: string(name='DriftDetectionId', description='The ID of the drift detection.', example='a7044f0d-6f2e-4128-a307-4524ef88****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
}

model DetectStackDriftResponse = {
  headers: map[string]string(name='headers'),
  body: DetectStackDriftResponseBody(name='body'),
}

async function detectStackDrift(request: DetectStackDriftRequest): DetectStackDriftResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetectStackDrift', 'POST', '/V2/DetectStackDrift', 'json', false, 'json', request);
}

model DetectStackGroupDriftRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The value can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  operationPreferences?: map[string]any(name='OperationPreferences', description='The operation settings, in JSON format. The following fields are supported:

*   FailureToleranceCount

The maximum number of stack group operation failures that can occur. In a stack group operation, if the total number of failures does not exceed the FailureToleranceCount value, the operation succeeds. Otherwise, the operation fails.

If FailureToleranceCount is not specified, the default value 0 is used. You can specify one of FailureToleranceCount or FailureTolerancePercentage parameters, but you cannot specify both of them.

Valid values: 0 to 20.

*   FailureTolerancePercentage

The percentage of stack group operation failures that can occur. In a stack group operation, if the percentage of failures does not exceed the FailureTolerancePercentage value, the operation succeeds. Otherwise, the operation fails.

You can specify one of FailureToleranceCount or FailureTolerancePercentage parameters, but you cannot specify both of them.

Valid values: 0 to 100.

*   MaxConcurrentCount

The maximum number of target accounts in which a drift detection operation can be performed at a time.

You can specify one of MaxConcurrentCount or MaxConcurrentPercentage parameters, but you cannot specify both of them.

Valid values: 1 to 20.

*   MaxConcurrentPercentage

The maximum percentage of target accounts in which a drift detection operation can be performed at a time.

You can specify one of MaxConcurrentCount or MaxConcurrentPercentage parameters, but you cannot specify both of them.

Valid values: 1 to 100.', example='{"FailureToleranceCount": 1, "MaxConcurrentCount": 2}', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack group. You can call the [DescribeRegions](~~131035#doc-api-ROS-DescribeRegions~~ "Queries the DescribeRegions list of a region.") operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique in a region.

The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (\\_). It must start with a digit or letter.', example='MyStackGroup', position='Query'),
}

model DetectStackGroupDriftResponseBody = {
  operationId?: string(name='OperationId', description='The ID of the operation.', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
}

model DetectStackGroupDriftResponse = {
  headers: map[string]string(name='headers'),
  body: DetectStackGroupDriftResponseBody(name='body'),
}

async function detectStackGroupDrift(request: DetectStackGroupDriftRequest): DetectStackGroupDriftResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetectStackGroupDrift', 'POST', '/V2/DetectStackGroupDrift', 'json', false, 'json', request);
}

model DetectStackResourceDriftRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The value can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  logicalResourceId: string(name='LogicalResourceId', description='The name of the resource.', example='ScalingRuleName', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model DetectStackResourceDriftResponseBody = {
  actualProperties?: string(name='ActualProperties', description='The actual resource properties in JSON format.', example='{"ScalingRuleName": "test1"}'),
  driftDetectionTime?: string(name='DriftDetectionTime', description='The time at which the resource drift detection operation was initiated.', example='2020-02-27T07:47:47'),
  expectedProperties?: string(name='ExpectedProperties', description='The resource properties as defined in the template, in JSON format.', example='{"ScalingRuleName": "test2"}'),
  logicalResourceId?: string(name='LogicalResourceId', description='The logical ID of the resource as defined in the template.', example='ScalingRule'),
  physicalResourceId?: string(name='PhysicalResourceId', description='The physical ID of the resource.', example='asr-2ze4zzc3kf9yz1kd****'),
  propertyDifferences?: [ 
    {
      actualValue?: string(name='ActualValue', description='The actual value of the resource property.', example='test1'),
      differenceType?: string(name='DifferenceType', description='The drift type of the resource property. Valid values:

*   ADD: The value has been added to a resource property whose data type is Array or List.
*   REMOVE: The property has been deleted from the current resource configuration.
*   NOT_EQUAL: The current property value differs from the expected value defined in the stack template.', example='NOT_EQUAL'),
      expectedValue?: string(name='ExpectedValue', description='The expected value of the resource property as defined in the template.', example='test2'),
      propertyPath?: string(name='PropertyPath', description='The path of the resource property.', example='/ScalingRuleName'),
    }
  ](name='PropertyDifferences', description='The property differences of the resource.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  resourceDriftStatus?: string(name='ResourceDriftStatus', description='The resource drift status. Valid values:

*   DELETED: The actual configuration of the resource differs from its expected template configuration because the resource has been deleted.
*   MODIFIED: The actual configuration of the resource differs from its expected template configuration.
*   NOT_CHECKED: Resource Orchestration Service (ROS) has not checked whether the actual configuration of the resource differs from its expected template configuration.
*   IN_SYNC: The actual configuration of the resource matches its expected template configuration.', example='MODIFIED'),
  resourceType?: string(name='ResourceType', description='The resource type.', example='ALIYUN::ESS::ScalingRule'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model DetectStackResourceDriftResponse = {
  headers: map[string]string(name='headers'),
  body: DetectStackResourceDriftResponseBody(name='body'),
}

async function detectStackResourceDrift(request: DetectStackResourceDriftRequest): DetectStackResourceDriftResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetectStackResourceDrift', 'POST', '/', 'json', false, 'json', request);
}

model ExecuteChangeSetRequest {
  changeSetId: string(name='ChangeSetId', description='The ID of the change set.', example='1f6521a4-05af-4975-afe9-bc4b45ad****', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests.

The token can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the change set. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model ExecuteChangeSetResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model ExecuteChangeSetResponse = {
  headers: map[string]string(name='headers'),
  body: ExecuteChangeSetResponseBody(name='body'),
}

/**
  * In this example, a change set in the `China (Hangzhou)` region whose ID is `1f6521a4-05af-4975-afe9-bc4b45ad****` is executed.
  *
 */
async function executeChangeSet(request: ExecuteChangeSetRequest): ExecuteChangeSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ExecuteChangeSet', 'POST', '/', 'json', false, 'json', request);
}

model GenerateTemplateByScratchRequest {
  provisionRegionId?: string(name='ProvisionRegionId', description='The ID of the region to which the new node belongs.', example='cn-hangzhou', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the scenario is created.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  templateScratchId: string(name='TemplateScratchId', description='The ID of the scenario.

For more information about how to query the IDs of scenarios, see [ListTemplateScratches](~~363050~~).', example='ts-aa9c62feab844a6b****', position='Query'),
  templateType?: string(name='TemplateType', position='Query'),
}

model GenerateTemplateByScratchResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D22C1D13-D74E-558C-AF68-1B4C05FA6F1A'),
  resourcesToImport?: [ 
    {
      logicalResourceId?: string(name='LogicalResourceId', description='The ID of the logical resource.', example='ECSVPC_001'),
      resourceIdentifier?: map[string]any(name='ResourceIdentifier', description='The key-value mappings from string to string. The parameter value is a JSON string that identifies the resource that is imported.

A key is an identifier for a resource, and a value is an assignment of data to the key. For example, VpcId is a key that indicates the ID of a virtual private cloud (VPC), and `vpc-bp1m6fww66xbntjyc****"` is a value that is assigned to VpcId.', example='{"VpcId": "vpc-bp1m6fww66xbntjyc****" }'),
      resourceType?: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ECS::VPC'),
    }
  ](name='ResourcesToImport', description='The resources that you want to import to a stack in the scenario of the Resource Management type.

>  This parameter is returned only for scenarios of the Resource Management type.'),
  templateBody?: string(name='TemplateBody', description='The content of the template that is created for the scenario.', example='{\\"ROSTemplateFormatVersion\\": \\"2015-09-01\\", \\"Resources\\": {\\"ECSVPC_001\\": {\\"DeletionPolicy\\": \\"Retain\\", \\"Type\\": \\"ALIYUN::ECS::VPC\\", \\"Properties\\": {\\"CidrBlock\\": \\"172.16.0.0/12\\", \\"VpcName\\": \\"MyTestVpc\\", \\"EnableIpv6\\": false}}}}'),
}

model GenerateTemplateByScratchResponse = {
  headers: map[string]string(name='headers'),
  body: GenerateTemplateByScratchResponseBody(name='body'),
}

/**
  * This topic describes how to create a template for a scenario. In this topic, the `ts-aa9c62feab844a6b****` scenario of the Resource Management type in the China (Hangzhou) region is used.
  *
 */
async function generateTemplateByScratch(request: GenerateTemplateByScratchRequest): GenerateTemplateByScratchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GenerateTemplateByScratch', 'POST', '/', 'json', false, 'json', request);
}

model GenerateTemplatePolicyRequest {
  operationTypes?: [ string ](name='OperationTypes', description='The type of operation N for which you want to generate the policy information.

Valid values:

*   CreateStack: creates a stack by calling the CreateStack operation.
*   UpdateStack: updates a stack by calling the UpdateStack operation.
*   DeleteStack: deletes a stack by calling the DeleteStack operation.
*   DetectStackDrift: detects drifts on a stack by calling the DelectStackDrift operation.
*   ListStackOperationRisks: lists the risks of a deletion operation on a stack by setting the OperationType parameter to DeleteStack in the ListStackOperationRisks operation.
*   GetTemplateEstimateCost: queries the estimated prices of resources that you want to use in the template by calling the GetTemplateEstimateCost operation.
*   GetTemplateParameterConstraints: queries the values of parameters in the template by calling the GetTemplateParameterConstraints operation.
*   ImportResourcesToStack: imports resources to a stack by setting the ChangeSetType parameter to IMPORT in the CreateChangeSet operation.
*   SignalResource: sends a signal to a stack.

>  The default value is the combination of all valid values.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared templates and private templates.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length.

>  If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

You can specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.

The URL can be up to 1,024 bytes in length.', example='oss://ros/template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
}

model GenerateTemplatePolicyResponseBody = {
  policy?: {
    statement?: [ 
      {
        action?: [ string ](name='Action', description='The operations that are performed on the specified resource.'),
        condition?: map[string]any(name='Condition'),
        effect?: string(name='Effect', description='The effect of the statement. Valid values:

*   Allow
*   Deny', example='Allow'),
        resource?: string(name='Resource', description='The object that the statement covers. An asterisk (\\*) indicates all resources.', example='*'),
      }
    ](name='Statement', description='The statements that are contained in the policy.'),
    version?: string(name='Version', description='The version number.', example='1'),
  }(name='Policy', description='The information about the policy.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
}

model GenerateTemplatePolicyResponse = {
  headers: map[string]string(name='headers'),
  body: GenerateTemplatePolicyResponseBody(name='body'),
}

/**
  * If the policy information is related to Enterprise Distributed Application Service (EDAS), you must log on to your Alibaba Cloud account and grant the required permissions to the relevant RAM users.
  * In this example, a policy is generated for a template whose ID is `5ecd1e10-b0e9-4389-a565-e4c15efc****`.
  *
 */
async function generateTemplatePolicy(request: GenerateTemplatePolicyRequest): GenerateTemplatePolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GenerateTemplatePolicy', 'POST', '/', 'json', false, 'json', request);
}

model GetChangeSetRequest {
  changeSetId: string(name='ChangeSetId', description='The ID of the change set.', example='4c11658d-bd47-4dd0-ba64-727edc62****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the change set. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  showTemplate?: boolean(name='ShowTemplate', description='Specifies whether to show the template. Default value: false. Valid values:

*   true: shows the template.
*   false: does not show the template.', example='false', position='Query'),
}

model GetChangeSetResponseBody = {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set.', example='4c11658d-bd47-4dd0-ba64-727edc62****'),
  changeSetName?: string(name='ChangeSetName', description='The name of the change set.', example='ChangeSet_template'),
  changeSetType?: string(name='ChangeSetType', description='The type of the change set.', example='UPDATE'),
  changes?: [  map[string]any ](name='Changes', description='The changes of the change set.

For more information, see [Data structure](~~155988~~).'),
  createTime?: string(name='CreateTime', description='The time when the resource was created. The time is displayed in UTC.', example='2021-12-01T02:20:56'),
  description?: string(name='Description', description='The description of the change set.', example='It is a demo.'),
  disableRollback?: boolean(name='DisableRollback', description='Indicates whether rollback was performed.', example='false'),
  executionStatus?: string(name='ExecutionStatus', description='The execution status of the change set.', example='AVAILABLE'),
  log?: {
    terraformLogs?: [ 
      {
        command?: string(name='Command', description='The name of the Terraform command. Valid values:

*   apply
*   plan
*   destroy
*   version

For more information about the Terraform commands, see [Provisioning Infrastructure with Terraform](https://www.terraform.io/cli/commands).', example='apply'),
        content?: string(name='Content', description='The content of the output stream.', example='Apply complete! Resources: 42 added, 0 changed, 0 destroyed.'),
        stream?: string(name='Stream', description='The output stream. Valid values:

*   stdout: the standard output stream.
*   stderr: the standard error stream.', example='stdout'),
      }
    ](name='TerraformLogs', description='The logs of the Terraform stack. This parameter is returned only for the change set of a Terraform stack.

>  This parameter is not returned for change sets that are in the creating state. This parameter indicates the change set creation logs of the Terraform stack.'),
  }(name='Log', description='The logs of the change set.'),
  parameters?: [ 
    {
      parameterKey?: string(name='ParameterKey', description='The name of the parameter.', example='ALIYUN::Region'),
      parameterValue?: string(name='ParameterValue', description='The value of the parameter.', example='cn-hangzhou'),
    }
  ](name='Parameters', description='The parameters of the stack.'),
  regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='3766EE04-76DD-50F9-9C23-3AF136CD5708'),
  stackId?: string(name='StackId', description='The ID of the stack with which the change set is associated.', example='a486fc19-ebb7-4ce9-a70b-554a7c3d****'),
  stackName?: string(name='StackName', description='The name of the stack with which the change set is associated.', example='stack_2021-10-13'),
  status?: string(name='Status', description='The status of the change set.', example='CREATE_COMPLETE'),
  statusReason?: string(name='StatusReason', description='The reason why the change set is in its current state.', example='too many changes.'),
  templateBody?: string(name='TemplateBody', description='The template body of the change set.

>  This parameter takes effect only when the ShowTemplate parameter is set to true.', example='{"ROSTemplateFormatVersion": "2015-09-01"}'),
  timeoutInMinutes?: int32(name='TimeoutInMinutes', description='The timeout period that is specified for the stack creation or update request.', example='60'),
}

model GetChangeSetResponse = {
  headers: map[string]string(name='headers'),
  body: GetChangeSetResponseBody(name='body'),
}

/**
  * In this example, the information of the change set whose ID is `4c11658d-bd47-4dd0-ba64-727edc62****` is queried.
  *
 */
async function getChangeSet(request: GetChangeSetRequest): GetChangeSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetChangeSet', 'POST', '/', 'json', false, 'json', request);
}

model GetFeatureDetailsRequest {
  feature: string(name='Feature', description='The one or more features that you want to query. Valid values:

*   Terraform: the Terraform hosting feature.
*   ResourceCleaner: the resource cleaner feature. You can use ALIYUN::ROS::ResourceCleaner to create a resource cleaner.
*   TemplateScratch: the scenario feature.
*   All: all features that are supported by ROS.', example='Terraform', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model GetFeatureDetailsResponseBody = {
  driftDetection?: {
    supportedResourceTypes?: [ string ](name='SupportedResourceTypes'),
  }(name='DriftDetection'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='EBF833DA-D0E2-52BE-92E2-59CA56BE834E'),
  resourceCleaner?: {
    supportedResourceTypes?: [ 
      {
        resourceType?: string(name='ResourceType', description='The resource type that can be cleaned up.', example='ECS:Instance'),
        sideEffects?: [ string ](name='SideEffects', description='The names of the side effects. The StopInstance value indicates that an instance that is related to the specified resource is stopped.'),
        supportedFilters?: [ string ](name='SupportedFilters', description='The filters that are used to filter resources. Valid values:

*   RegionId: the ID of the region.
*   ResourceId: the ID of the resource.
*   ResourceName: the name of the resource.
*   Tags: the tags of the resource.
*   ResourceGroupId: the ID of the resource group.
*   DeletionProtection: the deletion protection feature.'),
      }
    ](name='SupportedResourceTypes', description='The resource types that can be cleaned up.'),
  }(name='ResourceCleaner', description='Details of the resource cleaner feature.'),
  resourceImport?: {
    supportedResourceTypes?: [ 
      {
        resourceIdentifiers?: [ string ](name='ResourceIdentifiers'),
        resourceType?: string(name='ResourceType', example='ALIYUN::ECS::Disk'),
      }
    ](name='SupportedResourceTypes'),
  }(name='ResourceImport'),
  templateParameterConstraints?: {
    supportedResourceTypes?: [ 
      {
        properties?: [ string ](name='Properties', description='The names of properties that are supported by the resource type.'),
        resourceType?: string(name='ResourceType', description='The resource type.', example='ALIYUN::ECS::Disk'),
      }
    ](name='SupportedResourceTypes', description='The resource types that support the template parameter constraint feature.'),
  }(name='TemplateParameterConstraints', description='Details of the template parameter constraint feature.'),
  templateScratch?: {
    supportedResourceTypes?: [ 
      {
        resourceType?: string(name='ResourceType', description='The resource type.', example='ALIYUN::ECS::Disk'),
        sourceResourceGroupSupported?: boolean(name='SourceResourceGroupSupported', description='Indicates whether the resource scope can be specified by resource group. Valid values:

- true
- false', example='true'),
        sourceResourcesSupported?: boolean(name='SourceResourcesSupported', description='Indicates whether the resource scope can be specified by tag, resource group, or resource. Valid values:

- true
- false', example='true'),
        sourceSupported?: boolean(name='SourceSupported', description='Indicates whether the resource scope can be specified by resource. Valid values:

- true
- false', example='true'),
        sourceTagSupported?: boolean(name='SourceTagSupported', description='Indicates whether the resource scope can be specified by tag. Valid values:

- true
- false', example='true'),
      }
    ](name='SupportedResourceTypes', description='The resource types that support the scenario feature.'),
  }(name='TemplateScratch', description='Details of the scenario feature.'),
  terraform?: {
    supportedResourceTypes?: {
      customTag?: [ string ](name='CustomTag', description='The resource types that support the custom tag feature.'),
      estimateCost?: [ string ](name='EstimateCost', description='The resource types that support the price inquiry feature.'),
      resourceGroup?: [ string ](name='ResourceGroup', description='The resource types that support the resource group feature.'),
      stackOperationRisk?: {
        deleteStack?: [ string ](name='DeleteStack', description='The resource types that support the risk check performed to detect risks caused by a stack deletion operation.'),
      }(name='StackOperationRisk', description='The resource type that support the risk check feature.'),
      systemTag?: [ string ](name='SystemTag', description='The resource types that support the system tag `acs:ros:stackId`.'),
    }(name='SupportedResourceTypes', description='The resource types that support the scenario feature.'),
    supportedVersions?: [ 
      {
        providerVersions?: [ 
          {
            providerName?: string(name='ProviderName', description='The name of the provider.', example='alicloud'),
            supportedVersions?: [ string ](name='SupportedVersions', description='The versions of the provider.'),
          }
        ](name='ProviderVersions', description='The names and versions of the providers that correspond to the Terraform versions.'),
        terraformVersion?: string(name='TerraformVersion', description='The Terraform version.', example='1.0.11'),
        transform?: string(name='Transform', description='The Terraform version that is supported by ROS. The parameter value is the same as the value of the Transform parameter in a Terraform template.', example='Aliyun::Terraform-v1.0'),
        updateAllowedTransforms?: [ string ](name='UpdateAllowedTransforms', description='The versions to which Terraform can be updated in ROS.'),
      }
    ](name='SupportedVersions', description='The Terraform versions.'),
  }(name='Terraform', description='Details of the Terraform hosting feature.'),
}

model GetFeatureDetailsResponse = {
  headers: map[string]string(name='headers'),
  body: GetFeatureDetailsResponseBody(name='body'),
}

/**
  * You can call this operation to query the Terraform hosting, resource cleaner, and scenario features.
  * This topic provides an example on how to query the details of features supported by ROS in the China (Hangzhou) region. The details include Terraform versions, provider versions, and supported resource types.
  * >  In the Examples section, only part of the sample code is provided.
  *
 */
async function getFeatureDetails(request: GetFeatureDetailsRequest): GetFeatureDetailsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetFeatureDetails', 'POST', '/', 'json', false, 'json', request);
}

model GetResourceTypeRequest {
  resourceType: string(name='ResourceType', description='The ID of the request.', example='ALIYUN::ROS::WaitConditionHandle', position='Query'),
  versionId?: string(name='VersionId', example='v1', position='Query'),
}

model GetResourceTypeResponseBody = {
  attributes?: map[string]any(name='Attributes', description='The type of the resource.'),
  createTime?: string(name='CreateTime', example='2023-02-24T08:25:21'),
  defaultVersionId?: string(name='DefaultVersionId', example='v1'),
  description?: string(name='Description', example='It is a demo.'),
  entityType?: string(name='EntityType', example='Resource'),
  isDefaultVersion?: boolean(name='IsDefaultVersion', example='true'),
  latestVersionId?: string(name='LatestVersionId', example='v10'),
  properties?: map[string]any(name='Properties', description='Indicates whether the resource supports drift detection. Default value: false. Valid values:

*   true: Drift detection is supported.
*   false: Drift detection is not supported.'),
  provider?: string(name='Provider', example='ROS'),
  requestId?: string(name='RequestId', description='The attributes of the resource.', example='A28FBA2E-B6B3-5822-AA45-AB875EF23641'),
  resourceType?: string(name='ResourceType', description='The properties of the resource.', example='ALIYUN::ROS::WaitConditionHandle'),
  supportDriftDetection?: boolean(name='SupportDriftDetection', description='Indicates whether the resource supports scratch detection. Default value: false. Valid values:

*   true: Scratch detection is supported.
*   false: Scratch detection is not supported.', example='false'),
  supportScratchDetection?: boolean(name='SupportScratchDetection', description='The entity type. Valid values:

*   Resource: resources other than DataSource resources. For more information, see [Resources](~~28863~~).
*   DataSource: DataSource resources.', example='false'),
  templateBody?: string(name='TemplateBody', example='{"ROSTemplateFormatVersion":"2015-09-01"}'),
  totalVersionCount?: int32(name='TotalVersionCount', example='10'),
  updateTime?: string(name='UpdateTime', example='2023-02-24T08:25:21'),
}

model GetResourceTypeResponse = {
  headers: map[string]string(name='headers'),
  body: GetResourceTypeResponseBody(name='body'),
}

/**
  * For more information about common request parameters, see [Common parameters](~~131957~~).
  *
 */
async function getResourceType(request: GetResourceTypeRequest): GetResourceTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetResourceType', 'POST', '/', 'json', false, 'json', request);
}

model GetResourceTypeTemplateRequest {
  resourceType: string(name='ResourceType', example='ALIYUN::ECS::VPC', position='Query'),
  versionId?: string(name='VersionId', example='v1', position='Query'),
}

model GetResourceTypeTemplateResponseBody = {
  requestId?: string(name='RequestId', example='87F54B2B-AEF0-4C33-A72A-3F8856A575E9'),
  templateBody?: map[string]any(name='TemplateBody', example='{"ROSTemplateFormatVersion": "2015-09-01"}'),
  templateContent?: string(name='TemplateContent', example='{
      "ROSTemplateFormatVersion": "2015-09-01"
}'),
}

model GetResourceTypeTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: GetResourceTypeTemplateResponseBody(name='body'),
}

async function getResourceTypeTemplate(request: GetResourceTypeTemplateRequest): GetResourceTypeTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetResourceTypeTemplate', 'POST', '/', 'json', false, 'json', request);
}

model GetServiceProvisionsRequest {
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N. If you do not specify the name and the value of a parameter, Resource Orchestration Service (ROS) uses the default name and value that are specified in the template.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterKey parameter.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterValue parameter.', example='12'),
    }
  ](name='Parameters', description='The list of parameters.', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  services?: [ 
    {
      serviceName: string(name='ServiceName', description='The name of service N or feature N. Valid values:

*   AHAS: Application High Availability Service
*   ARMS: Application Real-Time Monitoring Service (ARMS)
*   ApiGateway: API Gateway
*   BatchCompute: Batch Compute
*   BrainIndustrial: Industrial Brain
*   CloudStorageGateway: Cloud Storage Gateway (CSG)
*   CMS: CloudMonitor
*   CR: Container Registry
*   CS: Container Service for Kubernetes (ACK)
*   DCDN: Dynamic Route for CDN (DCDN)
*   DataHub: DataHub
*   DataWorks: DataWorks
*   EDAS: Enterprise Distributed Application Service (EDAS)
*   E-HPC: Elastic High Performance Computing (E-HPC)
*   EMAS: Enterprise Mobile Application Studio (EMAS)
*   FC: Function Compute
*   FNF: Serverless Workflow (SWF)
*   MaxCompute: MaxCompute
*   MNS: Message Service (MNS)
*   HBR: Hybrid Backup Recovery (HBR)
*   IMM: Intelligent Media Management
*   IOT: IoT Platform
*   KMS: Key Management Service (KMS)
*   NAS: Apsara File Storage NAS (NAS)
*   NLP: Natural Language Processing (NLP)
*   OSS: OSS
*   OTS: Tablestore
*   PrivateLink: PrivateLink
*   PrivateZone: Alibaba Cloud DNS PrivateZone
*   RocketMQ: Message Queue for Apache RocketMQ
*   SAE: Serverless App Engine (SAE)
*   SLS: Log Service
*   TrafficMirror: the traffic mirroring feature
*   VS: Video Surveillance System
*   Xtrace: Tracing Analysis', example='EHPC'),
    }
  ](name='Services', description='The services.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and Services.N.ServiceName.', example='{"ROSTemplateFormatVersion": "2015-09-01","Resources": {"ApiGateway": {"Type": "ALIYUN::ApiGateway::Group","Properties": { "GroupName": "ros_example" }},"FC": {"Type": "ALIYUN::FC::Service","Properties": {"ServiceName": "ros_example"}}}}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.

You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and Services.N.ServiceName.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body must be 1 to 524,288 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and Services.N.ServiceName.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. If you do not specify this parameter, the latest version is used.

This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
}

model GetServiceProvisionsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='A9938C04-26AD-5EFA-B394-EA7866842DFF'),
  serviceProvisions?: [ 
    {
      autoEnableService?: boolean(name='AutoEnableService', description='Indicates whether automatic activation for the service is defined in the template. Valid values:

*   true: Automatic activation for the service is defined in the template.
*   false: Manual activation for the service is defined in the template.', example='false'),
      dependentServiceNames?: [ string ](name='DependentServiceNames', description='The names of Alibaba Cloud services on which the service depends.'),
      enableURL?: string(name='EnableURL', description='The URL that points to the activation page of the service.

>  This parameter is returned if the Status parameter is set to Disabled.', example='https://common-buy.aliyun.com/?commodityCode=nas'),
      roleProvision?: {
        authorizationURL?: string(name='AuthorizationURL', description='The authorization URL of the RAM role.

>  This parameter is returned if the Created parameter is set to false.', example='https://ehpc.console.aliyun.com/'),
        roles?: [ 
          {
            apiForCreation?: {
              apiName?: string(name='ApiName', description='The name of the API operation.', example='CreateServiceLinkedRole'),
              apiProductId?: string(name='ApiProductId', description='The ID of the Alibaba Cloud service to which the API operation belongs.', example='rds'),
              apiType?: string(name='ApiType', description='The type of the API operation.

Valid values:

*   Open: public API operation
*   Inner: private API operation', example='Open'),
              parameters?: map[string]any(name='Parameters', description='The parameters of the API operation. If a parameter is a variable, use the ${Variable name} format. Only the following variable is supported: ${RegionId}.', example='{   "ServiceLinkedRole": "AliyunServiceRoleForRdsPgsqlOnEcs",   "RegionId": "${RegionId}" }'),
            }(name='ApiForCreation', description='The information about the API operation that is used to create the RAM role.'),
            created?: boolean(name='Created', description='Indicates whether the RAM role is created. Valid values:

*   true
*   false', example='true'),
            function?: string(name='Function', description='The purpose for which the RAM role is used.

Default value: Default. This value indicates that the RAM role is the default role of the service.', example='Default'),
            roleName?: string(name='RoleName', description='The name of the RAM role.', example='AliyunServiceRoleForEHPC'),
          }
        ](name='Roles', description='The RAM roles of the service.'),
      }(name='RoleProvision', description='The information about the RAM role of the service. If this parameter is empty, no RAM role is associated with the service.'),
      serviceName?: string(name='ServiceName', description='The name of the service.', example='EHPC'),
      status?: string(name='Status', description='The activation status of the service. Valid values:

*   Enabled: The service is activated.
*   Disabled: The service is not activated.
*   Unknown: The activation status of the service is unknown.', example='Enabled'),
      statusReason?: string(name='StatusReason', description='The reason why the service is in the Disabled or Unknown state.

>  This parameter is returned if the Status parameter is set to Disabled or Unknown.', example='No permission.'),
    }
  ](name='ServiceProvisions', description='Details of the service.'),
}

model GetServiceProvisionsResponse = {
  headers: map[string]string(name='headers'),
  body: GetServiceProvisionsResponseBody(name='body'),
}

/**
  * This topic describes how to query the activation status and the RAM roles of an Alibaba Cloud service. In this example, the Elastic High Performance Computing (E-HPC) service that is deployed in the China (Hangzhou) region is queried.
  * >  Make sure that you have obtained the permissions on the [GetRole](~~28711~~) operation.
  *
 */
async function getServiceProvisions(request: GetServiceProvisionsRequest): GetServiceProvisionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetServiceProvisions', 'POST', '/', 'json', false, 'json', request);
}

model GetStackRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The token can be up to 64 characters in length,

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  logOption?: string(name='LogOption', description='The option for returning logs. Valid values:

*   None: does not return logs.
*   Stack: returns the logs of the stack. This is the default value.
*   Resource: returns the logs of resources in the stack.
*   All: returns the logs of all resources.', example='Stack', position='Query'),
  outputOption?: string(name='OutputOption', description='Specifies whether to return the output parameters of the stack. Valid values:

*   Enabled: returns the output parameters. This is the default value.

*   Disabled: does not return the output parameters.

> The system takes a long period of time to calculate output parameters. If you do not want to query the output parameters, we recommend that you set the OutputOption parameter to Disabled to improve the response speed of the GetStack operation.', example='Disabled', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the stack resides. You can call the [DescribeRegions](~~131035~~) operation to query the most recent list of Alibaba Cloud regions.', example='cn-hangzhou', position='Query'),
  showResourceProgress?: string(name='ShowResourceProgress', description='Specifies whether to return the ResourceProgress parameter. Valid values:

*   Disabled: does not return the ResourceProgress parameter. This is the default value.

*   EnabledIfCreateStack: returns the ResourceProgress parameter only if a stack is created.

> A stack is in one of the following states when it is created: CREATE_IN_PROGRESS, CREATE_COMPLETE, CREATE_FAILED, CREATE_ROLLBACK_IN_PROGRESS, CREATE_ROLLBACK_COMPLETE, or CREATE_ROLLBACK_FAILED.', example='Disabled', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='c754d2a4-28f1-46df-b557-9586173a****', position='Query'),
}

model GetStackResponseBody = {
  createTime?: string(name='CreateTime', description='The time when the stack was created. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2020-09-16T08:21:40'),
  deletionProtection?: string(name='DeletionProtection', description='Indicates whether deletion protection is enabled for the stack. Valid values:

*   Enabled: Deletion protection is enabled for the stack.
*   Disabled: Deletion protection is disabled for the stack. You can delete the stack in the Resource Orchestration Service (ROS) console or by calling the DeleteStack operation.

>  Deletion protection of a nested stack works in the same way as that of the root stack.', example='Disabled'),
  description?: string(name='Description', description='The description of the stack.', example='Create a VPC.'),
  disableRollback?: boolean(name='DisableRollback', description='Indicates whether rollback is disabled when the stack fails to be created. Valid values:

*   true: Rollback is disabled when the stack fails to be created.
*   false: Rollback is enabled when the stack fails to be created. This is the default value.', example='false'),
  driftDetectionTime?: string(name='DriftDetectionTime', description='The time when the last successful drift detection operation was performed.', example='2020-09-16T09:21:40'),
  interface?: string(name='Interface', description='The description of the web UI in the ROS console.', example='{}'),
  log?: {
    resourceLogs?: [ 
      {
        logs?: [ 
          {
            content?: string(name='Content', description='The content of a resource log.', example='[]'),
            keys?: [ string ](name='Keys', description='The keywords.'),
          }
        ](name='Logs', description='The logs of all resources.'),
        resourceName?: string(name='ResourceName', description='The name of the resource that is defined in the template.', example='MyResourceCleaner'),
      }
    ](name='ResourceLogs', description='The logs of resources in the stack. This parameter is returned if the LogOption parameter is set to Resource or All.  

>  The logs are returned for resources of specific types, such as `ALIYUN::ROS::ResourceCleaner`.'),
    terraformLogs?: [ 
      {
        command?: string(name='Command', description='The name of a Terraform command that is run. Valid values:

- apply
- plan
- destroy
- version

For more information about Terraform commands, see [Basic CLI Features](https://www.terraform.io/cli/commands).', example='apply'),
        content?: string(name='Content', description='The content of the output stream that is returned after the command is run.', example='Apply complete! Resources: 42 added, 0 changed, 0 destroyed.'),
        stream?: string(name='Stream', description='The output stream. Valid values:

- stdout: the standard output stream.
- stderr: the standard error stream.', example='stdout'),
      }
    ](name='TerraformLogs', description='The logs of the Terraform stack. This parameter is returned only for a Terraform stack. 

This parameter is returned if the LogOption parameter is left empty or set to Stack or All.  

>  This parameter is not returned for a running stack. The logs are generated from the last creation, re-creation, update, or deletion operation on the stack.'),
  }(name='Log', description='The logs of the stack.'),
  notificationURLs?: [ string ](name='NotificationURLs', description='The callback URLs that are used to receive stack events.'),
  operationInfo?: {
    action?: string(name='Action', description='The name of the API of another cloud service.', example='DeleteSecurityGroup'),
    code?: string(name='Code', description='The error code returned.', example='DependencyViolation'),
    logicalResourceId?: string(name='LogicalResourceId', description='The logical ID of the resource on which the operation error occurred.', example='EcsSecurityGroup'),
    message?: string(name='Message', description='The error message returned.', example='There is still instance(s) in the specified security group.'),
    requestId?: string(name='RequestId', description='The ID of the request to call the API of another cloud service.', example='071D6166-3F6B-5C7B-A1F0-0113FBB643A8'),
    resourceType?: string(name='ResourceType', description='The type of the resource on which the operation error occurred.', example='ALIYUN::ECS::SecurityGroup'),
  }(name='OperationInfo', description='The additional information that is displayed when an error occurs on a stack operation. 

>  This property is returned in specific conditions. At least one sub-property is returned. For example, an error is reported when you call the API of another cloud service.'),
  orderIds?: [ string ](name='OrderIds'),
  outputs?: [  map[string]any ](name='Outputs', description='The output parameters of the stack.

>  This parameter is returned if the OutputOption parameter is set to Enabled.'),
  parameters?: [ 
    {
      parameterKey?: string(name='ParameterKey', description='The name of the parameter.', example='ALIYUN::Region'),
      parameterValue?: string(name='ParameterValue', description='The value of the parameter.', example='cn-hangzhou'),
    }
  ](name='Parameters', description='The parameters of the stack.'),
  parentStackId?: string(name='ParentStackId', description='The ID of the parent stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf692****'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role. ROS assumes the RAM role to create the stack and uses credentials of the role to call the APIs of Alibaba Cloud services.

ROS assumes the RAM role to perform operations on the stack. If you have permissions to perform operations on the stack but do not have permissions to use the RAM role, ROS still assumes the RAM role. You must make sure that the least privileges are granted to the role.

If you do not specify this parameter, ROS assumes an existing role that is associated with the stack. If no roles are available for ROS to assume, ROS uses a temporary credential that is generated from the credentials of your account.

The name of the RAM role can be up to 64 bytes in length.', example='test-role'),
  regionId?: string(name='RegionId', description='The ID of the region in which the stack is deployed. You can call the [DescribeRegions](~~131035~~) operation to query the most recent list of Alibaba Cloud regions.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the instances belong.', example='rg-acfmxazb4ph6aiy****'),
  resourceProgress?: {
    failedResourceCount?: int32(name='FailedResourceCount', description='The number of resources that fail to be created.', example='0'),
    inProgressResourceCount?: int32(name='InProgressResourceCount', description='The number of resources that are being created.', example='1'),
    inProgressResourceDetails?: [ 
      {
        progressTargetValue?: float(name='ProgressTargetValue', description='The desired progress value of the resource.', example='10'),
        progressValue?: float(name='ProgressValue', description='The current progress value of the resource.', example='5'),
        resourceName?: string(name='ResourceName', description='The name of the resource.', example='WaitCondition'),
        resourceType?: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ROS::WaitCondition'),
      }
    ](name='InProgressResourceDetails', description='The progress details of resources that are being created.'),
    pendingResourceCount?: int32(name='PendingResourceCount', description='The number of resources to be created.', example='0'),
    successResourceCount?: int32(name='SuccessResourceCount', description='The number of resources that are created.', example='1'),
    totalResourceCount?: int32(name='TotalResourceCount', description='The total number of resources.', example='2'),
  }(name='ResourceProgress', description='The creation progress of resources.'),
  rootStackId?: string(name='RootStackId', description='The ID of the root stack. This parameter is returned if the specified stack is a nested stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf692****'),
  serviceManaged?: boolean(name='ServiceManaged', description='Indicates whether the stack is a managed stack. Valid values: 

- true
- false', example='false'),
  serviceName?: string(name='ServiceName', description='The name of the service to which the managed stack belongs.', example='ACVS'),
  stackDriftStatus?: string(name='StackDriftStatus', description='The status of the stack in the last successful drift detection. Valid values:

*   DRIFTED: The stack has drifted.
*   NOT_CHECKED: No successful drift detection is performed on the stack.
*   IN_SYNC: The stack is being synchronized.', example='IN_SYNC'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='c754d2a4-28f1-46df-b557-9586173a****'),
  stackName?: string(name='StackName', description='The name of the stack.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). It must start with a digit or letter.', example='MyStack'),
  stackType?: string(name='StackType', description='The type of the stack. Valid values:

*   ROS: The ROS stack, which is created by using an ROS template.
*   Terraform: The Terraform stack, which is created by using a Terraform template.', example='ROS'),
  status?: string(name='Status', description='The state of the stack. Valid values:

*   CREATE_IN_PROGRESS: The stack is being created.
*   CREATE_FAILED: The stack fails to be created.
*   CREATE_COMPLETE: The stack is created.
*   UPDATE_IN_PROGRESS: The stack is being updated.
*   UPDATE_FAILED: The stack fails to be updated.
*   UPDATE_COMPLETE: The stack is updated.
*   DELETE_IN_PROGRESS: The stack is being deleted.
*   DELETE_FAILED: The stack fails to be deleted.
*   CREATE_ROLLBACK_IN_PROGRESS: The stack is being rolled back after the stack fails to be created.
*   CREATE_ROLLBACK_FAILED: The stack fails to be rolled back after the stack fails to be created.
*   CREATE_ROLLBACK_COMPLETE: The stack is rolled back after the stack fails to be created.
*   ROLLBACK_IN_PROGRESS: The resources in the stack are being rolled back.
*   ROLLBACK_FAILED: The resources in the stack fail to be rolled back.
*   ROLLBACK_COMPLETE: The resources in the stack are rolled back.
*   CHECK_IN_PROGRESS: The stack is being validated.
*   CHECK_FAILED: The stack fails to be validated.
*   CHECK_COMPLETE: The stack is validated.
*   REVIEW_IN_PROGRESS: The stack is being reviewed.
*   IMPORT_CREATE_IN_PROGRESS: The stack is being created by using imported resources.
*   IMPORT_CREATE_FAILED: The stack fails to be created by using imported resources.
*   IMPORT_CREATE_COMPLETE: The stack is created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_IN_PROGRESS: The resources are being rolled back after the stack fails to be created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_FAILED: The resources fail to be rolled back after the stack fails to be created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_COMPLETE: The resources are rolled back after the stack fails to be created by using imported resources.
*   IMPORT_UPDATE_IN_PROGRESS: The stack is being updated by using imported resources.
*   IMPORT_UPDATE_FAILED: The stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_COMPLETE: The stack is updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_IN_PROGRESS: The resources are being rolled back after the stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_FAILED: The resources fail to be rolled back after the stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_COMPLETE: The resources are rolled back after the stack fails to be updated by using imported resources.', example='CREATE_COMPLETE'),
  statusReason?: string(name='StatusReason', description='The reason why the stack is in its current state.', example='Stack CREATE completed successfully'),
  tags?: [ 
    {
      key?: string(name='Key', description='The tag key of the stack.', example='usage'),
      value?: string(name='Value', description='The tag value of the stack.', example='test'),
    }
  ](name='Tags', description='The tags of the stack.'),
  templateDescription?: string(name='TemplateDescription', description='The description of the template.', example='Create a VPC.'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter is returned only if the current template of the stack is a custom template or a shared template.  

If the template is a shared template, the value of this parameter is the same as the value of the TemplateARN parameter.', example='a52f81be-496f-4e1c-a286-8852ab54****'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario. This parameter is returned only if the current template of the stack is generated from a scenario.', example='ts-7f7a704cf71c49a6****'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. This parameter is returned only if the current template of the stack is from a URL. The URL can point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket.', example='oss://ros/template/demo'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter is returned only if the current template of the stack is a custom template or a shared template.  

If the template is a shared template, this parameter is returned only when the VersionOption parameter is set to AllVersions.  

Valid values: v1 to v100.', example='v1'),
  timeoutInMinutes?: int32(name='TimeoutInMinutes', description='The timeout period within which the stack can be created. Unit: minutes.', example='10'),
  updateTime?: string(name='UpdateTime', description='The time when the stack was updated. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2020-09-17T08:21:40'),
}

model GetStackResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackResponseBody(name='body'),
}

/**
  * In this topic, the information about a stack whose ID is `c754d2a4-28f1-46df-b557-9586173a****` is queried. The stack is deployed in the China (Hangzhou) region.
  *
 */
async function getStack(request: GetStackRequest): GetStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStack', 'POST', '/', 'json', false, 'json', request);
}

model GetStackDriftDetectionStatusRequest {
  driftDetectionId: string(name='DriftDetectionId', description='The ID of the drift detection operation.

You can call the [ListStackResourceDrifts](~~155098~~) operation to obtain the ID of the drift detection operation.', example='a7044f0d-6f2e-4128-a307-4524ef88****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack to be detected for drift.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model GetStackDriftDetectionStatusResponseBody = {
  driftDetectionId?: string(name='DriftDetectionId', description='The ID of the drift detection operation.', example='a7044f0d-6f2e-4128-a307-4524ef88****'),
  driftDetectionStatus?: string(name='DriftDetectionStatus', description='The drift detection status. Valid values:

*   DETECTION_COMPLETE: The drift detection operation has been completed for all resources that support drift detection in the stack.
*   DETECTION_FAILED: The stack drift detection operation has failed for at least one resource in the stack.
*   DETECTION_IN_PROGRESS: The stack drift detection operation is in progress.', example='DETECTION_COMPLETE'),
  driftDetectionStatusReason?: string(name='DriftDetectionStatusReason', description='The reason why the stack drift detection operation has its current status.', example='Detect stack drift successfully'),
  driftDetectionTime?: string(name='DriftDetectionTime', description='The time when the stack drift detection operation was initiated.', example='2020-02-27T07:47:47'),
  driftedStackResourceCount?: int32(name='DriftedStackResourceCount', description='The total number of stack resources that have drifted.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stackDriftStatus?: string(name='StackDriftStatus', description='The drift status of the stack. Valid values:

*   DRIFTED: The actual configuration of the stack differs, or has drifted, from its expected template configuration. A stack is considered to have drifted if one or more of its resources have drifted.
*   NOT_CHECKED: Resource Orchestration Service (ROS) has not checked whether the actual configuration of the resource differs from its expected template configuration.
*   IN_SYNC: The current configuration of each supported resource matches its expected template configuration. A stack with no resources that support drift detection also has a status of IN_SYNC.', example='DRIFTED'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model GetStackDriftDetectionStatusResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackDriftDetectionStatusResponseBody(name='body'),
}

/**
  * In this topic, the status of a drift detection operation whose ID is `a7044f0d-6f2e-4128-a307-4524ef88****` is queried. The operation is performed in the China (Hangzhou) region.
  *
 */
async function getStackDriftDetectionStatus(request: GetStackDriftDetectionStatusRequest): GetStackDriftDetectionStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackDriftDetectionStatus', 'POST', '/V2/GetStackDriftDetectionStatus', 'json', false, 'json', request);
}

model GetStackGroupRequest {
  regionId: string(name='RegionId', description='The name of the stack group. The name must be unique within a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). It must start with a digit or letter.

>  You must specify one of the StackGroupName and StackGroupId parameters.', example='cn-hangzhou', position='Query'),
  stackGroupId?: string(name='StackGroupId', description='The ID of the request.', example='fd0ddef9-9540-4b42-a464-94f77835****', position='Query'),
  stackGroupName?: string(name='StackGroupName', description='The ID of the stack group.

>  You must specify one of the StackGroupName and StackGroupId parameters.', example='MyStackGroup', position='Query'),
}

model GetStackGroupResponseBody = {
  requestId?: string(name='RequestId', description='The details of the stack group.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroup?: {
    administrationRoleName?: string(name='AdministrationRoleName', description='The parameters of the stack group.', example='AliyunROSStackGroupAdministrationRole'),
    autoDeployment?: {
      enabled?: boolean(name='Enabled', description='Indicates whether stacks in the member account are retained when the member account is deleted from the folder.

Valid values:

*   true: The stacks are retained.
*   false: The stacks are deleted.

>  This parameter is returned only when the Enabled parameter is set to true.', example='true'),
      retainStacksOnAccountRemoval?: boolean(name='RetainStacksOnAccountRemoval', description='The folder IDs of the resource directory. This parameter is used to deploy stack instances within all the accounts in the folders.

>  This parameter is returned only when the PermissionModel parameter is set to SERVICE_MANAGED.', example='true'),
    }(name='AutoDeployment', description='Indicates whether automatic deployment is enabled.

Valid values:

*   true: Automatic deployment is enabled. If a member account is added to the folder to which the stack group belongs after automatic deployment is enabled, the stack group deploys its stack instances in the specified region where the added account is deployed. If the account is deleted from the folder, the stack instances in the specified region are deleted from the stack group.
*   false: Automatic deployment is disabled. After automatic deployment is disabled, the stack instances remain unchanged when the member account in the folder is changed.'),
    description?: string(name='Description', description='The name of the stack group.', example='StackGroup Description'),
    executionRoleName?: string(name='ExecutionRoleName', description='The template body.', example='AliyunROSStackGroupExecutionRole'),
    parameters?: [ 
      {
        parameterKey?: string(name='ParameterKey', description='The value of the parameter.', example='Amount'),
        parameterValue?: string(name='ParameterValue', description='The description of the stack group.', example='12'),
      }
    ](name='Parameters', description='The key of the parameter.'),
    permissionModel?: string(name='PermissionModel', description='The information about automatic deployment settings.

>  This parameter is returned only when the PermissionModel parameter is set to SERVICE_MANAGED.', example='SELF_MANAGED'),
    rdFolderIds?: [ string ](name='RdFolderIds', description='The folder IDs of the resource directory. This parameter is used to deploy stack instances within all the accounts in the folders.

>  This parameter is returned only when the PermissionModel parameter is set to SERVICE_MANAGED.'),
    resourceGroupId?: string(name='ResourceGroupId', description='The permission model.

Valid values:

*   SELF_MANAGED: the self-managed permission model
*   SERVICE_MANAGED: the service-managed permission model

>  For more information about the permission models of stack groups, see [Overview](~~154578~~).', example='rg-acfmxazb4ph6aiy****'),
    stackGroupDriftDetectionDetail?: {
      cancelledStackInstancesCount?: int32(name='CancelledStackInstancesCount', description='The number of stack instances that have drifted.', example='0'),
      driftDetectionStatus?: string(name='DriftDetectionStatus', description='The drift status of the stack group.

Valid values:

*   DRIFTED: At least one stack instance in the stack group has drifted.
*   NOT_CHECKED: No drift detection is completed on the stack group.
*   IN_SYNC: All the stack instances in the stack group are being synchronized.', example='COMPLETED'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The number of stack instances.', example='2020-02-27T07:47:47'),
      driftedStackInstancesCount?: int32(name='DriftedStackInstancesCount', description='The ID of the resource group. This parameter is specified when you create the stack group.', example='1'),
      failedStackInstancesCount?: int32(name='FailedStackInstancesCount', description='The status of drift detection on the stack group.

Valid values:

*   COMPLETED: Drift detection is performed and completed on all stack instances.
*   FAILED: Drift detection is performed. The number of stack instances that failed the drift detection exceeds the specified threshold.
*   PARTIAL_SUCCESS: Drift detection is performed. The number of stack instances that failed the drift detection does not exceed the specified threshold.
*   IN_PROGRESS: Drift detection is being performed on the stack group.
*   STOPPED: Drift detection is canceled for the stack group.', example='0'),
      inProgressStackInstancesCount?: int32(name='InProgressStackInstancesCount', description='The number of stack instances that were being synchronized.', example='0'),
      inSyncStackInstancesCount?: int32(name='InSyncStackInstancesCount', description='The number of stack instances for which drift detection was canceled.', example='1'),
      stackGroupDriftStatus?: string(name='StackGroupDriftStatus', description='The number of stack instances on which drift detection was being performed.', example='DRIFTED'),
      totalStackInstancesCount?: int32(name='TotalStackInstancesCount', description='The number of stack instances that failed drift detection.', example='2'),
    }(name='StackGroupDriftDetectionDetail', description='The time when drift detection was performed on the stack group.'),
    stackGroupId?: string(name='StackGroupId', description='The status of the stack group.

Valid values:

*   ACTIVE
*   DELETED', example='fd0ddef9-9540-4b42-a464-94f77835****'),
    stackGroupName?: string(name='StackGroupName', description='The name of the RAM role that is specified for the execution account when you create the self-managed stack group. The administrator role AliyunROSStackGroupAdministrationRole assumes the execution role. If this parameter is not specified, the default value AliyunROSStackGroupExecutionRole is returned.', example='MyStackGroup'),
    status?: string(name='Status', description='The name of the RAM role that is specified for the administrator account in Resource Orchestration Service (ROS) when you create the self-managed stack group. If this parameter is not specified, the default value AliyunROSStackGroupAdministrationRole is returned.', example='ACTIVE'),
    templateBody?: string(name='TemplateBody', description='The details of the last drift detection that was performed on the stack group.', example='{"ROSTemplateFormatVersion": "2015-09-01"}'),
    templateContent?: string(name='TemplateContent', example='{
      "ROSTemplateFormatVersion": "2015-09-01"
}'),
  }(name='StackGroup', description='The ID of the stack group.'),
}

model GetStackGroupResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackGroupResponseBody(name='body'),
}

/**
  * For more information about common request parameters, see [Common parameters](~~131957~~).
  *
 */
async function getStackGroup(request: GetStackGroupRequest): GetStackGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackGroup', 'POST', '/', 'json', false, 'json', request);
}

model GetStackGroupOperationRequest {
  operationId: string(name='OperationId', description='The ID of the operation that you want to query. You can call the [ListStackGroupOperations](~~151342~~) operation to query the operation.', example='6da106ca-1784-4a6f-a7e1-e723863d****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack group. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model GetStackGroupOperationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroupOperation?: {
    action?: string(name='Action', description='The operation that was performed.

Valid values:

*   CREATE
*   UPDATE
*   DELETE
*   DETECT_DRIFT', example='DELETE'),
    administrationRoleName?: string(name='AdministrationRoleName', description='The name of the RAM role that is specified for the administrator account in Resource Orchestration Service (ROS) when you create the stack group that is granted self-managed permissions. If this parameter is not specified, the default value AliyunROSStackGroupAdministrationRole is returned.', example='AliyunROSStackGroupAdministrationRole'),
    createTime?: string(name='CreateTime', description='The time when the operation was initiated.', example='2020-01-20T09:22:3'),
    deploymentTargets?: {
      accountIds?: [ string ](name='AccountIds', description='The IDs of the member accounts in the resource directory.

>  This parameter is returned only if the AccountIds request parameter is specified in the [UpdateStackInstances](~~151716~~) operation to update stack instances.'),
      rdFolderIds?: [ string ](name='RdFolderIds', description='The folder IDs of the resource directory.'),
    }(name='DeploymentTargets', description='The folders in which you want to deploy the stack instances that are granted service-managed permissions.'),
    endTime?: string(name='EndTime', description='The time when the operation ended.', example='2020-01-20T09:22:4'),
    executionRoleName?: string(name='ExecutionRoleName', description='The name of the RAM role that is specified for the execution account when you create the stack group that is granted self-managed permissions. The administrator account whose RAM role is AliyunROSStackGroupAdministrationRole assumes this RAM role. If this parameter is not specified, the default value AliyunROSStackGroupExecutionRole is returned.', example='AliyunROSStackGroupExecutionRole'),
    operationDescription?: string(name='OperationDescription', description='The description of the operation.

>  This parameter is returned only if the OperationDescription request parameter is specified in the [CreateStackInstances](~~151338~~) operation to create stack instances.', example='Create stack instance in hangzhou'),
    operationId?: string(name='OperationId', description='The ID of the operation that was performed on the stack group.', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
    operationPreferences?: {
      failureToleranceCount?: int32(name='FailureToleranceCount', description='The maximum number of stack operation failures that can occur within the accounts in each region. When the value is exceeded, the operation fails to be performed in the region. If the operation fails to be performed in one region, the operation fails to be performed in other regions.

Valid values: 0 to 20.

>  Only one of the FailureToleranceCount and FailureTolerancePercentage parameters is returned.', example='1'),
      failureTolerancePercentage?: int32(name='FailureTolerancePercentage', description='The percentage of the total number of accounts within which stack operation failures can occur to the total number of accounts in each region. When the value is exceeded, the operation fails to be performed in the region.

Valid values: 0 to 100.

>  Only one of the FailureToleranceCount and FailureTolerancePercentage parameters is returned.', example='10'),
      maxConcurrentCount?: int32(name='MaxConcurrentCount', description='The maximum number of accounts within which operations are performed on stacks concurrently in each region.

Valid values: 1 to 20.

>  Only one of the MaxConcurrentCount and MaxConcurrentPercentage parameters is returned.', example='1'),
      maxConcurrentPercentage?: int32(name='MaxConcurrentPercentage', description='The percentage of the total number of accounts within which operations are performed on stacks concurrently to the total number of accounts in each region.

Valid values: 1 to 100.

>  Only one of the MaxConcurrentCount and MaxConcurrentPercentage parameters is returned.', example='10'),
      regionIdsOrder?: [ string ](name='RegionIdsOrder', description='The regions in the order of which the operation is performed.'),
    }(name='OperationPreferences', description='The operation preferences.'),
    retainStacks?: boolean(name='RetainStacks', description='Indicates whether the relevant stacks are retained when stack instances are deleted in the stack group.

Valid values:

*   true: The stacks are retained.
*   false: The stacks are deleted. Proceed with caution.

>  This parameter is returned only when the stack instances are deleted.', example='true'),
    stackGroupDriftDetectionDetail?: {
      cancelledStackInstancesCount?: int32(name='CancelledStackInstancesCount', description='The number of stack instances for which the drift detection was canceled.', example='0'),
      driftDetectionStatus?: string(name='DriftDetectionStatus', description='The status of the drift detection.

Valid values:

*   COMPLETED: The drift detection is performed and completed on all stack instances.
*   FAILED: The drift detection is performed. The number of stack instances that failed the drift detection exceeds the specified threshold.
*   PARTIAL_SUCCESS: The drift detection is performed. The number of stack instances that failed the drift detection does not exceed the specified threshold.
*   IN_PROGRESS: The drift detection is being performed on the stack group.
*   STOPPED: The drift detection is canceled for the stack group.', example='COMPLETED'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The time when the drift detection was initiated.', example='2020-02-27T07:47:47'),
      driftedStackInstancesCount?: int32(name='DriftedStackInstancesCount', description='The number of stack instances that were drifted.', example='1'),
      failedStackInstancesCount?: int32(name='FailedStackInstancesCount', description='The number of stack instances that failed the drift detection.', example='0'),
      inProgressStackInstancesCount?: int32(name='InProgressStackInstancesCount', description='The number of stack instances on which the drift detection was being performed.', example='0'),
      inSyncStackInstancesCount?: int32(name='InSyncStackInstancesCount', description='The number of stack instances that were being synchronized.', example='1'),
      stackGroupDriftStatus?: string(name='StackGroupDriftStatus', description='The drift status of the stack group.

Valid values:

*   DRIFTED: At least one stack instance in the stack group is drifted.
*   NOT_CHECKED: No drift detection is completed in the stack group.
*   IN_SYNC: All the stack instances in the stack group are being synchronized.', example='DRIFTED'),
      totalStackInstancesCount?: int32(name='TotalStackInstancesCount', description='The number of stack instances.', example='2'),
    }(name='StackGroupDriftDetectionDetail', description='The details of the drift detection.

>  This parameter is returned only when the drift detection is performed on the stack group.'),
    stackGroupId?: string(name='StackGroupId', description='The ID of the stack group.', example='fd0ddef9-9540-4b42-a464-94f77835****'),
    stackGroupName?: string(name='StackGroupName', description='The name of the stack group.', example='MyStackGroup'),
    status?: string(name='Status', description='The status of the operation.

Valid values:

*   RUNNING: The operation is being performed.
*   SUCCEEDED: The operation succeeded.
*   FAILED: The operation failed.
*   STOPPING: The operation is being stopped.
*   STOPPED: The operation is stopped.', example='SUCCEEDED'),
  }(name='StackGroupOperation', description='The details of the operation on the stack group.'),
}

model GetStackGroupOperationResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackGroupOperationResponseBody(name='body'),
}

/**
  * In this example, the operation ID `6da106ca-1784-4a6f-a7e1-e723863d∗∗∗∗` is set to query the details of an operation that you perform on a stack group named `MyStackGroup`. The stack group is granted self-managed permissions and deployed in the China (Hangzhou) region.
  *
 */
async function getStackGroupOperation(request: GetStackGroupOperationRequest): GetStackGroupOperationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackGroupOperation', 'POST', '/', 'json', false, 'json', request);
}

model GetStackInstanceRequest {
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique in a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyStackGroup', position='Query'),
  stackInstanceAccountId: string(name='StackInstanceAccountId', description='The ID of the account to which the stack belongs.

*   If the stack group is granted self-managed permissions, the stack belongs to an Alibaba Cloud account.
*   If the stack group is granted service-managed permissions, the stack belongs to a member in a resource directory.

>  For more information about the account, see [Overview](~~154578~~).', example='151266687691****', position='Query'),
  stackInstanceRegionId: string(name='StackInstanceRegionId', description='The ID of the region to which the stack belongs.', example='cn-beijing', position='Query'),
}

model GetStackInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B8A6B693-82C8-419D-8796-DE99EC33CFF9'),
  stackInstance?: {
    accountId?: string(name='AccountId', description='The ID of the account to which the stack belongs.', example='151266687691****'),
    driftDetectionTime?: string(name='DriftDetectionTime', description='The time when the last drift detection was performed on the stack group.

>  This parameter is returned only if drift detection is performed on the stack group.', example='2020-02-27T07:47:47'),
    parameterOverrides?: [ 
      {
        parameterKey?: string(name='ParameterKey', description='The name of the parameter that is used to override a specific parameter.', example='Amount'),
        parameterValue?: string(name='ParameterValue', description='The value of the parameter that is used to override a specific parameter.', example='1'),
      }
    ](name='ParameterOverrides', description='The parameters that are used to override specific parameters.'),
    rdFolderId?: string(name='RdFolderId', description='The ID of the folder in the resource directory.

>  This parameter is returned only if the stack group is granted service-managed permissions.', example='fd-4PvlVLOL8v'),
    regionId?: string(name='RegionId', description='The ID of the region to which the stack belongs.', example='cn-beijing'),
    stackDriftStatus?: string(name='StackDriftStatus', description='The state of the stack when the last successful drift detection was performed on the stack group.

Valid values:

*   DRIFTED: The stack has drifted.
*   NOT_CHECKED: No successful drift detection is performed on the stack.
*   IN_SYNC: The stack is being synchronized.

>  This parameter is returned only if drift detection is performed on the stack group.', example='IN_SYNC'),
    stackGroupId?: string(name='StackGroupId', description='The ID of the stack group.', example='fd0ddef9-9540-4b42-a464-94f77835****'),
    stackGroupName?: string(name='StackGroupName', description='The name of the stack group.', example='MyStackGroup'),
    stackId?: string(name='StackId', description='The ID of the stack.

>  This parameter is returned only if the stack is in the CURRENT state.', example='35ad60e3-6a92-42d8-8812-f0700d45****'),
    status?: string(name='Status', description='The state of the stack.

Valid values:

*   CURRENT: The stack is up to date with the stack group.

*   OUTDATED: The stack is not up to date with the stack group. Stacks may be in the OUTDATED state due to the following reasons:

    *   When you call the CreateStackInstances operation to create stacks, the stacks fail to be created.
    *   When you call the UpdateStackInstances or UpdateStackGroup operation to update stacks, the stacks fail to be updated or only specific stacks are updated.
    *   The creation or update operation is not complete.', example='CURRENT'),
    statusReason?: string(name='StatusReason', description='The reason why the stack is in the OUTDATED state.

>  This parameter is returned only if the stack is in the OUTDATED state.', example='User initiated stop'),
  }(name='StackInstance', description='Details of the stack.'),
}

model GetStackInstanceResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackInstanceResponseBody(name='body'),
}

/**
  * In this example, the details of a stack that is deployed in the China (Beijing) region within the `151266687691****` Alibaba Cloud account are queried. The stack is deployed in a stack group named `MyStackGroup`. The stack group is granted self-managed permissions and deployed in the China (Hangzhou) region.
  *
 */
async function getStackInstance(request: GetStackInstanceRequest): GetStackInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackInstance', 'POST', '/', 'json', false, 'json', request);
}

model GetStackPolicyRequest {
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model GetStackPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stackPolicyBody?: map[string]any(name='StackPolicyBody', description='The structure that contains the stack policy body. The stack policy body must be 1 to 16,384 bytes in length.', example='{"Statement": [{"Action": "Update:*", "Effect": "Allow","Principal": "*","Resource": "*"}]}'),
}

model GetStackPolicyResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackPolicyResponseBody(name='body'),
}

/**
  * In this example, the stack policy of a stack whose ID is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****` is queried. The stack is deployed in the China (Hangzhou) region.
  *
 */
async function getStackPolicy(request: GetStackPolicyRequest): GetStackPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackPolicy', 'POST', '/V2/GetStackPolicy', 'json', false, 'json', request);
}

model GetStackResourceRequest {
  clientToken?: string(name='ClientToken', description='Specifies whether to query the resource properties. Valid values:

*   true
*   false', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  logicalResourceId: string(name='LogicalResourceId', description='The name of resource property N that you want to query.

>  Maximum value of N: 20.', example='WebServer', position='Query'),
  regionId: string(name='RegionId', description='The logical ID of the resource defined in the template.', example='cn-hangzhou', position='Query'),
  resourceAttributes?: [ string ](name='ResourceAttributes', description='The status of the resource. Valid values:

*   CREATE_COMPLETE
*   CREATE_FAILED
*   CREATE_IN_PROGRESS
*   UPDATE_IN_PROGRESS
*   UPDATE_FAILED
*   UPDATE_COMPLETE
*   DELETE_IN_PROGRESS
*   DELETE_FAILED
*   CHECK_IN_PROGRESS
*   CHECK_FAILED
*   CHECK_COMPLETE
*   IMPORT_IN_PROGRESS
*   IMPORT_FAILED
*   IMPORT_COMPLETE', position='Query'),
  showResourceAttributes?: boolean(name='ShowResourceAttributes', description='The name of resource property N that you want to query.', example='true', position='Query'),
  stackId: string(name='StackId', description='The ID of the region to which the stack belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model GetStackResourceResponseBody = {
  createTime?: string(name='CreateTime', description='The resource type.', example='2019-08-01T06:01:23'),
  description?: string(name='Description', description='The reason why the resource is in its current state.', example='no description'),
  driftDetectionTime?: string(name='DriftDetectionTime', description='The ID of the stack.', example='2020-02-27T07:47:47'),
  logicalResourceId?: string(name='LogicalResourceId', description='The time when the resource was updated.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='WebServer'),
  metadata?: map[string]any(name='Metadata', description='The list of the resource properties.', example='{"key": "value"}'),
  moduleInfo?: {
    logicalIdHierarchy?: string(name='LogicalIdHierarchy', example='moduleA/moduleB'),
    typeHierarchy?: string(name='TypeHierarchy', example='MODULE::ROS::Parent::Example/MODULE::ROS::Child::Example'),
  }(name='ModuleInfo'),
  physicalResourceId?: string(name='PhysicalResourceId', description='The metadata.', example='d04af923-e6b7-4272-aeaa-47ec9777****'),
  requestId?: string(name='RequestId', description='The physical ID of the resource.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  resourceAttributes?: [  map[string]any ](name='ResourceAttributes', description='The status of the resource in the last successful drift detection. Valid values:

*   DELETED: The actual configuration of the resource differs from its expected template configuration because the resource is deleted.
*   MODIFIED: The actual configuration of the resource differs from its expected template configuration.
*   NOT_CHECKED: ROS has not checked whether the actual configuration of the resource differs from its expected template configuration.
*   IN_SYNC: The actual configuration of the resource matches its expected template configuration.'),
  resourceDriftStatus?: string(name='ResourceDriftStatus', description='The time when the last successful drift detection was performed on the stack.', example='IN_SYNC'),
  resourceType?: string(name='ResourceType', description='The logical ID of the resource defined in the template.', example='ALIYUN::ROS::WaitConditionHandle'),
  stackId?: string(name='StackId', example='efdf5c10-96a5-4fd7-ab89-68e7baa2****'),
  stackName?: string(name='StackName', example='test-describe-resource'),
  status?: string(name='Status', description='The ID of the request.', example='CREATE_COMPLETE'),
  statusReason?: string(name='StatusReason', description='The time when the resource was created.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='state changed'),
  updateTime?: string(name='UpdateTime', description='The name of the stack.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='2019-08-01T06:01:29'),
}

model GetStackResourceResponse = {
  headers: map[string]string(name='headers'),
  body: GetStackResourceResponseBody(name='body'),
}

/**
  * | Http status code | Error code | Error message | Description |
  * | ---------------- | ---------- | ------------- | ----------- |
  * | 404 | ResourceNotFound | The Resource ({name}) could not be found in Stack {stack}. | The error message returned because the specified resource does not exist in the stack. name indicates the resource name. stack indicates the stack name or ID. |
  * | 404 | StackNotFound | The Stack ({name}) could not be found. | The error message returned because the stack does not exist. name indicates the name or ID of the stack. |
  *
 */
async function getStackResource(request: GetStackResourceRequest): GetStackResourceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetStackResource', 'POST', '/', 'json', false, 'json', request);
}

model GetTemplateRequest {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set.

>  You must specify only one of the following parameters: StackId, ChangeSetId, StackGroupName, and TemplateId.', example='1f6521a4-05af-4975-afe9-bc4b45ad****', position='Query'),
  includePermission?: string(name='IncludePermission', description='Specifies whether to query the template sharing information. Default value: Disabled. Valid values:

*   Enabled
*   Disabled

>  Only the template owner can query the template sharing information.', example='Enabled', position='Query'),
  includeTags?: string(name='IncludeTags', description='Specifies whether to query the information about tags. Default value: Disabled. Valid values:

*   Enabled
*   Disabled

>  This parameter only takes effect when you specify the TemplateId parameter.', example='Enabled', position='Query'),
  regionId?: string(name='RegionId', description='The ID of the region to which the stack or stack group defined in the template belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName?: string(name='StackGroupName', description='The name of the stack group.

>  You must specify only one of the following parameters: StackId, ChangeSetId, StackGroupName, and TemplateId.', example='MyStackGroup', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack.

>  You must specify only one of the following parameters: StackId, ChangeSetId, StackGroupName, and TemplateId.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template.

This parameter applies to shared and private templates. If the template is a shared template, the value of the TemplateId parameter is the same as the value of the TemplateARN parameter. You can use the template ID to query a shared template.

>  You must specify only one of the following parameters: StackId, ChangeSetId, StackGroupName, and TemplateId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateStage?: string(name='TemplateStage', description='The stage of the template. This parameter only takes effect when you specify the StackId, ChangeSetId, or StackGroupName parameter.

Default value: Processed. Valid values:

*   Processed: returns the processed template that contains transforms.
*   Original: returns the original template that you specify.', example='Processed', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter only takes effect when you specify the TemplateId parameter.

If the template is a shared template, you can specify this parameter only if you set the VersionOption parameter to AllVersions.

Valid values: v1 to v100.', example='v1', position='Query'),
}

model GetTemplateResponseBody = {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set. This parameter is returned only if the ChangeSetId parameter is specified.', example='e85abe0c-6528-43fb-ae93-fdf8de22****'),
  createTime?: string(name='CreateTime', description='The time when the template was created. This parameter is returned only if the TemplateId parameter is specified.

> 
*   If the TemplateVersion parameter is specified, the creation time of the template whose version is specified by using the TemplateVersion parameter is returned.
*   If the TemplateVersion parameter is not specified, the creation time of the template whose version is the default version is returned.', example='2020-11-18T08:49:26'),
  description?: string(name='Description', description='The description of the template. This parameter is returned only if the TemplateId parameter is specified.', example='ROS template for create ECS instance.'),
  interface?: string(name='Interface', description='The description of the web UI in the ROS console.', example='{}'),
  ownerId?: string(name='OwnerId', description='The ID of the Alibaba Cloud account to which the template belongs. This parameter is returned only if the TemplateId parameter is specified.', example='151266687691****'),
  permissions?: [ 
    {
      accountId?: string(name='AccountId', description='The ID of the Alibaba Cloud account with which the template is shared.', example='142437958638****'),
      shareOption?: string(name='ShareOption', description='The sharing option.

The value is set to ShareToAccounts, which indicates that the template is shared with one or more Alibaba Cloud accounts.', example='ShareToAccounts'),
      shareSource?: string(name='ShareSource', description='The service that is used for resource sharing.

Valid values:

*   ROS: Resources are shared from ROS by using the ROS console or calling the ROS API.
*   ResourceDirectory: Resources are shared with accounts in a resource directory from Resource Management by using the resource sharing feature.

> 
*   The number of accounts with which resources are shared from ROS is independent of the number of accounts with which resources are shared from the resource directory.
*   The shared resources from ROS cannot override or overwrite the shared resources from the resource directory.
*   The shared resources from the resource directory can overwrite the shared resources from ROS.', example='ROS'),
      templateVersion?: string(name='TemplateVersion', description='The version of the shared template. This parameter is returned only if the ShareOption parameter is set to ShareToAccounts and the VersionOption parameter is set to Specified or Current.

Valid values: v1 to v100.', example='v1'),
      versionOption?: string(name='VersionOption', description='The version option for the shared template. This parameter is returned only if the ShareOption parameter is set to ShareToAccounts.

Valid values:

*   AllVersions: All template versions are shared.
*   Latest: Only the latest template version is shared. When the version of the template is updated, ROS updates the shared version to the latest version.
*   Current: Only the default template version when you configure template sharing is shared. When the version of the template is updated, ROS does not update the shared version.
*   Specified: Only the specified template version is shared.', example='AllVersions'),
    }
  ](name='Permissions', description='Details of the sharing status of the template. This parameter is returned only if the TemplateId parameter is specified and the IncludePermission parameter is set to Enabled.

> 
*   If the TemplateVersion parameter is not specified or does not take effect, the details of the sharing status of the template whose version is the default version is returned.
*   If the TemplateVersion parameter is specified and takes effect, the details of the sharing status of the template whose version is specified by using the TemplateVersion parameter is returned.'),
  regionId?: string(name='RegionId', description='The ID of the region to which the stack or stack group defined in the template belongs. This parameter is returned only if the StackId, ChangeSetId, or StackGroupName parameter is specified.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84****'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-acfmxazb4ph6aiy****'),
  shareType?: string(name='ShareType', description='The sharing type of the template. This parameter is returned only if the TemplateId parameter is specified.

Valid values:

*   Private: The template can be used only by the template owner.
*   Shared: The template is shared with other users.', example='Private'),
  stackGroupName?: string(name='StackGroupName', description='The name of the stack group. This parameter is returned only if the StackGroupName parameter is specified.', example='MyStackGroup'),
  stackId?: string(name='StackId', description='The ID of the stack. This parameter is returned only if the StackId parameter is specified.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
  tags?: [ 
    {
      key?: string(name='Key', description='The key of the tag.', example='usage'),
      value?: string(name='Value', description='The value of the tag.', example='test'),
    }
  ](name='Tags', description='The tags of the template.'),
  templateARN?: string(name='TemplateARN', description='The Alibaba Cloud Resource Name (ARN) of the template. This parameter is returned only if the TemplateId parameter is specified.', example='acs:ros:*:151266687691****:template/a52f81be-496f-4e1c-a286-8852ab54****'),
  templateBody?: string(name='TemplateBody', description='The body of the template.', example='{"ROSTemplateFormatVersion": "2015-09-01"}'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter is returned only if the TemplateId parameter is specified.

If the template is a shared template, the value of this parameter is the same as the value of the TemplateARN parameter.', example='a52f81be-496f-4e1c-a286-8852ab54****'),
  templateName?: string(name='TemplateName', description='The name of the template. This parameter is returned only if the TemplateId parameter is specified.

> 
*   If the TemplateVersion parameter is specified, the name of the template whose version is specified by using the TemplateVersion parameter is returned.
*   If the TemplateVersion parameter is not specified, the name of the template whose version is the default version is returned.', example='MyTemplate'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter is returned only if the TemplateId parameter is specified.

If the TemplateVersion parameter is not specified or does not take effect, the value of this parameter is the default version of the template.

If the template is a shared template, this parameter is returned only if the VersionOption parameter is set to AllVersions.', example='v1'),
  updateTime?: string(name='UpdateTime', description='The time when the template was last updated. This parameter is returned only if the TemplateId parameter is specified.

> 
*   If the TemplateVersion parameter is specified, the last update time of the template whose version is specified by using the TemplateVersion parameter is returned.
*   If the TemplateVersion parameter is not specified, the last update time of the template whose version is the default version is returned.', example='2020-12-07T06:11:48'),
}

model GetTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateResponseBody(name='body'),
}

/**
  * In this example, the details of a template whose ID is `5ecd1e10-b0e9-4389-a565-e4c15efc****` and region ID is `cn-hangzhou` are queried.
  *
 */
async function getTemplate(request: GetTemplateRequest): GetTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplate', 'POST', '/', 'json', false, 'json', request);
}

model GetTemplateEstimateCostRequest {
  clientToken?: string(name='ClientToken', description='The name of parameter N. If you do not specify the name and value of a parameter, ROS uses the default name and value that are specified in the template.

Maximum value of N: 200.

Examples:

*   Parameters.1.ParameterKey: `Name`
*   Parameters.2.ParameterKey: `Netmode`

>  The Parameters parameter is optional. If you want to specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The ID of the request.', example='Name'),
      parameterValue: string(name='ParameterValue', description='Details of the resource.', example='DemoEip'),
    }
  ](name='Parameters', description='The region ID of the scenario. The default value is the same as the value of the RegionId parameter.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', position='Query'),
  regionId: string(name='RegionId', description='The ID of the template. This parameter applies to shared and private templates.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='cn-hangzhou', position='Query'),
  stackId?: string(name='StackId', example='c754d2a4-28f1-46df-b557-9586173a****', position='Query'),
  templateBody?: string(name='TemplateBody', position='Body'),
  templateId?: string(name='TemplateId', description='The value of parameter N.

Maximum value of N: 200.

Examples:

*   Parameters.1.ParameterValue: `DemoEip`
*   Parameters.2.ParameterValue: `public`

>  The Parameters parameter is optional. If you want to specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', example='ts-aa9c62feab844a6b****', position='Query'),
  templateScratchRegionId?: string(name='TemplateScratchRegionId', example='cn-hangzhou', position='Query'),
  templateURL?: string(name='TemplateURL', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The ID of the scenario.

For more information about how to query the IDs of scenarios, see [ListTemplateScratches](~~363050~~).

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='v1', position='Query'),
}

model GetTemplateEstimateCostResponseBody = {
  requestId?: string(name='RequestId', example='6DEA36EF-C97D-5658-A4AC-4F5DB08D1A89'),
  resources?: map[string]any(name='Resources'),
}

model GetTemplateEstimateCostResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateEstimateCostResponseBody(name='body'),
}

/**
  * The operation that you want to perform. Set the value to GetTemplateEstimateCost.
  *
 */
async function getTemplateEstimateCost(request: GetTemplateEstimateCostRequest): GetTemplateEstimateCostResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplateEstimateCost', 'POST', '/', 'json', true, 'form', request);
}

model GetTemplateParameterConstraintsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the value, but you must make sure that the value is unique among different requests. The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N in the template.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterKey parameter.', example='ZoneInfo'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N in the template.

>  The Parameters parameter is optional. If you specify the Parameters parameter, you must specify the Parameters.N.ParameterValue parameter.', example='cn-hangzhou-h'),
    }
  ](name='Parameters', description='The name of parameter N in the template.', position='Query'),
  parametersKeyFilter?: [ string ](name='ParametersKeyFilter', description='The parameters whose values you want to query.', shrink='json', position='Query'),
  parametersOrder?: [ string ](name='ParametersOrder', description='The order in which associated parameters are arranged.

>  By default, the order of the associated parameters specified in the `Metadata` section of the template is used.', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the template.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='c754d2a4-28f1-46df-b557-9586173a****', position='Query'),
  templateBody?: string(name='TemplateBody', position='Body'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. If you do not specify this parameter, the latest version is used.

>  This parameter takes effect only if the TemplateId parameter is specified.', example='v1', position='Query'),
}

model GetTemplateParameterConstraintsResponseBody = {
  parameterConstraints?: [ 
    {
      allowedValues?: [ string ](name='AllowedValues', description='The values of the parameter.'),
      associationParameterNames?: [ string ](name='AssociationParameterNames', description='The names of the associated parameters.'),
      behavior?: string(name='Behavior', description='The behavior of the parameter. Valid values:

*   NoLimit: No limit is imposed on the value of this parameter.
*   NotSupport: The value of this parameter cannot be queried.
*   QueryError: This parameter failed to be queried.

>  If the AllowedValues parameter is not returned, the Behavior and BehaviorReason parameters are returned.', example='NoLimit'),
      behaviorReason?: string(name='BehaviorReason', description='The reason why the behavior of the parameter is returned.', example='No resource property refer to the parameter'),
      illegalValueByParameterConstraints?: [ any ](name='IllegalValueByParameterConstraints', description='The values that do not conform to the parameter constraints.

>  If the `AllowedValues` parameter is returned, the `IllegalValueByParameterConstraints` and `IllegalValueByRules` parameters are returned at the same time.'),
      illegalValueByRules?: [ any ](name='IllegalValueByRules', description='The values that do not match the rules in the template.

>  If the `AllowedValues` parameter is returned, the `IllegalValueByParameterConstraints` and `IllegalValueByRules` parameters are returned at the same time.'),
      notSupportResources?: [ 
        {
          propertyName?: string(name='PropertyName', description='The name of the resource property.', example='InstanceName'),
          resourceType?: string(name='ResourceType', description='The resource type.

You can call the [ListResourceTypes](~~133957~~) operation to query the resource type.', example='ALIYUN::ECS::InstanceGroup'),
        }
      ](name='NotSupportResources', description='The unsupported resources in the template.'),
      originalConstraints?: [ 
        {
          allowedValues?: [ any ](name='AllowedValues'),
          propertyName?: string(name='PropertyName'),
          resourceName?: string(name='ResourceName'),
          resourceType?: string(name='ResourceType'),
        }
      ](name='OriginalConstraints'),
      parameterKey?: string(name='ParameterKey', description='The name of the parameter.', example='ZoneInfo'),
      queryErrors?: [ 
        {
          errorMessage?: string(name='ErrorMessage', description='The error message.', example='ALIYUN::ECS::InstanceGroup'),
          resourceName?: string(name='ResourceName', description='The name of the resource.', example='MyECS'),
          resourceType?: string(name='ResourceType', description='The resource type.', example='InstanceType is needed while query DataDisk'),
        }
      ](name='QueryErrors', description='The error details that are returned if the request fails.'),
      type?: string(name='Type', description='The type of the parameter.', example='String'),
    }
  ](name='ParameterConstraints', description='The constraints of the parameters.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='9816785B-BCF8-514D-8B76-C1EC2BC954FC'),
}

model GetTemplateParameterConstraintsResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateParameterConstraintsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to query the values of a parameter. In this example, the values of the `ZoneInfo` parameter in a template that is created in the China (Hangzhou) region are queried. The template body is `{"Parameters":{"ZoneInfo":{"Type": "String"},"InstanceType": {"Type": "String"}},"ROSTemplateFormatVersion": "2015-09-01","Resources":{"ECS":{"Properties":{"ZoneId":{"Ref": "ZoneInfo"},"InstanceType": {"Ref": "InstanceType"}},"Type": "ALIYUN::ECS::Instance"}}}`.
  * For more information about the template parameters whose values you can query by calling this operation and the sample code of the template, see [Query the constraints of parameters](~~432820~~).
  *
 */
async function getTemplateParameterConstraints(request: GetTemplateParameterConstraintsRequest): GetTemplateParameterConstraintsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplateParameterConstraints', 'POST', '/', 'json', true, 'form', request);
}

model GetTemplateRecommendParametersRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  parameters?: [ 
    {
      parameterCandidateValues?: [ string ](name='ParameterCandidateValues'),
      parameterKey?: string(name='ParameterKey'),
      parameterValue?: string(name='ParameterValue'),
    }
  ](name='Parameters', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  templateBody?: string(name='TemplateBody', position='Query'),
  templateId?: string(name='TemplateId', position='Query'),
  templateURL?: string(name='TemplateURL', position='Query'),
  templateVersion?: string(name='TemplateVersion', position='Query'),
}

model GetTemplateRecommendParametersResponseBody = {
  recommendParameterValues?: [ 
    {
      parameterKey?: string(name='ParameterKey'),
      recommendValue?: string(name='RecommendValue'),
    }
  ](name='RecommendParameterValues'),
  requestId?: string(name='RequestId'),
}

model GetTemplateRecommendParametersResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateRecommendParametersResponseBody(name='body'),
}

async function getTemplateRecommendParameters(request: GetTemplateRecommendParametersRequest): GetTemplateRecommendParametersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplateRecommendParameters', 'POST', '/', 'json', false, 'json', request);
}

model GetTemplateScratchRequest {
  regionId: string(name='RegionId', description='The ID of the region where the scenario is created.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  showDataOption?: string(name='ShowDataOption', description='The data display option. Valid values:

*   Source: displays only the data of source nodes.
*   Provisions: displays only the data of new nodes.
*   All: displays all data.

For more information about source nodes and new nodes, see [Overview](~~352074~~).

>  If you do not set this parameter, the node data is not displayed.', example='Source', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****', position='Query'),
}

model GetTemplateScratchResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='A8E0EF98-6FBD-5656-8298-FC8194F0F7B7'),
  templateScratch?: {
    createTime?: string(name='CreateTime', description='The time at which the scenario was created.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2021-12-22T01:49:22'),
    description?: string(name='Description', description='The description of the scenario.', example='The description of the scenario.'),
    failedCode?: string(name='FailedCode', description='The status code of the scenario that fails to be created.

>  This parameter is returned only if you set the Status parameter to GENERATE_FAILED.', example='InvalidZoneId'),
    logicalIdStrategy?: string(name='LogicalIdStrategy', description='The policy based on which the logical ID is generated. Default value: LongTypePrefixAndIndexSuffix. Valid values:

*   LongTypePrefixAndIndexSuffix: long-type prefix + index-type suffix
*   LongTypePrefixAndHashSuffix: long-type prefix + hash-type suffix
*   ShortTypePrefixAndHashSuffix: short-type prefix + hash-type suffix', example='LongTypePrefixAndIndexSuffix'),
    preferenceParameters?: [ 
      {
        parameterKey?: string(name='ParameterKey', description='The parameter name.', example='DeletionPolicy'),
        parameterValue?: string(name='ParameterValue', description='The parameter value.', example='Retain'),
      }
    ](name='PreferenceParameters', description='The parameters that are configured for the scenario.'),
    sourceResourceGroup?: {
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the source resource group.', example='rg-acfmzawhxxc****'),
      resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types.'),
    }(name='SourceResourceGroup', description='The source resource group.'),
    sourceResources?: [ 
      {
        resourceId?: string(name='ResourceId', description='The ID of the resource.', example='vpc-m5e7cv7e9mz69sszb****'),
        resourceType?: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ECS::VPC'),
      }
    ](name='SourceResources', description='The source resource.'),
    sourceTag?: {
      resourceTags?: map[string]any(name='ResourceTags', description='The resource tags.', example='{"a": "b"}'),
      resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types.'),
    }(name='SourceTag', description='The source tag.'),
    stackProvision?: {
      creatable?: boolean(name='Creatable', description='Indicates whether the resource is replicated by calling the [CreateStack](~~132086~~) operation. Valid values:

*   true
*   false', example='true'),
      importable?: boolean(name='Importable', description='Indicates whether the resource is managed by calling the [CreateChangeSet](~~131051~~) operation. Valid values:

*   true
*   false', example='false'),
    }(name='StackProvision', description='The preset information about the stack.'),
    stacks?: [ 
      {
        regionId?: string(name='RegionId', description='The ID of the region to which the stack belongs.', example='cn-hangzhou'),
        stackId?: string(name='StackId', description='The ID of the stack.', example='3708bf6a-3a67-44d4-9eb1-c56704b9****'),
        usageType?: string(name='UsageType', description='The purpose of the stack. Valid values:

*   ResourceImport: resource management
*   ArchitectureReplication: resource replication', example='ArchitectureReplication'),
      }
    ](name='Stacks', description='The list of stacks that are associated with the scenario.'),
    status?: string(name='Status', description='The status of the scenario. Valid values:

*   GENERATE_IN_PROGRESS: The scenario is being created.
*   GENERATE_COMPLETE: The scenario is created.
*   GENERATE_FAILED: The scenario fails to be created.', example='GENERATE_COMPLETE'),
    statusReason?: string(name='StatusReason', description='The reason why the scenario fails to be created.

>  This parameter is returned only if you set the Status parameter to GENERATE_FAILED.', example='Resource ALIYUN::ECS::VPC vpc-m5eauuq80anx59v28**** could not be found for template scratch.'),
    templateScratchData?: map[string]any(name='TemplateScratchData', description='The scenario data.'),
    templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****'),
    templateScratchType?: string(name='TemplateScratchType', description='The type of the scenario. Valid values:

*   ResourceImport: resource management
*   ArchitectureReplication: resource replication', example='ArchitectureReplication'),
    updateTime?: string(name='UpdateTime', description='The time at which the scenario was updated.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2021-12-22T01:49:23'),
  }(name='TemplateScratch', description='The scenario.'),
}

model GetTemplateScratchResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateScratchResponseBody(name='body'),
}

/**
  * In this topic, the details about the `ts-7f7a704cf71c49a6****` scenario in the China (Hangzhou) region are queried. The source node data is displayed.
  *
 */
async function getTemplateScratch(request: GetTemplateScratchRequest): GetTemplateScratchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplateScratch', 'POST', '/', 'json', false, 'json', request);
}

model GetTemplateSummaryRequest {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.', example='1f6521a4-05af-4975-afe9-bc4b45ad****', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  parameters?: [ 
    {
      parameterKey?: string(name='ParameterKey', description='The name of parameter N that is defined in the template. If you do not specify the name and value of a parameter, Resource Orchestration Service (ROS) uses the default name and value in the template.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you need to specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='InstanceId'),
      parameterValue?: string(name='ParameterValue', description='The value of parameter N that is defined in the template.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you need to specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='i-rotp2e20whfrs2****'),
    }
  ](name='Parameters', description='The parameters.', position='Query'),
  regionId?: string(name='RegionId', description='The ID of the region to which the stack or stack group in the template belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.

This parameter takes effect only when you specify the StackId, ChangeSetId, or StackGroupName parameter.', example='cn-hangzhou', position='Query'),
  stackGroupName?: string(name='StackGroupName', description='The name of the stack group.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.', example='my-stack-group', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length.

>  If you do not specify the region of the OSS bucket, the value of the RegionId parameter is used.

You can specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, StackId, ChangeSetId, and StackGroupName.

The URL can be up to 1,024 bytes in length.', example='oss://ros/template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter takes effect when you specify the TemplateId parameter.', example='v1', position='Query'),
}

model GetTemplateSummaryResponseBody = {
  description?: string(name='Description', description='The description of the stack template.', example='No description'),
  metadata?: map[string]any(name='Metadata', description='The metadata that is defined in the template.', example='{"key": "value"}'),
  parameters?: [  map[string]any ](name='Parameters', description='The declarations of the parameters in the template.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  resourceIdentifierSummaries?: [ 
    {
      logicalResourceIds?: [ string ](name='LogicalResourceIds', description='The logical IDs of all resources of the type that is specified by the ResouceType parameter in the template.'),
      resourceIdentifiers?: [ string ](name='ResourceIdentifiers', description='The resource properties. You can use a resource property to identify the resources that you want to manage. For example, VpcId is an identifier property for ALIYUN::ECS::VPC resources.'),
      resourceType?: string(name='ResourceType', description='The resource type.

>  You can import resources of the type that is specified by the ResouceType parameter.', example='ALIYUN::ECS::VPC'),
    }
  ](name='ResourceIdentifierSummaries', description='The resource identifier summaries that describe the resources that you want to import and the properties that are used to identify the resources during the import.

For example, VpcId is an identifier property for ALIYUN::ECS::VPC resources.'),
  resourceTypes?: [ string ](name='ResourceTypes', description='All resource types that are used in the template.'),
  version?: string(name='Version', description='The version of the template.', example='2015-09-01'),
}

model GetTemplateSummaryResponse = {
  headers: map[string]string(name='headers'),
  body: GetTemplateSummaryResponseBody(name='body'),
}

async function getTemplateSummary(request: GetTemplateSummaryRequest): GetTemplateSummaryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTemplateSummary', 'POST', '/', 'json', false, 'json', request);
}

model ListChangeSetsRequest {
  changeSetId?: string(name='ChangeSetId', description='The ID of the change set. If detailed information about the change set is not required, you can use this parameter to replace the GetChangeSet operation.', example='1f6521a4-05af-4975-afe9-bc4b45ad****', position='Query'),
  changeSetName?: [ string ](name='ChangeSetName', description='The name of change set.', example='MyChangeSet', position='Query'),
  executionStatus?: [ string ](name='ExecutionStatus', description='The execution status of change set.', example='AVAILABLE', position='Query'),
  pageNumber?: long(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the change set. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  status?: [ string ](name='Status', description='The status of change set.', example='CREATE_COMPLETE', position='Query'),
}

model ListChangeSetsResponseBody = {
  changeSets?: [ 
    {
      changeSetId?: string(name='ChangeSetId', description='The ID of the change set.', example='1f6521a4-05af-4975-afe9-bc4b45ad****'),
      changeSetName?: string(name='ChangeSetName', description='The name of the change set.', example='MyChangeSet'),
      changeSetType?: string(name='ChangeSetType', description='The type of the change set.', example='UPDATE'),
      createTime?: string(name='CreateTime', description='The time when the change set was created. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ssZ format. The time is displayed in UTC.', example='2019-08-01T05:16:31'),
      description?: string(name='Description', description='The description of the change set.', example='It is a demo.'),
      executionStatus?: string(name='ExecutionStatus', description='The execution status of the change set.', example='AVAILABLE'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
      stackId?: string(name='StackId', description='The ID of the stack with which the change set is associated.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
      stackName?: string(name='StackName', description='The name of the stack with which the change set is associated.', example='MyStack'),
      status?: string(name='Status', description='The status of the change set.', example='CREATE_COMPLETE'),
      statusReason?: string(name='StatusReason', description='The reason why the change set is in its current status.', example='too many changes'),
    }
  ](name='ChangeSets', description='The list of change sets.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  totalCount?: int32(name='TotalCount', description='The total number of queried entries.', example='1'),
}

model ListChangeSetsResponse = {
  headers: map[string]string(name='headers'),
  body: ListChangeSetsResponseBody(name='body'),
}

async function listChangeSets(request: ListChangeSetsRequest): ListChangeSetsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListChangeSets', 'POST', '/V2/ListChangeSets', 'json', false, 'json', request);
}

model ListResourceTypeRegistrationsRequest {
  entityType?: string(name='EntityType', example='Module', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', position='Query'),
  pageSize?: int32(name='PageSize', example='10', position='Query'),
  registrationId?: string(name='RegistrationId', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  resourceType?: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
  status?: string(name='Status', example='COMPLETE', position='Query'),
}

model ListResourceTypeRegistrationsResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  registrations?: [ 
    {
      createTime?: string(name='CreateTime', example='2023-03-02T07:28:35'),
      entityType?: string(name='EntityType', example='Module'),
      registrationId?: string(name='RegistrationId', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
      resourceType?: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase'),
      status?: string(name='Status', example='COMPLETE'),
      statusReason?: string(name='StatusReason', example='Module is created successfully'),
      versionId?: string(name='VersionId', example='v1'),
    }
  ](name='Registrations'),
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  totalCount?: int32(name='TotalCount', example='1'),
}

model ListResourceTypeRegistrationsResponse = {
  headers: map[string]string(name='headers'),
  body: ListResourceTypeRegistrationsResponseBody(name='body'),
}

async function listResourceTypeRegistrations(request: ListResourceTypeRegistrationsRequest): ListResourceTypeRegistrationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListResourceTypeRegistrations', 'POST', '/', 'json', false, 'json', request);
}

model ListResourceTypeVersionsRequest {
  resourceType: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
}

model ListResourceTypeVersionsResponseBody = {
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  resourceTypeVersions?: [ 
    {
      createTime?: string(name='CreateTime', example='2023-02-24T08:25:21'),
      description?: string(name='Description', example='It is a demo.'),
      entityType?: string(name='EntityType', example='Module'),
      isDefaultVersion?: boolean(name='IsDefaultVersion', example='true'),
      provider?: string(name='Provider', example='ROS'),
      resourceType?: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase'),
      updateTime?: string(name='UpdateTime', example='2023-02-24T08:25:21'),
      versionId?: string(name='VersionId', example='v1'),
    }
  ](name='ResourceTypeVersions'),
}

model ListResourceTypeVersionsResponse = {
  headers: map[string]string(name='headers'),
  body: ListResourceTypeVersionsResponseBody(name='body'),
}

async function listResourceTypeVersions(request: ListResourceTypeVersionsRequest): ListResourceTypeVersionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListResourceTypeVersions', 'POST', '/', 'json', false, 'json', request);
}

model ListResourceTypesRequest {
  entityType?: string(name='EntityType', description='The array of resource types.', example='Resource', position='Query'),
  provider?: string(name='Provider', example='ROS', position='Query'),
  resourceType?: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
}

model ListResourceTypesResponseBody = {
  requestId?: string(name='RequestId', example='EA00860C-ECAF-5253-A1F9-8198695A7157'),
  resourceTypeSummaries?: [ 
    {
      createTime?: string(name='CreateTime', example='2023-02-24T08:25:21'),
      defaultVersionId?: string(name='DefaultVersionId', example='v1'),
      description?: string(name='Description', example='It is a demo.'),
      entityType?: string(name='EntityType', example='Module'),
      latestVersionId?: string(name='LatestVersionId', example='v10'),
      provider?: string(name='Provider', example='ROS'),
      resourceType?: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase'),
      totalVersionCount?: int32(name='TotalVersionCount', example='10'),
      updateTime?: string(name='UpdateTime', example='2023-02-24T08:25:21'),
    }
  ](name='ResourceTypeSummaries'),
  resourceTypes?: [ string ](name='ResourceTypes', description='The array of resource types.'),
}

model ListResourceTypesResponse = {
  headers: map[string]string(name='headers'),
  body: ListResourceTypesResponseBody(name='body'),
}

/**
  * For more information about errors common to all operations, see [Common error codes](/help/en/resource-orchestration-service/latest/common-error-codes).
  *
 */
async function listResourceTypes(request: ListResourceTypesRequest): ListResourceTypesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListResourceTypes', 'POST', '/', 'json', false, 'json', request);
}

model ListStackEventsRequest {
  logicalResourceId?: [ string ](name='LogicalResourceId', description='The logical ID of the resource that is defined in the template.', example='WebServer', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return per page.

Maximum value: 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the stack resides. You can call the [DescribeRegions](~~131035~~) operation to query the most recent list of Alibaba Cloud regions.', example='cn-hangzhou', position='Query'),
  resourceType?: [ string ](name='ResourceType', description='The list of resource types.', example='ALIYUN::ECS::Instance', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  status?: [ string ](name='Status', description='The state of the resource.', example='CREATE_IN_PROGRESS', position='Query'),
}

model ListStackEventsResponseBody = {
  events?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the resource was created. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2019-08-01T04:07:39'),
      eventId?: string(name='EventId', description='The ID of the event.', example='0086612d-77cf-4056-b0b5-ff8e94ad****'),
      logicalResourceId?: string(name='LogicalResourceId', description='The logical ID of the resource that is defined in the template.', example='WebServer'),
      physicalResourceId?: string(name='PhysicalResourceId', description='The physical ID of the resource.', example='i-m5e3tfdbinchnexh****'),
      resourceType?: string(name='ResourceType', description='The resource type.', example='ALIYUN::ECS::Instance'),
      stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
      stackName?: string(name='StackName', description='The name of the stack.', example='StackName'),
      status?: string(name='Status', description='The state of the resource.', example='CREATE_COMPLETE'),
      statusReason?: string(name='StatusReason', description='The reason why the resource is in its current state.', example='state changed'),
    }
  ](name='Events', description='The list of events.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.

Pages start from page 1.

Default value: 1.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.

Maximum value: 50.

Default value: 10.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  totalCount?: int32(name='TotalCount', description='The total number of returned events.', example='20'),
}

model ListStackEventsResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackEventsResponseBody(name='body'),
}

async function listStackEvents(request: ListStackEventsRequest): ListStackEventsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackEvents', 'POST', '/V2/ListStackEvents', 'json', false, 'json', request);
}

model ListStackGroupOperationResultsRequest {
  operationId: string(name='OperationId', description='The ID of the operation.

You can call the [ListStackGroupOperations](~~151342~~) operation to query the operation ID.', example='6da106ca-1784-4a6f-a7e1-e723863d****', position='Query'),
  pageNumber?: long(name='PageNumber', description='The number of the page to return.

*   Pages start from page 1.
*   Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.

*   Valid values: 1 to 50.
*   Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack group.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model ListStackGroupOperationResultsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroupOperationResults?: [ 
    {
      accountId?: string(name='AccountId', description='The ID of the account to which the stack instance belongs.

*   If the stack group has self-managed permissions, the stack instance belongs to an Alibaba Cloud account.
*   If the stack group has service-managed permissions, the stack instance belongs to a member account in the resource directory.

>  For more information about the account, see [Overview](~~154578~~).', example='175458090349****'),
      rdFolderId?: string(name='RdFolderId', description='The folder ID of the resource directory.

>  This parameter is returned only when the stack group is granted service-managed permissions.', example='"fd-4PvlVLOL8v"'),
      regionId?: string(name='RegionId', description='The region ID of the stack instance.', example='cn-beijing'),
      status?: string(name='Status', description='The status of the operation.

Valid values:

*   RUNNING: The operation is being performed.
*   SUCCEEDED: The operation succeeded.
*   FAILED: The operation failed.
*   STOPPING: The operation is being stopped.
*   STOPPED: The operation is stopped.', example='SUCCEEDED'),
      statusReason?: string(name='StatusReason', description='The reason why the operation is in a specific state.

>  This parameter is returned only when stack instances are in the OUTDATED state.', example='User initiated operation'),
    }
  ](name='StackGroupOperationResults', description='The details of the results of the operation.'),
  totalCount?: int32(name='TotalCount', description='The total number of results.', example='1'),
}

model ListStackGroupOperationResultsResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackGroupOperationResultsResponseBody(name='body'),
}

/**
  * In this example, the operation ID `6da106ca-1784-4a6f-a7e1-e723863d∗∗∗∗` is set to query the results of an operation on a stack group named `MyStackGroup`. The stack group is granted self-managed permissions and created in the China (Hangzhou) region.
  *
 */
async function listStackGroupOperationResults(request: ListStackGroupOperationResultsRequest): ListStackGroupOperationResultsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackGroupOperationResults', 'POST', '/', 'json', false, 'json', request);
}

model ListStackGroupOperationsRequest {
  pageNumber?: long(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique within a region.

The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (\\_). It must start with a digit or letter.', example='MyStackGroup', position='Query'),
}

model ListStackGroupOperationsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroupOperations?: [ 
    {
      action?: string(name='Action', description='The operation that was performed.

Valid values:

*   CREATE
*   UPDATE
*   DELETE
*   DETECT_DRIFT', example='CREATE'),
      createTime?: string(name='CreateTime', description='The time when the operation was initiated.', example='2020-01-20T09:22:36.000000'),
      endTime?: string(name='EndTime', description='The time when the operation ended.', example='2020-01-20T09:22:41.000000'),
      operationDescription?: string(name='OperationDescription', description='The description of the operation.', example='Create stack instance in hangzhou'),
      operationId?: string(name='OperationId', description='The ID of the operation.', example='14A07460-EBE7-47CA-9757-12CC4761****'),
      stackGroupId?: string(name='StackGroupId', description='The ID of the stack group.', example='fd0ddef9-9540-4b42-a464-94f77835****'),
      stackGroupName?: string(name='StackGroupName', description='The name of the stack group.', example='MyStackGroup'),
      status?: string(name='Status', description='The status of the operation.

Valid values:

*   RUNNING
*   SUCCEEDED
*   FAILED
*   STOPPING
*   STOPPED', example='SUCCEEDED'),
    }
  ](name='StackGroupOperations', description='The list of stack group operations.'),
  totalCount?: int32(name='TotalCount', description='The total number of stack group operations.', example='1'),
}

model ListStackGroupOperationsResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackGroupOperationsResponseBody(name='body'),
}

async function listStackGroupOperations(request: ListStackGroupOperationsRequest): ListStackGroupOperationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackGroupOperations', 'POST', '/V2/ListStackGroupOperations', 'json', false, 'json', request);
}

model ListStackGroupsRequest {
  pageNumber?: long(name='PageNumber', description='The ID of the resource group. If you do not specify this parameter, the stack groups in all the resource groups are queried.

>  If you want to obtain the resource group ID, go to the **Resource Group** page in the **Resource Management** console. For more information, see [View basic information about a resource group](~~151181~~).', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of the page to return.

*   Pages start from page 1.
*   Default value: 1.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The state of the stack group. If you do not specify this parameter, the stack groups in all states in the specified region are queried.

Valid values:

*   ACTIVE
*   DELETED', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The tags.', example='rg-acfmzawhxxcj****', position='Query'),
  status?: string(name='Status', description='The number of entries to return on each page.

*   Valid values: 1 to 50.
*   Default value: 10.', example='ACTIVE', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The value of tag N that is added to the stack group.', example='usage'),
      value?: string(name='Value', description='The list of stack groups.', example='test'),
    }
  ](name='Tags', description='The key of tag N that is added to the stack group.

>  The Tags parameter is optional. If you specify the Tags parameter, you must specify the Tags.N.Key parameter.', position='Query'),
}

model ListStackGroupsResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', description='The page number of the returned page.', example='10'),
  requestId?: string(name='RequestId', description='The number of entries returned per page.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
  stackGroups?: [ 
    {
      autoDeployment?: {
        enabled?: boolean(name='Enabled', description='Indicates whether the stacks within a member are retained when you delete the member from the folder.

Valid values:

*   true
*   false

>  This parameter is returned only if the Enabled parameter is set to true.', example='true'),
        retainStacksOnAccountRemoval?: boolean(name='RetainStacksOnAccountRemoval', description='The total number of stack groups.', example='true'),
      }(name='AutoDeployment', description='Indicates whether automatic deployment is enabled.

Valid values:

*   true: Automatic deployment is enabled. If you add a member to the folder to which the stack group belongs after you enable automatic deployment, ROS automatically adds the stacks in the stack group to the specified region of the member. If you delete the member from the folder, ROS automatically deletes the stacks in the stack group from the specified region of the member.
*   false: Automatic deployment is disabled. After you disable automatic deployment, the stacks remain unchanged when you change the member in the folder.'),
      description?: string(name='Description', description='The state of the stack group on which the last successful drift detection was performed.

Valid values:

*   DRIFTED: The stack group has drifted.
*   NOT_CHECKED: No drift detection is performed on the stack group.
*   IN_SYNC: No drifts are detected on the stack group.', example='My Stack Group'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The description of the stack group.', example='2020-02-27T07:47:47'),
      permissionModel?: string(name='PermissionModel', description='The information about automatic deployment settings.', example='SELF_MANAGED'),
      resourceGroupId?: string(name='ResourceGroupId', description='The permission model.

Valid values:

*   SELF_MANAGED: self-managed permission model
*   SERVICE_MANAGED: service-managed permission model

>  For more information about the permission models of stack groups, see [Overview](~~154578~~).', example='rg-acfmzawhxxcj****'),
      stackGroupDriftStatus?: string(name='StackGroupDriftStatus', description='The name of the stack group.', example='IN_SYNC'),
      stackGroupId?: string(name='StackGroupId', description='The state of the stack group.

Valid values:

*   ACTIVE
*   DELETED', example='fd0ddef9-9540-4b42-a464-94f77835****'),
      stackGroupName?: string(name='StackGroupName', description='The tags that are added to the stack group.', example='MyStackGroup'),
      status?: string(name='Status', description='The time when the last successful drift detection was performed on the stack group.', example='ACTIVE'),
      tags?: [ 
        {
          key?: string(name='Key', description='The value of the tag that is added to the stack group.', example='usage1'),
          value?: string(name='Value', description='The ID of the resource group.', example='test1'),
        }
      ](name='Tags', description='The key of the tag that is added to the stack group.'),
    }
  ](name='StackGroups', description='The ID of the stack group.'),
  totalCount?: int32(name='TotalCount', description='The ID of the request.', example='1'),
}

model ListStackGroupsResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackGroupsResponseBody(name='body'),
}

/**
  * For more information about common request parameters, see [Common parameters](~~131957~~).
  *
 */
async function listStackGroups(request: ListStackGroupsRequest): ListStackGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackGroups', 'POST', '/', 'json', false, 'json', request);
}

model ListStackInstancesRequest {
  pageNumber?: long(name='PageNumber', description='The number of the page to return.

*   Pages start from page 1.
*   Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.

*   Valid values: 1 to 50.
*   Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique within a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyStackGroup', position='Query'),
  stackInstanceAccountId?: string(name='StackInstanceAccountId', description='The ID of the account to which the stack belongs.

*   If the stack group is granted self-managed permissions, the stack belongs to an Alibaba Cloud account.

*   If the stack group is granted service-managed permissions, the stack belongs to a member in a resource directory.

> For more information about the account, see [Overview](~~154578~~).', example='156552876021****', position='Query'),
  stackInstanceRegionId?: string(name='StackInstanceRegionId', description='The ID of the region to which the stack belongs.', example='cn-beijing', position='Query'),
}

model ListStackInstancesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='85DE34BD-7FF9-480F-8C21-556E9DA93ACD'),
  stackInstances?: [ 
    {
      accountId?: string(name='AccountId', description='The ID of the account to which the stack belongs.', example='156552876021****'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The time when the last successful drift detection was performed on the stack.

>  This parameter is returned only if drift detection is performed on the stack group.', example='2020-02-27T07:47:47'),
      rdFolderId?: string(name='RdFolderId', description='The ID of the folder in the resource directory.

>  This parameter is returned only if the stack group is granted service-managed permissions.', example='fd-4PvlVLOL8v'),
      regionId?: string(name='RegionId', description='The ID of the region to which the stack belongs.', example='cn-beijing'),
      stackDriftStatus?: string(name='StackDriftStatus', description='The state of the stack when the last successful drift detection was performed on the stack group.

Valid values:

*   DRIFTED: The stack has drifted.
*   NOT_CHECKED: No successful drift detection is performed on the stack.
*   IN_SYNC: The stack is being synchronized.

>  This parameter is returned only if drift detection is performed on the stack group.', example='IN_SYNC'),
      stackGroupId?: string(name='StackGroupId', description='The ID of the stack group.', example='fd0ddef9-9540-4b42-a464-94f77835****'),
      stackGroupName?: string(name='StackGroupName', description='The name of the stack group.', example='MyStackGroup'),
      stackId?: string(name='StackId', description='The ID of the stack.

>  This parameter is returned only if the stack is in the CURRENT state.', example='35ad60e3-6a92-42d8-8812-f0700d45****'),
      status?: string(name='Status', description='The state of the stack.

Valid values:

*   CURRENT: The stack is up to date with the stack group.

*   OUTDATED: The stack is not up to date with the stack group. Stacks are in the OUTDATED state due to the following possible reasons:

    *   When the CreateStackInstances operation is called to create stacks, the stacks fail to be created.
    *   When the UpdateStackInstances or UpdateStackGroup operation is called to update stacks, the stacks fail to be updated, or only specific stacks are updated.
    *   The creation or update operation is not completed.', example='CURRENT'),
      statusReason?: string(name='StatusReason', description='The reason why the stack is in the OUTDATED state.

>  This parameter is returned only if the stack is in the OUTDATED state.', example='User initiated stop'),
    }
  ](name='StackInstances', description='Details of the stacks.'),
  totalCount?: int32(name='TotalCount', description='The total number of stacks.', example='1'),
}

model ListStackInstancesResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackInstancesResponseBody(name='body'),
}

/**
  * In this example, the stacks that are deployed in a stack group named `MyStackGroup` are queried. The stack group is granted self-managed permissions and deployed in the China (Hangzhou) region.
  *
 */
async function listStackInstances(request: ListStackInstancesRequest): ListStackInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackInstances', 'POST', '/', 'json', false, 'json', request);
}

model ListStackOperationRisksRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_). For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  operationType?: string(name='OperationType', description='The type of the operation of which you want to detect risks. Valid values:

*   DeleteStack: detects high risks that may arise in resources when you delete a stack.
*   CreateStack: detects the missing permissions when you fail to create a stack.', example='DeleteStack', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role.

*   If you specify a RAM role, ROS creates stacks based on the permissions that are granted to the RAM role and uses the credentials of the RAM role to call the API operations of Alibaba Cloud services.
*   If you do not specify a RAM role, ROS creates stacks based on the permissions of your Alibaba Cloud account.

The name of the RAM role can be up to 64 bytes in length.', example='test-role', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  retainAllResources?: boolean(name='RetainAllResources', description='Specifies whether to retain all resources in the stack. Valid values:

*   true
*   false (default)

> This parameter takes effect only if you set OperationType to DeleteStack.', example='false', position='Query'),
  retainResources?: [ string ](name='RetainResources', description='The list of resources to retain.

> This parameter takes effect only if you set OperationType to DeleteStack.', example='WebServer', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateBody?: string(name='TemplateBody', description='The template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

> You must specify one of TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.

> You must specify one of TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo and oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length. If you do not specify RegionId in the URL, the region ID of the stack is used.

> You must specify one of TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template.

> This parameter takes effect only if you specify TemplateId.', example='v1', position='Query'),
}

model ListStackOperationRisksResponseBody = {
  missingPolicyActions?: [ string ](name='MissingPolicyActions', description='The operations on which the permissions are not granted to the Alibaba Cloud account of the caller.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='72108E7A-E874-4A5E-B22C-A61E94AD12CD'),
  riskResources?: [ 
    {
      code?: string(name='Code', description='The error code that is returned when the risk detection fails.

>  This parameter is not returned if the risk detection is successful.', example='NoPermission'),
      logicalResourceId?: string(name='LogicalResourceId', description='The logical ID of the resource. The logical ID is the resource name that is defined in the template.', example='MySG'),
      message?: string(name='Message', description='The error message that is returned when the risk detection fails.

>  This parameter is not returned if the risk detection is successful.', example='You are not authorized to complete this action.'),
      physicalResourceId?: string(name='PhysicalResourceId', description='The physical ID of the resource. The physical ID is the actual ID of the resource.', example='sg-bp1dpioafqphedg9****'),
      reason?: string(name='Reason', description='The cause of the risk.', example='There are some ECS instances (i-bp18el96s4wq635e****) depending on the security group.'),
      requestId?: string(name='RequestId', description='The ID of the request when the risk detection fails.

>  This parameter is not returned if the risk detection is successful.', example='DF4296CF-F45F-4845-A72B-BE617601DB25'),
      resourceType?: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ECS::SecurityGroup'),
      riskType?: string(name='RiskType', description='The type of the risk. Valid values:

*   Referenced: The resource is referenced by other resources.
*   MaybeReferenced: The resource may be referenced by other resources.
*   AdditionalRiskCheckRequired: An additional risk detection is required for a nested stack.
*   OperationIgnored: The operation does not take effect for the resource.', example='Referenced'),
    }
  ](name='RiskResources', description='The resources that are at risk.'),
}

model ListStackOperationRisksResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackOperationRisksResponseBody(name='body'),
}

/**
  * The ListStackOperationRisks operation is suitable for the following scenarios:
  * *   You want to detect high risks that may arise in resources when you delete a stack that contains the resources, and query the cause of each risk in a resource.
  * *   When you create a stack, the creation may fail. In this case, you can call this operation to check which types of permissions that are required to create stacks are missing.
  *
 */
async function listStackOperationRisks(request: ListStackOperationRisksRequest): ListStackOperationRisksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackOperationRisks', 'POST', '/', 'json', false, 'json', request);
}

model ListStackResourceDriftsRequest {
  maxResults?: long(name='MaxResults', description='The time when the resource drift detection operation was initiated.', example='50', position='Query'),
  nextToken?: string(name='NextToken', description='The type of the resource.', example='AAAAAdDWBF2****w==', position='Query'),
  regionId: string(name='RegionId', description='The physical ID of the resource.', example='cn-hangzhou', position='Query'),
  resourceDriftStatus?: [ string ](name='ResourceDriftStatus', description='The resource properties as defined in the template, in JSON format.', example='MODIFIED', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model ListStackResourceDriftsResponseBody = {
  nextToken?: string(name='NextToken', example='AAAAAdDWBF2****w=='),
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  resourceDrifts?: [ 
    {
      actualProperties?: string(name='ActualProperties', example='{"ScalingRuleName": "test1"}'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The expected value of the resource property as defined in the template.', example='2020-02-27T07:47:47'),
      expectedProperties?: string(name='ExpectedProperties', description='The query token value returned in this call.', example='{"ScalingRuleName": "test2"}'),
      logicalResourceId?: string(name='LogicalResourceId', description='The actual value of the resource property.', example='ScalingRule'),
      moduleInfo?: {
        logicalIdHierarchy?: string(name='LogicalIdHierarchy', example='moduleA/moduleB'),
        typeHierarchy?: string(name='TypeHierarchy', example='MODULE::ROS::Parent::Example/MODULE::ROS::Child::Example'),
      }(name='ModuleInfo'),
      physicalResourceId?: string(name='PhysicalResourceId', description='The path of the resource property.', example='asr-2ze4zzc3kf9yz1kd****'),
      propertyDifferences?: [ 
        {
          actualValue?: string(name='ActualValue', description='__null__', example='test1'),
          differenceType?: string(name='DifferenceType', description='__null__', example='NOT_EQUAL'),
          expectedValue?: string(name='ExpectedValue', description='ListStackResourceDrifts', example='test2'),
          propertyPath?: string(name='PropertyPath', description='__null__', example='/ScalingRuleName'),
        }
      ](name='PropertyDifferences', description='http://ros.aliyun-inc.com:8080/V2/ListStackResourceDrifts'),
      resourceDriftStatus?: string(name='ResourceDriftStatus', description='The ID of the request.', example='MODIFIED'),
      resourceType?: string(name='ResourceType', description='The actual resource properties in JSON format.', example='ALIYUN::ESS::ScalingRule'),
      stackId?: string(name='StackId', description='The drift type of the resource property. Valid values:

*   ADD: The value has been added to a resource property whose data type was Array or List.
*   REMOVE: The property has been deleted from the current resource configuration.
*   NOT_EQUAL: The current property value differs from the expected value defined in the stack template.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
    }
  ](name='ResourceDrifts', description='The property differences of the resource.'),
}

model ListStackResourceDriftsResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackResourceDriftsResponseBody(name='body'),
}

async function listStackResourceDrifts(request: ListStackResourceDriftsRequest): ListStackResourceDriftsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackResourceDrifts', 'POST', '/', 'json', false, 'json', request);
}

model ListStackResourcesRequest {
  regionId: string(name='RegionId', description='The ID of the request.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the region to which the stack belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model ListStackResourcesResponseBody = {
  requestId?: string(name='RequestId', description='Details about resources.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
  resources?: [ 
    {
      createTime?: string(name='CreateTime', description='The name of the stack.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='2019-08-01T06:01:23'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The type of the resource.', example='2020-02-27T07:47:47'),
      logicalResourceId?: string(name='LogicalResourceId', description='The time when the resource was updated. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='dummy'),
      moduleInfo?: {
        logicalIdHierarchy?: string(name='LogicalIdHierarchy', example='moduleA/moduleB'),
        typeHierarchy?: string(name='TypeHierarchy', example='MODULE::ROS::Parent::Example/MODULE::ROS::Child::Example'),
      }(name='ModuleInfo'),
      physicalResourceId?: string(name='PhysicalResourceId', description='The most recent point in time when a successful drift detection operation was performed.', example='d04af923-e6b7-4272-aeaa-47ec9777****'),
      resourceDriftStatus?: string(name='ResourceDriftStatus', description='The reason why the resource is in a specific state.', example='IN_SYNC'),
      resourceType?: string(name='ResourceType', description='The drift status of the resource in the most recent successful drift detection. Valid values:

*   DELETED: The actual configuration of the resource differs from its expected template configuration because the resource is deleted.
*   MODIFIED: The actual configuration of the resource differs from its expected template configuration.
*   NOT_CHECKED: ROS did not check whether the actual configuration of the resource differs from its expected template configuration.
*   IN_SYNC: The actual configuration of the resource matches its expected template configuration.', example='ALIYUN::ROS::Stack'),
      stackId?: string(name='StackId', description='The physical ID of the resource.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
      stackName?: string(name='StackName', example='test-describe-resource'),
      status?: string(name='Status', description='The logical ID of the resource. The logical ID is the resource name that is defined in the template.', example='UPDATE_COMPLETE'),
      statusReason?: string(name='StatusReason', description='The time when the resource was created. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='state changed'),
      updateTime?: string(name='UpdateTime', description='The ID of the stack.', example='2019-08-01T06:01:29'),
    }
  ](name='Resources', description='The status of the resource. Valid values:

*   INIT_COMPLETE: The resource is in the pending creation state.
*   CREATE_COMPLETE: The resource is created.
*   CREATE_FAILED: The resource fails to be created.
*   CREATE_IN_PROGRESS: The resource is being created.
*   UPDATE_IN_PROGRESS: The resource is being updated.
*   UPDATE_FAILED: The resource fails to be updated.
*   UPDATE_COMPLETE: The resource is updated.
*   DELETE_IN_PROGRESS: The resource is being deleted.
*   DELETE_FAILED: The resource fails to be deleted.
*   DELETE_COMPLETE: The resource is deleted.
*   CHECK_IN_PROGRESS: The resource is being validated.
*   CHECK_FAILED: The resource fails to be validated.
*   CHECK_COMPLETE: The resource is validated.
*   IMPORT_IN_PROGRESS: The resource is being imported.
*   IMPORT_FAILED: The resource fails to be imported.
*   IMPORT_COMPLETE: The resource is imported.'),
}

model ListStackResourcesResponse = {
  headers: map[string]string(name='headers'),
  body: ListStackResourcesResponseBody(name='body'),
}

/**
  * For more information about common request parameters, see [Common parameters](~~131957~~).
  *
 */
async function listStackResources(request: ListStackResourcesRequest): ListStackResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStackResources', 'POST', '/', 'json', false, 'json', request);
}

model ListStacksRequest {
  endTime?: string(name='EndTime', description='The reason why the stack is in its current state.', example='2023-04-01T15:16:00Z', position='Query'),
  pageNumber?: long(name='PageNumber', description='The tags.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The state N of the stack. Valid values:

*   CREATE_IN_PROGRESS: The stack is being created.
*   CREATE_FAILED: The stack fails to be created.
*   CREATE_COMPLETE: The stack is created.
*   UPDATE_IN_PROGRESS: The stack is being updated.
*   UPDATE_FAILED: The stack fails to be updated.
*   UPDATE_COMPLETE: The stack is updated.
*   DELETE_IN_PROGRESS: The stack is being deleted.
*   DELETE_FAILED: The stack fails to be deleted.
*   CREATE_ROLLBACK_IN_PROGRESS: The resources are being rolled back after the stack fails to be created.
*   CREATE_ROLLBACK_FAILED: The resources fail to be rolled back after the stack fails to be created.
*   CREATE_ROLLBACK_COMPLETE: The resources are rolled back after the stack fails to be created.
*   ROLLBACK_IN_PROGRESS: The resources of the stack are being rolled back.
*   ROLLBACK_FAILED: The resources of the stack fail to be rolled back.
*   ROLLBACK_COMPLETE: The resources of the stack are rolled back.
*   CHECK_IN_PROGRESS: The stack is being validated.
*   CHECK_FAILED: The stack fails to be validated.
*   CHECK_COMPLETE: The stack is validated.
*   REVIEW_IN_PROGRESS: The stack is being reviewed.
*   IMPORT_CREATE_IN_PROGRESS: The stack is being created by using imported resources.
*   IMPORT_CREATE_FAILED: The stack fails to be created by using imported resources.
*   IMPORT_CREATE_COMPLETE: The stack is created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_IN_PROGRESS: The resources are being rolled back after the stack fails to be created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_FAILED: The resources fail to be rolled back after the stack fails to be created by using imported resources.
*   IMPORT_CREATE_ROLLBACK_COMPLETE: The resources are rolled back after the stack fails to be created by using imported resources.
*   IMPORT_UPDATE_IN_PROGRESS: The stack is being updated by using imported resources.
*   IMPORT_UPDATE_FAILED: The stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_COMPLETE: The stack is updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_IN_PROGRESS: The resources are being rolled back after the stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_FAILED: The resources fail to be rolled back after the stack fails to be updated by using imported resources.
*   IMPORT_UPDATE_ROLLBACK_COMPLETE: The resources are rolled back after the stack fails to be updated by using imported resources.', example='10', position='Query'),
  parentStackId?: string(name='ParentStackId', description='The name of stack N.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  regionId: string(name='RegionId', description='The name of stack N.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter. You can use the wildcard character (∗) for fuzzy search.

Valid values of N: 1 to 5.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The list of stacks.', example='rg-acfmxazb4ph6aiy****', position='Query'),
  showNestedStack?: boolean(name='ShowNestedStack', description='The key of tag N of the stack.

Valid values of N: 1 to 20.', example='true', position='Query'),
  stackId?: string(name='StackId', description='The value of tag N of the stack.

Valid values of N: 1 to 20.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  stackIds?: [ string ](name='StackIds', description='The state of the stack.', position='Query'),
  stackName?: [ string ](name='StackName', description='The ID of stack N.

You can specify one or more IDs to query one or more stacks at the same time.

Valid values of N: 1 to 10.', example='MyStack', position='Query'),
  startTime?: string(name='StartTime', description='The time when the last successful drift detection was performed on the stack.', example='2023-04-01T15:10:00Z', position='Query'),
  status?: [ string ](name='Status', description='The ID of the resource group.

For more information about resource groups, see the "Resource Group" section of the [What is Resource Management?](~~94475~~) topic.', example='CREATE_COMPLETE', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The ID of the request.', example='usage'),
      value?: string(name='Value', description='The page number of the returned page.', example='test'),
    }
  ](name='Tag', description='The number of entries returned per page.

Maximum value: 50.

Default value: 10.', position='Query'),
}

model ListStacksResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The tag key of the stack.', example='1'),
  pageSize?: int32(name='PageSize', description='Indicates whether rollback is disabled when the stack fails to be created. Default value: false. Valid values:

*   true
*   false', example='10'),
  requestId?: string(name='RequestId', description='The tags of the stack.', example='FBAC80B4-9C27-529D-BC9C-4155FA5CD7A7'),
  stacks?: [ 
    {
      createTime?: string(name='CreateTime', description='The ID of the stack.', example='2022-03-10T06:44:36'),
      disableRollback?: boolean(name='DisableRollback', description='The state of the stack on which the last successful drift detection was performed. Valid values:

*   DRIFTED: Drift detection is being performed on the stack.
*   NOT_CHECKED: No successful drift detection is performed on the stack.
*   IN_SYNC: The stack is being synchronized.', example='false'),
      driftDetectionTime?: string(name='DriftDetectionTime', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='2022-03-10T06:46:36'),
      operationInfo?: {
        action?: string(name='Action', example='DeleteSecurityGroup'),
        code?: string(name='Code', example='DependencyViolation'),
        logicalResourceId?: string(name='LogicalResourceId', example='EcsSecurityGroup'),
        message?: string(name='Message', example='There is still instance(s) in the specified security group.'),
        requestId?: string(name='RequestId', example='071D6166-3F6B-5C7B-A1F0-0113FBB643A8'),
        resourceType?: string(name='ResourceType', example='ALIYUN::ECS::SecurityGroup'),
      }(name='OperationInfo'),
      parentStackId?: string(name='ParentStackId', description='The error message.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf692****'),
      regionId?: string(name='RegionId', description='The error code.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The logical ID of the resource on which an operation fails to be performed.', example='rg-aek2frunvw7****'),
      serviceManaged?: boolean(name='ServiceManaged', example='false'),
      serviceName?: string(name='ServiceName', example='ACVS'),
      stackDriftStatus?: string(name='StackDriftStatus', description='The name of the API operation that belongs to another Alibaba Cloud service.', example='IN_SYNC'),
      stackId?: string(name='StackId', description='The ID of the request that is initiated to call the API operation of another Alibaba Cloud service.', example='67805444-a605-45ee-a57f-83908ff6****'),
      stackName?: string(name='StackName', description='The name of the service to which the managed stack belongs.', example='MyStack'),
      stackType?: string(name='StackType', description='The type of the resource on which an operation fails to be performed.', example='ROS'),
      status?: string(name='Status', description='The name of the stack.', example='CREATE_COMPLETE'),
      statusReason?: string(name='StatusReason', description='The ID of the parent stack.', example='Stack CREATE completed successfully'),
      tags?: [ 
        {
          key?: string(name='Key', description='The ID of the resource group.', example='acs:rm:rgId'),
          value?: string(name='Value', description='Indicates whether the stack is a managed stack. Valid values:

*   true
*   false', example='rg-aek2frunvw7****'),
        }
      ](name='Tags', description='The type of the stack. Valid values:

*   ROS: ROS stack. The stack is created by using a Resource Orchestration Service (ROS) template.
*   Terraform: Terraform stack. The stack is created by using a Terraform template.'),
      timeoutInMinutes?: int32(name='TimeoutInMinutes', description='The supplementary information that is returned when an operation fails to be performed on the stack.

>  This parameter is returned if an operation fails to be performed on the stack. The system returns at least one sub-property. Example: An error occurred when the API operation of another Alibaba Cloud service was called.', example='60'),
      updateTime?: string(name='UpdateTime', description='The timeout period that is allowed to create the stack. Unit: minutes.', example='2022-03-10T07:44:36'),
    }
  ](name='Stacks', description='The tag value of the stack.'),
  totalCount?: int32(name='TotalCount', description='The time when the stack was created. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2'),
}

model ListStacksResponse = {
  headers: map[string]string(name='headers'),
  body: ListStacksResponseBody(name='body'),
}

/**
  * Specifies whether to return nested stacks. Default value: false. Valid values:
  * *   true
  * *   false
  * > If the ParentStackId parameter is specified, you must set the ShowNestedStack parameter to true.
  *
 */
async function listStacks(request: ListStacksRequest): ListStacksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListStacks', 'POST', '/', 'json', false, 'json', request);
}

model ListTagKeysRequest {
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query.', example='caeba0bbb2be03f84eb48b699f0*****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the tag key. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template
*   templatescratch: scenario', example='stack', position='Query'),
}

model ListTagKeysResponseBody = {
  keys?: [ string ](name='Keys', description='The list of tag keys. Separate multiple tag keys with commas (,).'),
  nextToken?: string(name='NextToken', description='The token that is used to start the next query.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='C429473A-5C66-4661-B5F8-4F900CD4330A'),
}

model ListTagKeysResponse = {
  headers: map[string]string(name='headers'),
  body: ListTagKeysResponseBody(name='body'),
}

/**
  * In this example, the tag keys that are added to a stack in the China (Hangzhou) region are queried.
  *
 */
async function listTagKeys(request: ListTagKeysRequest): ListTagKeysResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagKeys', 'POST', '/', 'json', false, 'json', request);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query.', example='caeba0bbb2be03f84eb48b699f0*****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the tag. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The list of resource IDs.', example='6bc589b5-9c02-4944-8fc3-f3624234****', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template
*   templatescratch: scenario', example='stack', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N that is added to the resource. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key can be up to 128 characters in length, and cannot contain `http://` or `https://`. The tag key cannot start with `aliyun` or `acs:`.', example='FinanceDept'),
      value?: string(name='Value', description='The value of tag N that is added to the resource. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length, and cannot contain `http://` or `https://`. The tag value cannot start with `aliyun` or `acs:`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is used to start the next query.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='C429473A-5C66-4661-B5F8-4F900CD4330A'),
  tagResources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The ID of the resource.', example='c754d2a4-28f1-46df-b557-9586173a****'),
      resourceType?: string(name='ResourceType', description='The type of the resource.', example='stack'),
      tagKey?: string(name='TagKey', description='The tag key of the resource.', example='TagKey1'),
      tagValue?: string(name='TagValue', description='The tag value of the resource.', example='TayValue1'),
    }
  ](name='TagResources', description='The information about the tags that are added to the resource.'),
}

model ListTagResourcesResponse = {
  headers: map[string]string(name='headers'),
  body: ListTagResourcesResponseBody(name='body'),
}

/**
  * *   To specify the query object, you must specify the ResourceId.N or Tag.N parameter in the request. Tag.N consists of Tag.N.Key and Tag.N.Value.
  * *   If you specify the Tag.N and ResourceId.N parameters, ROS resources that match both the parameters are returned.
  * This topic provides an example on how to query the tags that are added to a resource in a stack. In this example, the resource ID is `6bc589b5-9c02-4944-8fc3-f3624234****`. The stack is deployed in the China (Hangzhou) region.
  *
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagResources', 'POST', '/', 'json', false, 'json', request);
}

model ListTagValuesRequest {
  key: string(name='Key', description='The tag key.', example='TagKey1', position='Query'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query.', example='caeba0bbb2be03f84eb48b699f0*****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the tag value. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template
*   templatescratch: scenario', example='stack', position='Query'),
}

model ListTagValuesResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is used to start the next query.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='C429473A-5C66-4661-B5F8-4F900CD4330A'),
  values?: [ string ](name='Values', description='The tag values.'),
}

model ListTagValuesResponse = {
  headers: map[string]string(name='headers'),
  body: ListTagValuesResponseBody(name='body'),
}

/**
  * In this example, the tag values of `TagKey1` that is added to a stack in the China (Hangzhou) region are queried.
  *
 */
async function listTagValues(request: ListTagValuesRequest): ListTagValuesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagValues', 'POST', '/', 'json', false, 'json', request);
}

model ListTemplateScratchesRequest {
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the scenario is created.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  status?: string(name='Status', description='The state of the scenario. Valid values:

*   GENERATE_IN_PROGRESS: The scenario is being created.
*   GENERATE_COMPLETE: The scenario is created.
*   GENERATE_FAILED: The scenario fails to be created.', example='["GENERATE_COMPLETE"]', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The key of tag N that is added to the scenario.

>  The Tags parameter is optional. If you specify the Tags parameter, you must specify the Tags.N.Key parameter.', example='usage'),
      value?: string(name='Value', description='The value of tag N that is added to the scenario.', example='test'),
    }
  ](name='Tags', description='The tags.', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****', position='Query'),
  templateScratchType?: string(name='TemplateScratchType', description='The type of the scenario. Valid values:

*   ResourceImport: resource management
*   ArchitectureReplication: resource replication', example='ArchitectureReplication', position='Query'),
}

model ListTemplateScratchesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='D1C09606-C58B-558F-9B4E-5BF263D17D09'),
  templateScratches?: [ 
    {
      createTime?: string(name='CreateTime', description='The time at which the scenario was created.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2021-12-07T08:06:44'),
      description?: string(name='Description', description='The description of the scenario.', example='The description of the scenario.'),
      failedCode?: string(name='FailedCode', description='The status code of the scenario that fails to be created.

>  This parameter is returned only if the Status parameter is set to GENERATE_FAILED.', example='InvalidZoneId'),
      logicalIdStrategy?: string(name='LogicalIdStrategy', description='The policy based on which the logical ID is generated. Default value: LongTypePrefixAndIndexSuffix. Valid values:

*   LongTypePrefixAndIndexSuffix: long-type prefix + index-type suffix
*   LongTypePrefixAndHashSuffix: long-type prefix + hash-type suffix
*   ShortTypePrefixAndHashSuffix: short-type prefix + hash-type suffix', example='LongTypePrefixAndIndexSuffix'),
      preferenceParameters?: [ 
        {
          parameterKey?: string(name='ParameterKey', description='The name of the parameter.', example='DeletionPolicy'),
          parameterValue?: string(name='ParameterValue', description='The value of the parameter.', example='Retain'),
        }
      ](name='PreferenceParameters', description='The parameters that are configured for the scenario.'),
      sourceResourceGroup?: {
        resourceGroupId?: string(name='ResourceGroupId', description='The ID of the source resource group.', example='rg-acfmzawhxxc****'),
        resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types.'),
      }(name='SourceResourceGroup', description='The source resource group.'),
      sourceResources?: [ 
        {
          resourceId?: string(name='ResourceId', description='The ID of the resource.', example='vpc-m5eauuq80anx59v28****'),
          resourceType?: string(name='ResourceType', description='The resource type.', example='ALIYUN::ECS::VPC'),
        }
      ](name='SourceResources', description='The source resources.'),
      sourceTag?: {
        resourceTags?: map[string]any(name='ResourceTags', description='The source tags.', example='{"a": "b"}'),
        resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types.'),
      }(name='SourceTag', description='The source tag.'),
      status?: string(name='Status', description='The state of the scenario.', example='GENERATE_COMPLETE'),
      statusReason?: string(name='StatusReason', description='The reason why the scenario fails to be created.

>  This parameter is returned only if the Status parameter is set to GENERATE_FAILED.', example='Resource ALIYUN::ECS::VPC vpc-m5eauuq80anx59v28**** could not be found for template scratch.'),
      tags?: [ 
        {
          key?: string(name='Key', description='The tag key of the scenario.', example='usage1'),
          value?: string(name='Value', description='The tag value of the scenario.', example='test1'),
        }
      ](name='Tags', description='The tags of the scenario.'),
      templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-48ad85d66cca4620****'),
      templateScratchType?: string(name='TemplateScratchType', description='The type of the scenario. Valid values:

*   ResourceImport: resource management
*   ArchitectureReplication: resource replication', example='ResourceImport'),
      updateTime?: string(name='UpdateTime', description='The time at which the scenario was updated.

The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mm:ss format. The time is displayed in UTC.', example='2021-12-07T08:06:44'),
    }
  ](name='TemplateScratches', description='The list of scenarios.'),
  totalCount?: int32(name='TotalCount', description='The total number of scenarios.', example='2'),
}

model ListTemplateScratchesResponse = {
  headers: map[string]string(name='headers'),
  body: ListTemplateScratchesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to query the list of scenarios. In this example, the scenarios that are created in the China (Hangzhou) region are queried. The following scenarios are returned: resource management and resource replication scenarios.
  *
 */
async function listTemplateScratches(request: ListTemplateScratchesRequest): ListTemplateScratchesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTemplateScratches', 'POST', '/', 'json', false, 'json', request);
}

model ListTemplateVersionsRequest {
  maxResults?: long(name='MaxResults', description='The maximum number of results to be returned in a single call when the NextToken parameter is used for the query.

Valid values: 1 to 100.

Default value: 50.', example='50', minimum=1, maximum=10000, position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the NextToken value that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0****', position='Query'),
  templateId: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
}

model ListTemplateVersionsResponseBody = {
  nextToken?: string(name='NextToken', description='The query token that is returned in this call.', example='caeba0bbb2be03f84eb48b699f0****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  versions?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the version was created.', example='2020-02-27T07:47:47'),
      description?: string(name='Description', description='The description of the version.', example='test'),
      templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates. For a shared template, the template ID is the same as the Alibaba Cloud Resource Name (ARN) of the template.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****'),
      templateName?: string(name='TemplateName', description='The template name that corresponds to the specified version.', example='test'),
      templateVersion?: string(name='TemplateVersion', description='The version number.

For a shared template, this parameter is returned only if the VersionOption parameter is set to AllVersions.

Valid values: v1 to v100.', example='v1'),
      updateTime?: string(name='UpdateTime', description='The time when the version was last updated.', example='2020-02-27T07:47:47'),
    }
  ](name='Versions', description='The list of versions.'),
}

model ListTemplateVersionsResponse = {
  headers: map[string]string(name='headers'),
  body: ListTemplateVersionsResponseBody(name='body'),
}

async function listTemplateVersions(request: ListTemplateVersionsRequest): ListTemplateVersionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTemplateVersions', 'POST', '/', 'json', false, 'json', request);
}

model ListTemplatesRequest {
  includeTags?: string(name='IncludeTags', description='Specifies whether to query the information about tags. Default value: Disabled. Valid values:

*   Enabled
*   Disabled', example='Enabled', position='Query'),
  pageNumber?: long(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.

For more information about resource groups, see the "Resource Group" section of the [What is Resource Management?](~~94475~~) topic.', example='rg-acfmxazb4ph6aiy****', position='Query'),
  shareType?: string(name='ShareType', description='The sharing type of the template.

Default value: Private. Valid values:

*   Private: The template belongs to the template owner.
*   Shared: The template is shared with other users.
*   Official: The template is the shared template of the official version.', example='Private', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. This parameter takes effect only when the ShareType parameter is set to Private.

You can specify up to 20 tag keys.', example='usage'),
      value?: string(name='Value', description='The value of the tag N. This parameter takes effect only when the ShareType parameter is set to Private.

You can specify up to 20 tag values.', example='deploy'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  templateName?: string(name='TemplateName', description='The name of the template. This parameter takes effect only when the ShareType parameter is set to Private.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyTemplate', position='Query'),
}

model ListTemplatesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.

Pages start from page 1.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='C3A8413B-1F16-4DED-AC3E-61A00718DE8A'),
  templates?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the template was created.', example='2019-10-15T08:17:14.000000'),
      description?: string(name='Description', description='The description of the template.', example='test-description'),
      ownerId?: string(name='OwnerId', description='The ID of the Alibaba Cloud account to which the template belongs.', example='151266687691****'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-acfmxazb4ph6aiy****'),
      shareType?: string(name='ShareType', description='The sharing type of the template.

Default value: Private. Valid values:

*   Private: The template belongs to the template owner.
*   Shared: The template is shared with other users.', example='Private'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of the tag.', example='usage'),
          value?: string(name='Value', description='The value of the tag.', example='test'),
        }
      ](name='Tags', description='The tags of the template.'),
      templateARN?: string(name='TemplateARN', description='The Alibaba Cloud Resource Name (ARN) of the template.', example='acs:ros:*:151266687691****:template/a52f81be-496f-4e1c-a286-8852ab54****'),
      templateId?: string(name='TemplateId', description='The ID of the template.', example='4d4f5aa2-3260-4e47-863b-763fbb12****'),
      templateName?: string(name='TemplateName', description='The name of the template.', example='demo'),
      templateVersion?: string(name='TemplateVersion', description='The latest version of the template.', example='v1'),
      updateTime?: string(name='UpdateTime', description='The time when the template was last updated.', example='2019-10-15T08:17:14.000000'),
    }
  ](name='Templates', description='The list of templates.'),
  totalCount?: int32(name='TotalCount', description='The total number of templates.', example='1'),
}

model ListTemplatesResponse = {
  headers: map[string]string(name='headers'),
  body: ListTemplatesResponseBody(name='body'),
}

async function listTemplates(request: ListTemplatesRequest): ListTemplatesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTemplates', 'POST', '/', 'json', false, 'json', request);
}

model MoveResourceGroupRequest {
  newResourceGroupId: string(name='NewResourceGroupId', description='The ID of the resource group to which you want to move the resource. For more information about resource groups, see the "Resource Group" section of the [What is Resource Management?](~~94475~~) topic.', example='rg-acfm3peow3k****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource.\\
You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource.', example='4e8611cb-251e-42b7-b9cb-3496362c****', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template', example='stack', position='Query'),
}

model MoveResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='F84A05B3-7275-4C8B-8AEE-9088C639C271'),
}

model MoveResourceGroupResponse = {
  headers: map[string]string(name='headers'),
  body: MoveResourceGroupResponseBody(name='body'),
}

/**
  * In this example, a stack deployed in the `China (Hangzhou)` region is moved to a specific resource group. The ID of the stack is `4e8611cb-251e-42b7-b9cb-3496362c****` and the ID of the resource group is `rg-acfm3peow3k****`.
  *
 */
async function moveResourceGroup(request: MoveResourceGroupRequest): MoveResourceGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'MoveResourceGroup', 'POST', '/', 'json', false, 'json', request);
}

model PreviewStackRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  disableRollback?: boolean(name='DisableRollback', description='Specifies whether to disable rollback for the resources when the stack fails to be created. Default value: false. Valid values:

*   true
*   false', example='false', position='Query'),
  enablePreConfig?: boolean(name='EnablePreConfig', description='Specifies whether to query the parameters that want to use in compliance precheck.

Default value: false. Valid values:

*   true
*   false', example='false', position='Query'),
  parallelism?: long(name='Parallelism', description='The maximum number of concurrent operations that can be performed on resources. This parameter takes effect only for Terraform stacks.

By default, this parameter is empty. You can set this parameter to an integer that is greater than or equal to 0.

>  If you set this parameter to an integer that is greater than 0, the integer is used. If you set this parameter to 0 or leave it empty, the default value of Terraform is used. In most cases, the default value of Terraform is 10.', example='1', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N. If you do not specify the name and value of a parameter, Resource Orchestration Service (ROS) uses the default name and value that are specified in the template. Maximum value of N: 200.

>  If you specify Parameters, you must specify Parameters.N.ParameterKey.', example='ALIYUN::AccountId'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N. Maximum value of N: 200.

>  If you specify Parameters, you must specify Parameters.N.ParameterValue.', example='151266687691****'),
    }
  ](name='Parameters', description='The parameters.', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId?: string(name='StackId', description='The ID of the stack. You can use this parameter to preview a stack that you want to update.

> 
*   You must specify only one of the StackName and StackId parameters.
*   In the scenario in which you preview a stack that you want to create or update, you cannot preview the resources in its nested stacks.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  stackName?: string(name='StackName', description='The name of the stack. You can use this parameter to preview the stack that you want to create.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.

>  You must specify only one of the StackName and StackId parameters.', example='MyStack', position='Query'),
  stackPolicyBody?: string(name='StackPolicyBody', description='The structure that contains the stack policy body. The stack policy body must be 1 to 16,384 bytes in length.

>  You can specify only one of the StackPolicyBody and StackPolicyURL parameters.', example='{"Statement": [{"Action": "Update:*", "Resource": "*", "Effect": "Allow", "Principal": "*"}]}', position='Query'),
  stackPolicyURL?: string(name='StackPolicyURL', description='The URL of the file that contains the stack policy. The URL must point to a policy that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The policy file can be up to 16,384 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You can specify only one of the StackPolicyBody and StackPolicyURL parameters.

The URL can be up to 1,350 bytes in length.', example='oss://ros-stack-policy/demo', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure of the template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared templates and private templates.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.

For more information about how to query the IDs of scenarios, see [ListTemplateScratches](~~363050~~).

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='ts-aa9c62feab844a6b****', position='Query'),
  templateScratchRegionId?: string(name='TemplateScratchRegionId', description='The region ID of the scenario. The default value is the same as the value of the RegionId parameter.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an OSS bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The template body can be up to 524,288 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, TemplateId, and TemplateScratchId.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', description='The timeout period that is allowed to create the stack.

Unit: minutes.

Default value: 60.', example='60', position='Query'),
}

model PreviewStackResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stack?: {
    description?: string(name='Description', description='The description of the stack.', example='One ECS instance.'),
    disableRollback?: boolean(name='DisableRollback', description='Indicates whether rollback is disabled for the resources when the stack fails to be created.', example='false'),
    log?: {
      terraformLogs?: [ 
        {
          command?: string(name='Command', description='The name of the Terraform command. Valid values:

*   apply
*   plan
*   destroy
*   version

For more information about Terraform commands, see [Basic CLI Features](https://www.terraform.io/cli/commands).', example='apply'),
          content?: string(name='Content', description='The content of the output stream that is returned after the command is run.', example='Apply complete! Resources: 42 added, 0 changed, 0 destroyed.'),
          stream?: string(name='Stream', description='The output stream. Valid values:

*   stdout: standard output stream
*   stderr: standard error stream', example='stdout'),
        }
      ](name='TerraformLogs', description='The log that is generated when a Terraform stack is run. This parameter is returned only if the stack is a Terraform stack.

>  You can use this parameter to preview the logs of a Terraform stack.'),
    }(name='Log', description='The log that is generated when the stack is run.'),
    parameters?: [ 
      {
        parameterKey?: string(name='ParameterKey', description='The name of the parameter.', example='ALIYUN::AccountId'),
        parameterValue?: string(name='ParameterValue', description='The value of the parameter.', example='151266687691****'),
      }
    ](name='Parameters', description='The parameters of the stack.'),
    regionId?: string(name='RegionId', description='The region ID of the stack.', example='cn-hangzhou'),
    resources?: [ 
      {
        acsResourceType?: string(name='AcsResourceType', description='The type of the resource that belongs to an Alibaba Cloud service.', example='ACS::ECS::Instance'),
        action?: string(name='Action', description='The action that is performed on resources. Valid values:

*   Add
*   Modify
*   Remove
*   None', example='Add'),
        description?: string(name='Description', description='The description of the resource.', example='ECS instance.'),
        logicalResourceId?: string(name='LogicalResourceId', description='The logical ID of the resource.', example='WebServer'),
        physicalResourceId?: string(name='PhysicalResourceId', description='The physical ID of the resource.

This parameter is returned only if the Action parameter is set to Modify or Remove.', example='i-a1b2c3***'),
        properties?: map[string]any(name='Properties', description='The properties of the resource.', example='{   "DiskMappings": [     {       "Category": "cloud_ssd",       "Size": "20"     }   ],   "SystemDisk_Category": "cloud_ssd",   "InstanceChargeType": "PostPaid",   "AutoRenew": "False",   "WillReplace": true,   "ImageId": "centos_7",   "InstanceType": "ecs.g6.large",   "AllocatePublicIP": true,   "AutoRenewPeriod": 1,   "IoOptimized": "optimized",   "ZoneId": "cn-beijing-g",   "VSwitchId": "",   "SecurityGroupId": "",   "Period": 1,   "InternetChargeType": "PayByTraffic",   "SystemDiskCategory": "cloud_efficiency",   "InternetMaxBandwidthOut": 1,   "VpcId": "",   "InternetMaxBandwidthIn": 200,   "PeriodUnit": "Month" }'),
        replacement?: string(name='Replacement', description='Indicates whether a replacement update is performed on the template. Valid values:

*   True: A replacement update is performed on the template.
*   False: A change is made on the template.
*   Conditional: A replacement update may be performed on the template. You can check whether a replacement update is performed when the template is in use.

>  This parameter is returned only if the Action parameter is set to Modify.', example='False'),
        requiredBy?: [ string ](name='RequiredBy', description='The resources on which the stack depends.'),
        resourceType?: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ECS::Instance'),
        stack?: map[string]any(name='Stack', description='The information about the nested stack. The data structure of the value is the same as the data structure of the entire response.', example='{}'),
      }
    ](name='Resources', description='The resources in the stack.'),
    stackName?: string(name='StackName', description='The name of the stack.', example='MyStack'),
    stackPolicyBody?: map[string]any(name='StackPolicyBody', description='The structure that contains the stack policy body.', example='{   "Statement": [     {       "Action": "Update:*",       "Resource": "*",       "Effect": "Allow",       "Principal": "*"     },     {       "Action": "Update:*",       "Resource": "LogicalResourceId/apple1",       "Effect": "Deny",       "Principal": "*"     }   ] }'),
    templateDescription?: string(name='TemplateDescription', description='The description of the template.', example='One ECS instance.'),
    timeoutInMinutes?: int32(name='TimeoutInMinutes', description='The timeout period that is allowed to create the stack.

Unit: minutes.', example='60'),
  }(name='Stack', description='The information about the stack that is previewed.'),
}

model PreviewStackResponse = {
  headers: map[string]string(name='headers'),
  body: PreviewStackResponseBody(name='body'),
}

/**
  * This topic provides an example on how to create a stack named `MyStack` in the China (Hangzhou) region and preview the information about the stack. In this example, the template body of the stack is `{"ROSTemplateFormatVersion":"2015-09-01"}`.
  *
 */
async function previewStack(request: PreviewStackRequest): PreviewStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'PreviewStack', 'POST', '/', 'json', false, 'json', request);
}

model RegisterResourceTypeRequest {
  clientToken?: string(name='ClientToken', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  description?: string(name='Description', example='It is a demo.', position='Query'),
  entityType: string(name='EntityType', example='Module', position='Query'),
  resourceType: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
  templateBody?: string(name='TemplateBody', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Body'),
  templateURL?: string(name='TemplateURL', example='oss://ros-template/demo', position='Query'),
}

model RegisterResourceTypeResponseBody = {
  registrationId?: string(name='RegistrationId', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model RegisterResourceTypeResponse = {
  headers: map[string]string(name='headers'),
  body: RegisterResourceTypeResponseBody(name='body'),
}

async function registerResourceType(request: RegisterResourceTypeRequest): RegisterResourceTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RegisterResourceType', 'POST', '/', 'json', true, 'form', request);
}

model SetDeletionProtectionRequest {
  deletionProtection: string(name='DeletionProtection', description='Indicates whether stack deletion protection is enabled. Valid values:

*   Enabled: enables the stack deletion protection.
*   Disabled (default): Resource stack deletion protection is Disabled. You can use the console or API(DeleteStack) to release the stack resources.

>  The deletion of nested stacks is the same as the root stack.', example='Enabled', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.

The delete protection attribute of a nested stack is determined by the root stack and remains unchanged from the root stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
}

model SetDeletionProtectionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model SetDeletionProtectionResponse = {
  headers: map[string]string(name='headers'),
  body: SetDeletionProtectionResponseBody(name='body'),
}

async function setDeletionProtection(request: SetDeletionProtectionRequest): SetDeletionProtectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetDeletionProtection', 'POST', '/V2/SetDeletionProtection', 'json', false, 'json', request);
}

model SetResourceTypeRequest {
  defaultVersionId?: string(name='DefaultVersionId', example='v1', position='Query'),
  description?: string(name='Description', example='It is a demo.', position='Query'),
  resourceType: string(name='ResourceType', example='MODULE::MyOrganization::MyService::MyUsecase', position='Query'),
  versionId?: string(name='VersionId', example='v1', position='Query'),
}

model SetResourceTypeResponseBody = {
  requestId?: string(name='RequestId', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model SetResourceTypeResponse = {
  headers: map[string]string(name='headers'),
  body: SetResourceTypeResponseBody(name='body'),
}

async function setResourceType(request: SetResourceTypeRequest): SetResourceTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetResourceType', 'POST', '/', 'json', false, 'json', request);
}

model SetStackPolicyRequest {
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  stackPolicyBody?: string(name='StackPolicyBody', description='The structure that contains the stack policy body. The stack policy body must be 1 to 16,384 bytes in length.

You can specify one of the StackPolicyBody and StackPolicyURL parameters, but you cannot specify both of them.', example='{"Statement":[{"Effect":"Allow","Action":"Update:*","Principal":"*","Resource":"*"}]}', position='Query'),
  stackPolicyURL?: string(name='StackPolicyURL', description='The URL for the file that contains the stack policy. The URL must point to a template located in an HTTP or HTTPS web server or an Alibaba Cloud OSS bucket. Examples: oss://ros/template/demo and oss://ros/template/demo?RegionId=cn-hangzhou. The template can be up to 16,384 bytes in length, and the URL can be up to 1,350 bytes in length.

>  If the region of the OSS bucket is not specified, the RegionId value is used.

You can specify one of the StackPolicyBody and StackPolicyURL parameters, but you cannot specify both of them.', example='oss://ros/stack-policy/demo', position='Query'),
}

model SetStackPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model SetStackPolicyResponse = {
  headers: map[string]string(name='headers'),
  body: SetStackPolicyResponseBody(name='body'),
}

/**
  * In this example, a stack policy is configured for a stack deployed in the `China (Hangzhou)` region whose ID is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****`. The URL to the stack policy body is `oss://ros/stack-policy/demo`.
  *
 */
async function setStackPolicy(request: SetStackPolicyRequest): SetStackPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetStackPolicy', 'POST', '/V2/SetStackPolicy', 'json', false, 'json', request);
}

model SetTemplatePermissionRequest {
  accountIds: [ string ](name='AccountIds', description='The list of one or more Alibaba Cloud accounts with which you want to share or unshare the template.', example='123456789', position='Query'),
  shareOption: string(name='ShareOption', description='The sharing option.

Valid values:

*   ShareToAccounts: shares the template with other Alibaba Cloud accounts.
*   CancelSharing: unshares the template.', example='ShareToAccounts', position='Query'),
  templateId: string(name='TemplateId', description='The ID of the template.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template that you want to share. This parameter takes effect when the ShareOption parameter is set to ShareToAccounts and the VersionOption parameter is set to Specified.

Valid values: v1 to v100.', example='v1', position='Query'),
  versionOption?: string(name='VersionOption', description='The version option for template sharing. This parameter takes effect when the ShareOption parameter is set to ShareToAccounts.

Default value: AllVersions. Valid values:

*   AllVersions: shares all versions of the template.
*   Latest: shares only the latest version of the template. If the shared template is updated, the latest version of the template is shared with the destination account.
*   Current: shares only the current version of the template. The current version of the template is shared with the destination account even if the template is updated.
*   Specified: shares only one specific version of the template.', example='Specified', position='Query'),
}

model SetTemplatePermissionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model SetTemplatePermissionResponse = {
  headers: map[string]string(name='headers'),
  body: SetTemplatePermissionResponseBody(name='body'),
}

/**
  * In this example, a template whose ID is `5ecd1e10-b0e9-4389-a565-e4c15efc****` is shared with an Alibaba Cloud account whose ID is `151266687691****`.
  * >  The account can authorize an RAM user to use the shared template.``
  *
 */
async function setTemplatePermission(request: SetTemplatePermissionRequest): SetTemplatePermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetTemplatePermission', 'POST', '/V2/SetTemplatePermission', 'json', false, 'json', request);
}

model SignalResourceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The token can be up to 64 characters in length and can contain letters, digits, hyphens (-) and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  logicalResourceId: string(name='LogicalResourceId', description='The logical ID of the resource as defined in the template.', example='WebServer', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  status: string(name='Status', description='The status of the signal. Failure signals can cause stack creation or update to fail. If all signals are warnings, the stack cannot be created or updated. Valid values:

*   SUCCESS
*   FAILURE
*   WARNING', example='SUCCESS', position='Query'),
  uniqueId: string(name='UniqueId', description='The unique ID of the signal. The ID must be 1 to 64 characters in length. If multiple signals are sent to a single resource, each signal must have a unique ID.', example='27c7347b-352a-4377-accf-63d361c1****', position='Query'),
}

model SignalResourceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6'),
}

model SignalResourceResponse = {
  headers: map[string]string(name='headers'),
  body: SignalResourceResponseBody(name='body'),
}

async function signalResource(request: SignalResourceRequest): SignalResourceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SignalResource', 'POST', '/V2/SignalResource', 'json', false, 'json', request);
}

model StopStackGroupOperationRequest {
  operationId: string(name='OperationId', description='The ID of the operation.

You can call the [ListStackGroupOperations](~~151342~~) operation to obtain the operation ID.', example='6da106ca-1784-4a6f-a7e1-e723863d****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model StopStackGroupOperationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model StopStackGroupOperationResponse = {
  headers: map[string]string(name='headers'),
  body: StopStackGroupOperationResponseBody(name='body'),
}

/**
  * This topic provides an example on how to stop a stack group operation whose ID is `6da106ca-1784-4a6f-a7e1-e723863****` in the China (Hangzhou) region.
  *
 */
async function stopStackGroupOperation(request: StopStackGroupOperationRequest): StopStackGroupOperationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopStackGroupOperation', 'POST', '/V2/StopStackGroupOperation', 'json', false, 'json', request);
}

model TagResourcesRequest {
  regionId: string(name='RegionId', description='The region ID of the tag. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: [ string ](name='ResourceId', description='The ID of the resource.', example='7fee80e1-8c48-4c2f-8300-0f6dc40b****', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource to which you want to add the tag. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template
*   TemplateScratch: scenario', example='stack', position='Query'),
  tag: [ 
    {
      key: string(name='Key', description='The key of tag N that you want to add to the resource. You can specify up to 20 tag keys.

The tag key can be up to 128 characters in length, and cannot contain `http://` or `https://`. The tag value cannot start with `aliyun` or `acs:`.', example='FinanceDept'),
      value: string(name='Value', description='The value of tag N that you want to add to the resource. You can specify up to 20 tag values.

The tag value can be up to 128 characters in length, and cannot contain `http://` or `https://`. The tag value cannot start with `aliyun` or `acs:`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='C46FF5A8-C5F0-4024-8262-B16B639225A0'),
}

model TagResourcesResponse = {
  headers: map[string]string(name='headers'),
  body: TagResourcesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to create a tag and add the tag to a resource in a stack. In this example, the resource ID is `7fee80e1-8c48-4c2f-8300-0f6dc40b****`, the tag key is `FinanceDept`, and the tag value is `FinanceJoshua`.
  *
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TagResources', 'POST', '/', 'json', false, 'json', request);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to remove all tags from the resources. This parameter takes effect when the TagKey.N parameter is not specified in the request. Default value: false. Valid values:

*   true: removes all tags from the resources.
*   false: removes the specified tags from the resources.', example='true', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the tag. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: [ string ](name='ResourceId', description='A list of resource IDs.', example='46ec7b78-9d5e-4b21-aefd-448c90aa****', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   stack: stack
*   stackgroup: stack group
*   template: template
*   templatescratch: scenario', example='stack', position='Query'),
  tagKey?: [ string ](name='TagKey', description='The tag keys of the resource.', example='FinanceDept', position='Query'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='C46FF5A8-C5F0-4024-8262-B16B639225A0'),
}

model UntagResourcesResponse = {
  headers: map[string]string(name='headers'),
  body: UntagResourcesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to remove all tags from a stack that is deployed in the China (Hangzhou) region. In this example, the ID of the stack is `46ec7b78-9d5e-4b21-aefd-448c90aa****`.
  *
 */
async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UntagResources', 'POST', '/', 'json', false, 'json', request);
}

model UpdateStackRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  disableRollback?: boolean(name='DisableRollback', description='Specifies whether to roll back the resources in the stack when the stack fails to be updated.

Default value: false. Valid values:

*   true
*   false', example='false', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether only to validate the stack in the request. Default value: false. Valid values:

*   true: only validates the stack.
*   false: validates and updates the stack.

>  When no changes are made during the update, the following rules apply: If you set the DryRun parameter to false, the NotSupported error code is returned. If you set the DryRun parameter to true, no error is reported.', example='false', position='Query'),
  parallelism?: long(name='Parallelism', description='The maximum number of concurrent operations that can be performed on resources.

By default, this parameter is empty. You can set this parameter to an integer that is greater than or equal to 0.

> 
*   If you set this parameter to an integer that is greater than 0, the integer is used.
*   If you set this parameter to 0, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.
*   If you leave this parameter empty, the value that you specified for this parameter in the previous request is used. If you left this parameter empty in the previous request, no limit is imposed on ROS stacks. However, the default value in Terraform is used for Terraform stacks. In most cases, the default value in Terraform is 10.
*   If you set this parameter to a specific value, ROS associates the value with the stack. The value affects subsequent operations on the stack.', example='1', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N. If you do not specify the name and value of a parameter, ROS uses the default name and value in the template.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N. Maximum value of N: 200.

>  The Parameters parameter is optional. If you specify Parameters, you must specify both Parameters.N.ParameterKey and Parameters.N.ParameterValue.', example='12'),
    }
  ](name='Parameters', description='The parameters.', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role. Resource Orchestration Service (ROS) assumes the RAM role to create the stack and uses the credentials of the role to call the APIs of Alibaba Cloud services.

ROS assumes the RAM role to perform operations on the stack. If you have permissions to perform operations on the stack but do not have permissions to use the RAM role, ROS still assumes the RAM role. You must make sure that the least privileges are granted to the RAM role.

If you do not specify this parameter, ROS assumes the existing RAM role that is associated with the stack. If no RAM roles are available, ROS uses a temporary credential that is generated from the credentials of your account.

The name of the RAM role can be up to 64 bytes in length.', example='test-role', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the stack is deployed. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-beijing', position='Query'),
  replacementOption?: string(name='ReplacementOption', description='Specifies whether to enable the replacement update feature. If you cannot change resource properties, you can enable the replacement update feature to replace the resource properties. If the replacement update feature is used, the existing resource is deleted and a new resource is created. The physical ID of the new resource is different from the physical ID of the deleted resource.

Default value: Disabled. Valid values:

*   Enabled
*   Disabled

>  Changes have higher priorities than replacement updates.', example='Disabled', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-acfmxazb4ph6aiy****', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  stackPolicyBody?: string(name='StackPolicyBody', description='The structure that contains the stack policy body. The policy body must be 1 to 16,384 bytes in length.

>  You can specify only one of the StackPolicyBody and StackPolicyURL parameters.', example='{"Statement": [{"Action": "Update:*", "Resource": "*", "Effect": "Allow", "Principal": "*"}]}', position='Query'),
  stackPolicyDuringUpdateBody?: string(name='StackPolicyDuringUpdateBody', description='The structure that contains the body of the temporary overriding stack policy. The policy body must be 1 to 16,384 bytes in length.

If you want to update protected resources, you must specify a temporary overriding stack policy during the update. If you do not specify a temporary overriding stack policy, the existing policy that is associated with the stack is used.

This parameter takes effect only when the ChangeSetType parameter is set to UPDATE. You can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='{"Statement": [{"Effect": "Allow", "Action": "Update:*", "Principal": "*", "Resource": "*"}]}', position='Query'),
  stackPolicyDuringUpdateURL?: string(name='StackPolicyDuringUpdateURL', description='The URL of the file that contains the temporary overriding stack policy. The URL must point to a policy that is located on an HTTP or HTTPS web server or in an OSS bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The policy file can be up to 16,384 bytes in length.

>  If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

The URL can be up to 1,350 bytes in length.

If you want to update protected resources, you must specify a temporary overriding stack policy during the update. If you do not specify a temporary overriding stack policy, the existing policy that is associated with the stack is used. This parameter takes effect only when the ChangeSetType parameter is set to UPDATE. You can specify only one of the following parameters:

*   StackPolicyBody
*   StackPolicyURL
*   StackPolicyDuringUpdateBody
*   StackPolicyDuringUpdateURL', example='oss://ros-stack-policy/demo', position='Query'),
  stackPolicyURL?: string(name='StackPolicyURL', description='The URL of the file that contains the stack policy. The URL must point to a policy that is located on an HTTP or HTTPS web server or in an Object Storage Service (OSS) bucket, such as oss://ros/stack-policy/demo or oss://ros/stack-policy/demo?RegionId=cn-hangzhou. The policy file can be up to 16,384 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You can specify only one of the StackPolicyBody and StackPolicyURL parameters.

The URL can be up to 1,350 bytes in length.', example='oss://ros-stack-policy/demo', position='Query'),
  tags?: [ 
    {
      key: string(name='Key', description='The key of tag N that you want to add to the stack.

Valid values of N: 1 to 20.

> 
*   The Tags parameter is optional. If you specify Tags, you must specify Tags.N.Key.
*   The tag of a stack is propagated to each resource that supports the tag feature in the stack. For more information, see [Propagate tags](~~201421~~).', example='usage'),
      value?: string(name='Value', description='The value of tag N that you want to add to the stack.

Valid values of N: 1 to 20.

>  The tag of a stack is propagated to each resource that supports the tag feature in the stack. For more information, see [Propagate tags](~~201421~~).', example='test'),
    }
  ](name='Tags', description='The value of tag N that you want to add to the template.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='{"ROSTemplateFormatVersion": "2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The ID of the template. This parameter applies to shared templates and private templates.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an OSS bucket, such as oss://ros/template/demo or oss://ros/template/demo?RegionId=cn-hangzhou. The template body must be 1 to 524,288 bytes in length. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify only one of the following parameters: TemplateBody, TemplateURL, and TemplateId.', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The version of the template. This parameter takes effect only when the TemplateId parameter is specified.', example='v1', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', description='The timeout period for the update operation on the stack.

*   Default value: 60.
*   Unit: minutes.', example='10', position='Query'),
  usePreviousParameters?: boolean(name='UsePreviousParameters', description='Specifies whether to use the values specified in the previous request for the parameters that you do not specify in the current request.

Valid values:

*   true
*   false', example='true', position='Query'),
}

model UpdateStackResponseBody = {
  dryRunResult?: {
    parametersAllowedToBeModified?: [ string ](name='ParametersAllowedToBeModified', description='The parameters that can be modified. If you change only values of the parameters in a stack template and use the template to update the stack, no validation errors are caused.'),
    parametersCauseInterruptionIfModified?: [ string ](name='ParametersCauseInterruptionIfModified', description='The parameters whose changes cause service interruptions. If you change only values of the parameters in a stack template and use the template to update the stack, service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
    parametersConditionallyAllowedToBeModified?: [ string ](name='ParametersConditionallyAllowedToBeModified', description='The parameters that can be modified under specific conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the new values of the parameters determine whether validation errors are caused.'),
    parametersConditionallyCauseInterruptionIfModified?: [ string ](name='ParametersConditionallyCauseInterruptionIfModified', description='The parameters whose changes cause service interruptions under specific conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the new values and the update type determine whether service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
    parametersNotAllowedToBeModified?: [ string ](name='ParametersNotAllowedToBeModified', description='The parameters that cannot be modified. If you change only values of the parameters in a stack template and use the template to update the stack, validation errors are caused.'),
    parametersUncertainlyAllowedToBeModified?: [ string ](name='ParametersUncertainlyAllowedToBeModified', description='The parameters that can be modified under uncertain conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the actual running environment determines whether validation errors are caused.'),
    parametersUncertainlyCauseInterruptionIfModified?: [ string ](name='ParametersUncertainlyCauseInterruptionIfModified', description='The parameters whose changes cause service interruptions under uncertain conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the actual running environment determines whether service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
  }(name='DryRunResult', description='The validation result. This parameter is returned only if the DryRun parameter is set to true.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  stackId?: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****'),
}

model UpdateStackResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateStackResponseBody(name='body'),
}

/**
  * The values of parameters in the Parameters section vary based on the value that you specify for the UsePreviousParameters parameter in the request. If you do not add the parameters that are defined in the template to the Parameters section, take note of the following items:
  * *   UsePreviousParameters is set to false: If the template parameters have default values, the default values are used. Otherwise, you must specify values for the template parameters in the Parameters section.
  * *   UsePreviousParameters is set to true: If you specify values for the template parameters when you create a stack, the values are used. If you leave the template parameters empty when you create a stack but the template parameters have default values, the default values are used.
  * This topic describes how to update a stack. In this example, the template body of a stack whose ID is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****` in the China (Beijing) region is updated to `{"ROSTemplateFormatVersion": "2015-09-01"}`.
  *
 */
async function updateStack(request: UpdateStackRequest): UpdateStackResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateStack', 'POST', '/', 'json', false, 'json', request);
}

model UpdateStackGroupRequest {
  accountIds?: [ string ](name='AccountIds', description='The URL of the file that contains the template body. The URL must point to a template that is located on an HTTP or HTTPS web server or in an Alibaba Cloud Object Storage Service (OSS) bucket. The template body must be 1 to 524,288 bytes in length. Examples: oss://ros/template/demo and oss://ros/template/demo?RegionId=cn-hangzhou. If you do not specify the region ID of the OSS bucket, the value of the RegionId parameter is used.

>  You must specify only one of the TemplateBody, TemplateURL, and TemplateId parameters.', example='["12****"]', shrink='json', position='Query'),
  administrationRoleName?: string(name='AdministrationRoleName', description='The key of parameter N. If you do not specify the key and value of the parameter, ROS uses the default key and value in the template.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you set the Parameters parameter, you must set the Parameters.N.ParameterKey parameter.', example='AliyunROSStackGroupAdministrationRole', position='Query'),
  autoDeployment?: {
    enabled?: boolean(name='Enabled', description='The IDs of the members in the resource directory. You can specify a maximum of 20 member IDs.

>  To view the member IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the detailed information of a member](~~111624~~).', example='true'),
    retainStacksOnAccountRemoval?: boolean(name='RetainStacksOnAccountRemoval', description='The IDs of the members in the resource directory. You can specify a maximum of 20 member IDs.

>  To view the member IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the detailed information of a member](~~111624~~).', example='true'),
  }(name='AutoDeployment', description='The IDs of the folders in the resource directory. You can specify up to five folder IDs.

You can create stacks within all members in the specified folders. If you create stacks in the Root folder, the stacks are created within all members in the resource directory.

>  To view the folder IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the basic information of a folder](~~111223~~).', example='{"Enabled": true, "RetainStacksOnAccountRemoval": true}', shrink='json', position='Query'),
  capabilities?: [ string ](name='Capabilities', position='Query'),
  clientToken?: string(name='ClientToken', description='The ID of the template. This parameter applies to shared and private templates.

>  You must specify only one of the TemplateBody, TemplateURL, and TemplateId parameters.', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  deploymentTargets?: {
    accountIds?: [ string ](name='AccountIds'),
    rdFolderIds?: [ string ](name='RdFolderIds', description='The ID of the operation.'),
  }(name='DeploymentTargets', description='The ID of the request.', example='{"RdFolderIds": ["fd-4PvlVLOL8v"]}', shrink='json', position='Query'),
  description?: string(name='Description', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length. If the length of the template body exceeds the upper limit, we recommend that you add parameters to the HTTP POST request body to prevent request failures caused by excessively long URLs.

>  You must specify only one of the TemplateBody, TemplateURL, and TemplateId parameters.', example='My Stack Group', position='Query'),
  executionRoleName?: string(name='ExecutionRoleName', description='The value of parameter N.

Maximum value of N: 200.

>  The Parameters parameter is optional. If you set the Parameters parameter, you must set the Parameters.N.ParameterValue parameter.', example='AliyunROSStackGroupExecutionRole', position='Query'),
  operationDescription?: string(name='OperationDescription', description='The version of the template. If you do not specify a version, the latest version is used.

>  This parameter takes effect only if the TemplateId parameter is set.', example='Update stack instances in hangzhou', position='Query'),
  operationPreferences?: map[string]any(name='OperationPreferences', description='The list of parameters.', example='{"FailureToleranceCount": 1,"MaxConcurrentCount": 2}', shrink='json', position='Query'),
  parameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='Specifies whether to retain stacks in a member when you remove the member from the folder.

Valid values:

*   true: retains the stacks.
*   false: deletes the stacks.

>  This parameter is required if the Enabled parameter is set to true.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The folders in which you want to use service-managed permissions to update stacks.', example='1'),
    }
  ](name='Parameters', description='Specifies whether to enable automatic deployment.

Valid values:

*   true: enables automatic deployment. If you add a member to the folder to which the stack group belongs after you enable automatic deployment, the stack group deploys its stack instances within the member. If you remove a member from the folder, the stack group deletes stack instances that are deployed within the member.
*   false: disables automatic deployment. After you disable automatic deployment, the stack instances remain unchanged even if members in the folder change.', position='Query'),
  permissionModel?: string(name='PermissionModel', description='The folder IDs in the resource directory. You can specify a maximum of five folder IDs.

You must set at least one of the RdFolderIds and AccountIds parameters. The parameters are subject to the following items:

*   If you set only the RdFolderIds parameter, stacks are deployed within all the members in the specified folders. If you specify the Root folder, ROS deploys the stacks within all the members in the resource directory.
*   If you set only the AccountIds parameter, stacks are deployed within the specified members.
*   If you set both parameters, the accounts specified by AccountIds must be contained in the folders specified by RdFolderIds.

>  To view the folder IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the basic information of a folder](~~111223~~).', example='SELF_MANAGED', position='Query'),
  regionId: string(name='RegionId', description='The region IDs of stack instances. You can specify a maximum of 20 region IDs.', example='cn-hangzhou', position='Query'),
  regionIds?: [ string ](name='RegionIds', description='The description of the operation to update the stack group.', example='["cn-hangzhou", "cn-beijing"]', shrink='json', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The region IDs of stack instances. You can specify a maximum of 20 region IDs.', example='MyStackGroup', position='Query'),
  templateBody?: string(name='TemplateBody', description='The name of the RAM role to be assumed by the administrator account in ROS. This parameter is required if you want to grant self-managed permissions to the stack group. If you do not specify a value for this parameter, the default value AliyunROSStackGroupAdministrationRole is used. You can use the administrator role in ROS to assume the execution role AliyunROSStackGroupExecutionRole to perform operations on the stacks that correspond to stack instances in the stack group.

The name must be 1 to 64 characters in length, and can contain letters, digits, and hyphens (-).', example='{"ROSTemplateFormatVersion": "2015-09-01"}', position='Query'),
  templateId?: string(name='TemplateId', description='The permission model.

Valid values:

*   SELF_MANAGED: the self-managed permission model. This is the default value. If you use the self-managed model for the stack group, you must create RAM roles for the administrator and execution accounts, and establish a trust relationship between the accounts to deploy stacks within the execution account.
*   SERVICE_MANAGED: the service-managed permission model. If you use the service-managed model for the stack group, ROS creates service-linked roles for the administrator and execution accounts, and the administrator account uses its role to deploy stacks within the execution account.

> 
*   If stack instances have been created in the stack group, you cannot switch the permission mode of the stack group.
*   If you want to use the service-managed permission model to deploy stacks, your account must be the management account or a delegated administrator account of your resource directory and the trusted access feature is enabled for the account. For more information, see [Step 1: (Optional) Create a delegated administrator account](~~308253~~) and [Step 2: Enable trusted access](~~298229~~).', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateURL?: string(name='TemplateURL', description='The name of the RAM role to be assumed by the administrator role AliyunROSStackGroupAdministrationRole. This parameter is required if you want to grant self-managed permissions to the stack group. If you do not specify a value for this parameter, the default value AliyunROSStackGroupExecutionRole is used. You can use this role in ROS to perform operations on the stacks that correspond to stack instances in the stack group.

The name must be 1 to 64 characters in length, and can contain letters, digits, and hyphens (-).', example='oss://ros-template/demo', position='Query'),
  templateVersion?: string(name='TemplateVersion', description='The information about automatic deployment settings.

>  This parameter is required only if the PermissionModel parameter is set to SERVICE_MANAGED.', example='v1', position='Query'),
}

model UpdateStackGroupResponseBody = {
  operationId?: string(name='OperationId', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
  requestId?: string(name='RequestId', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model UpdateStackGroupResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateStackGroupResponseBody(name='body'),
}

/**
  * The name of the stack group. The name must be unique within a region.
  * The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or a letter.
  *
 */
async function updateStackGroup(request: UpdateStackGroupRequest): UpdateStackGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateStackGroup', 'POST', '/', 'json', false, 'json', request);
}

model UpdateStackInstancesRequest {
  accountIds?: [ string ](name='AccountIds', description='The IDs of the accounts within which the self-managed permission model is used to deploy stacks. You can specify up to 20 account IDs.

>  This parameter is required if you use the self-managed permission model to update the stacks.', example='["151266687691****","141261387191****"]', shrink='json', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that the value is unique among different requests.

The token can be up to 64 characters in length, and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [Ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  deploymentTargets?: {
    accountIds?: [ string ](name='AccountIds', description='The IDs of the members in the resource directory. You can specify up to 20 member IDs.

>  To view the member IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the detailed information of a member](~~111624~~).'),
    rdFolderIds?: [ string ](name='RdFolderIds', description='The IDs of the folders in the resource directory. You can specify up to five folder IDs.

You must specify at least one of the RdFolderIds and AccountIds parameters. The parameters are subject to the following rules:

*   If you specify only the RdFolderIds parameter, stacks are deployed within all members in the specified folders. If you select the Root folder, stacks are deployed within all members in the resource directory.
*   If you specify only the AccountIds parameter, stacks are deployed within the specified members.
*   If you specify both parameters, the accounts specified by using the AccountIds parameter must be contained in the folders specified by using the RdFolderIds parameter. In this case, stacks are deployed within the specified members that are contained in the specified folders.

>  To view the folder IDs, go to the **Overview** page in the **Resource Management** console. For more information, see [View the basic information of a folder](~~111223~~).'),
  }(name='DeploymentTargets', description='The folders in which the service-managed permission model is used to deploy stacks.

>  This parameter is required if you use the service-managed permission model to update the stacks.', shrink='json', position='Query'),
  operationDescription?: string(name='OperationDescription', description='The description of the operation that you want to perform to update the stacks.

The description must be 1 to 256 characters in length.', example='Update stack instances in hangzhou and beijing', position='Query'),
  operationPreferences?: map[string]any(name='OperationPreferences', description='The custom preferences on how Resource Orchestration Service (ROS) updates the stacks.

The following parameters are included:

*   {"FailureToleranceCount": N}

    The number of accounts within which stack operation failures can occur in each region. If the value of this parameter is exceeded in a region, ROS stops the operation in the region. If the operation is stopped in one region, the operation is no longer performed in other regions.

    Valid values of N: 0 to 20.

    If you do not specify the FailureToleranceCount parameter, the default value 0 is used.

*   {"FailureTolerancePercentage": N}

    The percentage of the number of accounts within which stack operation failures can occur to the total number of accounts in each region. If the value of this parameter is exceeded in a region, ROS stops the operation in the region.

    Valid values of N: 0 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify a value for the FailureTolerancePercentage parameter, the default value 0 is used.

*   {"MaxConcurrentCount": N}

    The maximum number of accounts within which stacks are deployed at the same time in each region.

    Valid values of N: 1 to 20.

    If you do not specify the MaxConcurrentCount parameter, the default value 1 is used.

*   {"MaxConcurrentPercentage": N}

    The percentage of the maximum number of accounts within which stacks are deployed at the same time to the total number of accounts in each region.

    Valid values: 1 to 100. If the numeric value in the percentage is not an integer, ROS rounds the value down to the nearest integer.

    If you do not specify the MaxConcurrentPercentage parameter, the default value 1 is used.

*   {"RegionConcurrencyType": N}

    The mode that you want to use to deploy stacks across regions. Default value: SEQUENTIAL. Valid values:

    *   SEQUENTIAL: deploys stacks in each specified region based on the specified sequence of regions. ROS deploys stacks in one region at a time.
    *   PARALLEL: deploys stacks in parallel in all specified regions.

Separate multiple parameters with commas (,).

> 
*   You can specify only one of the MaxConcurrentCount and MaxConcurrentPercentage parameters.
*   You can specify one of the FailureToleranceCount and FailureTolerancePercentage parameters.', example='{"FailureToleranceCount": 1,"MaxConcurrentCount": 2}', shrink='json', position='Query'),
  parameterOverrides?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of parameter N that you want to use to override a specific parameter. If you do not specify the name of parameter N, ROS uses the name that you specify when you create the stack group.

Maximum value of N: 200.

> 
*   The ParameterOverrides parameter is optional.
*   If you specify the ParameterOverrides parameter, you must specify the ParameterOverrides.N.ParameterKey and ParameterOverrides.N.ParameterValue parameters.', example='Amount'),
      parameterValue: string(name='ParameterValue', description='The value of parameter N that you want to use to override a specific parameter. If you do not specify the name and value of parameter N, ROS uses the name and value that you specify when you create the stack group.

Maximum value of N: 200.

> 
*   The ParameterOverrides parameter is optional.
*   If you specify the ParameterOverrides parameter, you must specify the ParameterOverrides.N.ParameterKey and ParameterOverrides.N.ParameterValue parameters.', example='1'),
    }
  ](name='ParameterOverrides', description='test', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region to which the stack group belongs. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  regionIds: [ string ](name='RegionIds', description='The IDs of the regions in which you want to update the stacks. You can specify up to 20 region IDs.', example='["cn-hangzhou", "cn-beijing"]', shrink='json', position='Query'),
  stackGroupName: string(name='StackGroupName', description='The name of the stack group. The name must be unique in a region.

The name can be up to 255 characters in length, and can contain digits, letters, hyphens (-), and underscores (\\_). The name must start with a digit or letter.', example='MyStackGroup', position='Query'),
  timeoutInMinutes?: long(name='TimeoutInMinutes', description='The timeout period for the update operation on the stack.

*   Default value: 60.
*   Unit: minutes.', example='10', minimum=10, maximum=1440, position='Query'),
}

model UpdateStackInstancesResponseBody = {
  operationId?: string(name='OperationId', description='The ID of the operation.', example='6da106ca-1784-4a6f-a7e1-e723863d****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='14A07460-EBE7-47CA-9757-12CC4761D47A'),
}

model UpdateStackInstancesResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateStackInstancesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to update stacks in a stack group. In this example, the stacks that are deployed in a stack group named `MyStackGroup` are updated. The stacks are deployed within the `151266687691****` and `141261387191****` Alibaba Cloud accounts in the China (Hangzhou) and China (Beijing) regions. The stack group is granted self-managed permissions and deployed in the China (Hangzhou) region.
  *
 */
async function updateStackInstances(request: UpdateStackInstancesRequest): UpdateStackInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateStackInstances', 'POST', '/', 'json', false, 'json', request);
}

model UpdateStackTemplateByResourcesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests.

The token can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to only preview the corrected template in this request. Default value: false. Valid values:

*   true: returns the content of the corrected template and does not correct the template. After Resource Orchestration Service (ROS) compares the corrected template with the original template, ROS determines whether to execute the correction.
*   false: corrects the template to eliminate drift.

>  We recommend that you set the DryRun parameter to true to preview the corrected template. If the template content meets expectations, set the DryRun parameter to false to execute the correction.', example='false', position='Query'),
  logicalResourceId?: [ string ](name='LogicalResourceId', description='The logical ID of resource.', example='Vpc', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the stack. You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  stackId: string(name='StackId', description='The ID of the stack.', example='4a6c9851-3b0f-4f5f-b4ca-a14bf691****', position='Query'),
  templateFormat?: string(name='TemplateFormat', description='The format of the returned template. Default value: JSON. Valid values:

*   JSON
*   YAML', example='JSON', position='Query'),
}

model UpdateStackTemplateByResourcesResponseBody = {
  newTemplateBody?: string(name='NewTemplateBody', description='The template content after correction.', example='{\\"ROSTemplateFormatVersion\\": \\"2015-09-01\\", \\"Resources\\": {\\"Vpc\\": {\\"Type\\": \\"ALIYUN::ECS::VPC\\", \\"Properties\\": {\\"VpcName\\": \\"test\\", \\"CidrBlock\\": \\"192.168.0.0/16\\", \\"Description\\": \\"test2\\"}}}, \\"Outputs\\": {\\"VpcId\\": {\\"Value\\": {\\"Fn::GetAtt\\": [\\"Vpc\\", \\"VpcId\\"]}}}}'),
  oldTemplateBody?: string(name='OldTemplateBody', description='The template content before correction.', example='{\\"ROSTemplateFormatVersion\\": \\"2015-09-01\\", \\"Resources\\": {\\"Vpc\\": {\\"Type\\": \\"ALIYUN::ECS::VPC\\", \\"Properties\\": {\\"VpcName\\": \\"test\\", \\"CidrBlock\\": \\"192.168.0.0/16\\", \\"Description\\": \\"test1\\"}}}, \\"Outputs\\": {\\"VpcId\\": {\\"Value\\": {\\"Fn::GetAtt\\": [\\"Vpc\\", \\"VpcId\\"]}}}}'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
}

model UpdateStackTemplateByResourcesResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateStackTemplateByResourcesResponseBody(name='body'),
}

/**
  * Limits: You can eliminate only drift on stacks that have drifted. You must call the [DetectStackDrift](~~155094~~) operation to perform drift detection on a stack, call the [GetStackDriftDetectionStatus](~~155097~~) operation to query the drift status of the stack to make sure that the stack has drifted, and then call the UpdateStackTemplateByResources operation to eliminate drift.
  * In this topic, drift is eliminated for a stack whose ID is `4a6c9851-3b0f-4f5f-b4ca-a14bf691****`. The stack is deployed in the China (Hangzhou) region.
  *
 */
async function updateStackTemplateByResources(request: UpdateStackTemplateByResourcesRequest): UpdateStackTemplateByResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateStackTemplateByResources', 'POST', '/V2/UpdateStackTemplateByResources', 'json', false, 'json', request);
}

model UpdateTemplateRequest {
  description?: string(name='Description', description='The description of the template. It can be up to 256 characters in length.', example='It is a demo.', position='Query'),
  templateBody?: string(name='TemplateBody', description='The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.

If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.

You can specify only one of the TemplateBody and TemplateURL parameters.', example='{"ROSTemplateFormatVersion":"2015-09-01"}', position='Query'),
  templateId: string(name='TemplateId', description='The ID of the template. This parameter applies to shared and private templates.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****', position='Query'),
  templateName?: string(name='TemplateName', description='The name of the template.

The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (\\_). It must start with a digit or letter.', example='MyTemplate', position='Query'),
  templateURL?: string(name='TemplateURL', description='The URL of the file that contains the template body. The URL must point to a template located in an HTTP or HTTPS web server or an Alibaba Cloud OSS bucket. Examples: oss://ros/template/demo and oss://ros/template/demo?RegionId=cn-hangzhou. The template can be up to 524,288 bytes in length, and the URL can be up to 1,024 bytes in length.

>  If the region of the OSS bucket is not specified, the RegionId value is used.

You can specify only one of the TemplateBody and TemplateURL parameters.', example='oss://ros/template/demo', position='Query'),
}

model UpdateTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8C5D90E1-66B6-496C-9371-3807F8DA80A8'),
  templateId?: string(name='TemplateId', description='The ID of the template.', example='5ecd1e10-b0e9-4389-a565-e4c15efc****'),
}

model UpdateTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateTemplateResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   If you specify the TemplateBody or TemplateURL parameter, the existing version number is automatically incremented by 1 after the template is updated. For example, the version is changed from v1 to V2.
  * *   If you do not specify the TemplateBody or TemplateURL parameter, the version number remains unchanged.
  * *   A template can have up to 100 versions. If the number of templates reaches the upper limit, the template fails to be updated. You must create another template.
  *
 */
async function updateTemplate(request: UpdateTemplateRequest): UpdateTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateTemplate', 'POST', '/V2/UpdateTemplate', 'json', false, 'json', request);
}

model UpdateTemplateScratchRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among the different requests. The token can be up to 64 characters in length and can contain letters, digits, hyphens (-), and underscores (\\_).

For more information, see [How to ensure idempotence](~~134212~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  description?: string(name='Description', description='The description of the scenario.', example='The description of the scenario.', position='Query'),
  executionMode?: string(name='ExecutionMode', description='The execution mode. Default value: Async. Valid values:

*   Async: asynchronous mode
*   Sync: synchronous mode

>  If you have a wide scope of resources, Sync takes longer. If you set ExecutionMode to Sync, we recommend that you set ClientToken to prevent the execution from timing out.', example='Sync', position='Query'),
  logicalIdStrategy?: string(name='LogicalIdStrategy', description='The generation policy of the logical ID. Default value: LongTypePrefixAndIndexSuffix. Valid values:

*   LongTypePrefixAndIndexSuffix: long-type prefix + index-type suffix
*   LongTypePrefixAndHashSuffix: long-type prefix + hash-type suffix
*   ShortTypePrefixAndHashSuffix: short-type prefix + hash-type suffix', example='LongTypePrefixAndIndexSuffix', position='Query'),
  preferenceParameters?: [ 
    {
      parameterKey: string(name='ParameterKey', description='The name of a request parameter.

For more information about ParameterKey, see **Additional description of request parameters**.

> 
*   PreferenceParameters is optional. If you set PreferenceParameters, you must specify both ParameterKey and ParameterValue.
*   If you set TemplateScratchType to ResourceImport, you must set ParameterKey to DeletionPolicy.', example='DeletionPolicy'),
      parameterValue: string(name='ParameterValue', description='The value of a request parameter. The value of ParameterValue varies based on the value of ParameterKey.

For more information about ParameterValue, see **Additional description of request parameters**.

>  PreferenceParameters is optional. If you set PreferenceParameters, you must specify both ParameterKey and ParameterValue.', example='Retain'),
    }
  ](name='PreferenceParameters', description='The parameters that are configured in the scenario.', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which the scenario is created.

You can call the [DescribeRegions](~~131035~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  sourceResourceGroup?: {
    resourceGroupId: string(name='ResourceGroupId', description='The ID of the source resource group.', example='rg-acfmzawhxxc****'),
    resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types. If you specify this parameter, only the resources of the specified types and in the specified resource groups are scanned. If you do not specify this parameter, all the resources in the specified resource groups are scanned.

You can specify up to 20 resource types.'),
  }(name='SourceResourceGroup', description='The source resource group.', shrink='json', position='Query'),
  sourceResources?: [ 
    {
      resourceId: string(name='ResourceId', description='The ID of the resource.', example='vpc-bp1m6fww66xbntjyc****'),
      resourceType: string(name='ResourceType', description='The type of the resource.', example='ALIYUN::ECS::VPC'),
    }
  ](name='SourceResources', description='The source resource.', shrink='json', position='Query'),
  sourceTag?: {
    resourceTags: map[string]any(name='ResourceTags', description='The source tags that consist of key-value pairs.

If you want to specify only the tag key, you must set the tag value to an empty string. Example: {"TagKey": ""}.

You can configure up to 10 source tags.', example='{"a": "b"}'),
    resourceTypeFilter?: [ string ](name='ResourceTypeFilter', description='The filter for resource types. If you specify this parameter, only the resources of the specified types and have the specified tags are scanned. If you do not specify this parameter, all resources that have the specified tags are scanned.

You can specify up to 20 resource types.'),
  }(name='SourceTag', description='The source tag.', shrink='json', position='Query'),
  templateScratchId: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****', position='Query'),
}

model UpdateTemplateScratchResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='221DA822-B8CF-50DF-A9D2-BA197BF97BD5'),
  templateScratchId?: string(name='TemplateScratchId', description='The ID of the scenario.', example='ts-7f7a704cf71c49a6****'),
}

model UpdateTemplateScratchResponse = {
  headers: map[string]string(name='headers'),
  body: UpdateTemplateScratchResponseBody(name='body'),
}

/**
  * In this topic, the `ts-7f7a704cf71c49a6****` scenario that is created in the China (Hangzhou) region is updated. In this scenario, the ID of the virtual private cloud (VPC) is updated to `ts-7f7a704cf71c49a6****`.
  *
 */
async function updateTemplateScratch(request: UpdateTemplateScratchRequest): UpdateTemplateScratchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateTemplateScratch', 'POST', '/', 'json', false, 'json', request);
}

model ValidateTemplateRequest {
  clientToken?: string(name='ClientToken', description='The regular resource types.', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  regionId?: string(name='RegionId', description='The description of the output item.', example='cn-hangzhou', position='Query'),
  templateBody?: string(name='TemplateBody', position='Body'),
  templateURL?: string(name='TemplateURL', description='The name of the output item.', example='oss://ros/template/demo', position='Query'),
  validationOption?: string(name='ValidationOption', description='The DataSource resource types.', example='None', position='Query'),
}

model ValidateTemplateResponseBody = {
  description?: string(name='Description', description='The DataSource resource types.', example='No description'),
  outputs?: [ 
    {
      description?: string(name='Description', description='The update information about the stack.', example='The instance ID of my ECS.'),
      label?: string(name='Label', description='The parameters that can be modified. If you change only values of the parameters in a stack template and use the template to update the stack, no validation errors are caused.', example='Instance ID'),
      outputKey?: string(name='OutputKey', description='The pattern in which the logical IDs of regular resources are formed.

If resources are defined in an ROS template, the following rules apply:

*   Resource whose definition does not contain the `Count` parameter: If the resource name defined in the template is `server`, the value of the LogicalResourceIdPattern and `ResourcePath` parameters is `server`.
*   Resource whose definition contains the `Count` parameter: If the resource name defined in the template is `server`, the value of the LogicalResourceIdPattern parameter is `server[*]`, and the value of the `ResourcePath` parameter is `server`.

If resources and [modules](https://www.terraform.io/language/modules) are defined in a Terraform template, the following rules apply:

*   Resource and module whose definitions do not contain the [count](https://www.terraform.io/language/meta-arguments/count) or [for_each](https://www.terraform.io/language/meta-arguments/for_each) parameter: If the resource name defined in the template is `server`, the value of the LogicalResourceIdPattern and `ResourcePath` parameters is `server`.
*   Resource and module whose definitions contain the [count](https://www.terraform.io/language/meta-arguments/count) or [for_each](https://www.terraform.io/language/meta-arguments/for_each) parameter: If the resource name defined in the template is `server`, the value of the LogicalResourceIdPattern parameter is `server[*]`, and the value of the `ResourcePath` parameter is `server`.

Examples of the LogicalResourceIdPattern parameter for resources in a Terraform template:

*   Valid values of the LogicalResourceIdPattern parameter if a resource belongs to the root module:

    *   `server`: In this case, the `count` or `for_each` parameter is not contained in the resource. The value of the `ResourcePath` parameter is `server`.
    *   `server[*]`: In this case, the `count` or `for_each` parameter is contained in the resource. The value of the `ResourcePath` parameter is `server`.

*   Valid values of the LogicalResourceIdPattern parameter if a resource belongs to a child module:

    *   `app.server`: In this case, the `count` or `for_each` parameter is not contained in the `app` module and the `server` resource. The value of the `ResourcePath` parameter is `app.server`.
    *   `app.server[*]`: In this case, the `count` or `for_each` parameter is contained in the `server` resource, but not in the `app` module. The value of the `ResourcePath` parameter is `app.server`.
    *   `app[*].server`: In this case, the `count` or `for_each` parameter is contained in the `app` module, but not in the `server` resource. The value of the `ResourcePath` parameter is `app.server`.
    *   `app[*].server[*]`: In this case, the `count` or `for_each` parameter is contained in the `app` module and the `server` resource. The value of the `ResourcePath` parameter is `app.server`.
    *   `app.app_group[*].server`: In this case, the `count` or `for_each` parameter is contained in the `app_group` module, but not in the `app` module and the `server` resource. The value of the `ResourcePath` parameter is `app.app_group.server`. The `app_group` module is a child module of the `app` module.', example='instance_id'),
    }
  ](name='Outputs', description='The path of the regular resource. In most cases, the path of a regular resource is the same as the resource name.'),
  parameters?: [  map[string]any ](name='Parameters', description='The regular resources that are defined in the template.

> 
*   For a Resource Orchestration Service (ROS) template, the resource whose definition contains the `Count` parameter is not displayed as a list.
*   For a Terraform template, the resource whose definition contains the `count` or `for_each` parameter is not displayed as a list.'),
  requestId?: string(name='RequestId', description='The regular resource type.', example='B288A0BE-D927-4888-B0F7-B35EF84B6E6F'),
  resourceTypes?: {
    dataSources?: [ string ](name='DataSources', description='The parameters that can be modified under specific conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the new values of the parameters determine whether validation errors are caused.'),
    resources?: [ string ](name='Resources', description='The parameters whose changes cause service interruptions. If you change only values of the parameters in a stack template and use the template to update the stack, service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
  }(name='ResourceTypes', description='The parameters that can be modified. If you change only values of the parameters in a stack template and use the template to update the stack, no validation errors are caused.'),
  resources?: [ 
    {
      logicalResourceIdPattern?: string(name='LogicalResourceIdPattern', description='The parameters that cannot be modified. If you change only values of the parameters in a stack template and use the template to update the stack, validation errors are caused.', example='server'),
      resourcePath?: string(name='ResourcePath', description='The parameters that cannot be modified. If you change only values of the parameters in a stack template and use the template to update the stack, validation errors are caused.', example='server'),
      resourceType?: string(name='ResourceType', description='The parameters whose changes cause service interruptions under specific conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the new values and the update type determine whether service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.', example='ALIYUN::ECS::InstanceGroup'),
    }
  ](name='Resources', description='The parameters whose changes cause service interruptions under specific conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the new values and the update type determine whether service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
  updateInfo?: {
    parametersAllowedToBeModified?: [ string ](name='ParametersAllowedToBeModified', description='The parameters that can be modified under uncertain conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the actual running environment determines whether validation errors are caused.'),
    parametersCauseInterruptionIfModified?: [ string ](name='ParametersCauseInterruptionIfModified', description='The parameters whose changes cause service interruptions under uncertain conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the actual running environment determines whether service interruptions are caused.

> 
*   This parameter is supported only for a small number of resource types.
*   This parameter is valid only for changes that are made on ROS stacks.'),
    parametersConditionallyAllowedToBeModified?: [ string ](name='ParametersConditionallyAllowedToBeModified'),
    parametersConditionallyCauseInterruptionIfModified?: [ string ](name='ParametersConditionallyCauseInterruptionIfModified'),
    parametersNotAllowedToBeModified?: [ string ](name='ParametersNotAllowedToBeModified'),
    parametersUncertainlyAllowedToBeModified?: [ string ](name='ParametersUncertainlyAllowedToBeModified'),
    parametersUncertainlyCauseInterruptionIfModified?: [ string ](name='ParametersUncertainlyCauseInterruptionIfModified'),
  }(name='UpdateInfo', description='The parameters that can be modified under uncertain conditions. If you change only values of the parameters in a stack template and use the template to update the stack, the actual running environment determines whether validation errors are caused.'),
}

model ValidateTemplateResponse = {
  headers: map[string]string(name='headers'),
  body: ValidateTemplateResponseBody(name='body'),
}

/**
  * The description of the template.
  *
 */
async function validateTemplate(request: ValidateTemplateRequest): ValidateTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ValidateTemplate', 'POST', '/', 'json', true, 'form', request);
}

