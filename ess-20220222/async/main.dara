/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Ess';
  @version = '2022-02-22';
  @endpointRule = 'regional';
  @endpointMap = {
    cn-qingdao = 'ess.aliyuncs.com',
    cn-beijing = 'ess.aliyuncs.com',
    cn-hangzhou = 'ess.aliyuncs.com',
    cn-shanghai = 'ess.aliyuncs.com',
    cn-shenzhen = 'ess.aliyuncs.com',
    cn-hongkong = 'ess.aliyuncs.com',
    ap-southeast-1 = 'ess.aliyuncs.com',
    us-east-1 = 'ess.aliyuncs.com',
    us-west-1 = 'ess.aliyuncs.com',
    cn-shanghai-finance-1 = 'ess.aliyuncs.com',
    cn-shenzhen-finance-1 = 'ess.aliyuncs.com',
    cn-north-2-gov-1 = 'ess.aliyuncs.com',
    ap-northeast-2-pop = 'ess.aliyuncs.com',
    cn-beijing-finance-pop = 'ess.aliyuncs.com',
    cn-beijing-gov-1 = 'ess.aliyuncs.com',
    cn-beijing-nu16-b01 = 'ess.aliyuncs.com',
    cn-edge-1 = 'ess.aliyuncs.com',
    cn-fujian = 'ess.aliyuncs.com',
    cn-haidian-cm12-c01 = 'ess.aliyuncs.com',
    cn-hangzhou-bj-b01 = 'ess.aliyuncs.com',
    cn-hangzhou-finance = 'ess.aliyuncs.com',
    cn-hangzhou-internal-prod-1 = 'ess.aliyuncs.com',
    cn-hangzhou-internal-test-1 = 'ess.aliyuncs.com',
    cn-hangzhou-internal-test-2 = 'ess.aliyuncs.com',
    cn-hangzhou-internal-test-3 = 'ess.aliyuncs.com',
    cn-hangzhou-test-306 = 'ess.aliyuncs.com',
    cn-hongkong-finance-pop = 'ess.aliyuncs.com',
    cn-huhehaote-nebula-1 = 'ess.aliyuncs.com',
    cn-qingdao-nebula = 'ess.aliyuncs.com',
    cn-shanghai-et15-b01 = 'ess.aliyuncs.com',
    cn-shanghai-et2-b01 = 'ess.aliyuncs.com',
    cn-shanghai-inner = 'ess.aliyuncs.com',
    cn-shanghai-internal-test-1 = 'ess.aliyuncs.com',
    cn-shenzhen-inner = 'ess.aliyuncs.com',
    cn-shenzhen-st4-d01 = 'ess.aliyuncs.com',
    cn-shenzhen-su18-b01 = 'ess.aliyuncs.com',
    cn-wuhan = 'ess.aliyuncs.com',
    cn-yushanfang = 'ess.aliyuncs.com',
    cn-zhangbei = 'ess.aliyuncs.com',
    cn-zhangbei-na61-b01 = 'ess.aliyuncs.com',
    cn-zhangjiakou-na62-a01 = 'ess.aliyuncs.com',
    cn-zhengzhou-nebula-1 = 'ess.aliyuncs.com',
    eu-west-1-oxs = 'ess.aliyuncs.com',
    rus-west-1-pop = 'ess.aliyuncs.com',
  };
}

function close(): void {
  @handler.close();
}

model ApplyScalingGroupRequest {
  content: string(name='Content', example='apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        k8s.aliyun.com/eip-bandwidth: 10
        k8s.aliyun.com/eci-with-eip: true
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80', position='Query'),
  format?: string(name='Format', example='YAML', position='Query'),
  regionId?: string(name='RegionId', example='cn-hangzhou', position='Query'),
}

model ApplyScalingGroupResponseBody = {
  requestId?: string(name='RequestId', example='CC107349-57B7-4405-B1BF-9BF5AF7F****'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1igpak5ft1flyp****'),
}

model ApplyScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ApplyScalingGroupResponseBody(name='body'),
}

async function applyScalingGroup(request: ApplyScalingGroupRequest): ApplyScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ApplyScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model AttachAlbServerGroupsRequest {
  albServerGroups: [ 
    {
      albServerGroupId: string(name='AlbServerGroupId', description='The ID of the ALB server group.

You can associate only a limited number of ALB server groups with a scaling group. To view the quota or manually request a quota increase, go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas).', example='sgp-ddwb0y0g6y9bjm****'),
      port: int32(name='Port', description='The port number used by the ECS instance after the ECS instance is added to the ALB server group. Valid values: 1 to 65535.', example='22'),
      weight: int32(name='Weight', description='The weight of the ECS instance as a backend server after the instance is added to the ALB server group.

If you increase the weight of an ECS instance in an ALB server group, the number of access requests that are forwarded to the ECS instance increases. If you set the Weight parameter for an ECS instance to 0, no access requests are forwarded to the ECS instance. Valid values: 0 to 100.', example='100'),
    }
  ](name='AlbServerGroups', description='Details of the ALB server group.', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests. The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure the idempotence of a request](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceAttach?: boolean(name='ForceAttach', description='Specifies whether to add the ECS instances in the scaling group to the ALB server group. Valid values:

*   true: adds the ECS instances to the ALB server group and returns the value of the `ScalingActivityId` parameter. You can check whether the ECS instances are added to the ALB server group by using the ID of the scaling activity.
*   false: does not add the ECS instances to the ALB server group.

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group, such as cn-hangzhou and cn-shanghai. For more information, see [Regions and zones](~~40654~~).', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model AttachAlbServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity in which Auto Scaling associates the ALB server group with the scaling group and adds ECS instances in the scaling group to the ALB server group. This parameter is returned only if you set the `ForceAttach` parameter to `true`.', example='asa-2ze6wxj8vsohn6j9****'),
}

model AttachAlbServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachAlbServerGroupsResponseBody(name='body'),
}

/**
  * Before you associate an ALB server group with a scaling group, make sure that the following requirements are met:
  * *   The scaling group resides in a virtual private cloud (VPC). The scaling group and the ALB server group must reside in the same VPC.
  * *   The ALB server group is in the Available state.
  * *   You can associate only a limited number of ALB server groups with a scaling group. To view the quota or manually request a quota increase, go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas).
  *
 */
async function attachAlbServerGroups(request: AttachAlbServerGroupsRequest): AttachAlbServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachAlbServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model AttachDBInstancesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure the idempotence of a request](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  DBInstances: [ string ](name='DBInstances', description='The ID of the ApsaraDB RDS instance.', position='Query'),
  forceAttach?: boolean(name='ForceAttach', description='Specifies whether to add the private IP addresses of all instances in the scaling group to the IP address whitelist of the ApsaraDB RDS instance. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1avr6ensitts3w****', position='Query'),
}

model AttachDBInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model AttachDBInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachDBInstancesResponseBody(name='body'),
}

/**
  * Before you associate an ApsaraDB RDS instance with a scaling group, make sure that the ApsaraDB RDS instance meets the following requirements:
  * *   The ApsaraDB RDS instance and the scaling group must belong to the same Alibaba Cloud account.
  * *   The ApsaraDB RDS instance must be unlocked. For more information about the lock policy, see [ApsaraDB RDS usage notes](~~41872~~).
  * *   The ApsaraDB RDS instance must be in the Running state.
  * After an ApsaraDB RDS instance is associated with the scaling group, the default IP address whitelist of the ApsaraDB RDS instance can contain no more than 1,000 IP addresses. For more information, see [Set the whitelist](~~43185~~).
  *
 */
async function attachDBInstances(request: AttachDBInstancesRequest): AttachDBInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachDBInstances', 'POST', '/', 'json', false, 'json', request);
}

model AttachInstancesRequest {
  clientToken?: string(name='ClientToken', description='保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。只支持ASCII字符，且不能超过64个字符。更多信息，请参见[如何保证幂等性](~~25965~~)。', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  entrusted?: boolean(name='Entrusted', description='Specifies whether the scaling group manages the lifecycles of instances that are manually added to the scaling group. Valid values:

*   true: The scaling group manages the lifecycles of instances that are manually added in a similar manner in which the scaling group manages the lifecycles of automatically created instances. After Auto Scaling removes instances from the scaling group, Auto Scaling releases the instances. After you call the DetachInstances operation to remove instances from the scaling group, Auto Scaling does not release the instances.
*   false: The scaling group does not manage the lifecycles of instances that are manually added. After Auto Scaling removes instances from the scaling group, Auto Scaling does not release the instances.

> You cannot specify this parameter for subscription instances.

Default value: false.', example='false', position='Query'),
  instanceIds?: [ string ](name='InstanceIds', description='The IDs of the ECS instances or elastic container instances that you want to add.', position='Query'),
  lifecycleHook?: boolean(name='LifecycleHook', description='Specifies whether to trigger a lifecycle hook for a scale-out activity. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  loadBalancerWeights?: [ int32 ](name='LoadBalancerWeights', description='The weights of the ECS instances or elastic container instances as the backend servers of the associated Classic Load Balancer (CLB) instance.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model AttachInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp1crxor24s28xf1****'),
}

model AttachInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachInstancesResponseBody(name='body'),
}

/**
  * Before you call this operation, take note of the following items:
  * *   The scaling group is in the Active state.
  * *   No scaling activities in the scaling group are in progress.
  * The ECS instances or the elastic container instances that you want to add to a scaling group must meet the following requirements:
  * *   The instances reside in the same region as the scaling group.
  * *   The instances must be in the Running state.
  * *   The instances are not added to other scaling groups.
  * *   The instances use the subscription or pay-as-you-go billing method, or are preemptible instances.
  * *   If the VswitchID parameter is specified for a scaling group, the instances that are in the classic network or those that are not in the same virtual private cloud (VPC) as the specified vSwitch cannot be added to the scaling group.
  * *   If the VswitchID parameter is not specified for a scaling group, the instances that are in VPCs cannot be added to the scaling group.
  * If no scaling activities in the specified scaling group are in progress, the operation can trigger scaling activities even before the cooldown time expires.
  * A successful call indicates that Auto Scaling accepts the request. However, the scaling activity may still fail. You can obtain the status of a scaling activity by using the value of the ScalingActivityId parameter in the response.
  * If the sum of the number of instances that you want to add and the number of existing instances in the scaling group is greater than the value of the MaxSize parameter, the call fails.
  * Instances that are manually added by calling the AttachInstances operation are not associated with the active scaling configuration of the scaling group.
  *
 */
async function attachInstances(request: AttachInstancesRequest): AttachInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachInstances', 'POST', '/', 'json', false, 'json', request);
}

model AttachLoadBalancersRequest {
  async?: boolean(name='Async', description='Specifies whether to attach the CLB instance to the scaling group in an asynchronous manner. If you attach the CLB instance from the scaling group in an asynchronous manner, the call is successful only after all operations are successful. If a specific operation fails, the call fails. We recommend that you set this parameter to true. Valid values:

*   true: attaches the CLB instance to the scaling group in an asynchronous manner. In this case, the ID of the scaling activity is returned.
*   false: does not attach the CLB instance to the scaling group in an asynchronous manner.

Default value: false.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceAttach?: boolean(name='ForceAttach', description='Specifies whether to add all instances in the scaling group to the vServer groups of the CLB instance. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  loadBalancerConfigs?: [ 
    {
      loadBalancerId?: string(name='LoadBalancerId', description='负载均衡CLB（原SLB）实例的ID。', example='147b46d767c-cn-qingdao-cm5****'),
      weight?: int32(name='Weight', description='弹性伸缩将ECS实例添加到SLB服务器组后，ECS实例作为后端服务器的权重。权重越高，ECS实例将被分配到越多的访问请求。如果权重为0，则ECS实例不会收到访问请求。取值范围：0~100。', example='10'),
    }
  ](name='LoadBalancerConfigs', description='负载均衡配置列表。', position='Query'),
  loadBalancers?: [ string ](name='LoadBalancers', description='The IDs of the CLB instances.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1avr6ensitts3w****', position='Query'),
}

model AttachLoadBalancersResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.

The value of this parameter is returned only after you set the Async parameter to true. You can call the DescribeScalingActivities operation to query all scaling activity IDs and use the scaling activity IDs to check the status of the scaling activities.', example='asa-bp140qd7mak8k63f****'),
}

model AttachLoadBalancersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachLoadBalancersResponseBody(name='body'),
}

/**
  * Before you call this operation to attach a CLB instance to your scaling group, take note of the following items:
  * *   The CLB instance and the scaling group must belong to the same Alibaba Cloud account.
  * *   The CLB instance and the scaling group must reside in the same region.
  * *   The CLB instance must be in the Running state.
  * *   The CLB instance must be configured with at least one listener. Health check is enabled for the CLB instance.
  * *   The CLB instance and the scaling group must be in the same virtual private cloud (VPC) if their network type is VPC.
  * *   If the network type of the scaling group is VPC, the network type of the CLB instance is classic network, and the CLB backend server groups contain instances of the VPC network type, the instances and the scaling group must be in the same VPC.
  * *   You can attach only a limited number of CLB instances to a scaling group. Fore more information, see [Limits](~~25863~~).
  *
 */
async function attachLoadBalancers(request: AttachLoadBalancersRequest): AttachLoadBalancersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachLoadBalancers', 'POST', '/', 'json', false, 'json', request);
}

model AttachServerGroupsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceAttach?: boolean(name='ForceAttach', description='Specifies whether to add the Elastic Compute Service (ECS) instances in the scaling group to the new server group.

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1fo0dbtsbmqa9h****', position='Query'),
  serverGroups: [ 
    {
      port: int32(name='Port', description='The port number that is used by an ECS instance after Auto Scaling adds the ECS instance to the server group. Valid values: 1 to 65535.', example='22'),
      serverGroupId: string(name='ServerGroupId', description='The ID of the server group.', example='sgp-5yc3bd9lfyh*****'),
      type: string(name='Type', description='The type of the server group. Valid values:

*   ALB
*   NLB', example='ALB'),
      weight: int32(name='Weight', description='The weight of an ECS instance after Auto Scaling adds the ECS instance to the server group as a backend server.

A higher weight specifies that a larger number of requests are forwarded to the ECS instance. If you set the Weight parameter for an ECS instance in the server group to 0, no access requests are forwarded to the ECS instance. Valid values: 0 to 100.', example='100'),
    }
  ](name='ServerGroups', description='Details of the server groups.', position='Query'),
}

model AttachServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity in which you attach the server group to the scaling group and Auto Scaling adds the ECS instances in the scaling group to the server group.

> This parameter is returned only if you set the ForceAttach parameter to true.', example='asa-bp1c9djwrgxjyk31****'),
}

model AttachServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachServerGroupsResponseBody(name='body'),
}

async function attachServerGroups(request: AttachServerGroupsRequest): AttachServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model AttachVServerGroupsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure the idempotence of a request](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceAttach?: boolean(name='ForceAttach', description='Specifies whether to add Elastic Compute Service (ECS) instances in the scaling group to the vServer group. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group. Examples: cn-hangzhou and cn-shanghai.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
  vServerGroups: [ 
    {
      loadBalancerId?: string(name='LoadBalancerId', description='The ID of the CLB instance to which the vServer group belongs.', example='rsp-bp1jp1rge****'),
      vServerGroupAttributes?: [ 
        {
          port?: int32(name='Port', description='The port number that is used when Auto Scaling adds ECS instances to the vServer group. Valid values: 1 to 65535.', example='22'),
          vServerGroupId?: string(name='VServerGroupId', description='The ID of the vServer group.', example='lb-bp1u7etiogg38yvwz****'),
          weight?: int32(name='Weight', description='The weight of an ECS instance as a backend server in the vServer group. Valid values: 0 to 100.

Default value: 50.', example='100'),
        }
      ](name='VServerGroupAttributes', description='Details of the vServer group attributes.'),
    }
  ](name='VServerGroups', description='Details of the vServer groups.', position='Query'),
}

model AttachVServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model AttachVServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachVServerGroupsResponseBody(name='body'),
}

/**
  * Before you call this operation to attach a vServer group to your scaling group, take note of the following items:
  * *   The CLB instance and the scaling group must belong to the same Alibaba Cloud account.
  * *   The CLB instance and the scaling group must reside in the same region.
  * *   The CLB instance must be in the Running state.
  * *   The CLB instance must be configured with at least one listener. Health check is enabled for the CLB instance.
  * *   The CLB instance and the scaling group must be in the same VPC if their network type is VPC.
  * *   If the network type of the scaling group is VPC, the network type of the CLB instance is classic network, and the vServer groups of the CLB instance contain instances of the VPC network type, the instances and the scaling group must be in the same VPC.
  * *   The vServer group that you want to attach to your scaling group must belong to the CLB instance.
  * *   You can attach only a limited number of vServer groups to a scaling group. For information about the quota on vServer groups, see [Limits](~~25863~~).
  * When you call this operation, you must specify the following parameters:
  * *   LoadBalancerId: the ID of the CLB instance.
  * *   VServerGroupId: the ID of the vServer group.
  * *   Port: the port number of the vServer group.
  * If a vServer group is attached to a scaling group by using different ports, Auto Scaling considers that more than one vServer group is attached to the scaling group. If multiple vServer groups with the same group ID and port number are specified in the request parameters, only the first vServer group is used. The other vServer groups are ignored.
  *
 */
async function attachVServerGroups(request: AttachVServerGroupsRequest): AttachVServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachVServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model ChangeResourceGroupRequest {
  newResourceGroupId: string(name='NewResourceGroupId', example='rg-aek2ckjqe3*****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', example='asg-bp17xb4x1vr29lgt****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType?: string(name='ResourceType', example='scalinggroup', position='Query'),
}

model ChangeResourceGroupResponseBody = {
  requestId?: string(name='RequestId', example='6EF9BFEE-FE07-4627-B8FB-14326FB9****'),
}

model ChangeResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ChangeResourceGroupResponseBody(name='body'),
}

async function changeResourceGroup(request: ChangeResourceGroupRequest): ChangeResourceGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ChangeResourceGroup', 'POST', '/', 'json', false, 'json', request);
}

model CompleteLifecycleActionRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  lifecycleActionResult?: string(name='LifecycleActionResult', description='The action that you want Auto Scaling to perform after the lifecycle hook times out. Valid values:

*   CONTINUE: Auto Scaling continues to respond to a scale-in or scale-out request.
*   ABANDON: Auto Scaling releases Elastic Compute Service (ECS) instances that are created during scale-out activities or removes ECS instances from the scaling group during scale-in activities.
*   ROLLBACK: For scale-in activities, Auto Scaling rejects the requests to release ECS instances but rolls back ECS instances. For scale-out activities, the ROLLBACK setting has the same effect as the ABANDON setting.

If you do not specify this parameter, Auto Scaling performs the action that is specified by the `DefaultResult` parameter after the lifecycle hook times out.

If multiple lifecycle hooks exist in a scaling group and the lifecycle hooks are triggered at the same time, the following rules apply:

*   For scale-in activities, when lifecycle hooks whose LifecycleActionResult parameter is set to ABANDON or ROLLBACK time out, other lifecycle hooks time out ahead of schedule.
*   For scale-in and scale-out activities, if you set the LifecycleActionResult parameter for all lifecycle hooks to CONTINUE, Auto Scaling performs the next action only after the last lifecycle hook times out. The action that Auto Scaling performs varies based on the value that you specify for the LifecycleActionResult parameter of the lifecycle hook that last times out.', example='CONTINUE', position='Query'),
  lifecycleActionToken: string(name='LifecycleActionToken', description='The token of the lifecycle hook. You can obtain this token by using a Message Service (MNS) queue or an MNS topic that is specified for the lifecycle hook.', example='aaaa-bbbbb-cccc-ddddd', position='Query'),
  lifecycleHookId: string(name='LifecycleHookId', description='The ID of the lifecycle hook.', example='ash-bp14g3ee6bt3sc98****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model CompleteLifecycleActionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE****'),
}

model CompleteLifecycleActionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CompleteLifecycleActionResponseBody(name='body'),
}

/**
  * If you set the LifecycleActionResult parameter for a lifecycle hook of a scaling group to CONTINUE in the operation, Auto Scaling continues to complete the scaling activity in the scaling group after the lifecycle hook times out. If you set the LifecycleActionResult parameter to ABANDON, Auto Scaling stops the scaling activity in the scaling group after the lifecycle hook times out.
  *
 */
async function completeLifecycleAction(request: CompleteLifecycleActionRequest): CompleteLifecycleActionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CompleteLifecycleAction', 'POST', '/', 'json', false, 'json', request);
}

model CreateAlarmRequest {
  alarmActions?: [ string ](name='AlarmActions', position='Query'),
  comparisonOperator?: string(name='ComparisonOperator', example='>=', position='Query'),
  description?: string(name='Description', example='Test alarm task.', position='Query'),
  dimensions?: [ 
    {
      dimensionKey?: string(name='DimensionKey', example='device'),
      dimensionValue?: string(name='DimensionValue', example='eth0'),
    }
  ](name='Dimensions', position='Query'),
  effective?: string(name='Effective', example='TZ=+00 * * 1-2 * * ?', position='Query'),
  evaluationCount?: int32(name='EvaluationCount', example='3', position='Query'),
  expressions?: [ 
    {
      comparisonOperator?: string(name='ComparisonOperator', example='>='),
      metricName?: string(name='MetricName', example='CpuUtilization'),
      period?: int32(name='Period', example='900'),
      statistics?: string(name='Statistics', example='Average'),
      threshold?: float(name='Threshold', example='40.0'),
    }
  ](name='Expressions', position='Query'),
  expressionsLogicOperator?: string(name='ExpressionsLogicOperator', example='&&', position='Query'),
  groupId?: int32(name='GroupId', example='4055401', position='Query'),
  metricName?: string(name='MetricName', example='CpuUtilization', position='Query'),
  metricType?: string(name='MetricType', example='system', position='Query'),
  name?: string(name='Name', example='TestAlarmTask', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', example='300', position='Query'),
  regionId: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', example='asg-bp18p2yfxow2dloq****', position='Query'),
  statistics?: string(name='Statistics', example='Average', position='Query'),
  threshold?: float(name='Threshold', example='80.0', position='Query'),
}

model CreateAlarmResponseBody = {
  alarmTaskId?: string(name='AlarmTaskId', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****'),
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateAlarmResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAlarmResponseBody(name='body'),
}

async function createAlarm(request: CreateAlarmRequest): CreateAlarmResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateAlarm', 'POST', '/', 'json', false, 'json', request);
}

model CreateEciScalingConfigurationRequest {
  acrRegistryInfos?: [ 
    {
      domains?: [ string ](name='Domains', description='The domain names of the Container Registry Enterprise Edition instances. By default, all domain names of the Container Registry Enterprise Edition instances are displayed. You can specify one or more domain names. Separate multiple domain names with commas (,).'),
      instanceId?: string(name='InstanceId', description='The ID of the Container Registry Enterprise Edition instance.', example='cri-nwj395hgf6f3****'),
      instanceName?: string(name='InstanceName', description='The name of the Container Registry Enterprise Edition instance.', example='acr-test'),
      regionId?: string(name='RegionId', description='The region ID of the Container Registry Enterprise Edition instance.', example='cn-beijing'),
    }
  ](name='AcrRegistryInfos', description='Information about the Container Registry Enterprise Edition instance.', position='Query'),
  activeDeadlineSeconds?: long(name='ActiveDeadlineSeconds', description='The validity period. Unit: seconds.', example='1000', position='Query'),
  autoCreateEip?: boolean(name='AutoCreateEip', description='Specifies whether to automatically create an elastic IP address (EIP) and bind the EIP to the elastic container instance.', example='true', position='Query'),
  autoMatchImageCache?: boolean(name='AutoMatchImageCache', description='Specifies whether to automatically match the image cache. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  containerGroupName?: string(name='ContainerGroupName', description='The name of the elastic container instance.', example='nginx-test', position='Query'),
  containers?: [ 
    {
      livenessProbe: {
        exec: {
            commands?: [ string ](name='Commands'),
        }(name='Exec'),
        failureThreshold?: int32(name='FailureThreshold'),
        httpGet: {
            path?: string(name='Path'),
            port?: int32(name='Port'),
            scheme?: string(name='Scheme'),
        }(name='HttpGet'),
        initialDelaySeconds?: int32(name='InitialDelaySeconds'),
        periodSeconds?: int32(name='PeriodSeconds'),
        successThreshold?: int32(name='SuccessThreshold'),
        tcpSocket: {
            port?: int32(name='Port'),
        }(name='TcpSocket'),
        timeoutSeconds?: int32(name='TimeoutSeconds'),
      }(name='LivenessProbe'),
      readinessProbe: {
        exec: {
            commands?: [ string ](name='Commands'),
        }(name='Exec'),
        failureThreshold?: int32(name='FailureThreshold'),
        httpGet: {
            path?: string(name='Path'),
            port?: int32(name='Port'),
            scheme?: string(name='Scheme'),
        }(name='HttpGet'),
        initialDelaySeconds?: int32(name='InitialDelaySeconds'),
        periodSeconds?: int32(name='PeriodSeconds'),
        successThreshold?: int32(name='SuccessThreshold'),
        tcpSocket: {
            port?: int32(name='Port'),
        }(name='TcpSocket'),
        timeoutSeconds?: int32(name='TimeoutSeconds'),
      }(name='ReadinessProbe'),
      securityContext: {
        capability: {
            add?: [ string ](name='Add'),
        }(name='Capability'),
        readOnlyRootFilesystem?: boolean(name='ReadOnlyRootFilesystem'),
        runAsUser?: long(name='RunAsUser'),
      }(name='SecurityContext'),
      args?: [ string ](name='Args', description='The arguments that correspond to the startup commands of the container. You can specify up to 10 arguments.'),
      commands?: [ string ](name='Commands', description='The commands that you want to run in the container when you use the CLI to perform probes.'),
      cpu?: float(name='Cpu', description='The number of CPU cores in the container.', example='0.25'),
      environmentVars?: [ 
        {
          fieldRefFieldPath?: string(name='FieldRefFieldPath', description='> This parameter is unavailable.', example='fieldPath'),
          key?: string(name='Key', description='The name of the environment variable. The name must be 1 to 128 characters in length and can contain letters, digits, and underscores (\\_). The name cannot start with a digit. Specify the name in the \\[0-9a-zA-Z] format.', example='PATH'),
          value?: string(name='Value', description='The value of the environment variable. The value must be 0 to 256 characters in length.', example='/usr/local/bin'),
        }
      ](name='EnvironmentVars', description='Information about environment variables.'),
      gpu?: int32(name='Gpu', description='The number of GPUs that you want to allocate to the container.', example='1'),
      image?: string(name='Image', description='The image of the container.', example='registry-vpc.cn-hangzhou.aliyuncs.com/eci_open/nginx:latest'),
      imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy. Valid values:

*   Always: pulls images each time.
*   IfNotPresent: pulls images only if no on-premises images are available. On-premises images are preferentially used. If no on-premises images are available, image pulling is performed.
*   Never: never pulls images. On-premises images are always used.', example='Always'),
      lifecyclePostStartHandlerExecs?: [ string ](name='LifecyclePostStartHandlerExecs'),
      lifecyclePostStartHandlerHttpGetHost?: string(name='LifecyclePostStartHandlerHttpGetHost'),
      lifecyclePostStartHandlerHttpGetPath?: string(name='LifecyclePostStartHandlerHttpGetPath'),
      lifecyclePostStartHandlerHttpGetPort?: int32(name='LifecyclePostStartHandlerHttpGetPort'),
      lifecyclePostStartHandlerHttpGetScheme?: string(name='LifecyclePostStartHandlerHttpGetScheme'),
      lifecyclePostStartHandlerTcpSocketHost?: string(name='LifecyclePostStartHandlerTcpSocketHost'),
      lifecyclePostStartHandlerTcpSocketPort?: int32(name='LifecyclePostStartHandlerTcpSocketPort'),
      lifecyclePreStopHandlerExecs?: [ string ](name='LifecyclePreStopHandlerExecs'),
      lifecyclePreStopHandlerHttpGetHost?: string(name='LifecyclePreStopHandlerHttpGetHost'),
      lifecyclePreStopHandlerHttpGetPath?: string(name='LifecyclePreStopHandlerHttpGetPath'),
      lifecyclePreStopHandlerHttpGetPort?: int32(name='LifecyclePreStopHandlerHttpGetPort'),
      lifecyclePreStopHandlerHttpGetScheme?: string(name='LifecyclePreStopHandlerHttpGetScheme'),
      lifecyclePreStopHandlerTcpSocketHost?: string(name='LifecyclePreStopHandlerTcpSocketHost'),
      lifecyclePreStopHandlerTcpSocketPort?: int32(name='LifecyclePreStopHandlerTcpSocketPort'),
      memory?: float(name='Memory', description='The memory size of the container. Unit: GiB.', example='0.5'),
      name?: string(name='Name', description='The name of the container image.', example='nginx'),
      ports?: [ 
        {
          port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='80'),
          protocol?: string(name='Protocol', description='The type of the protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
        }
      ](name='Ports', description='The ports.'),
      stdin?: boolean(name='Stdin', description='Specifies whether the container allocates buffer resources to standard input streams when the container is running. If you do not specify this parameter, an end-of-file (EOF) error may occur.

Default value: false.', example='false'),
      stdinOnce?: boolean(name='StdinOnce', description='Specifies whether to disconnect standard input streams after a client is disconnected.

If you set the StdinOnce parameter to true, standard input streams are connected after the container is started, and remain idle until a client is connected to receive data. After the client is disconnected, streams are also disconnected, and remain disconnected until the container is started again.', example='false'),
      tty?: boolean(name='Tty', description='Specifies whether to enable interaction. Valid values:

*   true
*   false

If the value of the Command parameter is /bin/bash, you must set this parameter to true.

Default value: false.', example='false'),
      volumeMounts?: [ 
        {
          mountPath?: string(name='MountPath', description='The directory on which the container mounts the volume.

> Data in this directory is overwritten by the data on the volume.', example='/pod/data'),
          mountPropagation?: string(name='MountPropagation', description='The mount propagation settings of the volume. Mount propagation allows volumes that are mounted on one container to be shared with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.

Default value: None.', example='None'),
          name?: string(name='Name', description='The name of the volume. The value of this parameter is the same as the value of the VolumeName parameter.', example='default-volume1'),
          readOnly?: boolean(name='ReadOnly', description='Specifies whether the volume is read-only. Valid values:

*   true
*   false

Default value: false.', example='false'),
          subPath?: string(name='SubPath', description='The subdirectory of the volume.', example='data2/'),
        }
      ](name='VolumeMounts', description='Information about the volume mount of the container.'),
      workingDir?: string(name='WorkingDir', description='The working directory of the container.', example='/usr/local/'),
    }
  ](name='Containers', description='The containers in the elastic container instance.', position='Query'),
  costOptimization?: boolean(name='CostOptimization', description='Specifies whether to enable the cost optimization feature. Valid values:

*   true
*   false', example='false', position='Query'),
  cpu?: float(name='Cpu', description='The number of vCPUs of the elastic container instance.', example='1.0', position='Query'),
  cpuOptionsCore?: int32(name='CpuOptionsCore', description='Number of physical CPU cores This parameter is not available for all instance types. For more information, see [Specify custom CPU options](~~197781~~).', example='2', minimum=0, maximum=1000, position='Query'),
  cpuOptionsThreadsPerCore?: int32(name='CpuOptionsThreadsPerCore', description='The number of threads per core. This parameter is not available for all instance types. A value of 1 indicates that Hyper-Threading is disabled. For more information, see [Specify custom CPU options](~~197781~~).', example='2', position='Query'),
  dataCacheBucket?: string(name='DataCacheBucket', position='Query'),
  dataCacheBurstingEnabled?: boolean(name='DataCacheBurstingEnabled', position='Query'),
  dataCachePL?: string(name='DataCachePL', position='Query'),
  dataCacheProvisionedIops?: int32(name='DataCacheProvisionedIops', position='Query'),
  description?: string(name='Description', description='> This parameter is unavailable.', example='desc', position='Query'),
  dnsConfigNameServers?: [ string ](name='DnsConfigNameServers', description='The IP addresses of the DNS servers.', position='Query'),
  dnsConfigOptions?: [ 
    {
      name?: string(name='Name', description='The variable name of the option.', example='name'),
      value?: string(name='Value', description='The variable value of the option.', example='value'),
    }
  ](name='DnsConfigOptions', description='The options. Each option is in the name-value pair format. The value in the name-value pair is optional.', position='Query'),
  dnsConfigSearchs?: [ string ](name='DnsConfigSearchs', description='The DNS lookup domains.', position='Query'),
  dnsPolicy?: string(name='DnsPolicy', description='The Domain Name System (DNS) policy. Valid values:

*   None: uses the DNS that is set for the DnsConfig field.
*   Default: use the DNS that is set for the runtime environment.', example='Default', position='Query'),
  egressBandwidth?: long(name='EgressBandwidth', description='The maximum outbound bandwidth. Unit: bytes.', example='1024000', minimum=0, maximum=9223372036854775807, position='Query'),
  eipBandwidth?: int32(name='EipBandwidth', description='The bandwidth of the EIP. Default value: 5 Mbit/s.', example='5', minimum=0, maximum=1000000, position='Query'),
  enableSls?: boolean(name='EnableSls', description='> This parameter is unavailable.', example='false', position='Query'),
  ephemeralStorage?: int32(name='EphemeralStorage', description='The size of the temporary storage space. By default, an ESSD of the PL1 type is used. Unit: GiB.', example='20', minimum=0, maximum=5000, position='Query'),
  hostAliases?: [ 
    {
      hostnames?: [ string ](name='Hostnames', description='The hostname that you want to add.'),
      ip?: string(name='Ip', description='The IP address that you want to add.', example='1.1.1.1'),
    }
  ](name='HostAliases', description='The hostnames and IP addresses of a container that you want to add to the hosts file of the elastic container instance.', position='Query'),
  hostName?: string(name='HostName', description='The name of the elastic container instance.', example='test', position='Query'),
  imageRegistryCredentials?: [ 
    {
      password?: string(name='Password', description='The password that is used to access the image repository.', example='yourpaasword'),
      server?: string(name='Server', description='The domain name of the image repository.', example='registry-vpc.cn-shanghai.aliyuncs.com'),
      userName?: string(name='UserName', description='The username that is used to access the image repository.', example='yourusername'),
    }
  ](name='ImageRegistryCredentials', description='Information about the image repository.', position='Query'),
  imageSnapshotId?: string(name='ImageSnapshotId', description='The ID of the image cache.', example='imc-2zebxkiifuyzzlhl****', position='Query'),
  ingressBandwidth?: long(name='IngressBandwidth', description='The maximum inbound bandwidth. Unit: bit/s.', example='1024000', minimum=0, maximum=9223372036854775807, position='Query'),
  initContainers?: [ 
    {
      securityContext: {
        capability: {
            adds?: [ string ](name='Adds'),
        }(name='Capability'),
        readOnlyRootFilesystem?: boolean(name='ReadOnlyRootFilesystem'),
        runAsUser?: long(name='RunAsUser'),
      }(name='SecurityContext'),
      args?: [ string ](name='Args', description='The arguments that correspond to the startup commands of the container. You can specify up to 10 arguments.'),
      commands?: [ string ](name='Commands', description='The list of commands that you want to run to start the container.'),
      cpu?: float(name='Cpu', description='The number of vCPUs that you want to allocate to the container.', example='0.5'),
      gpu?: int32(name='Gpu', description='The number of GPUs that you want to allocate to the container.', example='1'),
      image?: string(name='Image', description='The container image.', example='nginx'),
      imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy.', example='Always'),
      initContainerEnvironmentVars?: [ 
        {
          fieldRefFieldPath?: string(name='FieldRefFieldPath', description='> This parameter is unavailable.', example='path'),
          key?: string(name='Key', description='The key of the environment variable. Specify the key in the `[0-9a-zA-Z]` format. The key must be 1 to 128 characters in length. The key can contain underscores (\\_) and cannot start with a digit.', example='Path'),
          value?: string(name='Value', description='The value of the environment variable. The value must be 0 to 256 characters in length.', example='/usr/bin/'),
        }
      ](name='InitContainerEnvironmentVars', description='The environment variables of the init container.'),
      initContainerPorts?: [ 
        {
          port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='1'),
          protocol?: string(name='Protocol', description='The type of the protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
        }
      ](name='InitContainerPorts', description='The ports of the init container.'),
      initContainerVolumeMounts?: [ 
        {
          mountPath?: string(name='MountPath', description='The path to which the volume is mounted. Data under this path is overwritten by the data on the volume.', example='/usr/share/'),
          mountPropagation?: string(name='MountPropagation', description='The mount propagation settings of the volume . Mount propagation allows volumes that are mounted on one container to be shared with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.', example='None'),
          name?: string(name='Name', description='The name of the volume.', example='test-empty'),
          readOnly?: boolean(name='ReadOnly', description='Specifies whether the mount path is read-only.

Default value: false.', example='false'),
          subPath?: string(name='SubPath', description='The subdirectory of the volume. The elastic container instance can mount different directories of the same volume to different subdirectories of containers.', example='/usr/sub/'),
        }
      ](name='InitContainerVolumeMounts', description='Information about the volume mounts of the init container.'),
      memory?: float(name='Memory', description='The size of the memory. Unit: GiB.', example='1.0'),
      name?: string(name='Name', description='The name of the container.', example='test-init'),
      workingDir?: string(name='WorkingDir', description='The working directory.', example='/usr/local'),
    }
  ](name='InitContainers', description='The init containers.', position='Query'),
  instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance type, which is used to filter the instance types that meet the specified criteria. This parameter takes effect only if you set the `CostOptimization` parameter to true. Valid values:

*   EntryLevel: shared instance type. Instances of this level are the most cost-effective but may not provide stable computing performance in a consistent manner. Instances of this level are suitable for business scenarios in which the CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: Instances of this level provide stable performance and dedicated resources, and are suitable for business scenarios that require high stability. For more information, see [Instance family](~~25378~~).
*   CreditEntryLevel: This value is valid only for burstable instances. CPU credits are used to ensure computing performance. Instances of this level are suitable for scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see the [Overview](~~59977~~) topic of burstable instances.', example='EnterpriseLevel', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses.', example='1', position='Query'),
  loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of the elastic container instance as a backend server. Valid values: 1 to 100.

Default value: 50.', example='50', position='Query'),
  memory?: float(name='Memory', description='The memory size of the elastic container instance. Unit: GiB.', example='2.0', position='Query'),
  ntpServers?: [ string ](name='NtpServers', description='The domain name of the Network Time Protocol (NTP) server.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role for the elastic container instance. You can use an instance RAM role to access both elastic container instances and Elastic Compute Service (ECS) instances. For more information, see [Use an instance RAM role by calling API operations](~~61178~~).', example='RamTestRole', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-uf66jeqopgqa9hdn****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  restartPolicy?: string(name='RestartPolicy', description='The restart policy of the elastic container instance. Valid values:

*   Always: always restarts the elastic container instance.
*   Never: never restarts the elastic container instance.
*   OnFailure: restarts the elastic container instance upon failures.

Default value: Always.', example='Always', position='Query'),
  scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

The name of the scaling configuration must be unique within a scaling group in a region. If you do not specify this parameter, the value of the ScalingConfigurationId parameter is used.', example='scalingconfig****', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group in which you want to create the scaling configuration.', example='asg-bp14wlu85wrpchm0****', position='Query'),
  securityContextSysctls?: [ 
    {
      name?: string(name='Name', description='The variable name of the security context in which the elastic container instance runs.', example='kernel.msgmax'),
      value?: string(name='Value', description='The variable value of the security context in which the elastic container instance runs.', example='65536'),
    }
  ](name='SecurityContextSysctls', description='The system information of the security context in which the elastic container instance runs.', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which you want to associate the elastic container instance. Elastic container instances that are associated with the same security group can access each other.

If you do not specify a security group, the system uses the default security group in the region that you selected. Make sure that the inbound rules of the security group contain the protocols and the port numbers of the containers that you want to expose. If you do not have a default security group in the region, the system creates a default security group, and then adds the declared container protocols and port numbers to the inbound rules of the security group.', example='sg-uf66jeqopgqa9hdn****', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the preemptible elastic container instance. The value can be accurate to three decimal places.

If you set the SpotStrategy parameter to SpotWithPriceLimit, you must also specify the SpotPriceLimit parameter.', example='0.025', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the elastic container instance. Valid values:

*   NoSpot: The instance is a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is used as the bid price.

Default value: NoSpot.', example='SpotPriceLimit', position='Query'),
  tags?: [ 
    {
      key?: string(name='Key', description='The tag key of the elastic container instance. You can specify 1 to 20 tags.

You cannot specify an empty string as a tag key. The tag key can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='version'),
      value?: string(name='Value', description='The tag value of the elastic container instance. You can specify 1 to 20 tags.

You can specify an empty string as a tag value. The tag value can be up to 128 characters in length and cannot start with `acs:`. It cannot contain `http://` or `https://`.', example='3'),
    }
  ](name='Tags', description='The tags of the elastic container instance. The tags must be specified in the key-value pair format. You can specify up to 20 tags. When you specify tag keys and tag values, take note of the following items:

*   A tag key can be up to 64 characters in length. The key cannot start with acs: or aliyun and cannot contain `http://` or `https://`. You cannot specify an empty string as a tag key.
*   A tag value can be up to 128 characters in length. The value cannot start with acs: or aliyun and cannot contain `http://` or `https://`. You can specify an empty string as a tag value.', position='Query'),
  terminationGracePeriodSeconds?: long(name='TerminationGracePeriodSeconds', description='The buffer time in which the program handles operations before the program is stopped. Unit: seconds.', example='60', position='Query'),
  volumes?: [ 
    {
      diskVolume: {
        diskId?: string(name='DiskId'),
        diskSize?: int32(name='DiskSize'),
        fsType?: string(name='FsType'),
      }(name='DiskVolume'),
      emptyDirVolume: {
        medium?: string(name='Medium'),
        sizeLimit?: string(name='SizeLimit'),
      }(name='EmptyDirVolume'),
      flexVolume: {
        driver?: string(name='Driver'),
        fsType?: string(name='FsType'),
        options?: string(name='Options'),
      }(name='FlexVolume'),
      hostPathVolume: {
        path?: string(name='Path'),
        type?: string(name='Type'),
      }(name='HostPathVolume'),
      NFSVolume: {
        path?: string(name='Path'),
        readOnly?: boolean(name='ReadOnly'),
        server?: string(name='Server'),
      }(name='NFSVolume'),
      configFileVolumeConfigFileToPaths?: [ 
        {
          content?: string(name='Content', description='The content of the configuration file, which can be up to 32 KB in size.', example='bGl1bWk='),
          mode?: int32(name='Mode', description='The permissions on ConfigFileVolume.', example='0644'),
          path?: string(name='Path', description='The name of the environment variable. The name must be 1 to 128 characters in length. Specify the name in the `[0-9a-zA-Z]` format. The name can contain underscores and cannot start with a digit.', example='PATH'),
        }
      ](name='ConfigFileVolumeConfigFileToPaths', description='The paths to the configuration files.'),
      configFileVolumeDefaultMode?: int32(name='ConfigFileVolumeDefaultMode', description='The default permissions on the ConfigFile volume.', example='0644'),
      name?: string(name='Name', description='The name of the volume.', example='default-volume1'),
      type?: string(name='Type', description='The type of the Host file or path. Examples: File, Directory, and Socket.', example='ConfigFileVolume'),
    }
  ](name='Volumes', description='Information about the volumes.', position='Query'),
}

model CreateEciScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='89945DD3-9072-47D0-A318-353284CF****'),
  scalingConfigurationId?: string(name='ScalingConfigurationId', description='The ID of the elastic container instance.', example='eci-uf6fonnghi50u374****'),
}

model CreateEciScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateEciScalingConfigurationResponseBody(name='body'),
}

/**
  * A scaling configuration is a template that is used to create elastic container instances during scale-out activities.
  * You can specify the Cpu and Memory parameters to determine the range of instance types. If you specify the parameters, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Auto Scaling preferentially creates elastic container instances of the instance type that is provided at the lowest price. This scaling mode is available only if Scaling Policy is set to Cost Optimization Policy and no instance type is specified in the scaling configuration.
  *
 */
async function createEciScalingConfiguration(request: CreateEciScalingConfigurationRequest): CreateEciScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateEciScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model CreateLifecycleHookRequest {
  defaultResult?: string(name='DefaultResult', description='The action that you want Auto Scaling to perform after the lifecycle hook times out. Valid values:

*   CONTINUE: Auto Scaling continues to respond to scale-in or scale-out requests.
*   ABANDON: Auto Scaling releases ECS instances that are created during scale-out activities or removes ECS instances from the scaling group during scale-in activities.
*   ROLLBACK: For scale-in activities, Auto Scaling rejects the requests to release ECS instances but rolls back ECS instances. For scale-out activities, the ROLLBACK setting has the same effect as the ABANDON setting.

If a scaling group has multiple lifecycle hooks in effect and you set the DefaultResult parameter for one of the lifecycle hooks to ABANDON or ROLLBACK, the following rule applies to scale-in activities: When the lifecycle hook whose DefaultResult parameter is set to ABANDON or ROLLBACK times out, other lifecycle hooks time out ahead of schedule. In other cases, Auto Scaling performs the action only after all lifecycle hooks time out. The action that Auto Scaling performs is specified by the DefaultResult parameter of the last lifecycle hook that times out.

Default value: CONTINUE.', example='CONTINUE', position='Query'),
  heartbeatTimeout?: int32(name='HeartbeatTimeout', description='The period of time before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action specified by the DefaultResult parameter. Valid values: 30 to 21600. Unit: seconds.

After you create a lifecycle hook, you can call the RecordLifecycleActionHeartbeat operation to extend the timeout period of the lifecycle hook. You can also call the CompleteLifecycleAction operation to end the timeout period ahead of schedule.

Default value: 600.', example='600', position='Query'),
  lifecycleHookName?: string(name='LifecycleHookName', description='The name of the lifecycle hook. Each lifecycle hook name must be unique within a scaling group. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

If you do not specify this parameter, the value of the LifecycleHookId parameter is used.', example='lifecyclehook****', position='Query'),
  lifecycleTransition: string(name='LifecycleTransition', description='The type of the scaling activity to which you want to apply the lifecycle hook. Valid values:

*   SCALE_OUT: scale-out activity.
*   SCALE_IN: scale-in activity.', example='SCALE_OUT', position='Query'),
  notificationArn?: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method. If you do not specify this parameter, no notification is sent when the lifecycle hook takes effect. If you specify this parameter, the following rules apply:

*   If you use a Message Service (MNS) queue as the notification method, specify the value in the acs:mns:{region-id}:{account-id}:queue/{queuename} format.
*   If you use an MNS topic as the notification method, specify the value in the acs:mns:{region-id}:{account-id}:topic/{topicname} format.
*   If you use an OOS template as the notification method, specify the value in the acs:oos:{region-id}:{account-id}:template/{templatename} format.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account. The ID of a RAM user is not supported.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.
*   templatename: the name of the OOS template.', example='acs:mns:cn-beijing:161456884340****:queue/modifyLifecycleHo****', position='Query'),
  notificationMetadata?: string(name='NotificationMetadata', description='The notification metadata that is sent when the lifecycle hook takes effect. This helps you manage and categorize notifications in an efficient manner. If you specify this parameter, you must also specify the NotificationArn parameter. The value of this parameter cannot exceed 4,096 characters in length.

The fixed string that is included in a notification that Auto Scaling sends when the lifecycle hook takes effect. Auto Scaling sends the value of the NotificationMetadata parameter together with the notification. This helps you categorize your notifications. For example, your OOS template includes the following parameters: `{"dbInstanceId": "dds-bp17661e0135****", "modifyMode": "Append"}`, `dbInstanceId`, and `modifyMode`. Specific parameters that are defined in your OOS template have default values. When you specify the NotificationMetadata parameter, specify parameters that do not have default values. If you specify parameters that have default values, the default values are overwritten. The default values of the following parameters must be retained to obtain information about scaling activities that are in progress:

*   `regionId`: the region ID of the scaling activity that is in progress. Default value: ${regionId}.
*   `instanceIds`: the IDs of ECS instances that are scaled in the scaling activity. Default value: ${instanceIds}.
*   `lifecycleHookId`: the ID of the lifecycle hook. Default value: ${lifecycleHookId}.
*   `lifecycleActionToken`: the token of the lifecycle hook. You can use the token to end the timeout period of the lifecycle hook ahead of schedule. Default value: ${lifecycleActionToken}
*   `scalingGroupId`: the ID of the scaling group in which the scaling activity is executed. Default value: ${scalingGroupId}.
*   `lifecycleActionResult`: the action that Auto Scaling performs after the lifecycle hook times out. If the OOS template fails to be executed, the lifecycle hook times out ahead of schedule. If you set the DefalutResult parameter to ROLLBACK, the default value of this parameter is ROLLBACK. If you set the DefaultResult parameter to other values, the default value of this parameter is ABANDON.

> 

*   You can specify a value for the lifecycleActionResult parameter to overwrite the default value. Valid values: ABANDON, CONTINUE, ROLLBACK, and ${lifecycleActionResult}.

A value of ${lifecycleActionResult} specifies that the value of the lifecycleActionResult parameter is the same as the value of the DefaultResult parameter.

*   You can view the details of the OOS template that you specify in the [OOS](https://oos.console.aliyun.com/) console.', example='Test lifecycle hook.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1eyv4qn8ssgv43****', position='Query'),
}

model CreateLifecycleHookResponseBody = {
  lifecycleHookId?: string(name='LifecycleHookId', description='The ID of the lifecycle hook.', example='ash-bp1at9ufhmcf9cmy****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateLifecycleHookResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateLifecycleHookResponseBody(name='body'),
}

/**
  * You can create up to six lifecycle hooks for each scaling group. Elastic Compute Service (ECS) instances are not immediately added to or removed from scaling groups that have effective lifecycle hooks during scaling activities. The ECS instances are added to or removed from the scaling groups only after the lifecycle hooks time out. The period of time before the lifecycle hooks time out is specified by the HeartbeatTimeout parameter. Before lifecycle hooks time out, you can initialize the configurations of ECS instances and query data on the ECS instances.
  * If lifecycle hooks take effect for scale-out activities, the private IP addresses of ECS instances are added to the IP address whitelists of the associated ApsaraDB RDS instances and the ECS instances are added to the backend server groups of the associated Server Load Balancer (SLB) instances only after the lifecycle hooks time out. If lifecycle hooks take effect for scale-in activities, the private IP addresses of ECS instances are removed from the IP address whitelists of the disassociated ApsaraDB RDS instances and the ECS instances are removed from the backend server groups of the disassociated SLB instances only after the lifecycle hooks time out.
  * You can configure a notification method for a lifecycle hook. When the lifecycle hook takes effect, a notification can be sent by using a Message Service (MNS) topic, an MNS queue, or an Operation Orchestration Service (OOS) template. If you want to configure an OOS template, you must create a RAM role for OOS. For more information, see [Grant RAM permissions to OOS](~~120810~~).
  * > If your scaling group contains ECS instances and you configure an OOS template to add the private IP addresses of the ECS instances to or remove the private IP addresses of the ECS instances from the IP address whitelists of cloud databases other than ApsaraDB RDS databases, you must manually add the private IP addresses of the ECS instances to the IP address whitelists of the cloud databases.
  *
 */
async function createLifecycleHook(request: CreateLifecycleHookRequest): CreateLifecycleHookResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateLifecycleHook', 'POST', '/', 'json', false, 'json', request);
}

model CreateNotificationConfigurationRequest {
  notificationArn: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method. The following list describes the value formats of this parameter:

*   If you use CloudMonitor as the notification method, the value format of this parameter is acs:ess:{region-id}:{account-id}:cloudmonitor.
*   If you use an MNS queue as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:queue/{queuename}.
*   If you use an MNS topic as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:topic/{topicname}.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.', example='acs:mns:cn-beijing:161456884340****:queue/modifyLifecycleHo****', position='Query'),
  notificationTypes: [ string ](name='NotificationTypes', description='The types of the notifications that you want to create. You can create one to eight notifications. Specify multiple values in the repeated list form.

You can call the DescribeNotificationTypes operation to query the values of this parameter.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model CreateNotificationConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateNotificationConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateNotificationConfigurationResponseBody(name='body'),
}

/**
  * ## Description
  * You can configure CloudMonitor system events, Message Service (MNS) queues, or MNS topics to receive notifications. When a specified type of scaling activity or resource change occurs in a scaling group, Auto Scaling sends notifications by using CloudMonitor or MNS.
  *
 */
async function createNotificationConfiguration(request: CreateNotificationConfigurationRequest): CreateNotificationConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateNotificationConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model CreateScalingConfigurationRequest {
  imageOptions?: {
    loginAsNonRoot?: boolean(name='LoginAsNonRoot'),
  }(name='ImageOptions', position='Query'),
  privatePoolOptions?: {
    id?: string(name='Id', description='The ID of the private pool. The ID of a private pool is the same as the ID of the elasticity assurance or capacity reservation for which the private pool is generated.', example='eap-bp67acfmxazb4****'),
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool that you want to use to start ECS instances. A private pool is generated when an elasticity assurance or a capacity reservation takes effect. You can select a private pool to create ECS instances. Valid values:

*   Open: open private pool. Auto Scaling selects a matching open private pool to start instances. If no matching open private pools are found, Auto Scaling uses the resources in the public pool to start instances. In this case, you do not need to specify PrivatePoolOptions.Id.
*   Target: specified private pool. Auto Scaling uses the resources in the specified private pool to start ECS instances. If the specified private pool is unavailable, Auto Scaling cannot start ECS instances. If you set this parameter to Target, you must specify PrivatePoolOptions.Id.
*   None: no private pool. Auto Scaling does not use the resources in private pools to start ECS instances.', example='Open'),
  }(name='PrivatePoolOptions', position='Query'),
  systemDisk?: {
    autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that you want to apply to the system disk.', example='sp-bp12m37ccmxvbmi5****'),
    burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the burst feature for the system disk. Valid values:

*   true
*   false

> This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`.', example='false'),
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: enhanced SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk

If you specify SystemDisk.Category, you cannot specify `SystemDiskCategories`. If you do not specify SystemDisk.Category or `SystemDiskCategories`, the default value of SystemDisk.Category is used.

*   For I/O optimized instances, the default value is cloud_efficiency.
*   For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length. The description can contain letters and cannot start with `http://` or `https://`.', example='Test system disk.'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). The name must start with a letter but cannot start with `http://` or `https://`.', example='cloud_ssdSystem'),
    encryptAlgorithm?: string(name='EncryptAlgorithm', description='The encryption algorithm that you want to use to encrypt the system disk. Valid values:

*   AES-256
*   SM4-128

Default value: AES-256', example='AES-256'),
    encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true
*   false

Default value: false', example='false'),
    KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key that you want to use to encrypt the system disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level (PL) of the system disk that is an ESSD. Valid values:

*   PL0: An ESSD can provide up to 10,000 random read/write IOPS.
*   PL1: An ESSD can provide up to 50,000 random read/write IOPS.
*   PL2: An ESSD can provide up to 100,000 random read/write IOPS.
*   PL3: An ESSD can provide up to 1,000,000 random read/write IOPS.

Default value: PL0', example='PL0'),
    provisionedIops?: long(name='ProvisionedIops', description='The IOPS metric that is preconfigured for the system disk.

> IOPS measures the number of read and write operations that an EBS device can process per second.', example='100'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB.

*   If you set SystemDisk.Category cloud: 20 to 500.
*   If you set SystemDisk.Category to cloud_efficiency: 20 to 500.
*   If you set SystemDisk.Category to cloud_ssd: 20 to 500.
*   If you set SystemDisk.Category to cloud_essd: 20 to 500.
*   If you set SystemDisk.Category to cloud_essd: 20 to 500.

The value of SystemDisk.Size must be greater than or equal to the value of max{20, ImageSize}.

Default value: 40 or the size of the image, whichever is greater.', example='100'),
  }(name='SystemDisk', position='Query'),
  affinity?: string(name='Affinity', description='Specifies whether to associate an ECS instance on a dedicated host with the dedicated host. Valid values:

*   default: does not associate the ECS instance with the dedicated host. If you start an ECS instance that was stopped in economical mode and the original dedicated host has insufficient resources, the ECS instance is automatically deployed to another dedicated host in the automatic deployment resource pool.
*   host: associates the ECS instance with the dedicated host. If you start an ECS instance that was stopped in economical mode, the instance remains on the original dedicated host. If the original dedicated host has insufficient resources, the ECS instance fails to start.

Default value: default', example='default', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see the "[How to ensure the idempotence of a request](~~25693~~)" topic.', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  cpu?: int32(name='Cpu', description='The number of vCPUs.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set CPU to 2 and Memory to 16 to specify instance types that have 2 vCPUs and 16 GiB of memory. If you specify Cpu and Memory, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances by using the lowest-priced instance type.

> You can specify Cpu and Memory to determine the range of instance types only if you set Scaling Policy to Cost Optimization Policy and you do not specify instance types in the scaling configuration.', example='2', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: standard mode
*   Unlimited: unlimited mode

For more information, see the "Performance modes" section in the "[Overview](~~59977~~)" topic.', example='Standard', position='Query'),
  customPriorities?: [ 
    {
      instanceType?: string(name='InstanceType'),
      vswitchId?: string(name='VswitchId'),
    }
  ](name='CustomPriorities', position='Query'),
  dataDisks?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that you want to apply to the data disk.', example='sp-bp19nq9enxqkomib****'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the burst feature for the system disk. Valid values:

*   true
*   false

> This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`.', example='false'),
      categories?: [ string ](name='Categories', description='The categories of the data disks. If Auto Scaling cannot create instances by using the disk category that has the highest priority, Auto Scaling creates instances by using the disk category that has the next highest priority. Valid values:

*   cloud: basic disk. For a basic disk that is created together with the instance, DeleteWithInstance is set to true.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud_essd: ESSD.

> If you specify Categories, you cannot specify `DataDisks.Category`.'),
      category?: string(name='Category', description='The category of the data disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD
*   ephemeral_ssd: local SSD
*   cloud_auto: ESSD AutoPL disk

If you specify this parameter, you cannot specify Categories. If you do not specify Category or Categories, the default value of Category is used.

*   For I/O optimized instances, the default value is cloud_efficiency.
*   For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the data disk when the instance to which the data disk is attached is released. Valid values:

*   true
*   false

This parameter is available only for independent disks whose value of Category is set to cloud, cloud_efficiency, cloud_ssd, or cloud_essd. If you specify this parameter for other disks, an error is reported.

Default value: true', example='true'),
      description?: string(name='Description', description='The description of the data disk. The description must be 2 to 256 characters in length. The description can contain letters and cannot start with `http://` or `https://`.', example='Test data disk.'),
      device?: string(name='Device', description='The mount target of the data disk. If you do not specify Device, a mount target is automatically assigned when Auto Scaling creates ECS instances. The names of mount targets range from /dev/xvdb to /dev/xvdz.', example='/dev/xvdb'),
      diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). The name must start with a letter but cannot start with `http://` or `https://`.', example='cloud_ssdData'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt the data disk. Valid values:

*   true
*   false

Default value: false', example='false'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key that you want to use to encrypt the data disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      performanceLevel?: string(name='PerformanceLevel', description='The PL of the data disk that is an ESSD. Valid values:

*   PL0: An ESSD can provide up to 10,000 random read/write IOPS.
*   PL1: An ESSD can provide up to 50,000 random read/write IOPS.
*   PL2: An ESSD can provide up to 100,000 random read/write IOPS.
*   PL3: An ESSD can provide up to 1,000,000 random read/write IOPS.

> For more information about how to select ESSD PLs, see [ESSD](~~122389~~).', example='PL0'),
      provisionedIops?: long(name='ProvisionedIops', description='The IOPS metric that is preconfigured for the data disk.

> IOPS measures the number of read and write operations that an EBS device can process per second.', example='100'),
      size?: int32(name='Size', description='The size of the data disk. Unit: GiB. Valid values:

*   If you set Categories to cloud: 5 to 2000.
*   If you set Categories to cloud_efficiency: 20 to 32768.
*   If you set Categories to cloud_essd: 20 to 32768.
*   If you set Categories to ephemeral_ssd: 5 to 800.

The size of the data disk must be greater than or equal to the size of the snapshot that is specified by SnapshotId.', example='100'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot that you want to use to create data disks. If you specify this parameter, DataDisks.Size is ignored. The size of the data disk is the same as the size of the specified snapshot.

If you specify a snapshot that is created on or before July 15, 2013, the operation fails and the system returns InvalidSnapshot.TooOld.', example='s-280s7****'),
    }
  ](name='DataDisks', description='The data disks.', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host on which you want to create an ECS instance. You cannot create preemptible instances on dedicated hosts. If you specify DedicatedHostId, SpotStrategy and SpotPriceLimit are ignored.

You can call the DescribeDedicatedHosts operation to query dedicated host IDs.', example='dh-bp67acfmxazb4p****', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set of the ECS instances that are created by using the scaling configuration.', example='ds-bp1frxuzdg87zh4pz****', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the ECS instance. The hostname cannot start or end with a period (.) or a hyphen (-). The hostname cannot contain consecutive periods (.) or hyphens (-). Naming conventions for different types of instances:

*   Windows instances: The hostname must be 2 to 15 characters in length and can contain letters, digits, and hyphens (-). The hostname cannot contain periods (.) or contain only digits.
*   Other instances, such as Linux instances: The hostname must be 2 to 64 characters in length. You can use periods (.) to separate a hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).', example='host****', position='Query'),
  hpcClusterId?: string(name='HpcClusterId', description='The ID of the Elastic High Performance Computing (E-HPC) cluster to which the ECS instances that are created by using the scaling configuration belong.', example='hpc-clusterid', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. If you specify this parameter, the most recent custom images that are available in the specified image family are returned. You can use the images to create instances. If you specify ImageId, you cannot specify ImageFamily.', example='hangzhou-daily-update', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image that Auto Scaling uses to automatically create ECS instances.', example='centos6u5_64_20G_aliaegis****.vhd', position='Query'),
  imageName?: string(name='ImageName', description='The name of the image. Each image name must be unique in a region. If you specify ImageId, ImageName is ignored.

You cannot use ImageName to specify images that are purchased from Alibaba Cloud Marketplace.', example='image****', position='Query'),
  instanceDescription?: string(name='InstanceDescription', description='The description of the ECS instance. The description must be 2 to 256 characters in length. The description can contain letters and cannot start with `http://` or `https://`.', example='Test instance.', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the ECS instance that Auto Scaling creates based on the scaling configuration.', example='instance****', position='Query'),
  instancePatternInfos?: [ 
    {
      architectures?: [ string ](name='Architectures', description='The architectures of the instance types. Valid values:

*   X86: x86 architecture.
*   Heterogeneous: heterogeneous architecture, such as GPUs and FPGAs.
*   BareMetal: ECS Bare Metal Instance architecture.
*   Arm: ARM architecture.
*   SuperComputeCluster: Super Computing Cluster architecture.

By default, all values are included.'),
      burstablePerformance?: string(name='BurstablePerformance', description='Specifies whether to include burstable instance types. Valid values:

*   Exclude: does not include burstable instance types.
*   Include: includes burstable instance types.
*   Required: includes only burstable instance types.

Default value: Include', example='Include'),
      cores?: int32(name='Cores', description='The number of vCPUs that you want to allocate to an instance type in intelligent configuration mode. This parameter is used to filter the available instance types that meet the specified criteria. For more information, see the "[Instance families](~~25378~~)" topic.

Take note of the following items when you specify Cores:

*   InstancePatternInfos is available only for scaling groups that reside in VPCs.
*   If you specify InstancePatternInfos, you must specify Cores and Memory.
*   If you specify an instance type by using InstanceType or InstanceTypes, Auto Scaling preferentially uses the instance type that is specified by InstanceType or InstanceTypes for scale-outs. If the specified instance type does not have sufficient inventory, Auto Scaling creates instances by using the lowest-priced instance type that is specified by InstancePatternInfos.', example='2'),
      excludedInstanceTypes?: [ string ](name='ExcludedInstanceTypes', description='The instance types that you want to exclude. You can use wildcard characters, such as asterisks (\\*), to exclude an instance type or an instance family. Examples:

*   ecs.c6.large: excludes the ecs.c6.large instance type.
*   ecs.c6.\\*: excludes the c6 instance family.'),
      instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance type, which is used to filter instance types that meet the specified criteria. This parameter takes effect only if you set `CostOptimization` to true. Valid values:

*   EntryLevel: entry level (shared instance type). Instance types of this level are the most cost-effective but may not provide stable computing performance in a consistent manner. Instance types of this level are suitable for business scenarios in which the CPU utilization is low. For more information, see the "[Shared instance families](~~108489~~)" topic.
*   EnterpriseLevel: enterprise level. Instance types of this level provide stable performance and dedicated resources and are suitable for business scenarios that require high stability. For more information, see the "[Instance families](~~25378~~)" topic.
*   CreditEntryLevel: credit entry level. This value is valid only for burstable instances. CPU credits are used to ensure computing performance. Instance types of this level are suitable for business scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see the "[Overview](~~59977~~)" topic of burstable instances.', example='EnterpriseLevel'),
      maxPrice?: float(name='MaxPrice', description='The maximum hourly price of a pay-as-you-go or preemptible instance in intelligent configuration mode. This parameter is used to filter the available instance types that meet the specified criteria.

> If you set SpotStrategy to SpotWithPriceLimit, you must specify MaxPrice. In other cases, MaxPrice is optional.', example='2'),
      memory?: float(name='Memory', description='The memory size that you want to allocate to an instance type in intelligent configuration mode. Unit: GiB. This parameter is used to filter the available instance types that meet the specified criteria.', example='4'),
    }
  ](name='InstancePatternInfos', description='Details of the intelligent configuration settings that determine the range of instance types that meet the specified criteria.', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type of the ECS instance. For more information, see the "Instance families" topic.', example='ecs.g6.large', position='Query'),
  instanceTypeOverrides?: [ 
    {
      instanceType?: string(name='InstanceType', description='Instance type N that you want to use to override the instance type that is specified in the launch template.

If you want to trigger scale-outs based on the weighted capacities of instances, specify InstanceType and WeightedCapacity at the same time. You can specify N instance types by using the Extended Configurations feature. Valid values of N: 1 to 10.

> This parameter takes effect only if you specify LaunchTemplateId.

You can specify an instance type that is available for purchase as the value of InstanceType.', example='ecs.c5.xlarge'),
      weightedCapacity?: int32(name='WeightedCapacity', description='The weight of instance type N. If you want to trigger scale-outs based on the weighted capacities of instances, you must specify WeightedCapacity after you specify InstanceType.

The weight of an instance type specifies the capacity of an instance of the instance type in the scaling group. A higher weight specifies that a smaller number of instances of the specified instance type is required to meet the expected capacity requirement.

Performance metrics, such as the number of vCPUs and the memory size of each instance type, may vary. You can specify different weights for different instance types based on your business requirements.

Example:

*   Current capacity: 0
*   Expected capacity: 6
*   Capacity of ecs.c5.xlarge: 4

To meet the expected capacity requirement, Auto Scaling must create and add two ecs.c5.xlarge instances.

> The capacity of the scaling group cannot exceed the sum of the maximum number of instances that is specified by MaxSize and the maximum weight of the instance types.

Valid values of WeightedCapacity: 1 to 500.', example='4'),
    }
  ](name='InstanceTypeOverrides', description='The instance types.', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', description='The instance types. If you specify InstanceTypes, InstanceType is ignored.

Auto Scaling creates instances based on the priorities of the instance types. If Auto Scaling cannot create instances by using the instance type that has the highest priority, Auto Scaling creates instances by using the instance type that has the next highest priority.', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The metering method for network usage. Valid values:

*   PayByBandwidth: You are charged for the maximum available bandwidth that is specified by InternetMaxBandwidthOut.
*   PayByTraffic: You are charged based on the amount of transferred data. InternetMaxBandwidthOut specifies only the maximum available bandwidth.

For the classic network, the default value is PayByBandwidth. For VPCs, the default value is PayByTraffic.', example='PayByTraffic', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values: 1 to 200.

Default value: 200 This parameter is not used for billing because inbound traffic to instances is free of charge.', example='100', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values:

*   Valid values if you set InternetChargeType to PayByBandwidth: 0 to 100. If you leave this parameter empty, this parameter is automatically set to 0.
*   Valid values if you set InternetChargeType to PayByTraffic: 0 to 100. If you leave this parameter empty, an error is returned.', example='50', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether to create an I/O optimized instance. Valid values:

none: does not create an I/O optimized instance. optimized: creates an I/O optimized instance.

For instances of retired instance types, the default value is none. For instances of other instance types, the default value is optimized.', example='optimized', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of randomly generated IPv6 addresses that you want to allocate to the elastic network interface (ENI).', example='1', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair that you want to use to log on to an ECS instance.

*   Windows instances do not support this parameter.
*   By default, the username and password authentication method is disabled for Linux instances.', example='KeyPairTest', position='Query'),
  loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of an ECS instance as a backend server. Valid values: 1 to 100.

Default value: 50', example='50', position='Query'),
  memory?: int32(name='Memory', description='The memory size. Unit: GiB.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set Cpu to 2 and Memory to 16 to specify instance types that have 2 vCPUs and 16 GiB of memory. If you specify Cpu and Memory, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances by using the lowest-priced instance type.

> You can specify Cpu and Memory to determine the range of instance types only if you set Scaling Policy to Cost Optimization Policy and you do not specify instance types in the scaling configuration.', example='16', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='The password that you want to use to log on to an ECS instance. The password must be 8 to 30 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. The following special characters are supported:

`` `() ~!@#$%^&*-_+=\\|{}[]:;\\"<>,.?/ ``

The password of a Windows instance cannot start with a forward slash (/).

> For security reasons, we recommend that you use HTTPS to send requests if you specify Password.', example='123abc****', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password that is preconfigured in the image. Before you use this parameter, make sure that a password is configured in the image. Valid values:

*   true
*   false', example='false', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role that you attach to the ECS instance. The name is provided and maintained by Resource Access Management (RAM). You can call the ListRoles operation to query the available RAM roles.', example='ramrole****', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ECS instances that are created by using the scaling configuration belong.', example='rg-resource****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration. The name must be 2 to 64 characters in length and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

The name of the scaling configuration must be unique in a region. If you do not specify this parameter, the scaling configuration ID is used.', example='scalingconfig****', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group in which you want to create a scaling configuration.', example='asg-bp14wlu85wrpchm0****', position='Query'),
  schedulerOptions?: map[string]any(name='SchedulerOptions', description='The scheduler options.', example='["testManagedPrivateSpaceId****"]', shrink='json', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening. Valid values:

*   Active: enables security hardening. This value is applicable only to public images.
*   Deactive: disables security hardening. This value is applicable to all image types.', example='Active', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which ECS instances are associated. ECS instances that are associated with the same security group can access each other.', example='sg-280ih****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups with which you want to associate the ECS instances that are created by using the scaling configuration. For more information, see the "Security group limits" section of the "[Limits](~~25412~~)" topic.

> If you specify SecurityGroupId, you cannot specify SecurityGroupIds.', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The retention period of the preemptible instance. Unit: hours. Valid values: 0, 1, 2, 3, 4, 5, and 6.

*   The following retention periods are available in invitational preview: 2, 3, 4, 5, and 6 hours. If you want to set this parameter to one of these values, submit a ticket.
*   If you set this parameter to 0, no protection period is specified for the preemptible instance.

Default value: 1', example='1', position='Query'),
  spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance. Set the value to Terminate. The value specifies that the preemptible instance is to be released.', example='Terminate', position='Query'),
  spotPriceLimits?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type of the preemptible instance. This parameter takes effect only if you set SpotStrategy to SpotWithPriceLimit.', example='ecs.g6.large'),
      priceLimit?: float(name='PriceLimit', description='The price limit of the preemptible instance. This parameter takes effect only if you set SpotStrategy to SpotWithPriceLimit.', example='0.5'),
    }
  ](name='SpotPriceLimits', description='The billing information of the preemptible instances.', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The preemption policy that you want to apply to pay-as-you-go and preemptible instances. Valid values:

*   NoSpot: The instance is created as a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance that has a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bid price.

Default value: NoSpot', example='NoSpot', position='Query'),
  storageSetId?: string(name='StorageSetId', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', position='Query'),
  systemDiskCategories?: [ string ](name='SystemDiskCategories', description='The categories of the system disks. If Auto Scaling cannot create instances by using the disk category that has the highest priority, Auto Scaling creates instances by using the disk category that has the next highest priority. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD

> If you specify SystemDiskCategories, you cannot specify `SystemDisk.Category`.', position='Query'),
  tags?: string(name='Tags', description='The tags of the ECS instance. Tags must be specified as key-value pairs. You can specify up to 20 tags. When you specify tag keys and tag values, take note of the following items:

*   A tag key can be up to 64 characters in length. The key cannot start with acs: or aliyun and cannot contain `http://` or `https://`. You cannot specify an empty string as a tag key.
*   A tag value can be up to 128 characters in length. The value cannot start with acs: or aliyun and cannot contain `http://` or `https://`. You can specify an empty string as a tag value.', example='{"key1":"value1","key2":"value2", ... "key5":"value5"}', position='Query'),
  tenancy?: string(name='Tenancy', description='Specifies whether to create an ECS instance on a dedicated host. Valid values:

*   default: does not create an ECS instance on a dedicated host.
*   host: creates an ECS instance on a dedicated host. If you do not specify DedicatedHostId, Alibaba Cloud selects a dedicated host for the ECS instance.

Default value: default', example='default', position='Query'),
  userData?: string(name='UserData', description='The user data of the ECS instance. The data must be encoded in Base64. The maximum size of the data before encoding is 16 KB.', example='echo hello ecs!', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the ECS instance.', example='cn-hangzhou-g', position='Query'),
}

model CreateScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingConfigurationId?: string(name='ScalingConfigurationId', description='The ID of the scaling configuration.', example='asc-bp1ffogfdauy0nu5****'),
}

model CreateScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateScalingConfigurationResponseBody(name='body'),
}

/**
  * Auto Scaling automatically creates Elastic Compute Service (ECS) instances based on the specified scaling configuration. ECS instances can be created in the following modes:
  * *   InstancePatternInfos: intelligent configuration mode. In this mode, you need to only specify the number of vCPUs, memory size, instance family, and maximum price. Auto Scaling selects the instance type that has the lowest price based on the configurations to create ECS instances. This mode is available only for scaling groups that reside in virtual private clouds (VPCs). This mode reduces scale-out failures caused by insufficient inventory of instance types.
  * *   InstanceType: In this mode, you must specify one instance type.
  * *   InstanceTypes: In this mode, you can specify more than one instance type.
  * *   InstanceTypeOverrides: In this mode, you can specify multiple instance types and weights for the instance types.
  * *   Cpu and Memory: In this mode, you must specify the number of vCPUs and the memory size. Auto Scaling determines the range of available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling creates ECS instances by using the lowest-priced instance type. This mode is available only if Scaling Policy is set to Cost Optimization Policy and no instance type is specified in the scaling configuration.
  * > You cannot specify InstanceType, InstanceTypes, InstanceTypeOverrides, and Cpu and Memory at the same time. You can specify InstanceType and InstancePatternInfos or specify InstanceTypes and InstancePatternInfo at the same time. If you specify InstanceType and InstancePatternInfos or specify InstanceTypes and InstancePatternInfos at the same time, Auto Scaling preferentially uses the instance types that are specified by InstanceType or InstanceTypes for scale-outs. If the instance types that are specified by InstanceType or InstanceTypes do not have sufficient inventory, Auto Scaling uses the instance types that are specified by InstancePatternInfos for scale-outs.
  *
 */
async function createScalingConfiguration(request: CreateScalingConfigurationRequest): CreateScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model CreateScalingGroupRequest {
  albServerGroups?: [ 
    {
      albServerGroupId?: string(name='AlbServerGroupId', description='The ID of the ALB server group that you want to associate with the scaling group.

You can associate only a limited number of ALB server groups with a scaling group. Go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of ALB server groups that you can associate with a scaling group.', example='sgp-ddwb0y0g6y9bjm****'),
      port?: int32(name='Port', description='The port number that is used by an ECS instance after Auto Scaling adds the ECS instance to the ALB server group. Valid values: 1 to 65535.', example='22'),
      weight?: int32(name='Weight', description='The weight of an ECS instance after Auto Scaling adds the ECS instance to the ALB server group as a backend server. If you increase the weight of an ECS instance in the ALB server group, the number of access requests that are forwarded to the ECS instance increases. If you set the Weight parameter for an ECS instance in the ALB server group to 0, no access requests are forwarded to the ECS instance. Valid values: 0 to 100.', example='100'),
    }
  ](name='AlbServerGroups', description='Details of the Application Load Balancer (ALB) server groups that you want to associate with the scaling group.', position='Query'),
  allocationStrategy?: string(name='AllocationStrategy', description='The allocation policy of instances. Auto Scaling selects instance types based on the allocation policy to create the required number of instances. The policy can be applied to pay-as-you-go instances and preemptible instances. This parameter takes effect only when you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:

*   priority: Auto Scaling selects instance types based on the specified order of the instance types to create the required number of instances.
*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of instances.

Default value: priority.', example='priority', position='Query'),
  azBalance?: boolean(name='AzBalance', description='Specifies whether to evenly distribute instances in the scaling group across zones. This parameter is available only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  compensateWithOnDemand?: boolean(name='CompensateWithOnDemand', description='Specifies whether to automatically create pay-as-you-go instances to meet the requirement on the number of ECS instances when the expected capacity of preemptible instances cannot be provided due to reasons such as cost-related issues and insufficient resources. This parameter is available only if you set the MultiAZPolicy parameter to COST_OPTIMIZED. Valid values:

*   true
*   false

Default value: true.', example='true', position='Query'),
  containerGroupId?: string(name='ContainerGroupId', description='The ID of the elastic container instance.', example='eci-uf6fonnghi50u374****', position='Query'),
  customPolicyARN?: string(name='CustomPolicyARN', description='The Alibaba Cloud Resource Name (ARN) of the custom scale-in policy (Function). This parameter is available only if you specify CustomPolicy as the first step to remove instances.', example='acs:fc:cn-zhangjiakou:16145688****:services/ess_custom_terminate_policy.LATEST/functions/ess_custom_terminate_policy_name', position='Query'),
  DBInstanceIds?: string(name='DBInstanceIds', description='The IDs of the ApsaraDB RDS instances that you want to associate with the scaling group. The value can be a JSON array that contains multiple ApsaraDB RDS instance IDs. Separate multiple IDs with commas (,).

You can associate only a limited number of ApsaraDB RDS instances with a scaling group. Go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of ApsaraDB RDS instances that you can associate with a scaling group.', example='["rm-bp142f86de0t7****", "rm-bp18l1z42ar4o****", "rm-bp1lqr97h4aqk****"]', position='Query'),
  defaultCooldown?: int32(name='DefaultCooldown', description='The cooldown period of the scaling group after a scaling activity is complete. Valid values: 0 to 86400. Unit: seconds.

During the cooldown period, Auto Scaling executes only scaling activities that are triggered by CloudMonitor event-triggered tasks.

Default value: 300.', example='300', position='Query'),
  desiredCapacity?: int32(name='DesiredCapacity', description='The expected number of ECS instances in the scaling group. Auto Scaling automatically maintains the expected number of ECS instances. The value of the DesiredCapacity parameter cannot be greater than the value of the MaxSize parameter and less than the value of the MinSize parameter.', example='5', position='Query'),
  groupDeletionProtection?: boolean(name='GroupDeletionProtection', description='Specifies whether to enable deletion protection for the scaling group. Valid values:

*   true: enables deletion protection for the scaling group. This way, the scaling group cannot be deleted.
*   false: disables deletion protection for the scaling group.

Default value: false.', example='true', position='Query'),
  groupType?: string(name='GroupType', description='The type of the instances that are managed by the scaling group. Valid values:

*   ECS: ECS instances.
*   ECI: elastic container instances.

Default value: ECS.', example='ECS', position='Query'),
  healthCheckType?: string(name='HealthCheckType', description='The health check mode of the scaling group. Valid values:

*   NONE: Auto Scaling does not perform health checks on instances in the scaling group.
*   ECS: Auto Scaling performs health checks on ECS instances in the scaling group.

Default value: ECS.', example='ECS', position='Query'),
  healthCheckTypes?: [ string ](name='HealthCheckTypes', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the existing ECS instance that provides instance configurations for Auto Scaling to create a scaling configuration.', example='i-28wt4****', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template that provides instance configurations for Auto Scaling to create instances.', example='lt-m5e3ofjr1zn1aw7****', position='Query'),
  launchTemplateOverrides?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type that you want to use to override the instance type that is specified in the launch template.

If you want to scale instances based on the weighted capacities of the instances, you must specify both the InstanceType and WeightedCapacity parameters.

> This parameter is available only if you specify the LaunchTemplateId parameter.

You can use the InstanceType parameter to specify only instance types that are available for purchase.', example='ecs.c5.xlarge'),
      spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum bid price of the instance type that is specified by the `InstanceType` parameter. You can specify 1 to 10 instance types by using the Extended Configurations feature of the launch template.

> This parameter is available only if you specify the `LaunchTemplateId` parameter.', example='0.025'),
      weightedCapacity?: int32(name='WeightedCapacity', description='The weight of the instance type. The weight specifies the capacity of an instance of the specified instance type in the scaling group. If you want to scale instances based on the weighted capacities of the instances, you must specify the WeightedCapacity parameter after you specify the InstanceType parameter.

A higher weight specifies that a smaller number of instances of the specified instance type are required to meet the expected capacity requirement.

Performance metrics, such as the number of vCPUs and the memory size of each instance type, may vary. You can specify different weights for different instance types based on your business requirements.

Example:

*   Current capacity: 0
*   Expected capacity: 6
*   Capacity of ecs.c5.xlarge: 4

To meet the expected capacity requirement, Auto Scaling must create and add two ecs.c5.xlarge instances.

> The capacity of the scaling group cannot exceed the sum of the maximum number of instances that is specified by the MaxSize parameter and the maximum weight of the instance types.

Valid values of the WeightedCapacity parameter: 1 to 500.', example='4'),
    }
  ](name='LaunchTemplateOverrides', description='Details of the instance types that you specify by using the Extended Configurations feature of the launch template.', position='Query'),
  launchTemplateVersion?: string(name='LaunchTemplateVersion', description='The version number of the launch template. Valid values:

*   A fixed template version number.
*   Default: the default template version.
*   Latest: the latest template version.', example='Default', position='Query'),
  lifecycleHooks?: [ 
    {
      defaultResult?: string(name='DefaultResult', description='The action that Auto Scaling performs after the lifecycle hook of the scaling group times out. Valid values:

*   CONTINUE: continues to respond to scaling requests.
*   ABANDON: releases ECS instances that are created during scale-out activities, or removes ECS instances from the scaling group during scale-in activities.

If multiple lifecycle hooks in the scaling group are triggered during scale-in activities and you set the LifecycleHook.N.DefaultResult parameter to ABANDON for one of the lifecycle hooks, Auto Scaling immediately performs the action after the lifecycle hook whose DefaultResult parameter is set to ABANDON times out. In this case, other lifecycle hooks time out ahead of schedule. In other cases, Auto Scaling performs the action only after all lifecycle hooks time out. The action that Auto Scaling performs is determined by the value of the DefaultResult parameter that you set for the lifecycle hook that last times out.

Default value: CONTINUE.', example='CONTINUE'),
      heartbeatTimeout?: int32(name='HeartbeatTimeout', description='The period of time before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action specified by the DefaultResult parameter. Valid values: 30 to 21600. Unit: seconds.

After you create a lifecycle hook, you can call the RecordLifecycleActionHeartbeat operation to extend the timeout period of the lifecycle hook. You can also call the CompleteLifecycleAction operation to end the timeout period ahead of schedule.

Default value: 600.', example='600'),
      lifecycleHookName?: string(name='LifecycleHookName', description='The name of the lifecycle hook. After you specify this parameter, you cannot change the value of this parameter. If you do not specify this parameter, the ID of the lifecycle hook is used.', example='lifecyclehook****'),
      lifecycleTransition?: string(name='LifecycleTransition', description='The type of the scaling activity for which you create the lifecycle hook. Valid values:

*   SCALE_OUT: scale-out activity
*   SCALE_IN: scale-in activity

> If you create lifecycle hooks for your scaling group, you must specify the LifecycleTransition parameter.', example='SCALE_OUT'),
      notificationArn?: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method that Auto Scaling uses to send a notification when a lifecycle hook takes effect. This notification method can be a Message Service (MNS) queue or an MNS topic. Specify the value of this parameter in the following format: acs:ess:{region}:{account-id}:{resource-relative-id}.

*   region: the region where the scaling group resides
*   account-id: the ID of the Alibaba Cloud account

Examples:

*   MNS queue: acs:ess:{region}:{account-id}:queue/{queuename}
*   MNS topic: acs:ess:{region}:{account-id}:topic/{topicname}', example='acs:ess:cn-hangzhou:1111111111:queue/queue2'),
      notificationMetadata?: string(name='NotificationMetadata', description='The fixed string that is included in a notification. Auto Scaling sends the notification when the lifecycle hook takes effect. The value of this parameter cannot exceed 4,096 characters in length. Auto Scaling sends the value of the notificationmetadata parameter together with the notification. This way, you can categorize and manage your notifications in an efficient manner. If you specify the notificationmetadata parameter, you must also specify the notificationarn parameter.', example='Test'),
    }
  ](name='LifecycleHooks', description='The lifecycle hooks.', position='Query'),
  loadBalancerConfigs?: [ 
    {
      loadBalancerId?: string(name='LoadBalancerId'),
      weight?: int32(name='Weight'),
    }
  ](name='LoadBalancerConfigs', position='Query'),
  loadBalancerIds?: string(name='LoadBalancerIds', description='The IDs of the CLB instances that you want to associate with the scaling group. The value can be a JSON array that contains multiple CLB instance IDs. Separate multiple IDs with commas (,).

You can associate only a limited number of CLB instances with a scaling group. Go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of CLB instances that you can associate with a scaling group.', example='["lb-bp1u7etiogg38yvwz****", "lb-bp168cqrux9ai9l7f****", "lb-bp1jv3m9zvj22ufxp****"]', position='Query'),
  maxInstanceLifetime?: int32(name='MaxInstanceLifetime', description='The maximum life span of an instance in the scaling group. Unit: seconds.

Valid values: 86400 to the value of the Integer.maxValue parameter.

Default value: null.', example='null', position='Query'),
  maxSize: int32(name='MaxSize', description='The maximum number of ECS instances that can be contained in the scaling group. If the number of ECS instances in the scaling group is greater than the value of the MaxSize parameter, Auto Scaling removes ECS instances from the scaling group to ensure that the number of ECS instances is equal to the value of the MaxSize parameter.

The value range of the MaxSize parameter varies based on the instance quota. You can go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the maximum number of instances that a scaling group can contain.****

For example, if the instance quota is 2,000, the value range of the **MaxSize** parameter is 0 to 2000.', example='20', position='Query'),
  minSize: int32(name='MinSize', description='The minimum number of ECS instances that must be contained in the scaling group. If the number of ECS instances in the scaling group is less than the value of the MinSize parameter, Auto Scaling adds ECS instances to the scaling group to ensure that the number of ECS instances in the scaling group is equal to the value of the MinSize parameter.

> The value of the MinSize parameter must be less than or equal to the value of the MaxSize parameter.', example='2', position='Query'),
  multiAZPolicy?: string(name='MultiAZPolicy', description='The scaling policy for the multi-zone scaling group that contains ECS instances. Valid values:

*   PRIORITY: scales ECS instances based on the priority of the vSwitch that is specified by the VSwitchIds parameter. Auto Scaling preferentially scales instances in the zone where the vSwitch that has the highest priority resides. If the scaling fails, Auto Scaling scales instances in the zone where the vSwitch that has the next highest priority resides.

*   COST_OPTIMIZED: scales ECS instances based on the unit price of vCPUs. Auto Scaling preferentially scales out ECS instances whose vCPUs are provided at the lowest price and scales in ECS instances whose vCPUs are provided at the highest price. If preemptible instance types are specified in the scaling configuration, Auto Scaling preferentially scales out preemptible instances. You can use the CompensateWithOnDemand parameter to specify whether to automatically create pay-as-you-go instances when preemptible instances cannot be created due to insufficient resources.

    **

    **Note**The COST_OPTIMIZED setting takes effect only when multiple instance types are specified or at least one preemptible instance type is specified.

*   BALANCE: evenly distributes ECS instances across zones that are specified for the scaling group. If ECS instances are unevenly distributed across zones due to insufficient resources, you can call the [RebalanceInstance](~~71516~~) operation to evenly redistribute the instances across the zones.

Default value: PRIORITY.', example='PRIORITY', position='Query'),
  onDemandBaseCapacity?: int32(name='OnDemandBaseCapacity', description='The minimum number of pay-as-you-go instances that must be contained in the scaling group. Valid values: 0 to 1000. If the number of pay-as-you-go instances is less than the value of this parameter, Auto Scaling preferentially creates pay-as-you-go instances.', example='30', position='Query'),
  onDemandPercentageAboveBaseCapacity?: int32(name='OnDemandPercentageAboveBaseCapacity', description='The percentage of pay-as-you-go instances in the excess instances when the minimum number of pay-as-you-go instances reaches the requirement. Valid values: 0 to 100.', example='20', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  removalPolicies?: [ string ](name='RemovalPolicies', description='The instance removal policies. Valid values:

*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.
*   NewestInstance: removes ECS instances that are most recently added to the scaling group.
*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.
*   CustomPolicy: removes ECS instances based on the custom scale-in policy (Function).

The scaling configuration source specified by the OldestScalingConfiguration setting can be a scaling configuration or a launch template. The CustomPolicy setting takes effect only if you specify it as the first step to remove instances. If you specify CustomPolicy, you must also specify the CustomPolicyARN parameter.

> The removal of ECS instances from a scaling group is also affected by the value of the MultiAZPolicy parameter. For more information, see the [Configure a combination policy for removing instances](~~254822~~) topic.', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which you want to add the scaling group.

> If you specify this parameter, new scaling groups are added to the specified resource group. If you do not specify this parameter, new scaling groups are added to the default resource group.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupName?: string(name='ScalingGroupName', description='The name of the scaling group. The name of each scaling group must be unique in a region.

The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

If you do not specify this parameter, the value of the ScalingGroupId parameter is used.', example='scalinggroup****', position='Query'),
  scalingPolicy?: string(name='ScalingPolicy', description='The reclaim mode of the scaling group. Valid values:

*   recycle: economical mode.
*   release: release mode.

The ScalingPolicy parameter specifies the reclaim mode of the scaling group. The RemovePolicy parameter of the RemoveInstances operation specifies how to remove instances in a specific manner.', example='recycle', position='Query'),
  serverGroups?: [ 
    {
      port?: int32(name='Port', description='The port number that is used by an ECS instance after Auto Scaling adds the ECS instance to the server group. Valid values: 1 to 65535.', example='22'),
      serverGroupId?: string(name='ServerGroupId', description='The ID of the server group.', example='sgp-5yc3bd9lfyh*****'),
      type?: string(name='Type', description='The type of the server group. Valid values:

*   ALB: Application Load Balancer (ALB) server group
*   NLB: Network Load Balancer (NLB) server group', example='ALB'),
      weight?: int32(name='Weight', description='The weight of an Elastic Compute Service (ECS) instance in the scaling group as a backend server after Auto Scaling adds the ECS instance to the server group. Valid values: 0 to 100.

If you increase the weight of an ECS instance in the server group, the number of access requests that are forwarded to the ECS instance also increases. If you set the Weight parameter of an ECS instance in the server group to 0, no access requests are forwarded to the ECS instance.', example='100'),
    }
  ](name='ServerGroups', description='Details of the server groups.

>  You cannot use the AlbServerGroups parameter and the ServerGroups parameter to specify the same server group.', position='Query'),
  spotAllocationStrategy?: string(name='SpotAllocationStrategy', description='The allocation policy of preemptible instances. You can use this parameter to individually specify the allocation policy of preemptible instances. This parameter takes effect only if you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:

*   priority: Auto Scaling selects instance types based on the specified order of the instance types to create the required number of preemptible instances.
*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of preemptible instances.

Default value: priority.', example='lowestPrice', position='Query'),
  spotInstancePools?: int32(name='SpotInstancePools', description='The number of available instance types. Auto Scaling evenly creates preemptible instances of multiple instance types that are provided at the lowest cost in the scaling group. Valid values: 1 to 10.', example='5', position='Query'),
  spotInstanceRemedy?: boolean(name='SpotInstanceRemedy', description='Specifies whether to supplement preemptible instances. If you set this parameter to true, Auto Scaling creates an instance to replace a preemptible instance when Auto Scaling receives a system message which indicates that the preemptible instance is to be reclaimed.', example='true', position='Query'),
  syncAlarmRuleToCms?: boolean(name='SyncAlarmRuleToCms', description='> This parameter is unavailable.', example='false', position='Query'),
  tags?: [ 
    {
      key?: string(name='Key', description='The tag key that you want to add to the scaling group.', example='Department'),
      propagate?: boolean(name='Propagate'),
      value?: string(name='Value', description='The tag value that you want to add to the scaling group.', example='Finance'),
    }
  ](name='Tags', description='Details of the tags that you want to add to the scaling group.', position='Query'),
  vServerGroups?: [ 
    {
      loadBalancerId?: string(name='LoadBalancerId', description='The ID of the CLB instance to which the backend vServer group belongs.', example='lb-bp1u7etiogg38yvwz****'),
      vServerGroupAttributes?: [ 
        {
          port?: int32(name='Port', description='The port number that is used by an ECS instance after Auto Scaling adds the ECS instance to the backend vServer group. Valid values: 1 to 65535.', example='22'),
          vServerGroupId?: string(name='VServerGroupId', description='The ID of the backend vServer group.', example='rsp-bp1443g77****'),
          weight?: int32(name='Weight', description='The weight of an ECS instance after Auto Scaling adds the ECS instance to the backend vServer group as a backend server. If you increase the weight of an ECS instance in the backend vServer group, the number of access requests that are forwarded to the ECS instance also increases. If you set the Weight parameter of an ECS instance in the backend vServer group to 0, no access requests are forwarded to the ECS instance. Valid values: 0 to 100. Default value: 50.', example='100'),
        }
      ](name='VServerGroupAttributes', description='The attributes of the backend vServer groups.'),
    }
  ](name='VServerGroups', description='Details of the backend vServer groups that you want to associate with the scaling group.', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch. If you specify the VSwitchId parameter, the network type of the scaling group is VPC.

> If you do not specify the VSwitchId or VSwitchIds parameter, the network type of the scaling group is classic network.', example='vsw-bp14zolna43z266bq****', position='Query'),
  vSwitchIds?: [ string ](name='VSwitchIds', description='The IDs of vSwitches. If you specify the VSwitchIds parameter, the VSwitchId parameter is ignored. If you specify the VSwitchIds parameter, the network type of the scaling group is VPC.

If you specify multiple vSwitches, take note of the following items:

*   The vSwitches must belong to the same VPC.
*   The vSwitches can belong to different zones.
*   The vSwitches are sorted in ascending order of priority. The first vSwitch that is specified by the VSwitchIds parameter has the highest priority. If Auto Scaling fails to create ECS instances in the zone where the vSwitch that has the highest priority resides, Auto Scaling creates ECS instances in the zone where the vSwitch that has the next highest priority resides.

> If you do not specify the VSwitchId or VSwitchIds parameter, the network type of the scaling group is classic network.', position='Query'),
}

model CreateScalingGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp14wlu85wrpchm0****'),
}

model CreateScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateScalingGroupResponseBody(name='body'),
}

/**
  * A scaling group is a group of Elastic Compute Service (ECS) instances that can be used in similar business scenarios.
  * You can create only a limited number of scaling groups in a region. Go to Quota Center to check the quota of the scaling groups.
  * A scaling group does not immediately take effect after you create the scaling group. You must call the EnableScalingGroup operation to enable the scaling group. After you enable the scaling group, Auto Scaling can execute scaling rules to trigger scaling activities in the scaling group.
  * The Classic Load Balancer (CLB) instances and ApsaraDB RDS instances that you want to associate with a scaling group must reside in the same region as the scaling group. CLB instances are formerly known as Server Load Balancer (SLB) instances. For more information, see the "Regions and zones" topic.
  * If you associate a CLB instance when you create a scaling group, Auto Scaling automatically adds ECS instances in the scaling group to the backend server group of the associated CLB instance. You can specify a server group to which ECS instances can be added. You can add ECS instances to the following types of server groups:
  * *   Default server group: a group of ECS instances that are used to receive requests. If you do not specify a vServer group or a primary/secondary server group for a listener, requests are forwarded to the ECS instances in the default server group.
  * *   vServer group: If you want to forward requests to backend servers that are not in the default server group or configure domain name-based or URL-based forwarding rules, you can use vServer groups.
  * > If you specify the default server group and multiple vServer groups at the same time, ECS instances are added to all specified server groups.
  * The default weight of an ECS instance that is added as a backend server of a CLB instance is 50. The CLB instance that you want to associate with your scaling group must meet the following requirements:
  * *   The CLB instance must be in the Active state. You can call the DescribeLoadBalancers operation to query the state of the CLB instance.
  * *   The health check feature must be enabled on all listener ports that are configured for the CLB instance. Otherwise, the scaling group fails to be created.
  * If you associate an Application Load Balancer (ALB) server group with a scaling group, Auto Scaling automatically adds ECS instances that are in the scaling group to the ALB server group to process requests distributed by the ALB instance to which the ALB server group belongs. You can specify multiple ALB server groups. The server groups must reside in the same virtual private cloud (VPC) as the scaling group. For more information, see the "AttachAlbServerGroups" topic.
  * If you associate an ApsaraDB RDS instance with a scaling group, Auto Scaling automatically adds the private IP addresses of the ECS instances in the scaling group to the IP address whitelist of the ApsaraDB RDS instance. The ApsaraDB RDS instance that you want to associate with your scaling group must meet the following requirements:
  * *   The ApsaraDB RDS instance must be in the Running state. You can call the DescribeDBInstances operation to query the state of the ApsaraDB RDS instance.
  * *   The number of IP addresses in the IP address whitelist of the ApsaraDB RDS instance cannot exceed the upper limit. For more information, see the "Configure whitelists" topic.
  * If you set the MultiAZPolicy parameter of the scaling group to COST_OPTIMIZED, take note of the following items:
  * *   You can use the OnDemandBaseCapacity, OnDemandPercentageAboveBaseCapacity, and SpotInstancePools parameters to specify the instance allocation method based on the cost optimization policy. This instance allocation method is prioritized during scaling.
  * *   If you do not specify the OnDemandBaseCapacity, OnDemandPercentageAboveBaseCapacity, or SpotInstancePools parameter, the instance types that are provided at the lowest price are used to create instances based on the cost optimization policy.
  * If you set the `Tags.Propagate` parameter of the scaling group to true, the following rules apply:
  * *   Tags that you add to the scaling group cannot be propagated to existing instances in the scaling group. Tags that you add to the scaling group are propagated to only new instances.
  * *   If you specify instance tags in the scaling configuration that is used to create instances and propagate the tags that you add to the scaling group to the instances, all tags exist at the same time.
  * *   If the tag key that you specify in a scaling configuration and the tag key that you add to the scaling group of the scaling configuration are the same, the tag value that you specify in the scaling configuration is preferentially used.
  *
 */
async function createScalingGroup(request: CreateScalingGroupRequest): CreateScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreateScalingRuleRequest {
  adjustmentType?: string(name='AdjustmentType', description='The scaling method of the scaling rule. This parameter is required only if you set the ScalingRuleType parameter to SimpleScalingRule or StepScalingRule. Valid values:

*   QuantityChangeInCapacity: adds the specified number of ECS instances to or removes the specified number of ECS instances from the scaling group.
*   PercentChangeInCapacity: adds the specified percentage of ECS instances to or removes the specified percentage of ECS instances from the scaling group.
*   TotalCapacity: adjusts the number of ECS instances in the scaling group to a specified number.', example='QuantityChangeInCapacity', position='Query'),
  adjustmentValue?: int32(name='AdjustmentValue', description='The number of instances that must be scaled based on the scaling rule. This parameter is required only if you set the ScalingRuleType parameter to SimpleScalingRule or StepScalingRule. The number of ECS instances that are scaled in a single scaling activity cannot exceed 1,000.

*   Valid values if you set the AdjustmentType parameter to QuantityChangeInCapacity: -1000 to 1000.
*   Valid values if you set the AdjustmentType parameter to PercentChangeInCapacity: -100 to 10000.
*   Valid values if you set the AdjustmentType parameter to TotalCapacity: 0 to 2000.', example='100', position='Query'),
  alarmDimensions?: [ 
    {
      dimensionKey?: string(name='DimensionKey', description='监控项关联的维度信息键。', example='rulePool'),
      dimensionValue?: string(name='DimensionValue', description='监控项关联的维度信息值。', example='sgp-l1cbirz451yxuxxx'),
    }
  ](name='AlarmDimensions', description='监控项维度信息值，适用于目标追踪规则，当监控项需额外维度信息时设置，例如LoadBalancerRealServerAverageQps监控项需指定rulePool维度键值信息。', position='Query'),
  cooldown?: int32(name='Cooldown', description='The cooldown time of the scaling rule. This parameter is available only if you set the ScalingRuleType parameter to SimpleScalingRule. Valid values: 0 to 86400. Unit: seconds.

By default, this parameter is left empty.', example='60', position='Query'),
  disableScaleIn?: boolean(name='DisableScaleIn', description='Specifies whether to disable scale-in. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule.

Default value: false.', example='false', position='Query'),
  estimatedInstanceWarmup?: int32(name='EstimatedInstanceWarmup', description='The warmup period of an instance. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule. Auto Scaling adds ECS instances that are in the warmup state to a scaling group but does not report monitoring data to CloudMonitor during the warmup period.

> Auto Scaling calculates the number of ECS instances that must be scaled. ECS instances in the warmup state are not counted towards the current capacity of the scaling group.

Valid values: 0 to 86400. Unit: seconds.

Default value: 300.', example='300', position='Query'),
  initialMaxSize?: int32(name='InitialMaxSize', description='The maximum number of ECS instances in the scaling group. If you specify this parameter, you must also specify the PredictiveValueBehavior parameter.

The default value of this parameter is the value of the MaxSize parameter.', example='100', position='Query'),
  metricName?: string(name='MetricName', description='The predefined metric that you want to monitor. This parameter is required only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule.

Valid values if you set the ScalingRuleType parameter to TargetTrackingScalingRule:

*   CpuUtilization: the average CPU utilization
*   ClassicInternetRx: the average inbound Internet traffic over the classic network
*   ClassicInternetTx: the average outbound Internet traffic over the classic network
*   VpcInternetRx: the average inbound Internet traffic over the virtual private cloud (VPC)
*   VpcInternetTx: the average outbound Internet traffic over the VPC
*   IntranetRx: the average inbound traffic over the internal network
*   IntranetTx: the average outbound traffic over the internal network

Valid values if you set the ScalingRuleType parameter to PredictiveScalingRule:

*   CpuUtilization: the average CPU utilization
*   IntranetRx: the average inbound traffic over the internal network
*   IntranetTx: the average outbound traffic over the internal network', example='CpuUtilization', position='Query'),
  minAdjustmentMagnitude?: int32(name='MinAdjustmentMagnitude', description='The minimum number of instances that must be scaled when the AdjustmentType parameter is set to PercentChangeInCapacity. This parameter takes effect only if you set the ScalingRuleType parameter to SimpleScalingRule or StepScalingRule.', example='1', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  predictiveScalingMode?: string(name='PredictiveScalingMode', description='The mode of the predictive scaling rule. Valid values:

*   PredictAndScale: produces predictions and creates prediction tasks.
*   PredictOnly: produces predictions but does not create prediction tasks.

Default value: PredictAndScale.', example='PredictAndScale', position='Query'),
  predictiveTaskBufferTime?: int32(name='PredictiveTaskBufferTime', description='The amount of buffer time before the prediction task is executed. By default, all prediction tasks that are automatically created for a predictive scaling rule are executed on the hour. You can specify an amount of buffer time for resource preparation before the prediction tasks are executed. Valid values: 0 to 60. Unit: minutes.

Default value: 0.', example='30', position='Query'),
  predictiveValueBehavior?: string(name='PredictiveValueBehavior', description='The maximum value for predication tasks. Valid values:

*   MaxOverridePredictiveValue: uses the initial maximum capacity as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMax: uses the predicted value as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMaxWithBuffer: increases the predicted value by a percentage that is specified by the PredictiveValueBuffer parameter. If the predicted value that is increased by the percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks.

Default value: MaxOverridePredictiveValue.', example='MaxOverridePredictiveValue', position='Query'),
  predictiveValueBuffer?: int32(name='PredictiveValueBuffer', description='The percentage of the increment to the predicted value when the PredictiveValueBehavior parameter is set to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.

Default value: 0.', example='50', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scaleInEvaluationCount?: int32(name='ScaleInEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-in activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.

Default value: 15.', example='15', position='Query'),
  scaleOutEvaluationCount?: int32(name='ScaleOutEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-out activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.

Default value: 3.', example='3', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group to which the scaling rule belongs.', example='asg-bp1ffogfdauy0jw0****', position='Query'),
  scalingRuleName?: string(name='ScalingRuleName', description='The name of the scaling rule. It must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). It must start with a letter or a digit. The name of a scaling rule must be unique in the scaling group to which the scaling rule belongs and within an Alibaba Cloud account.

If you do not specify this parameter, the value of the ScalingRuleId parameter is used.', example='scalingrule****', position='Query'),
  scalingRuleType?: string(name='ScalingRuleType', description='The type of the scaling rule. Valid values:

*   SimpleScalingRule: scales the number of ECS instances based on the values that are specified for the AdjustmentType and AdjustmentValue parameters.
*   TargetTrackingScalingRule: calculates the number of ECS instances that must be scaled and maintains the value of a predefined metric close to the value that is specified for the TargetValue parameter.
*   StepScalingRule: scales ECS instances in steps based on the specified thresholds and metric values.
*   PredictiveScalingRule: uses machine learning to analyze historical monitoring data of the scaling group and predicts the future values of metrics. In addition, Auto Scaling automatically creates scheduled tasks to specify the boundary values for the scaling group.

Default value: SimpleScalingRule.', example='SimpleScalingRule', position='Query'),
  stepAdjustments?: [ 
    {
      metricIntervalLowerBound?: float(name='MetricIntervalLowerBound', description='The lower limit specified in a step adjustment. This parameter is available only if you set the ScalingRuleType parameter to StepScalingRule. Valid values: -9.999999E18 to 9.999999E18.', example='1.0'),
      metricIntervalUpperBound?: float(name='MetricIntervalUpperBound', description='The upper limit that is specified in a step adjustment. Valid values: -9.999999E18 to 9.999999E18.', example='5.0'),
      scalingAdjustment?: int32(name='ScalingAdjustment', description='The number of ECS instances that you want to scale in a step adjustment. This parameter is available only if you set the ScalingRuleType parameter to StepScalingRule.', example='1'),
    }
  ](name='StepAdjustments', description='Details of the step adjustments.', position='Query'),
  targetValue?: float(name='TargetValue', description='The target value. This parameter is required only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule. The value must be greater than 0 and can have up to three decimal places.', example='0.125', position='Query'),
}

model CreateScalingRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingRuleAri?: string(name='ScalingRuleAri', description='The unique identifier of the scaling rule.', example='ari:acs:ess:cn-hangzhou:140692647406****:scalingrule/asr-bp1dvirgwkoowxk7****'),
  scalingRuleId?: string(name='ScalingRuleId', description='The ID of the scaling rule, which is generated by the system and is globally unique.', example='asr-bp1dvirgwkoowxk7****'),
}

model CreateScalingRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateScalingRuleResponseBody(name='body'),
}

/**
  * ## Description
  * A scaling rule defines a specific scaling activity, such as adding or removing N instances. If the number of Elastic Compute Service (ECS) instances in a scaling group is less than the minimum number allowed or greater than the maximum number allowed after a scaling rule is executed, Auto Scaling adjusts the number of ECS instances that you want to add or remove. This way, the number of ECS instances can be maintained within the valid range after the scaling rule is executed. The number of ECS instances that is specified in the scaling rule remains unchanged. Example:
  * *   If your scaling group contains two ECS instances and allows up to three ECS instances, only one ECS instance is added to your scaling group after you execute a scale-out rule in which three ECS instances are specified. The number of ECS instances that is specified in the scaling rule remains unchanged.
  * *   If your scaling group contains three ECS instances and requires at least two ECS instances, only one ECS instance is removed from your scaling group after you execute a scale-in rule in which five ECS instances are specified. The number of ECS instances that is specified in the scaling rule remains unchanged.
  * Before you call this operation, take note of the following items:
  * *   If you set the AdjustmentType parameter to TotalCapacity, the number of ECS instances in the scaling group is adjusted to the specified value. The value of the AdjustmentValue parameter must be greater than or equal to 0.
  * *   If you set the AdjustmentType parameter to QuantityChangeInCapacity or PercentChangeInCapacity, a positive value of AdjustmentValue specifies the number of ECS instances that are added to the scaling group, and a negative value of AdjustmentValue specifies the number of ECS instances that are removed from the scaling group.
  * *   If you set the AdjustmentType parameter to PercentChangeInCapacity, Auto Scaling uses the following formula to calculate a value, and then rounds the value to the nearest integer to obtain the number of ECS instances that need to be scaled: Value of TotalCapacity × Value of AdjustmentValue/100.
  * *   If the cooldown time is specified in a scaling rule, the specified time applies to the scaling group after the rule is executed. Otherwise, the value of the DefaultCooldown parameter of the scaling group applies to the scaling group.
  * *   You can create only a limited number of scaling rules for a scaling group. For more information, see the "Limits" topic.
  * *   The unique identifier (ScalingRuleAri) of a scaling rule can be used by the following operations:
  *     *   ExecuteScalingRule: You can call this operation to manually execute a specific scaling rule by setting the ScalingRuleAri parameter to the unique identifier of the scaling rule.
  *     *   CreateScheduledTask: You can call this operation to create a scheduled task for a specific scaling rule by setting the ScheduledAction parameter to the unique identifier of the scaling rule.
  *
 */
async function createScalingRule(request: CreateScalingRuleRequest): CreateScalingRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateScalingRule', 'POST', '/', 'json', false, 'json', request);
}

model CreateScheduledTaskRequest {
  description?: string(name='Description', description='The description of the scheduled task. The description must be 2 to 200 characters in length.', example='Test scheduled task.', position='Query'),
  desiredCapacity?: int32(name='DesiredCapacity', description='The expected number of instances in the scaling group if you specify the ScalingGroupId parameter.

> You must specify the `DesiredCapacity` parameter when you create a scaling group.', example='10', position='Query'),
  launchExpirationTime?: int32(name='LaunchExpirationTime', description='The time period during which the failed scheduled task can be retried. Unit: seconds. Valid values: 0 to 1800.

Default value: 600.', example='600', minimum=0, maximum=86400, position='Query'),
  launchTime?: string(name='LaunchTime', description='The point in time at which the scheduled task is triggered. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. The time must be in UTC. You cannot enter a point in time that is later than 90 days from the point in time at which the scheduled task is created.

*   If you specify the `RecurrenceType` parameter, the scheduled task is repeatedly executed at the point in time that is specified by the LaunchTime parameter.
*   If you do not specify the `RecurrenceType` parameter, the task is executed only once at the point in time that is specified by the LaunchTime parameter.', example='2014-08-17T16:52Z', position='Query'),
  maxValue?: int32(name='MaxValue', description='The maximum number of instances in the scaling group if you specify the ScalingGroupId parameter.', example='10', position='Query'),
  minValue?: int32(name='MinValue', description='The minimum number of instances in the scaling group if you specify the ScalingGroupId parameter.', example='0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  recurrenceEndTime?: string(name='RecurrenceEndTime', description='The end time of the scheduled task. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format.

The time must be in UTC. You cannot enter a point in time that is later than 365 days from the point in time at which the scheduled task is created.', example='2014-08-17T16:55Z', position='Query'),
  recurrenceType?: string(name='RecurrenceType', description='The interval at which the scheduled task is repeated. Valid values:

*   Daily: The scheduled task is executed once every specified number of days.
*   Weekly: The scheduled task is executed on each specified day of the week.
*   Monthly: The scheduled task is executed on each specified day of the month.
*   Cron: The scheduled task is executed based on the specified cron expression.

You must specify the `RecurrenceType` and `RecurrenceValue` parameters at the same time.', example='Daily', position='Query'),
  recurrenceValue?: string(name='RecurrenceValue', description='The number of recurrences of the scheduled task.

*   If you set the `RecurrenceType` parameter to `Daily`, you can specify only one value for this parameter. Valid values: 1 to 31.
*   If you set the `RecurrenceType` parameter to `Weekly`, you can specify multiple values for this parameter. Separate the values with commas (,). The values that correspond to Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday are 0, 1, 2, 3, 4, 5, and 6.``
*   If you set the `RecurrenceType` parameter to `Monthly`, you can specify two values in the `A-B` format for this parameter. Valid values of A and B: 1 to 31. B must be greater than or equal to A.
*   If you set the `RecurrenceType` parameter to `Cron`, you can specify a cron expression. A cron expression is written in UTC time and consists of the following fields: minute, hour, day, month, and week. The expression can contain the letters L and W and the following wildcard characters: commas (,), question marks (?), hyphens (-), asterisks (\\*), number signs (#), and forward slashes (/).

You must specify both the `RecurrenceType` parameter and the `RecurrenceValue` parameter.', example='1', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scheduled task.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group whose number of instances must be modified when the scheduled task is triggered. If you specify the `ScalingGroupId` parameter for a scheduled task, you must specify the minimum, maximum, or expected numbers of instances for a scaling group in the scheduled task. That is, you must specify at least one of the `MinValue`, `MaxValue`, and `DesiredCapacity` parameters.

> You cannot specify the `ScheduledAction` and `ScalingGroupId` parameters at the same time.', example='asg-bp18p2yfxow2dloq****', position='Query'),
  scheduledAction?: string(name='ScheduledAction', description='The scaling rule that you want to execute when the scheduled task is triggered. Specify the unique identifier of the scaling rule. If you specify the `ScheduledAction` parameter, you must select an existing scaling rule for the scheduled task.

> You cannot specify the `ScheduledAction` and `ScalingGroupId` parameters at the same time.', example='ari:acs:ess:cn-hangzhou:140692647****:scalingrule/asr-bp12tcnol686y1ik****', position='Query'),
  scheduledTaskName?: string(name='ScheduledTaskName', description='The name of the scheduled task. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit. The name of the scheduled task must be unique in the region and within the Alibaba Cloud account.

If you do not specify this parameter, the value of the `ScheduledTaskId` parameter is used.', example='scheduled****', position='Query'),
  taskEnabled?: boolean(name='TaskEnabled', description='Specifies whether to enable the scheduled task.

*   true
*   false

Default value: true.', example='true', position='Query'),
}

model CreateScheduledTaskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scheduledTaskId?: string(name='ScheduledTaskId', description='The globally unique ID of the scheduled task. The globally unique ID is generated by the system.', example='edRtShc57WGXdt8TlPbr****'),
}

model CreateScheduledTaskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateScheduledTaskResponseBody(name='body'),
}

/**
  * *   If a scheduled task fails to trigger a scaling activity due to an ongoing scaling activity in a scaling group or because the scaling group is disabled, the scheduled task is automatically retried during the period that is specified by the LaunchExpirationTime parameter. If the scheduled task still fails to trigger a scaling activity after the period ends, the task is automatically skipped.
  * *   If multiple tasks are scheduled at similar points in time to trigger scaling activities in the same scaling group, the earliest task triggers the scaling activity first. Other tasks trigger scaling activities within their launch expiration time. Only one scaling activity can be triggered in a scaling group at a time.`` If the previous scaling activity is complete and another scheduled task attempts to trigger a scaling activity, Auto Scaling executes the scaling rule that is specified in the scheduled task and then triggers a scaling activity.``
  * *   A scheduled task supports the following scaling methods:
  *     *   `ScheduledAction`: Specify an existing scaling rule that you want Auto Scaling to execute when the scheduled task is triggered.
  *     *   `ScalingGroupId`: Specify the minimum number, maximum number, or expected number of instances for the scaling group for which you created the scheduled task.
  * > You cannot specify the `ScheduledAction` and ScalingGroupId parameters at the same time.
  *
 */
async function createScheduledTask(request: CreateScheduledTaskRequest): CreateScheduledTaskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateScheduledTask', 'POST', '/', 'json', false, 'json', request);
}

model DeactivateScalingConfigurationRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingConfigurationId: string(name='ScalingConfigurationId', position='Query'),
}

model DeactivateScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeactivateScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeactivateScalingConfigurationResponseBody(name='body'),
}

async function deactivateScalingConfiguration(request: DeactivateScalingConfigurationRequest): DeactivateScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeactivateScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model DeleteAlarmRequest {
  alarmTaskId: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model DeleteAlarmResponseBody = {
  alarmTaskId?: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='6EF9BFEE-FE07-4627-B8FB-14326FB9****'),
}

model DeleteAlarmResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAlarmResponseBody(name='body'),
}

async function deleteAlarm(request: DeleteAlarmRequest): DeleteAlarmResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteAlarm', 'POST', '/', 'json', false, 'json', request);
}

model DeleteEciScalingConfigurationRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingConfigurationId: string(name='ScalingConfigurationId', description='The ID of the scaling configuration that you want to delete.', example='asc-bp1bx8mzur534edp****', position='Query'),
}

model DeleteEciScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request. This request ID is returned regardless of whether the request is successful.', example='45D5B0AD-3B00-4A9B-9911-6D5303B06712'),
}

model DeleteEciScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteEciScalingConfigurationResponseBody(name='body'),
}

/**
  * You cannot delete a scaling configuration that is used to create elastic container instances in the following scenarios:
  * *   The scaling configuration is in the Active state.
  * *   The scaling group contains elastic container instances that are created based on the scaling configuration.
  *
 */
async function deleteEciScalingConfiguration(request: DeleteEciScalingConfigurationRequest): DeleteEciScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteEciScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model DeleteLifecycleHookRequest {
  lifecycleHookId?: string(name='LifecycleHookId', example='ash-bp14g3ee6bt3sc98****', position='Query'),
  lifecycleHookName?: string(name='LifecycleHookName', example='lifecyclehook****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model DeleteLifecycleHookResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteLifecycleHookResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteLifecycleHookResponseBody(name='body'),
}

async function deleteLifecycleHook(request: DeleteLifecycleHookRequest): DeleteLifecycleHookResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteLifecycleHook', 'POST', '/', 'json', false, 'json', request);
}

model DeleteNotificationConfigurationRequest {
  notificationArn: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method. The following list describes the value formats of this parameter:

*   If you use CloudMonitor as the notification party, the value format of this parameter is acs:ess:{region-id}:{account-id}:cloudmonitor.
*   If you use an MNS queue as the notification party, the value format of this parameter is acs:mns:{region-id}:{account-id}:queue/{queuename}.
*   If you use an MNS topic as the notification party, the value format of this parameter is acs:mns:{region-id}:{account-id}:topic/{topicname}.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.', example='acs:ess:cn-beijing:161456884340****:cloudmonitor', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model DeleteNotificationConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DeleteNotificationConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteNotificationConfigurationResponseBody(name='body'),
}

async function deleteNotificationConfiguration(request: DeleteNotificationConfigurationRequest): DeleteNotificationConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteNotificationConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model DeleteScalingConfigurationRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingConfigurationId: string(name='ScalingConfigurationId', description='The ID of the scaling configuration that you want to delete.', example='asc-bp1bx8mzur534edp****', position='Query'),
}

model DeleteScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request. The request ID is returned regardless of whether the call is successful.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DeleteScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteScalingConfigurationResponseBody(name='body'),
}

/**
  * You cannot delete a scaling configuration in one of the following scenarios:
  * *   The scaling configuration in your scaling group is in the Active state.
  * *   The scaling group contains ECS instances that were created based on the scaling configuration.
  *
 */
async function deleteScalingConfiguration(request: DeleteScalingConfigurationRequest): DeleteScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model DeleteScalingGroupRequest {
  forceDelete?: boolean(name='ForceDelete', description='Specifies whether to forcefully delete the VPC. Valid values:

- **true**: yes
- **false** (default): no

You can forcefully delete a VPC in the following scenarios:

- Only an IPv4 gateway and routes that point to the IPv4 gateway exist in the VPC.
- Only an IPv6 gateway and routes that point to the IPv6 gateway exist in the VPC.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model DeleteScalingGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteScalingGroupResponseBody(name='body'),
}

async function deleteScalingGroup(request: DeleteScalingGroupRequest): DeleteScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model DeleteScalingRuleRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingRuleId: string(name='ScalingRuleId', description='The ID of the scaling rule that you want to delete.', example='asr-bp163l21e07uhnyt****', position='Query'),
}

model DeleteScalingRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DeleteScalingRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteScalingRuleResponseBody(name='body'),
}

async function deleteScalingRule(request: DeleteScalingRuleRequest): DeleteScalingRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteScalingRule', 'POST', '/', 'json', false, 'json', request);
}

model DeleteScheduledTaskRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scheduled task.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scheduledTaskId: string(name='ScheduledTaskId', description='The ID of the scheduled task. An ID is a globally unique identifier (GUID) that is generated by the system for a scheduled task.', example='edRtShc57WGXdt8TlPbr****', position='Query'),
}

model DeleteScheduledTaskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteScheduledTaskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteScheduledTaskResponseBody(name='body'),
}

async function deleteScheduledTask(request: DeleteScheduledTaskRequest): DeleteScheduledTaskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteScheduledTask', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAlarmsRequest {
  alarmTaskId?: string(name='AlarmTaskId', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****', position='Query'),
  isEnable?: boolean(name='IsEnable', example='true', position='Query'),
  metricName?: string(name='MetricName', example='CpuUtilization', position='Query'),
  metricType?: string(name='MetricType', example='true', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', position='Query'),
  pageSize?: int32(name='PageSize', example='10', maximum=50, position='Query'),
  regionId: string(name='RegionId', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp18p2yfxow2dloq****', position='Query'),
  state?: string(name='State', example='OK', position='Query'),
}

model DescribeAlarmsResponseBody = {
  alarmList?: [ 
    {
      alarmActions?: [ string ](name='AlarmActions'),
      alarmTaskId?: string(name='AlarmTaskId', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****'),
      comparisonOperator?: string(name='ComparisonOperator', example='>='),
      description?: string(name='Description', example='Test alarm task.'),
      dimensions?: [ 
        {
          dimensionKey?: string(name='DimensionKey', example='device'),
          dimensionValue?: string(name='DimensionValue', example='eth0'),
        }
      ](name='Dimensions'),
      effective?: string(name='Effective'),
      enable?: boolean(name='Enable', example='true'),
      evaluationCount?: int32(name='EvaluationCount', example='3'),
      expressions?: [ 
        {
          comparisonOperator?: string(name='ComparisonOperator', example='>='),
          metricName?: string(name='MetricName', example='CpuUtilization'),
          period?: int32(name='Period', example='900'),
          statistics?: string(name='Statistics', example='Average'),
          threshold?: float(name='Threshold', example='40.0'),
        }
      ](name='Expressions'),
      expressionsLogicOperator?: string(name='ExpressionsLogicOperator', example='&&'),
      metricName?: string(name='MetricName', example='CpuUtilization'),
      metricType?: string(name='MetricType', example='system'),
      name?: string(name='Name', example='TestAlarmTask'),
      period?: int32(name='Period', example='300'),
      scalingGroupId?: string(name='ScalingGroupId', example='asg-bp18p2yfxow2dloq****'),
      state?: string(name='State', example='ALARM'),
      statistics?: string(name='Statistics', example='Average'),
      threshold?: float(name='Threshold', example='80.0'),
    }
  ](name='AlarmList'),
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='10'),
  requestId?: string(name='RequestId', example='871C7C53-34A4-45AA-8C14-4B72FA6A****'),
  totalCount?: int32(name='TotalCount', example='2'),
}

model DescribeAlarmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAlarmsResponseBody(name='body'),
}

async function describeAlarms(request: DescribeAlarmsRequest): DescribeAlarmsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAlarms', 'POST', '/', 'json', false, 'json', request);
}

model DescribeEciScalingConfigurationsRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10.', example='50', maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group to which the scaling configuration belongs.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingConfigurationIds?: [ string ](name='ScalingConfigurationIds', description='The IDs of the scaling configurations that you want to query.

The IDs of active and inactive scaling configurations are displayed in the query results. You can differentiate between active and inactive scaling configurations based on the value of the `LifecycleState` parameter.', position='Query'),
  scalingConfigurationNames?: [ string ](name='ScalingConfigurationNames', description='The names of the scaling configurations that you want to query.

The names of inactive scaling configurations are not displayed in the query results, and no error is reported.', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group. You can use the ID to query all scaling configurations in the scaling group.', example='asg-bp17pelvl720x3v7****', position='Query'),
}

model DescribeEciScalingConfigurationsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='50'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingConfigurations?: [ 
    {
      acrRegistryInfos?: [ 
        {
          domains?: [ string ](name='Domains', description='The domain name of the Container Registry Enterprise Edition instance. By default, all domain names of the Container Registry Enterprise Edition instance are displayed. You can specify one or more domain names. Separate multiple domain names with commas (,).'),
          instanceId?: string(name='InstanceId', description='The ID of the Container Registry Enterprise Edition instance.', example='cri-nwj395hgf6f3****'),
          instanceName?: string(name='InstanceName', description='The name of the Container Registry Enterprise Edition instance.', example='acr-test'),
          regionId?: string(name='RegionId', description='The region ID of the Container Registry Enterprise Edition instance.', example='cn-hangzhou'),
        }
      ](name='AcrRegistryInfos', description='Details of the Container Registry Enterprise Edition instances.'),
      activeDeadlineSeconds?: int32(name='ActiveDeadlineSeconds', description='The validity period. Unit: seconds.', example='1000'),
      autoCreateEip?: boolean(name='AutoCreateEip', description='Indicates whether an elastic IP address (EIP) is automatically created, and then bound to the elastic container instance.', example='true'),
      autoMatchImageCache?: boolean(name='AutoMatchImageCache', description='Indicates whether the image cache is automatically matched. Default value: false.', example='false'),
      containerGroupName?: string(name='ContainerGroupName', description='The name of the elastic container instance.', example='test'),
      containers?: [ 
        {
          args?: [ string ](name='Args', description='The arguments that are passed to the container startup commands. You can specify up to 10 arguments.'),
          commands?: [ string ](name='Commands', description='The container startup commands. You can specify up to 20 commands. Each command can contain up to 256 characters.'),
          cpu?: float(name='Cpu', description='The number of vCPUs that are allocated to the container.', example='2.0'),
          environmentVars?: [ 
            {
              fieldRefFieldPath?: string(name='FieldRefFieldPath', description='> This parameter is unavailable.', example='path'),
              key?: string(name='Key', description='The name of the environment variable.', example='PATH'),
              value?: string(name='Value', description='The value of the environment variable.', example='/usr/bin/'),
            }
          ](name='EnvironmentVars', description='Details of the environment variables.'),
          gpu?: int32(name='Gpu', description='The number of GPUs.', example='1'),
          image?: string(name='Image', description='The image of the container.', example='mysql'),
          imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy. Valid values:

*   Always: Image pulling is performed each time.
*   IfNotPresent: Image pulling is performed only if on-premises images are unavailable. On-premises images are preferentially used. If no on-premises images are available, image pulling is performed.
*   Never: On-premises images are always used. Image pulling is not performed.', example='Always'),
          lifecyclePostStartHandlerExecs?: [ string ](name='LifecyclePostStartHandlerExecs'),
          lifecyclePostStartHandlerHttpGetHost?: string(name='LifecyclePostStartHandlerHttpGetHost'),
          lifecyclePostStartHandlerHttpGetPath?: string(name='LifecyclePostStartHandlerHttpGetPath'),
          lifecyclePostStartHandlerHttpGetPort?: int32(name='LifecyclePostStartHandlerHttpGetPort'),
          lifecyclePostStartHandlerHttpGetScheme?: string(name='LifecyclePostStartHandlerHttpGetScheme'),
          lifecyclePostStartHandlerTcpSocketHost?: string(name='LifecyclePostStartHandlerTcpSocketHost'),
          lifecyclePostStartHandlerTcpSocketPort?: int32(name='LifecyclePostStartHandlerTcpSocketPort'),
          lifecyclePreStopHandlerExecs?: [ string ](name='LifecyclePreStopHandlerExecs'),
          lifecyclePreStopHandlerHttpGetHost?: string(name='LifecyclePreStopHandlerHttpGetHost'),
          lifecyclePreStopHandlerHttpGetPath?: string(name='LifecyclePreStopHandlerHttpGetPath'),
          lifecyclePreStopHandlerHttpGetPort?: int32(name='LifecyclePreStopHandlerHttpGetPort'),
          lifecyclePreStopHandlerHttpGetScheme?: string(name='LifecyclePreStopHandlerHttpGetScheme'),
          lifecyclePreStopHandlerTcpSocketHost?: string(name='LifecyclePreStopHandlerTcpSocketHost'),
          lifecyclePreStopHandlerTcpSocketPort?: int32(name='LifecyclePreStopHandlerTcpSocketPort'),
          livenessProbeExecCommands?: [ string ](name='LivenessProbeExecCommands', description='The commands that are run in the container when you use the CLI to perform probes.'),
          livenessProbeFailureThreshold?: int32(name='LivenessProbeFailureThreshold', description='The minimum number of consecutive failures for a probe to be considered failed after having been successful.

Default value: 3.', example='3'),
          livenessProbeHttpGetPath?: string(name='LivenessProbeHttpGetPath', description='The path to which the system sends an HTTP GET request for a probe.', example='/usr/nginx/'),
          livenessProbeHttpGetPort?: int32(name='LivenessProbeHttpGetPort', description='The port to which HTTP GET requests were sent.', example='80'),
          livenessProbeHttpGetScheme?: string(name='LivenessProbeHttpGetScheme', description='The protocol type of HTTP GET requests when you use HTTP requests to perform probes. Valid values:

*   HTTP
*   HTTPS', example='HTTP'),
          livenessProbeInitialDelaySeconds?: int32(name='LivenessProbeInitialDelaySeconds', description='The number of seconds between the time when the startup of the container ends and the time when the probe starts.', example='10'),
          livenessProbePeriodSeconds?: int32(name='LivenessProbePeriodSeconds', description='The interval at which probes are performed. Default value: 10. Minimum value: 1. Unit: seconds.', example='5'),
          livenessProbeSuccessThreshold?: int32(name='LivenessProbeSuccessThreshold', description='The minimum number of consecutive successes for a probe to be considered successful after having failed. Default value: 1. Valid value: 1.', example='1'),
          livenessProbeTcpSocketPort?: int32(name='LivenessProbeTcpSocketPort', description='The port number of TcpSocket.', example='80'),
          livenessProbeTimeoutSeconds?: int32(name='LivenessProbeTimeoutSeconds', description='The timeout period of a probe. Default value: 1. Minimum value: 1. Unit: seconds.', example='10'),
          memory?: float(name='Memory', description='The memory size of the container.', example='2.0'),
          name?: string(name='Name', description='The name of the container.', example='nginx'),
          ports?: [ 
            {
              port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='8888'),
              protocol?: string(name='Protocol', description='The protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
            }
          ](name='Ports', description='The exposed ports and protocols of the container.'),
          readinessProbeExecCommands?: [ string ](name='ReadinessProbeExecCommands', description='The commands that are run in the container when you use the CLI to perform probes.'),
          readinessProbeFailureThreshold?: int32(name='ReadinessProbeFailureThreshold', description='The minimum number of consecutive failures for a probe to be considered failed after having been successful.

Default value: 3.', example='3'),
          readinessProbeHttpGetPath?: string(name='ReadinessProbeHttpGetPath', description='The path to which the system sends an HTTP GET request for a probe.', example='/usr/local'),
          readinessProbeHttpGetPort?: int32(name='ReadinessProbeHttpGetPort', description='The path to which the system sends an HTTP GET request for a probe.', example='/usr/nginx/'),
          readinessProbeHttpGetScheme?: string(name='ReadinessProbeHttpGetScheme', description='The protocol type of HTTP GET requests when you use HTTP requests to perform probes. Valid values:

*   HTTP
*   HTTPS', example='HTTP'),
          readinessProbeInitialDelaySeconds?: int32(name='ReadinessProbeInitialDelaySeconds', description='The number of seconds between the time when the startup of the container ends and the time when the probe starts.', example='5'),
          readinessProbePeriodSeconds?: int32(name='ReadinessProbePeriodSeconds', description='The interval at which probes are performed. Default value: 10. Minimum value: 1. Unit: seconds.', example='1'),
          readinessProbeSuccessThreshold?: int32(name='ReadinessProbeSuccessThreshold', description='The minimum number of consecutive successes for a probe to be considered successful after having failed. Default value: 1. Valid value: 1.', example='1'),
          readinessProbeTcpSocketPort?: int32(name='ReadinessProbeTcpSocketPort', description='The port number of TcpSocket.', example='8888'),
          readinessProbeTimeoutSeconds?: int32(name='ReadinessProbeTimeoutSeconds', description='The timeout period of a probe. Default value: 1. Minimum value: 1. Unit: seconds.', example='5'),
          securityContextCapabilityAdds?: [ string ](name='SecurityContextCapabilityAdds', description='The permissions granted to processes in the container. Valid values: NET_ADMIN and NET_RAW.

> To use NET_RAW, you need to submit a ticket.'),
          securityContextReadOnlyRootFilesystem?: boolean(name='SecurityContextReadOnlyRootFilesystem', description='Indicates whether the root file system is set to the read-only mode. The only valid value is true.', example='true'),
          securityContextRunAsUser?: long(name='SecurityContextRunAsUser', description='The user ID (UID) that is used to run the entry point of the container process.', example='1000'),
          stdin?: boolean(name='Stdin', description='Indicates whether the container allocates buffer resources to standard input streams when the container runs. If you do not specify this parameter, an end-of-file (EOF) error may occur. Default value: false.', example='true'),
          stdinOnce?: boolean(name='StdinOnce', description='Indicates whether standard input streams are disconnected after a client is disconnected. If Stdin is set to true, standard input streams remain connected during multiple sessions.

If StdinOnce is set to true, standard input streams are connected after the container is started and remain idle until a client is connected to receive data. After the client is disconnected, streams are also disconnected and remain in the disconnected state until the container is started again.', example='true'),
          tty?: boolean(name='Tty', description='Indicates whether interaction is enabled. Valid values:

*   true
*   false

If the value of the Command parameter is /bin/bash, the value of this parameter is true.

Default value: false.', example='false'),
          volumeMounts?: [ 
            {
              mountPath?: string(name='MountPath', description='The directory in which the container mounts the volume.

> Data in this directory is overwritten by the data on the volume.', example='/pod/data'),
              mountPropagation?: string(name='MountPropagation', description='The mount propagation setting of the volume. Mount propagation allows the sharing of volumes that are mounted on one container with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.

Default value: None.', example='None'),
              name?: string(name='Name', description='The name of the volume. The value of this parameter is the same as the value of the Volumes.Name parameter.', example='default-volume1'),
              readOnly?: boolean(name='ReadOnly', description='Indicates whether the volume is read-only.

Default value: false.', example='false'),
              subPath?: string(name='SubPath', description='The subdirectory of the volume.', example='data2/'),
            }
          ](name='VolumeMounts', description='The volumes that are mounted on the container.'),
          workingDir?: string(name='WorkingDir', description='The working directory of the container.', example='/usr/local/nginx'),
        }
      ](name='Containers', description='The containers in the elastic container instance.'),
      costOptimization?: boolean(name='CostOptimization', description='Indicates whether the cost optimization feature is enabled. Valid values:

*   true
*   false', example='false'),
      cpu?: float(name='Cpu', description='The number of vCPUs of the elastic container instance.', example='2.0'),
      cpuOptionsCore?: int32(name='CpuOptionsCore', description='The number of physical CPU cores. This parameter can be specified for only some instance types. For more information, see [Specify custom CPU options](~~197781~~).', example='2'),
      cpuOptionsThreadsPerCore?: int32(name='CpuOptionsThreadsPerCore', description='The number of threads per core. This parameter can be specified for only some instance types. If you set this parameter to 1, Hyper-Threading is disabled. For more information, see [Specify custom CPU options](~~197781~~).', example='2'),
      creationTime?: string(name='CreationTime', description='The time when the scaling configuration was created.', example='2014-08-14T10:58Z'),
      dataCacheBucket?: string(name='DataCacheBucket', description='数据缓存Bucket。', example='default'),
      dataCacheBurstingEnabled?: boolean(name='DataCacheBurstingEnabled', description='数据缓存使用ESSD AutoPL云盘时，是否开启Burst（性能突发）。可能值：

- true：开启。
- false：未开启。
>关于ESSD AutoPL云盘的更多信息，请参见[ESSD AutoPL云盘](~~368372~~)。', example='false'),
      dataCachePL?: string(name='DataCachePL', description='数据缓存使用的云盘的性能等级。建议优先使用ESSD云盘，该云盘的性能等级的可能值：

- PL0：单盘最高随机读写IOPS 1万。
- PL1：单盘最高随机读写IOPS 5万。
- PL2：单盘最高随机读写IOPS 10万。
- PL3：单盘最高随机读写IOPS 100万。

>关于ESSD云盘的更多信息，请参见[ESSD云盘](~~122389~~)。', example='PL1'),
      dataCacheProvisionedIops?: int32(name='DataCacheProvisionedIops', description='数据缓存使用ESSD AutoPL云盘时，ESSD AutoPL云盘预配置的读写IOPS。可能值：0~min{50000, 1000*容量-基准性能}，其中，基准性能=min{1800+50*容量, 50000}。

>关于ESSD AutoPL云盘的更多信息，请参见[ESSD AutoPL云盘](~~368372~~)。', example='40000'),
      description?: string(name='Description', description='> This parameter is unavailable.', example='This is an example.'),
      dnsConfigNameServers?: [ string ](name='DnsConfigNameServers', description='The IP addresses of the DNS servers.'),
      dnsConfigOptions?: [ 
        {
          name?: string(name='Name', description='The variable name of the option.', example='name'),
          value?: string(name='Value', description='The variable value of the option.', example='value'),
        }
      ](name='DnsConfigOptions', description='The options. Each option is a name-value pair. The value in the name-value pair is optional.'),
      dnsConfigSearches?: [ string ](name='DnsConfigSearches', description='The DNS lookup domains.'),
      dnsPolicy?: string(name='DnsPolicy', description='The Domain Name System (DNS) policy.', example='Default'),
      egressBandwidth?: long(name='EgressBandwidth', description='The maximum outbound bandwidth. Unit: bytes.', example='1024000'),
      eipBandwidth?: int32(name='EipBandwidth', description='The bandwidth of the EIP. Default value: 5 Mbit/s.', example='5'),
      ephemeralStorage?: int32(name='EphemeralStorage', description='The size of the temporary storage space. Unit: GiB.', example='20'),
      hostAliases?: [ 
        {
          hostnames?: [ string ](name='Hostnames', description='The hostnames that are added.'),
          ip?: string(name='Ip', description='The IP address that is added.', example='192.0.XX.XX'),
        }
      ](name='HostAliases', description='The hostname aliases of a container.'),
      hostName?: string(name='HostName', description='The hostname.', example='[\\"hehe.com\\", \\"haha.com\\"]'),
      imageRegistryCredentials?: [ 
        {
          password?: string(name='Password', description='The password that is used to access the image repository.', example='yourpaasword'),
          server?: string(name='Server', description='The domain name of the image repository.', example='registry-vpc.cn-shanghai.aliyuncs.com'),
          userName?: string(name='UserName', description='The username that is used to access the image repository.', example='yourusername'),
        }
      ](name='ImageRegistryCredentials', description='The information about the image repository.'),
      imageSnapshotId?: string(name='ImageSnapshotId', description='The ID of the image cache snapshot.', example='imc-2zebxkiifuyzzlhl****'),
      ingressBandwidth?: long(name='IngressBandwidth', description='The maximum inbound bandwidth. Unit: bit/s.', example='1024000'),
      initContainers?: [ 
        {
          cpu?: float(name='Cpu', description='The number of vCPUs.', example='0.5'),
          gpu?: int32(name='Gpu', description='The number of GPUs that are allocated to the container.', example='1'),
          image?: string(name='Image', description='The container image.', example='nginx'),
          imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy.', example='Always'),
          initContainerArgs?: [ string ](name='InitContainerArgs', description='The container startup arguments.'),
          initContainerCommands?: [ string ](name='InitContainerCommands', description='The container startup commands.'),
          initContainerEnvironmentVars?: [ 
            {
              fieldRefFieldPath?: string(name='FieldRefFieldPath', description='> This parameter is unavailable.', example='path'),
              key?: string(name='Key', description='The name of the environment variable.', example='PATH'),
              value?: string(name='Value', description='The value of the environment variable.', example='/usr/local/bin'),
            }
          ](name='InitContainerEnvironmentVars', description='Details of the environment variables.'),
          initContainerPorts?: [ 
            {
              port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='1'),
              protocol?: string(name='Protocol', description='The protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
            }
          ](name='InitContainerPorts', description='Details of the init container ports.'),
          initContainerVolumeMounts?: [ 
            {
              mountPath?: string(name='MountPath', description='The directory to which the volume is mounted. Data under this directory is overwritten by the data on the volume.', example='/usr/share/'),
              mountPropagation?: string(name='MountPropagation', description='The mount propagation setting of the volume. Mount propagation allows the sharing of volumes that are mounted on one container with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.

Default value: None.', example='None'),
              name?: string(name='Name', description='The name of the volume.', example='test-empty'),
              readOnly?: boolean(name='ReadOnly', description='Indicates whether the mount path is read-only.

Default value: false.', example='false'),
              subPath?: string(name='SubPath', description='The subdirectory of the volume. The elastic container instance can mount different directories of the same volume to different subdirectories of containers.', example='/usr/sub/'),
            }
          ](name='InitContainerVolumeMounts', description='The volumes that are mounted on the container.'),
          memory?: float(name='Memory', description='The size of the memory.', example='1.0'),
          name?: string(name='Name', description='The name of the container.', example='test-init'),
          securityContextCapabilityAdds?: [ string ](name='SecurityContextCapabilityAdds', description='The permissions that are granted to the processes in the container. Valid values: NET_ADMIN and NET_RAW.

> To use NET_RAW, you need to submit a ticket.'),
          securityContextReadOnlyRootFilesystem?: boolean(name='SecurityContextReadOnlyRootFilesystem', description='Indicates whether the root file system is read-only. The only valid value is true.', example='true'),
          securityContextRunAsUser?: string(name='SecurityContextRunAsUser', description='The ID of the user that runs the container.', example='587'),
          workingDir?: string(name='WorkingDir', description='The working directory.', example='/usr/local'),
        }
      ](name='InitContainers', description='The init containers.'),
      instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The instance family level, which is used to filter the range of instance types that meet the requirements. This parameter takes effect when the `CostOptimization` parameter is set to true. Valid values:

*   EntryLevel: shared instance type. Instances of this level are the most cost-effective but may not provide stable computing performance in a consistent manner. Instances of this level are suitable for business scenarios in which the CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: Instances of this level provide stable performance and dedicated resources, and are suitable for business scenarios that require high stability. For more information, see [Instance family](~~25378~~).
*   CreditEntryLevel: This value is valid only for burstable instances. CPU credits are used to ensure computing performance. Instances of this level are suitable for scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see [Overview](~~59977~~) of burstable instances.', example='EnterpriseLevel'),
      instanceTypes?: [ string ](name='InstanceTypes', description='指定的ECS实例规格，支持多规格（最多支持5个）。'),
      ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses.', example='1'),
      lifecycleState?: string(name='LifecycleState', description='The state of the scaling configuration in the scaling group. Valid values:

*   Active: The scaling configuration is active in the scaling group. Auto Scaling uses active scaling configurations to automatically create ECS instances.
*   Inactive: The scaling configuration is inactive in the scaling group. Auto Scaling does not use inactive scaling configurations to automatically create ECS instances. Inactive scaling configurations are retained in the scaling group.', example='Active'),
      loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of the elastic container instance as a backend server. Valid values: 1 to 100.', example='1'),
      memory?: float(name='Memory', description='The size of the memory.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set the Cpu parameter to 2 and the Memory parameter to 16 to specify the instance types that have 2 vCPUs and 16 GiB of memory. If you specify the Cpu and Memory parameters, Auto Scaling determines available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances of the instance type that is provided at the lowest price.

> You can specify CPU and memory specifications to determine the range of instance types only if the Scaling Policy parameter is set to Cost Optimization Policy and no instance type is specified in the scaling configuration.', example='16'),
      ntpServers?: [ string ](name='NtpServers', description='The domain names of the Network Time Protocol (NTP) servers.'),
      ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role. You can use an instance RAM role to access both elastic container instances and Elastic Compute Service (ECS) instances. For more information, see [Use the instance RAM role by calling APIs](~~61178~~).', example='ram:PassRole'),
      regionId?: string(name='RegionId', description='The region ID of the elastic container instance.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-8db03793gfrz****'),
      restartPolicy?: string(name='RestartPolicy', description='The restart policy of the elastic container instance. Valid values:

*   Never: never restarts the elastic container instance.
*   Always: always restarts the elastic container instance.
*   OnFailure: restarts the elastic container instance upon failures.', example='Never'),
      scalingConfigurationId?: string(name='ScalingConfigurationId', description='The ID of the scaling configuration.', example='asc-bp1ezrfgoyn5kijl****'),
      scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration.', example='scalingconfi****'),
      scalingGroupId?: string(name='ScalingGroupId', description='The scaling group ID of the scaling configuration.', example='asg-bp17pelvl720x3v7****'),
      securityContextSysCtls?: [ 
        {
          name?: string(name='Name', description='The name of the security context in which the elastic container instance runs.', example='kernel.msgmax'),
          value?: string(name='Value', description='The variable value of the security context in which the elastic container instance runs.', example='65536'),
        }
      ](name='SecurityContextSysCtls', description='The system information of the security context in which the elastic container instance runs.'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which the elastic container instance is associated. Elastic container instances that are associated with the same security group can access each other.', example='sg-bp18kz60mefs****'),
      slsEnable?: boolean(name='SlsEnable', description='> This parameter is unavailable.', example='False'),
      spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price for the preemptible instance.

This parameter is returned only if you set the SpotStrategy parameter to SpotWithPriceLimit.', example='0.025'),
      spotStrategy?: string(name='SpotStrategy', description='The preemption policy of the instance. Valid values:

*   NoSpot: The instance is created as a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is created as a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bid price.', example='NoSpot'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of the tag.', example='version'),
          value?: string(name='Value', description='The value of the tag.', example='3'),
        }
      ](name='Tags', description='The tags of the elastic container instance. The tags are specified in the key-value pair format.'),
      terminationGracePeriodSeconds?: int32(name='TerminationGracePeriodSeconds', description='The buffer time in which the program handles operations before the program stops.', example='60'),
      volumes?: [ 
        {
          configFileVolumeConfigFileToPaths?: [ 
            {
              content?: string(name='Content', description='The content of the configuration file (32 KB).', example='bGl1bWk='),
              mode?: int32(name='Mode', description='The permissions on the ConfigFile volume.', example='0644'),
              path?: string(name='Path', description='The relative path to the configuration file.', example='/usr/bin/'),
            }
          ](name='ConfigFileVolumeConfigFileToPaths', description='The paths to configuration files.'),
          configFileVolumeDefaultMode?: int32(name='ConfigFileVolumeDefaultMode', description='The default permissions on the ConfigFile volume.', example='0644'),
          diskVolumeDiskId?: string(name='DiskVolumeDiskId', description='The storage size of a disk volume. Unit: GiB.', example='15'),
          diskVolumeDiskSize?: int32(name='DiskVolumeDiskSize', description='The storage size of a disk volume. Unit: GiB.', example='15'),
          diskVolumeFsType?: string(name='DiskVolumeFsType', description='The file system type of a disk volume.', example='xfs'),
          emptyDirVolumeMedium?: string(name='EmptyDirVolumeMedium', description='The storage medium of EmptyDirVolume. If this parameter is left empty, the file system that backs the node is used as the storage medium. If this parameter is set to memory, the memory is used as the storage medium.', example='memory'),
          emptyDirVolumeSizeLimit?: string(name='EmptyDirVolumeSizeLimit', description='EmptyDir数据卷的大小。', example='256Mi'),
          flexVolumeDriver?: string(name='FlexVolumeDriver', description='The FlexVolume driver name of the volume.', example='flexvolume'),
          flexVolumeFsType?: string(name='FlexVolumeFsType', description='The file system type of the volume. The default value is determined by the script of FlexVolume.', example='ext4'),
          flexVolumeOptions?: string(name='FlexVolumeOptions', description='The FlexVolume options. Each option is a key-value pair in a JSON string.

For example, when you use FlexVolume to mount a disk, the format of options is `{"volumeId":"d-2zehdahrwoa7srg****","performanceLevel": "PL2"}`.', example='{"volumeId":"d-2zehdahrwoa7srg****","performanceLevel": "PL2"}'),
          hostPathVolumePath?: string(name='HostPathVolumePath', description='HostPath Volume在主机上的目录路径。', example='/pod/data'),
          hostPathVolumeType?: string(name='HostPathVolumeType', description='HostPath Volume的类型。', example='Directory'),
          NFSVolumePath?: string(name='NFSVolumePath', description='The path to the Network File System (NFS) volume.', example='/share'),
          NFSVolumeReadOnly?: boolean(name='NFSVolumeReadOnly', description='Indicates whether the NFS volume is read-only.

Default value: false.', example='false'),
          NFSVolumeServer?: string(name='NFSVolumeServer', description='The endpoint of the NFS server.', example='3f9cd4a596-naw76.cn-shanghai.nas.aliyuncs.com'),
          name?: string(name='Name', description='The name of the volume.', example='default-volume1'),
          type?: string(name='Type', description='The type of the volume. Valid values:

*   EmptyDirVolume
*   NFSVolume
*   ConfigFileVolume
*   FlexVolume', example='EmptyDirVolume'),
        }
      ](name='Volumes', description='Details of the volumes.'),
    }
  ](name='ScalingConfigurations', description='Details of the scaling configurations.'),
  totalCount?: int32(name='TotalCount', description='The total number of scaling configurations.', example='1'),
}

model DescribeEciScalingConfigurationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeEciScalingConfigurationsResponseBody(name='body'),
}

async function describeEciScalingConfigurations(request: DescribeEciScalingConfigurationsRequest): DescribeEciScalingConfigurationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeEciScalingConfigurations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLifecycleActionsRequest {
  lifecycleActionStatus?: string(name='LifecycleActionStatus', description='The status of the lifecycle action. Valid values:

*   If a lifecycle action is in the Pending state, Elastic Compute Service (ECS) instances are waiting to be added to a scaling group or waiting to be removed from a scaling group.
*   If a lifecycle action is in the Timeout state, the lifecycle hook that triggers the lifecycle action ends, and ECS instances are added to or removed from the scaling group.
*   If a lifecycle action is in the Completed state, you manually end the lifecycle hook that triggers the lifecycle action ahead of schedule.', example='Pending', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return on each page. Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The token that is used to specify the lifecycle action from which the query starts.

For example, after the first 10 lifecycle actions are queried, the query starts from the 11th lifecycle action. Set this parameter to the NextToken value that is returned in the previous API call. If you do not specify this parameter, the query starts from the beginning.', example='AAAAAcSz4VTb1Nq****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingActivityId: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp17mug9t0pegagw****', position='Query'),
}

model DescribeLifecycleActionsResponseBody = {
  lifecycleActions?: [ 
    {
      instanceIds?: [ string ](name='InstanceIds', description='The IDs of the ECS instances to which the lifecycle hook applies.'),
      lifecycleActionResult?: string(name='LifecycleActionResult', description='The action that is performed after the lifecycle action triggered by the lifecycle hook is complete. Valid values:

*   CONTINUE: Auto Scaling continues to add ECS instances to the scaling group, or continues to remove ECS instances from the scaling group.
*   ABANDON: Auto Scaling stops adding ECS instances to the scaling group and releases the ECS instances, or continues to respond to scale-in requests and remove ECS instances from the scaling group.', example='CONTINUE'),
      lifecycleActionStatus?: string(name='LifecycleActionStatus', description='The status of the lifecycle action.', example='Pending'),
      lifecycleActionToken?: string(name='LifecycleActionToken', description='The token of the lifecycle action.', example='9C2E9DA7-F794-449A-ACF6-CEE24444F7BB'),
      lifecycleHookId?: string(name='LifecycleHookId', description='The ID of the lifecycle hook.', example='ash-bp18uoft0deax0f7****'),
    }
  ](name='LifecycleActions', description='The lifecycle actions.'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries returned per page.', example='3'),
  nextToken?: string(name='NextToken', description='The query token returned in this call.', example='AAAAAcSz4VTb1Nq****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='42A742EB-FCF3-459E-9C62-E107048C17E3'),
  totalCount?: int32(name='TotalCount', description='The total number of the queried lifecycle actions.', example='3'),
}

model DescribeLifecycleActionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLifecycleActionsResponseBody(name='body'),
}

/**
  * If a scaling activity is executed and a lifecycle hook is created for the scaling activity, the lifecycle hook triggers a lifecycle action. A lifecycle action can be in one of the following states:
  * *   If a lifecycle action is in the Pending state, Elastic Compute Service (ECS) instances are waiting to be added to a scaling group or waiting to be removed from a scaling group.
  * *   If a lifecycle action is in the Timeout state, the lifecycle hook that triggers the lifecycle action expires and ECS instances are added to or removed from a scaling group.
  * *   If a lifecycle action is in the Completed state, you manually end the lifecycle hook that triggers the lifecycle action ahead of schedule.
  * If you do not specify the action to perform, such as execute a specific OOS template, after a lifecycle hook ends, you can call this operation to obtain the token of the lifecycle action that corresponds to the lifecycle hook. Then, you can specify a custom action to perform after the lifecycle hook ends.
  *
 */
async function describeLifecycleActions(request: DescribeLifecycleActionsRequest): DescribeLifecycleActionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLifecycleActions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLifecycleHooksRequest {
  lifecycleHookIds?: [ string ](name='LifecycleHookIds', position='Query'),
  lifecycleHookName?: string(name='LifecycleHookName', example='lifecyclehook****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', position='Query'),
  pageSize?: int32(name='PageSize', example='50', position='Query'),
  regionId?: string(name='RegionId', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model DescribeLifecycleHooksResponseBody = {
  lifecycleHooks?: [ 
    {
      defaultResult?: string(name='DefaultResult', example='CONTINUE'),
      heartbeatTimeout?: int32(name='HeartbeatTimeout', example='60'),
      lifecycleHookId?: string(name='LifecycleHookId', example='ash-bp19d1032y9kij96****'),
      lifecycleHookName?: string(name='LifecycleHookName', example='lifecyclehook****'),
      lifecycleHookStatus?: string(name='LifecycleHookStatus', example='Active'),
      lifecycleTransition?: string(name='LifecycleTransition', example='SCALE_OUT'),
      notificationArn?: string(name='NotificationArn', example='acs:ess:cn-beijing:161456884340****:null/null'),
      notificationMetadata?: string(name='NotificationMetadata', example='Test Lifecycle Hook.'),
      scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1igpak5ft1flyp****'),
    }
  ](name='LifecycleHooks'),
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='50'),
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', example='1'),
}

model DescribeLifecycleHooksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLifecycleHooksResponseBody(name='body'),
}

async function describeLifecycleHooks(request: DescribeLifecycleHooksRequest): DescribeLifecycleHooksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLifecycleHooks', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLimitationRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model DescribeLimitationResponseBody = {
  maxNumberOfAlbServerGroup?: int32(name='MaxNumberOfAlbServerGroup', example='30'),
  maxNumberOfDBInstances?: int32(name='MaxNumberOfDBInstances', example='30'),
  maxNumberOfLifecycleHooks?: int32(name='MaxNumberOfLifecycleHooks', example='10'),
  maxNumberOfLoadBalancers?: int32(name='MaxNumberOfLoadBalancers', example='30'),
  maxNumberOfMaxSize?: int32(name='MaxNumberOfMaxSize', example='2000'),
  maxNumberOfMinSize?: int32(name='MaxNumberOfMinSize', example='2000'),
  maxNumberOfNlbServerGroup?: int32(name='MaxNumberOfNlbServerGroup', example='30'),
  maxNumberOfNotificationConfigurations?: int32(name='MaxNumberOfNotificationConfigurations', example='6'),
  maxNumberOfScalingConfigurations?: int32(name='MaxNumberOfScalingConfigurations', example='70'),
  maxNumberOfScalingGroups?: int32(name='MaxNumberOfScalingGroups', example='200'),
  maxNumberOfScalingInstances?: int32(name='MaxNumberOfScalingInstances', example='500'),
  maxNumberOfScalingRules?: int32(name='MaxNumberOfScalingRules', example='70'),
  maxNumberOfScheduledTasks?: int32(name='MaxNumberOfScheduledTasks', example='70'),
  maxNumberOfVServerGroups?: int32(name='MaxNumberOfVServerGroups', example='5'),
  requestId?: string(name='RequestId', example='BE9BEB41-E7B8-4C7D-A3CF-2DCB1066****'),
}

model DescribeLimitationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLimitationResponseBody(name='body'),
}

async function describeLimitation(request: DescribeLimitationRequest): DescribeLimitationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLimitation', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNotificationConfigurationsRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model DescribeNotificationConfigurationsResponseBody = {
  notificationConfigurationModels?: [ 
    {
      notificationArn?: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method. The following list describes the value formats of this parameter:

*   If you use CloudMonitor as the notification method, the value format of this parameter is acs:ess:{region-id}:{account-id}:cloudmonitor.
*   If you use a Message Service (MNS) queue as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:queue/{queuename}.
*   If you use an MNS topic as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:topic/{topicname}.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.', example='acs:mns:cn-beijing:161456884340****:topic/modifyLifecycleHo****'),
      notificationTypes?: [ string ](name='NotificationTypes', description='The types of notifications for scaling activities and resource changes.

*   AUTOSCALING:SCALE_OUT_SUCCESS: The scale-out event is successful.
*   AUTOSCALING:SCALE_IN_SUCCESS: The scale-in event is successful.
*   AUTOSCALING:SCALE_OUT_ERROR: The scale-out event fails.
*   AUTOSCALING:SCALE_IN_ERROR: The scale-in event fails.
*   AUTOSCALING:SCALE_REJECT: The scaling activity is rejected.
*   AUTOSCALING:SCALE_OUT_START: The scale-out event is started.
*   AUTOSCALING:SCALE_IN_START: The scale-in event is started.
*   AUTOSCALING:SCHEDULE_TASK_EXPIRING: Auto Scaling sends a notification when a scheduled task is about to expire.'),
      scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****'),
    }
  ](name='NotificationConfigurationModels', description='Details of the notifications.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DescribeNotificationConfigurationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNotificationConfigurationsResponseBody(name='body'),
}

async function describeNotificationConfigurations(request: DescribeNotificationConfigurationsRequest): DescribeNotificationConfigurationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNotificationConfigurations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNotificationTypesRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model DescribeNotificationTypesResponseBody = {
  notificationTypes?: [ string ](name='NotificationTypes', description='The types of the notifications.

*   AUTOSCALING:SCALE_OUT_SUCCESS: The scale-out activity succeeds.
*   AUTOSCALING:SCALE_IN_SUCCESS: The scale-in activity succeeds.
*   AUTOSCALING:SCALE_OUT_ERROR: The scale-out activity fails.
*   AUTOSCALING:SCALE_IN_ERROR: The scale-in activity fails.
*   AUTOSCALING:SCALE_REJECT: The request for scaling activities is rejected.
*   AUTOSCALING:SCALE_OUT_START: The scale-out activity starts.
*   AUTOSCALING:SCALE_IN_START: The scale-in activity starts.
*   AUTOSCALING:SCHEDULE_TASK_EXPIRING: Auto Scaling sends a notification when a scheduled task is about to expire.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DescribeNotificationTypesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNotificationTypesResponseBody(name='body'),
}

async function describeNotificationTypes(request: DescribeNotificationTypesRequest): DescribeNotificationTypesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNotificationTypes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRegionsRequest {
  acceptLanguage?: string(name='AcceptLanguage', description='The language used for the returned value. Valid values:

*   **zh-CN**: Chinese.
*   **en-US**: English.

>  Default value: **zh-CN**.', example='zh-CN', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeRegionsResponseBody = {
  regions?: [ 
    {
      classicUnavailable?: boolean(name='ClassicUnavailable', description='Indicates whether the region supports scaling groups of the classic network type. Valid values:

*   true
*   false', example='false'),
      localName?: string(name='LocalName', description='The name of the region.', example='China (Beijing)'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of the region.', example='ess.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The ID of the region.', example='cn-beijing'),
      vpcUnavailable?: boolean(name='VpcUnavailable', description='Indicates whether the region supports scaling groups of the virtual private cloud (VPC) type. Valid values:

*   true: The region does not support scaling groups of the VPC type.
*   false: The region supports scaling groups of the VPC type.', example='false'),
    }
  ](name='Regions', description='Details of the regions.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='73469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DescribeRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRegionsResponseBody(name='body'),
}

async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRegions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingActivitiesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10.', example='10', maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group to which the scaling activity that you want to query belongs.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingActivityIds?: [ string ](name='ScalingActivityIds', description='The IDs of the scaling activities that you want to query.

> When you call this operation, you must specify one of the `ScalingGroupId` and `ScalingActivityId.N` parameters. Otherwise, an error is reported.', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.

> When you call this operation, you must specify one of the `ScalingGroupId` and `ScalingActivityId.N` parameters. Otherwise, an error is reported.', example='asg-bp18p2yfxow2dloq****', position='Query'),
  statusCode?: string(name='StatusCode', description='The status of the scaling activity. Valid values:

*   Successful: The scaling activity is successful.
*   Warning: The scaling activity is partially successful.
*   Failed: The scaling activity failed.
*   InProgress: The scaling activity is in progress.
*   Rejected: The request to trigger the scaling activity is rejected.', example='Successful', position='Query'),
}

model DescribeScalingActivitiesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='CC107349-57B7-4405-B1BF-9BF5AF7F2A46'),
  scalingActivities?: [ 
    {
      attachedCapacity?: string(name='AttachedCapacity', description='The total number of instances that were manually added to the scaling group after the scaling activity was complete.', example='0'),
      autoCreatedCapacity?: string(name='AutoCreatedCapacity', description='The total number of instances that were created by Auto Scaling after the scaling activity was complete.', example='2'),
      cause?: string(name='Cause', description='The reason why the scaling activity was triggered.', example='A user requests to execute scaling rule \\"asr-bp12tcnol686y1ik****\\", changing the Total Capacity from \\"1\\" to \\"2\\".'),
      createdCapacity?: int32(name='CreatedCapacity', description='The number of instances that were created during the scaling activity.', example='1'),
      createdInstances?: [ string ](name='CreatedInstances', description='The instances that were created during the scaling activity.'),
      description?: string(name='Description', description='The description of the scaling activity.', example='Add \\"1\\" ECS instance'),
      destroyedCapacity?: int32(name='DestroyedCapacity', description='The number of instances that were released during the scaling activity.', example='1'),
      destroyedInstances?: [ string ](name='DestroyedInstances', description='The instances that were released during the scaling activity.'),
      detail?: string(name='Detail', description='Details of the scaling activity.', example='"new ECS instances "i-j6c8ilerw, i-j6c8iler4mx" are created."'),
      endTime?: string(name='EndTime', description='The time when the scaling activity was complete.', example='2020-09-10T09:54Z'),
      errorCode?: string(name='ErrorCode', description='The error code that is returned when the scaling activity failed.', example='OperationDenied.NoStock'),
      errorMessage?: string(name='ErrorMessage', description='The error message that is returned when the scaling activity failed.', example='The specified ECS resource is out of stock in this region. Please try again later.'),
      progress?: int32(name='Progress', description='The execution progress of the scaling activity.', example='100'),
      scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp161xudmuxdzofe****'),
      scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****'),
      scalingInstanceNumber?: int32(name='ScalingInstanceNumber', description='If the scaling activity is a scale-out activity, the value of this parameter indicates the number of instances that were created during the scaling activity or the number of instances that were started from Economical Mode.

If the scaling activity is a scale-in activity, the value of this parameter indicates the number of instances that were deleted during the scaling activity or the number of instances that were stopped in Economical Mode.', example='1'),
      startTime?: string(name='StartTime', description='The time when the scaling activity started.', example='2020-09-10T09:54Z'),
      startedCapacity?: int32(name='StartedCapacity', description='The number of instances that were started from Economical Mode during the scaling activity.', example='1'),
      startedInstances?: [ string ](name='StartedInstances', description='The instances that were started from Economical Mode during the scaling activity.'),
      statusCode?: string(name='StatusCode', description='The status of the scaling activity. Valid values:

*   Successful: The scaling activity is successful.
*   Warning: The scaling activity is partially successful.
*   Failed: The scaling activity failed.
*   InProgress: The scaling activity is in progress.
*   Rejected: The request to trigger the scaling activity is rejected.', example='Successful'),
      statusMessage?: string(name='StatusMessage', description='The status message of the scaling activity.', example='\\"1\\" ECS instances are added'),
      stoppedCapacity?: int32(name='StoppedCapacity', description='The number of instances that were stopped in Economical Mode during the scaling activity.', example='1'),
      stoppedInstances?: [ string ](name='StoppedInstances', description='The instances that were stopped in Economical Mode during the scaling activity.'),
      totalCapacity?: string(name='TotalCapacity', description='The total number of instances in the scaling group after the scaling activity was complete.', example='2'),
    }
  ](name='ScalingActivities', description='Details of the scaling activities.'),
  totalCount?: int32(name='TotalCount', description='The total number of scaling activities.', example='1'),
}

model DescribeScalingActivitiesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingActivitiesResponseBody(name='body'),
}

/**
  * You can specify a scaling group ID to query all scaling activities in the scaling group.
  * You can filter query results based on the status of scaling activities.
  * You can query scaling activities that are executed in the previous 30 days.
  *
 */
async function describeScalingActivities(request: DescribeScalingActivitiesRequest): DescribeScalingActivitiesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingActivities', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingActivityDetailRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingActivityId: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp1c9djwrgxjyk31****', position='Query'),
}

model DescribeScalingActivityDetailResponseBody = {
  detail?: string(name='Detail', description='The details about the event.', example='new ECS instances \\"i-bp16t2cgmiiymeqv****\\" are created.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B13527BF-1FBD-4334-A512-20F5E9D3FB4D'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp1c9djwrgxjyk31****'),
}

model DescribeScalingActivityDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingActivityDetailResponseBody(name='body'),
}

async function describeScalingActivityDetail(request: DescribeScalingActivityDetailRequest): DescribeScalingActivityDetailResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingActivityDetail', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingConfigurationsRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10', example='50', maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group to which the scaling configuration that you want to query belongs.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingConfigurationIds?: [ string ](name='ScalingConfigurationIds', description='The IDs of the scaling configurations that you want to query.

The IDs of active and inactive scaling configurations are displayed in the query results. You can differentiate between active and inactive scaling configurations based on the value of the `LifecycleState` parameter.', position='Query'),
  scalingConfigurationNames?: [ string ](name='ScalingConfigurationNames', description='The names of the scaling configurations that you want to query.

The names of inactive scaling configurations are not displayed in the query results, and no error is reported.', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group. You can use the ID to query all scaling configurations in the scaling group.', example='asg-bp17pelvl720x3v7****', position='Query'),
}

model DescribeScalingConfigurationsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='50'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingConfigurations?: [ 
    {
      affinity?: string(name='Affinity', description='Indicates whether the instance on the dedicated host is associated with the dedicated host. Valid values:

*   default: The instance is not associated with the dedicated host. If you start an instance that was stopped in Economical Mode and the original dedicated host has insufficient resources, the instance is automatically deployed to another dedicated host in the automatic deployment resource pool.
*   host: The instance is associated with the dedicated host. If you start an instance that was stopped in Economical Mode, the instance remains on the original dedicated host. If the original dedicated host has insufficient resources, the instance cannot be started.', example='default'),
      cpu?: int32(name='Cpu', description='The number of vCPUs.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set the Cpu parameter to 2 and the Memory parameter to 16 to specify the instance types that have 2 vCPUs and 16 GiB of memory. If you specify the Cpu and Memory parameters, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances of the instance type that is provided at the lowest price.

> You can specify CPU and memory specifications to determine the range of instance types only if the Scaling Policy parameter is set to Cost Optimization Policy and no instance type is specified in the scaling configuration.', example='2'),
      creationTime?: string(name='CreationTime', description='The time when the scaling configuration was created.', example='2014-08-14T10:58Z'),
      creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: standard mode. For more information, see the "Standard mode" section in the [Burstable instances](~~59977~~) topic.
*   Unlimited: unlimited mode. For more information, see the "Unlimited mode" section in the [Burstable instances](~~59977~~) topic.', example='Standard'),
      customPriorities?: [ 
        {
          instanceType?: string(name='InstanceType'),
          vswitchId?: string(name='VswitchId'),
        }
      ](name='CustomPriorities'),
      dataDisks?: [ 
        {
          autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that is applied to the data disk.', example='sp-bp19nq9enxqkomib****'),
          burstingEnabled?: boolean(name='BurstingEnabled', description='Indicates whether the burst feature is enabled for the data disk. Valid values:

*   true
*   false

> This parameter is available only if you set the `DataDisk.Category` parameter to `cloud_auto`.

For more information, see the [ESSD AutoPL disks](~~368372~~) topic.', example='false'),
          categories?: [ string ](name='Categories', description='The categories of the data disks. The values are sorted based on their priorities. The first value has the highest priority. If Auto Scaling cannot create instances by using the disk that has the highest priority, Auto Scaling creates instances by using the disk that has the next highest priority. Valid values:

*   cloud: basic disk. The DeleteWithInstance parameter of a basic disk that is created together with the instance is set to true.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud_essd: ESSD.'),
          category?: string(name='Category', description='The category of the data disk. Valid values:

*   cloud: basic disk. The DeleteWithInstance parameter of a basic disk that is created together with the instance is set to true.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   ephemeral_ssd: local standard SSD.
*   cloud_essd: ESSD.
*   cloud_auto: ESSD AutoPL disk.', example='cloud'),
          deleteWithInstance?: boolean(name='DeleteWithInstance', description='Indicates whether the data disk is released if the instance to which the data disk is attached is released. Valid values:

*   true
*   false', example='true'),
          description?: string(name='Description', description='The description of the data disk.', example='FinanceDept'),
          device?: string(name='Device', description='The mount target of the data disk.', example='/dev/xvdb'),
          diskName?: string(name='DiskName', description='The name of the data disk.', example='cloud_ssdData'),
          encrypted?: string(name='Encrypted', description='Indicates whether the data disk is encrypted. Valid values:

*   true
*   false

Default value: false.', example='false'),
          KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key that is used to encrypt the data disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
          performanceLevel?: string(name='PerformanceLevel', description='The PL of the data disk of the ESSD category.', example='PL1'),
          provisionedIops?: long(name='ProvisionedIops', description='The provisioned input/output operations per second (IOPS) for the data disk.

> IOPS measures the number of read and write operations that an Elastic Block Storage (EBS) device can process per second.', example='100'),
          size?: int32(name='Size', description='The size of the data disk. Unit: GiB.

*   Valid values if you set the Category parameter to cloud: 5 to 2000.
*   Valid values if you set the Category parameter to cloud_efficiency: 20 to 32768.
*   Valid values if you set the Category parameter to cloud_ssd: 20 to 32768.
*   Valid values if you set the Category parameter to cloud_essd: 20 to 32768.
*   Valid values if you set the Category parameter to ephemeral_ssd: 5 to 800.', example='200'),
          snapshotId?: string(name='SnapshotId', description='The ID of the snapshot that is used to create the data disk.', example='s-23f2i****'),
        }
      ](name='DataDisks', description='Details of the data disks.'),
      dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host on which the ECS instance is created. Preemptible instances cannot be created on dedicated hosts. If you specify the DedicatedHostId parameter, the SpotStrategy and SpotPriceLimit parameters are ignored.

You can call the DescribeDedicatedHosts operation to query dedicated host IDs.', example='dh-bp67acfmxazb4p****'),
      deletionProtection?: boolean(name='DeletionProtection'),
      deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which the Elastic Compute Service (ECS) instance belongs.', example='ds-bp1frxuzdg87zh4p****'),
      hostName?: string(name='HostName', description='The hostname of the ECS instance.', example='LocalHost'),
      hpcClusterId?: string(name='HpcClusterId', description='The ID of the Elastic High Performance Computing (E-HPC) cluster to which the ECS instance belongs.', example='hpc-clus****'),
      imageFamily?: string(name='ImageFamily', description='The name of the image family. If you specify this parameter, the latest custom images that are available in the specified image family are returned. You can use the images to create instances. If the ImageId parameter is specified, you cannot specify the ImageFamily parameter.', example='hangzhou-daily-update'),
      imageId?: string(name='ImageId', description='The ID of the image that is used by Auto Scaling to create instances.', example='centos6u5_64_20G_aliaegis_2014****.vhd'),
      imageName?: string(name='ImageName', description='The name of the image file.', example='centos6u5_64_20G_aliaegis_2014****.vhd'),
      imageOptionsLoginAsNonRoot?: boolean(name='ImageOptionsLoginAsNonRoot', description='ECS实例是否使用ecs-user用户登录。可能值：

- true：是。
- false：否。', example='false'),
      imageOwnerAlias?: string(name='ImageOwnerAlias', description='The source of the image. Valid values:

*   system: public images provided by Alibaba Cloud
*   self: custom images that you create
*   others: shared images from other Alibaba Cloud accounts or community images published by other Alibaba Cloud accounts
*   marketplace: images that are available in Alibaba Cloud Marketplace', example='system'),
      instanceDescription?: string(name='InstanceDescription', description='The description of the ECS instance.', example='FinanceDept'),
      instanceGeneration?: string(name='InstanceGeneration', description='The generation of the ECS instance.', example='ecs-3'),
      instanceName?: string(name='InstanceName', description='The name of the ECS instance.', example='instance****'),
      instancePatternInfos?: [ 
        {
          architectures?: [ string ](name='Architectures', description='The architectures of the instance types. Valid values:

*   X86: x86 architecture.
*   Heterogeneous: heterogeneous architecture, such as GPUs and FPGAs.
*   BareMetal: ECS Bare Metal Instance architecture.
*   Arm: ARM architecture.
*   SuperComputeCluster: Super Computing Cluster architecture.'),
          burstablePerformance?: string(name='BurstablePerformance', description='Indicates whether burstable instance types are included. Valid values:

*   Exclude: Burstable instance types are not included.
*   Include: Burstable instance types are included.
*   Required: Only burstable instance types are included.', example='Include'),
          cores?: int32(name='Cores', description='The number of vCPUs of the instance type.', example='2'),
          excludedInstanceTypes?: [ string ](name='ExcludedInstanceTypes', description='The instance types that are excluded. You can use wildcard characters such as an asterisk (\\*) to exclude an instance type or an instance family. Examples:

*   ecs.c6.large: The ecs.c6.large instance type is excluded.
*   ecs.c6.\\*: The c6 instance family is excluded.'),
          instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family.

*   EntryLevel: shared instance type. Instances of this level are cost-effective, but do not provide stable computing performance. Instances of this level are suitable for scenarios in which the CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: Instances of this level provide stable performance and dedicated resources, and are suitable for scenarios in which high stability is required. For more information, see [Overview of instance families](~~25378~~).
*   CreditEntryLevel: This value is available only for burstable instances. CPU credits are used to ensure computing performance. Instances of this level are suitable for scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see [Overview](~~59977~~) of burstable instances', example='EnterpriseLevel'),
          maxPrice?: float(name='MaxPrice', description='The maximum hourly price for pay-as-you-go instances or preemptible instances.', example='2'),
          memory?: float(name='Memory', description='The memory size of the instance type. Unit: GiB.', example='4'),
        }
      ](name='InstancePatternInfos', description='Details of the intelligent configuration settings, which determines the range of instance types that meet the specified criteria.'),
      instanceType?: string(name='InstanceType', description='The instance type of the ECS instance.', example='ecs.g6.large'),
      instanceTypes?: [ string ](name='InstanceTypes', description='Details of the ECS instance types.'),
      internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: You are charged for the maximum available bandwidth that is specified by the InternetMaxBandwidthOut parameter.
*   PayByTraffic: You are charged for the actual data transfer. The InternetMaxBandwidthOut parameter specifies only the maximum available bandwidth.', example='PayByTraffic'),
      internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values: 1 to 200.', example='200'),
      internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values:

*   0 to 100 if you set the InternetChargeType parameter to PayByBandwidth. If you leave this parameter empty, this parameter is automatically set to 0.
*   0 to 100 if you set the InternetChargeType parameter to PayByTraffic. If you leave this parameter empty, an error is reported.', example='0'),
      ioOptimized?: string(name='IoOptimized', description='Indicates whether the instance is I/O optimized. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: The instance is I/O optimized.', example='none'),
      ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of randomly generated IPv6 addresses that are allocated to the elastic network interface (ENI).', example='1'),
      keyPairName?: string(name='KeyPairName', description='The name of the key pair that is used to log on to the ECS instance.', example='keypair****'),
      lifecycleState?: string(name='LifecycleState', description='The status of the scaling configuration in the scaling group. Valid values:

*   Active: The scaling configuration is active in the scaling group. Auto Scaling uses the active scaling configuration to automatically create ECS instances.
*   Inactive: The scaling configuration is inactive in the scaling group. Auto Scaling does not use inactive scaling configurations to automatically create ECS instances. Inactive scaling configurations are retained in the scaling group.', example='Active'),
      loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of the ECS instance as a backend server. Valid values: 1 to 100.', example='1'),
      memory?: int32(name='Memory', description='The memory size. Unit: GiB.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set the Cpu parameter to 2 and the Memory parameter to 16 to specify the instance types that have 2 vCPUs and 16 GiB of memory. If you specify the Cpu and Memory parameters, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances of the instance type that is provided at the lowest price.

> You can specify CPU and memory specifications to determine the range of instance types only if the Scaling Policy parameter is set to Cost Optimization Policy and no instance type is specified in the scaling configuration.', example='16'),
      passwordInherit?: boolean(name='PasswordInherit', description='Indicates whether the password preconfigured in the image is used.', example='true'),
      privatePoolOptions_id?: string(name='PrivatePoolOptions.Id'),
      privatePoolOptions_matchCriteria?: string(name='PrivatePoolOptions.MatchCriteria'),
      ramRoleName?: string(name='RamRoleName', description='The name of the RAM role that is associated with the ECS instance. The name is provided and maintained by Resource Access Management (RAM). You can call the ListRoles operation to query the available RAM roles.', example='ramrole****'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ECS instance belongs.', example='rg-aekzn2ou7xo****'),
      scalingConfigurationId?: string(name='ScalingConfigurationId', description='The ID of the scaling configuration.', example='asc-bp1ezrfgoyn5kijl****'),
      scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration.', example='scalingconfigura****'),
      scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group to which the scaling configuration belongs.', example='asg-bp17pelvl720x3v7****'),
      schedulerOptions?: {
        managedPrivateSpaceId?: string(name='ManagedPrivateSpaceId', description='> This parameter is in invitational preview and is unavailable.', example='testManagedPrivateSpaceId'),
      }(name='SchedulerOptions', description='> This parameter is in invitational preview and is unavailable.'),
      securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Indicates whether security hardening is enabled. Valid values:

*   Active: Security hardening is enabled. This value is available only to public images.
*   Deactive: Security hardening is disabled. This value is available to all types of images.', example='Active'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which the ECS instance is associated. ECS instances that are associated with the same security group can access each other.', example='sg-bp18kz60mefs****'),
      securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups with which the ECS instance is associated. ECS instances that are associated with the same security group can access each other.'),
      spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours.', example='1'),
      spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance.', example='Terminate'),
      spotPriceLimits?: [ 
        {
          instanceType?: string(name='InstanceType', description='The instance type of the preemptible instance.', example='ecs.g6.large'),
          priceLimit?: float(name='PriceLimit', description='The price limit of the preemptible instance.', example='0.125'),
        }
      ](name='SpotPriceLimits', description='Details of the preemptible instances.'),
      spotStrategy?: string(name='SpotStrategy', description='The preemption policy that is applied to pay-as-you-go instances and preemptible instances. Valid values:

*   NoSpot: The instance is created as a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance that has a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bid price.', example='NoSpot'),
      storageSetId?: string(name='StorageSetId'),
      storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber'),
      systemDiskAutoSnapshotPolicyId?: string(name='SystemDiskAutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that is applied to the system disk.', example='sp-bp12m37ccmxvbmi5****'),
      systemDiskBurstingEnabled?: boolean(name='SystemDiskBurstingEnabled', description='Indicates whether the burst feature is enabled for the system disk. Valid values:

*   true
*   false

> This parameter is available only if you set the SystemDisk.Category parameter to cloud_auto.', example='false'),
      systemDiskCategories?: [ string ](name='SystemDiskCategories', description='The categories of the system disks. The values are sorted based on their priorities. The first value has the highest priority. If Auto Scaling cannot create instances by using the disk that has the highest priority, Auto Scaling creates instances by using the disk that has the next highest priority. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD'),
      systemDiskCategory?: string(name='SystemDiskCategory', description='The category of the system disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local standard SSD
*   cloud_essd: enhanced SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk', example='cloud'),
      systemDiskDescription?: string(name='SystemDiskDescription', description='The description of the system disk.', example='Test system disk.'),
      systemDiskEncryptAlgorithm?: string(name='SystemDiskEncryptAlgorithm', description='The algorithm that is used to encrypt the system disk. Valid values:

*   AES-256
*   SM4-128', example='AES-256'),
      systemDiskEncrypted?: boolean(name='SystemDiskEncrypted', description='Indicates whether the system disk is encrypted. Valid values:

*   true
*   false', example='false'),
      systemDiskKMSKeyId?: string(name='SystemDiskKMSKeyId', description='The ID of the KMS key that is used to encrypt the system disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      systemDiskName?: string(name='SystemDiskName', description='The name of the system disk.', example='cloud_ssd_Test'),
      systemDiskPerformanceLevel?: string(name='SystemDiskPerformanceLevel', description='The performance level (PL) of the system disk of the ESSD category.', example='PL1'),
      systemDiskProvisionedIops?: long(name='SystemDiskProvisionedIops', description='The provisioned IOPS for the system disk.

> IOPS measures the number of read and write operations that an EBS device can process per second.', example='100'),
      systemDiskSize?: int32(name='SystemDiskSize', description='The size of the system disk. Unit: GiB.', example='100'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20.

The tag key cannot be an empty string. The tag key can be up to 128 characters in length, and cannot start with `acs:` or `aliyun`. The tag key cannot contain `http://` or `https://`.', example='binary'),
          value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20.

The tag value can be an empty string. The tag value can be up to 128 characters in length, and cannot start with `acs:`. The tag value cannot contain `http://` or `https://`.', example='alterTable'),
        }
      ](name='Tags', description='Details of the tags.'),
      tenancy?: string(name='Tenancy', description='Indicates whether the instance is created on a dedicated host. Valid values:

*   default: The instance is created on a non-dedicated host.
*   host: The instance is created on a dedicated host. If you do not specify the DedicatedHostId parameter, Alibaba Cloud selects a dedicated host for the instance.

Default value: default.', example='default'),
      userData?: string(name='UserData', description='The user data of the ECS instance.', example='echo hello ecs!'),
      weightedCapacities?: [ int32 ](name='WeightedCapacities', description='The weight of the instance type. The weight of an instance type indicates the capacity of an instance of the specified instance type in the scaling group. A higher weight indicates that a smaller number of instances of the specified instance type are required to meet the expected capacity requirement.'),
      zoneId?: string(name='ZoneId', description='The zone ID of the ECS instance. You can call the DescribeZones operation to query the most recent zone list.', example='cn-hangzhou-g'),
    }
  ](name='ScalingConfigurations', description='Details of the scaling configurations.'),
  totalCount?: int32(name='TotalCount', description='The total number of scaling configurations.', example='1'),
}

model DescribeScalingConfigurationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingConfigurationsResponseBody(name='body'),
}

async function describeScalingConfigurations(request: DescribeScalingConfigurationsRequest): DescribeScalingConfigurationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingConfigurations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingGroupsRequest {
  groupType?: string(name='GroupType', example='ECS', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', example='10', maximum=50, position='Query'),
  regionId: string(name='RegionId', example='cn-qingdao', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupIds?: [ string ](name='ScalingGroupIds', position='Query'),
  scalingGroupName?: string(name='ScalingGroupName', example='scalinggroup****', position='Query'),
  scalingGroupNames?: [ string ](name='ScalingGroupNames', position='Query'),
  tags?: [ 
    {
      key?: string(name='Key'),
      value?: string(name='Value'),
    }
  ](name='Tags', position='Query'),
}

model DescribeScalingGroupsResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='10'),
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingGroups?: [ 
    {
      activeCapacity?: int32(name='ActiveCapacity', example='1'),
      activeScalingConfigurationId?: string(name='ActiveScalingConfigurationId', example='asc-bp1et2qekq3ojr33****'),
      albServerGroups?: [ 
        {
          albServerGroupId?: string(name='AlbServerGroupId', example='sgp-ddwb0y0g6y9bjm****'),
          port?: int32(name='Port', example='80'),
          weight?: int32(name='Weight', example='100'),
        }
      ](name='AlbServerGroups'),
      allocationStrategy?: string(name='AllocationStrategy', example='priority'),
      azBalance?: boolean(name='AzBalance', example='false'),
      compensateWithOnDemand?: boolean(name='CompensateWithOnDemand', example='true'),
      creationTime?: string(name='CreationTime', example='2014-08-14T10:58Z'),
      currentHostName?: string(name='CurrentHostName', example='hostname'),
      customPolicyARN?: string(name='CustomPolicyARN', example='acs:fc:cn-zhangjiakou:16145688****:services/ess_custom_terminate_policy.LATEST/functions/ess_custom_terminate_policy_name'),
      DBInstanceIds?: [ string ](name='DBInstanceIds'),
      defaultCooldown?: int32(name='DefaultCooldown', example='60'),
      desiredCapacity?: int32(name='DesiredCapacity', example='5'),
      enableDesiredCapacity?: boolean(name='EnableDesiredCapacity'),
      groupDeletionProtection?: boolean(name='GroupDeletionProtection', example='true'),
      groupType?: string(name='GroupType', example='ECS'),
      healthCheckType?: string(name='HealthCheckType', example='ECS'),
      healthCheckTypes?: [ string ](name='HealthCheckTypes'),
      initCapacity?: int32(name='InitCapacity', example='0'),
      isElasticStrengthInAlarm?: boolean(name='IsElasticStrengthInAlarm', example='false'),
      launchTemplateId?: string(name='LaunchTemplateId', example='lt-m5e3ofjr1zn1aw7****'),
      launchTemplateOverrides?: [ 
        {
          instanceType?: string(name='InstanceType', example='ecs.c5.xlarge'),
          spotPriceLimit?: float(name='SpotPriceLimit', example='0.025'),
          weightedCapacity?: int32(name='WeightedCapacity', example='4'),
        }
      ](name='LaunchTemplateOverrides'),
      launchTemplateVersion?: string(name='LaunchTemplateVersion', example='Default'),
      lifecycleState?: string(name='LifecycleState', example='Active'),
      loadBalancerConfigs?: [ 
        {
          loadBalancerId?: string(name='LoadBalancerId'),
          weight?: int32(name='Weight'),
        }
      ](name='LoadBalancerConfigs'),
      loadBalancerIds?: [ string ](name='LoadBalancerIds'),
      maxInstanceLifetime?: int32(name='MaxInstanceLifetime', example='null'),
      maxSize?: int32(name='MaxSize', example='2'),
      minSize?: int32(name='MinSize', example='1'),
      modificationTime?: string(name='ModificationTime', example='2014-08-14T10:58Z'),
      monitorGroupId?: string(name='MonitorGroupId', example='1497****'),
      multiAZPolicy?: string(name='MultiAZPolicy', example='PRIORITY'),
      onDemandBaseCapacity?: int32(name='OnDemandBaseCapacity', example='30'),
      onDemandPercentageAboveBaseCapacity?: int32(name='OnDemandPercentageAboveBaseCapacity', example='20'),
      pendingCapacity?: int32(name='PendingCapacity', example='0'),
      pendingWaitCapacity?: int32(name='PendingWaitCapacity', example='1'),
      protectedCapacity?: int32(name='ProtectedCapacity', example='1'),
      regionId?: string(name='RegionId', example='cn-qingdao'),
      removalPolicies?: [ string ](name='RemovalPolicies'),
      removingCapacity?: int32(name='RemovingCapacity', example='0'),
      removingWaitCapacity?: int32(name='RemovingWaitCapacity', example='1'),
      resourceGroupId?: string(name='ResourceGroupId', example='rg-123****'),
      scalingGroupId?: string(name='ScalingGroupId', example='asg-bp14wlu85wrpchm0****'),
      scalingGroupName?: string(name='ScalingGroupName', example='dyrSuvBOtO1dEdIlIbp****'),
      scalingPolicy?: string(name='ScalingPolicy', example='recycle'),
      serverGroups?: [ 
        {
          port?: int32(name='Port', example='80'),
          serverGroupId?: string(name='ServerGroupId', example='sgp-i9ouakeaerr*****'),
          type?: string(name='Type', example='ALB'),
          weight?: int32(name='Weight', example='100'),
        }
      ](name='ServerGroups'),
      spotAllocationStrategy?: string(name='SpotAllocationStrategy', example='lowestPrice'),
      spotInstancePools?: int32(name='SpotInstancePools', example='5'),
      spotInstanceRemedy?: boolean(name='SpotInstanceRemedy', example='true'),
      standbyCapacity?: int32(name='StandbyCapacity', example='1'),
      stoppedCapacity?: int32(name='StoppedCapacity', example='1'),
      suspendedProcesses?: [ string ](name='SuspendedProcesses'),
      systemSuspended?: boolean(name='SystemSuspended', example='true'),
      tags?: [ 
        {
          propagate?: boolean(name='Propagate'),
          tagKey?: string(name='TagKey'),
          tagValue?: string(name='TagValue'),
        }
      ](name='Tags'),
      totalCapacity?: int32(name='TotalCapacity', example='1'),
      totalInstanceCount?: int32(name='TotalInstanceCount', example='1'),
      vServerGroups?: [ 
        {
          loadBalancerId?: string(name='LoadBalancerId', example='147b46d767c-cn-qingdao-cm5****'),
          vServerGroupAttributes?: [ 
            {
              port?: int32(name='Port', example='22'),
              vServerGroupId?: string(name='VServerGroupId', example='rsp-bp12bjrny****'),
              weight?: int32(name='Weight', example='1'),
            }
          ](name='VServerGroupAttributes'),
        }
      ](name='VServerGroups'),
      vSwitchId?: string(name='VSwitchId', example='vsw-bp1whw2u46cn8zubm****'),
      vSwitchIds?: [ string ](name='VSwitchIds'),
      vpcId?: string(name='VpcId', example='vpc-bp1vwnn14rqpyiczj****'),
    }
  ](name='ScalingGroups'),
  totalCount?: int32(name='TotalCount', example='1'),
}

model DescribeScalingGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingGroupsResponseBody(name='body'),
}

async function describeScalingGroups(request: DescribeScalingGroupsRequest): DescribeScalingGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingGroups', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingInstancesRequest {
  creationType?: string(name='CreationType', example='AutoCreated', position='Query'),
  creationTypes?: [ string ](name='CreationTypes', position='Query'),
  healthStatus?: string(name='HealthStatus', example='Healthy', position='Query'),
  instanceIds?: [ string ](name='InstanceIds', position='Query'),
  lifecycleState?: string(name='LifecycleState', example='InService', position='Query'),
  lifecycleStates?: [ string ](name='LifecycleStates', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', position='Query'),
  pageSize?: int32(name='PageSize', example='10', maximum=100, position='Query'),
  regionId: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingActivityId?: string(name='ScalingActivityId', example='asa-bp1c9djwrgxjyk31****', position='Query'),
  scalingConfigurationId?: string(name='ScalingConfigurationId', example='asc-bp1i65jd06v04vdh****', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model DescribeScalingInstancesResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='10'),
  requestId?: string(name='RequestId', example='B13527BF-1FBD-4334-A512-20F5E9D3FB4D'),
  scalingInstances?: [ 
    {
      createdTime?: string(name='CreatedTime', example='2020-05-18T03:11:39Z'),
      creationTime?: string(name='CreationTime', example='2020-05-18T03:11Z'),
      creationType?: string(name='CreationType', example='AutoCreated'),
      entrusted?: boolean(name='Entrusted', example='true'),
      healthStatus?: string(name='HealthStatus', example='Healthy'),
      instanceId?: string(name='InstanceId', example='i-bp109k5j3dum1ce6****'),
      launchTemplateId?: string(name='LaunchTemplateId', example='lt-m5e3ofjr1zn1aw7****'),
      launchTemplateVersion?: string(name='LaunchTemplateVersion', example='1'),
      lifecycleState?: string(name='LifecycleState', example='InService'),
      loadBalancerWeight?: int32(name='LoadBalancerWeight', example='50'),
      privateIpAddress?: string(name='PrivateIpAddress'),
      scalingActivityId?: string(name='ScalingActivityId', example='asa-bp1c9djwrgxjyk31****'),
      scalingConfigurationId?: string(name='ScalingConfigurationId', example='asc-bp1i65jd06v04vdh****'),
      scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1igpak5ft1flyp****'),
      scalingInstanceId?: string(name='ScalingInstanceId'),
      spotStrategy?: string(name='SpotStrategy', example='SpotWithPriceLimit'),
      warmupState?: string(name='WarmupState', example='NoNeedWarmup'),
      weightedCapacity?: int32(name='WeightedCapacity', example='4'),
      zoneId?: string(name='ZoneId', example='cn-hangzhou-g'),
    }
  ](name='ScalingInstances'),
  totalCount?: int32(name='TotalCount', example='1'),
  totalSpotCount?: int32(name='TotalSpotCount', example='4'),
}

model DescribeScalingInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingInstancesResponseBody(name='body'),
}

async function describeScalingInstances(request: DescribeScalingInstancesRequest): DescribeScalingInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScalingRulesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10.', example='50', maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group to which the scaling rules that you want to query belong.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1ffogfdauy0jw0****', position='Query'),
  scalingRuleAris?: [ string ](name='ScalingRuleAris', description='The unique identifiers of the scaling rules that you want to query.', position='Query'),
  scalingRuleIds?: [ string ](name='ScalingRuleIds', description='The IDs of the scaling rules that you want to query.', position='Query'),
  scalingRuleNames?: [ string ](name='ScalingRuleNames', description='The names of the scaling rules that you want to query.', position='Query'),
  scalingRuleType?: string(name='ScalingRuleType', description='The type of the scaling rule. Valid values:

*   SimpleScalingRule: adjusts the number of ECS instances based on the values of the AdjustmentType and AdjustmentValue parameters.
*   TargetTrackingScalingRule: calculates the number of ECS instances that need to be scaled in a dynamic manner and maintains the value of a predefined metric close to the value of the TargetValue parameter.
*   StepScalingRule: scales ECS instances in steps based on the specified thresholds and metric values.
*   PredictiveScalingRule: uses machine learning to analyze historical monitoring data of the scaling group and predicts the future values of metrics. In addition, Auto Scaling automatically creates scheduled tasks to adjust the boundary values for the scaling group.', example='SimpleScalingRule', position='Query'),
  showAlarmRules?: boolean(name='ShowAlarmRules', description='Specifies whether to return CloudMonitor event-triggered tasks associated with scaling rules. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
}

model DescribeScalingRulesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='50'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingRules?: [ 
    {
      adjustmentType?: string(name='AdjustmentType', description='The scaling mode of the scaling rule. Valid values:

*   QuantityChangeInCapacity: adds the specified number of ECS instances to or removes the specified number of ECS instances from the scaling group.
*   PercentChangeInCapacity: adds the specified percentage of ECS instances to or removes the specified percentage of ECS instances from the scaling group.
*   TotalCapacity: adjusts the number of ECS instances in the scaling group to the specified number.', example='QuantityChangeInCapacity'),
      adjustmentValue?: int32(name='AdjustmentValue', description='The adjustment value that is specified in the scaling rule.', example='1'),
      alarmDimensions?: [ 
        {
          dimensionKey?: string(name='DimensionKey', description='监控项关联的维度信息键。', example='rulePool'),
          dimensionValue?: string(name='DimensionValue', description='监控项关联的维度信息值。', example='sgp-l1cbirz451yxu2dxxx'),
        }
      ](name='AlarmDimensions', description='监控项维度信息值，适用于目标追踪规则，当监控项需额外维度信息时设置，例如LoadBalancerRealServerAverageQps监控项需指定rulePool维度信息。'),
      alarms?: [ 
        {
          alarmTaskId?: string(name='AlarmTaskId', description='The ID of the event-triggered task that is associated with the scaling rule.', example='asg-bp18p2yfxow2dloq****_1f9458d1-70e1-4bee-8c7f-7a47695b****'),
          alarmTaskName?: string(name='AlarmTaskName', description='The name of the event-triggered task that is associated with the scaling rule.', example='alarmtask****'),
          comparisonOperator?: string(name='ComparisonOperator', description='The comparison operator between the metric value and the threshold for the event-triggered task that is associated with the scaling rule. The comparison operator indicates the relationship between the metric value and the threshold that is required to meet the condition.

*   Valid value if the metric value is greater than or equal to the threshold: >=.
*   Valid value if the metric value is less than or equal to the threshold: <=.
*   Valid value if the metric value is greater than the threshold: >.
*   Valid value if the metric value is less than the threshold: <.', example='>='),
          dimensions?: [ 
            {
              dimensionKey?: string(name='DimensionKey', description='The key of the dimension that is associated with the metric. Valid values:

*   scaling_group: the ID of the scaling group
*   userId: the ID of the Alibaba Cloud account', example='scaling_group'),
              dimensionValue?: string(name='DimensionValue', description='The value of the dimension that is associated with the metric.', example='asg-bp18p2yfxow2dloq****'),
            }
          ](name='Dimensions', description='The dimensions of the event-triggered task that is associated with the scaling rule.'),
          evaluationCount?: int32(name='EvaluationCount', description='The number of consecutive times for which the event-triggered task that is associated with the scaling rule meets the threshold expressions before an alert is triggered.', example='3'),
          metricName?: string(name='MetricName', description='The name of the metric of the event-triggered task that is associated with the scaling rule.', example='CpuUtilization'),
          metricType?: string(name='MetricType', description='The type of the event-triggered task that is associated with the scaling rule. Valid values:

*   system: system monitoring event-triggered tasks
*   custom: custom monitoring event-triggered tasks', example='system'),
          statistics?: string(name='Statistics', description='The statistical method of the event-triggered task that is associated with the scaling rule. Valid values:

*   Average
*   Maximum
*   Minimum', example='Average'),
          threshold?: float(name='Threshold', description='The alert threshold of the event-triggered task that is associated with the scaling rule.', example='50'),
        }
      ](name='Alarms', description='The event-triggered tasks that are associated with the scaling rule. Event-triggered tasks that are associated with the scaling rule are returned only if you set the ShowAlarmRules parameter to true. Otherwise, an empty list is returned.'),
      cooldown?: int32(name='Cooldown', description='The cooldown time of the scaling rule. This parameter is available only if you set the ScalingRuleType parameter to SimpleScalingRule. Valid values: 0 to 86400. Unit: seconds.', example='20'),
      disableScaleIn?: boolean(name='DisableScaleIn', description='Specifies whether to disable scale-in. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule. Valid values:

*   true
*   false', example='true'),
      estimatedInstanceWarmup?: int32(name='EstimatedInstanceWarmup', description='The warmup period of the ECS instance.', example='300'),
      initialMaxSize?: int32(name='InitialMaxSize', description='The maximum number of ECS instances in the scaling group. You must specify the InitialMaxSize and PredictiveValueBehavior parameters.', example='100'),
      maxSize?: int32(name='MaxSize', description='The maximum number of ECS instances in the scaling group.', example='2'),
      metricName?: string(name='MetricName', description='The name of the metric of the event-triggered task that is associated with the scaling rule.', example='CpuUtilization'),
      minAdjustmentMagnitude?: int32(name='MinAdjustmentMagnitude', description='The minimum number of instances that must be scaled when the AdjustmentType parameter is set to PercentChangeInCapacity. This parameter takes effect only if you set the ScalingRuleType parameter to SimpleScalingRule or StepScalingRule.', example='1'),
      minSize?: int32(name='MinSize', description='The minimum number of ECS instances in the scaling group.', example='1'),
      predictiveScalingMode?: string(name='PredictiveScalingMode', description='The mode of the predictive scaling rule. Valid values:

*   PredictAndScale: produces predictions and creates prediction tasks.
*   PredictOnly: produces predictions but does not create prediction tasks.', example='PredictAndScale'),
      predictiveTaskBufferTime?: int32(name='PredictiveTaskBufferTime', description='The amount of buffer time before the prediction task is executed. By default, all scheduled tasks that are automatically created for a predictive scaling rule are executed on the hour. You can specify a buffer time for resource preparation before prediction tasks are executed. Valid values: 0 to 60. Unit: minutes.', example='30'),
      predictiveValueBehavior?: string(name='PredictiveValueBehavior', description='Specifies which one of the initial maximum capacity and the predicted value can be used as the maximum value for prediction tasks. Valid values:

*   MaxOverridePredictiveValue: uses the initial maximum capacity as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMax: uses the predicted value as the maximum value for prediction tasks when the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMaxWithBuffer: increases the predicted value by a percentage that is specified by the PredictiveValueBuffer parameter. If the predicted value that is increased by the percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks.', example='MaxOverridePredictiveValue'),
      predictiveValueBuffer?: int32(name='PredictiveValueBuffer', description='The percentage of the increment to the predicted value when the PredictiveValueBehavior parameter is set to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.', example='50'),
      scaleInEvaluationCount?: int32(name='ScaleInEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-out activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.', example='15'),
      scaleOutEvaluationCount?: int32(name='ScaleOutEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-in activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.', example='3'),
      scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1ffogfdauy0jw0****'),
      scalingRuleAri?: string(name='ScalingRuleAri', description='The unique identifier of the scaling rule.', example='ari:acs:ess:cn-hangzhou:140692647406****:scalingrule/asr-bp1dvirgwkoowxk7****'),
      scalingRuleId?: string(name='ScalingRuleId', description='The ID of the scaling rule.', example='asr-bp1dvirgwkoowxk7****'),
      scalingRuleName?: string(name='ScalingRuleName', description='The name of the scaling rule.', example='scalingrule****'),
      scalingRuleType?: string(name='ScalingRuleType', description='The type of the scaling rule. Valid values:

*   SimpleScalingRule: adjusts the number of ECS instances based on the values of the AdjustmentType and AdjustmentValue parameters.
*   TargetTrackingScalingRule: calculates the number of ECS instances that need to be scaled in a dynamic manner and maintains the value of a predefined metric close to the value of the TargetValue parameter.
*   StepScalingRule: scales ECS instances in steps based on specified thresholds and metric values.
*   PredictiveScalingRule: uses machine learning to analyze historical monitoring data of the scaling group and predicts the future values of metrics. In addition, Auto Scaling automatically creates scheduled tasks to adjust the boundary values for the scaling group.', example='SimpleScalingRule'),
      stepAdjustments?: [ 
        {
          metricIntervalLowerBound?: float(name='MetricIntervalLowerBound', description='The lower limit that is specified in a step adjustment. Valid values: -9.999999E18 to 9.999999E18.', example='1.0'),
          metricIntervalUpperBound?: float(name='MetricIntervalUpperBound', description='The upper limit that is specified in a step adjustment. Valid values: -9.999999E18 to 9.999999E18.', example='5.0'),
          scalingAdjustment?: int32(name='ScalingAdjustment', description='The number of ECS instances that are scaled in a step adjustment.', example='1'),
        }
      ](name='StepAdjustments', description='The step adjustments of the step scaling rule.'),
      targetValue?: float(name='TargetValue', description='The target value of the metric.', example='0.125'),
    }
  ](name='ScalingRules', description='Details of the scaling rules.'),
  totalCount?: int32(name='TotalCount', description='The total number of scaling rules.', example='1'),
}

model DescribeScalingRulesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScalingRulesResponseBody(name='body'),
}

/**
  * You can specify a scaling group ID to query all scaling rules in the scaling group. You can also specify the scaling rule ID, name, unique identifier, and type in the request parameters as filter conditions.
  *
 */
async function describeScalingRules(request: DescribeScalingRulesRequest): DescribeScalingRulesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScalingRules', 'POST', '/', 'json', false, 'json', request);
}

model DescribeScheduledTasksRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', example='1', position='Query'),
  pageSize?: int32(name='PageSize', example='50', maximum=50, position='Query'),
  regionId: string(name='RegionId', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1bo5tca4m56nap****', position='Query'),
  scheduledActions?: [ string ](name='ScheduledActions', position='Query'),
  scheduledTaskIds?: [ string ](name='ScheduledTaskIds', position='Query'),
  scheduledTaskNames?: [ string ](name='ScheduledTaskNames', position='Query'),
}

model DescribeScheduledTasksResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='50'),
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scheduledTasks?: [ 
    {
      description?: string(name='Description', example='Test scheduled task.'),
      desiredCapacity?: int32(name='DesiredCapacity', example='10'),
      launchExpirationTime?: int32(name='LaunchExpirationTime', example='600'),
      launchTime?: string(name='LaunchTime', example='2014-08-18T10:52Z'),
      maxValue?: int32(name='MaxValue', example='10'),
      minValue?: int32(name='MinValue', example='0'),
      recurrenceEndTime?: string(name='RecurrenceEndTime', example='2014-08-20T16:55Z'),
      recurrenceType?: string(name='RecurrenceType', example='Daily'),
      recurrenceValue?: string(name='RecurrenceValue', example='1'),
      scalingGroupId?: string(name='ScalingGroupId', example='asg-bp1bo5tca4m56nap****'),
      scheduledAction?: string(name='ScheduledAction', example='ari:acs:ess:cn-hangzhou:1406926474****:scalingrule/asr-bp1id5rhu8edp7kd****'),
      scheduledTaskId?: string(name='ScheduledTaskId', example='edRtShc57WGXdt8TlPbr****'),
      scheduledTaskName?: string(name='ScheduledTaskName', example='scheduled****'),
      taskEnabled?: boolean(name='TaskEnabled', example='true'),
    }
  ](name='ScheduledTasks'),
  totalCount?: int32(name='TotalCount', example='1'),
}

model DescribeScheduledTasksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScheduledTasksResponseBody(name='body'),
}

async function describeScheduledTasks(request: DescribeScheduledTasksRequest): DescribeScheduledTasksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeScheduledTasks', 'POST', '/', 'json', false, 'json', request);
}

model DetachAlbServerGroupsRequest {
  albServerGroups: [ 
    {
      albServerGroupId: string(name='AlbServerGroupId', description='The ID of the ALB server group.', example='sgp-ddwb0y0g6y9bjm****'),
      port: int32(name='Port', description='The port number used by the ECS instances in the ALB server group.', example='22'),
    }
  ](name='AlbServerGroups', description='Details of the ALB server groups.', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure the idempotence of a request](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceDetach?: boolean(name='ForceDetach', description='Specifies whether to remove existing Elastic Compute Service (ECS) instances from the ALB server group that you want to disassociate from the scaling group. Valid values:

*   true: removes existing ECS instances and returns the value of the `ScalingActivityId` parameter. You can use the scaling activity ID to check whether the ECS instances are removed.
*   false: does not remove existing ECS instances.

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group. Examples: cn-hangzhou and cn-shanghai.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model DetachAlbServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity in which the ALB server group is disassociated from the scaling group and the ECS instances in the ALB server group are removed from the ALB server group. This parameter is returned only after you set the `ForceDetach` parameter to `true`.', example='asa-2ze6wxj8vsohn6j9****'),
}

model DetachAlbServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachAlbServerGroupsResponseBody(name='body'),
}

async function detachAlbServerGroups(request: DetachAlbServerGroupsRequest): DetachAlbServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachAlbServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model DetachDBInstancesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  DBInstances: [ string ](name='DBInstances', description='The IDs of the ApsaraDB RDS instances. You can specify up to five ApsaraDB RDS instances.', position='Query'),
  forceDetach?: boolean(name='ForceDetach', description='Specifies whether to remove the private IP addresses of instances in the scaling group from the whitelist that manages access to the ApsaraDB RDS instance with which the scaling group is associated. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model DetachDBInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DetachDBInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachDBInstancesResponseBody(name='body'),
}

async function detachDBInstances(request: DetachDBInstancesRequest): DetachDBInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachDBInstances', 'POST', '/', 'json', false, 'json', request);
}

model DetachInstancesRequest {
  clientToken?: string(name='ClientToken', description='保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。只支持ASCII字符，且不能超过64个字符。更多信息，请参见[如何保证幂等性](~~25965~~)。', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  decreaseDesiredCapacity?: boolean(name='DecreaseDesiredCapacity', description='Specifies whether to adjust the expected number of instances in the scaling group. Valid values:

*   true: After a specific number of instances are removed from the scaling group, the expected number of instances in the scaling group decreases.
*   false: After a specific number of instances are removed from the scaling group, the expected number of instances in the scaling group remains unchanged.

Default value: true.', example='true', position='Query'),
  detachOption?: string(name='DetachOption', description='Specifies whether to remove the instances from the default server group and vServer groups of the Classic Load Balancer (CLB) instance that is associated with the scaling group, and whether to remove the IP addresses of the instances from the whitelist that manages access to the ApsaraDB RDS instance that is associated with the scaling group.

If you set this parameter to both, the instances are removed from the default sever group and vServer groups of the associated CLB instance, and the IP addresses of the instances are removed from the whitelist that manages access to the associated ApsaraDB RDS instance.', example='both', position='Query'),
  instanceIds: [ string ](name='InstanceIds', description='The IDs of the ECS instances or elastic container instances that you want to remove from the scaling group.', position='Query'),
  lifecycleHook?: boolean(name='LifecycleHook', description='Specifies whether to trigger a lifecycle hook for a scale-in activity. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model DetachInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp1gbswjhjrw8tko****'),
}

model DetachInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachInstancesResponseBody(name='body'),
}

/**
  * After ECS instances or elastic container instances are removed from a scaling group, you can call the AttachInstances operation to add the ECS instances or elastic container instances that are removed from the scaling group to other scaling groups.
  * After you remove an ECS instance or elastic container instance by calling the DetachInstances operation, the instance is not stopped or released.
  * Before you call this operation, make sure that the following conditions are met:
  * *   The specified scaling group is enabled.
  * *   No scaling activities in the specified scaling group are in progress.
  * > If no scaling activities in the specified scaling group are in progress, the operation can trigger scaling activities even before the cooldown time expires.
  * A successful call indicates only that Auto Scaling accepts the request. However, the scaling activity may still fail. You can obtain the status of a scaling activity based on the value of the ScalingActivityId parameter in the response.
  * The number of ECS instances or elastic container instances in a scaling group after you remove a specific number of instances from the scaling group must be equal to or greater than the value of the MinSize parameter. Otherwise, an error is reported when you call the DetachInstances operation.
  *
 */
async function detachInstances(request: DetachInstancesRequest): DetachInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachInstances', 'POST', '/', 'json', false, 'json', request);
}

model DetachLoadBalancersRequest {
  async?: boolean(name='Async', example='false', position='Query'),
  clientToken?: string(name='ClientToken', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceDetach?: boolean(name='ForceDetach', example='false', position='Query'),
  loadBalancers: [ string ](name='LoadBalancers', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', example='asg-bp1ffogfdauy0jw0****', position='Query'),
}

model DetachLoadBalancersResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', example='asa-bp140qd7mak8k63f****'),
}

model DetachLoadBalancersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachLoadBalancersResponseBody(name='body'),
}

async function detachLoadBalancers(request: DetachLoadBalancersRequest): DetachLoadBalancersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachLoadBalancers', 'POST', '/', 'json', false, 'json', request);
}

model DetachServerGroupsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceDetach?: boolean(name='ForceDetach', description='Specifies whether to remove the Elastic Compute Service (ECS) instances in the scaling group from the detached server group.

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
  serverGroups: [ 
    {
      port: int32(name='Port', description='The port number that is used by an ECS instance after Auto Scaling adds the ECS instance to the server group.', example='22'),
      serverGroupId: string(name='ServerGroupId', description='The ID of the server group.', example='sgp-1gv2uidn2msy****'),
      type: string(name='Type', description='The type of the server group. Valid values:

*   ALB
*   NLB', example='ALB'),
    }
  ](name='ServerGroups', description='Details of the server groups.', position='Query'),
}

model DetachServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='6EF9BFEE-FE07-4627-B8FB-14326FB9****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity in which you detach the server group from the scaling group and Auto Scaling removes the ECS instances from the server group.

> This parameter is returned only if you set the ForceAttach parameter to true.', example='asa-bp1gbswjhjrw8tko****'),
}

model DetachServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachServerGroupsResponseBody(name='body'),
}

async function detachServerGroups(request: DetachServerGroupsRequest): DetachServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model DetachVServerGroupsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  forceDetach?: boolean(name='ForceDetach', description='Specifies whether to remove ECS instances in your scaling group from the vServer group.

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group. Examples: cn-hangzhou and cn-shanghai.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1fo0dbtsbmqa9h****', position='Query'),
  vServerGroups: [ 
    {
      loadBalancerId?: string(name='LoadBalancerId', description='The ID of the Classic Load Balancer (CLB) instance to which the vServer group belongs.', example='lb-bp1p90y3ya9h8s62d****'),
      vServerGroupAttributes?: [ 
        {
          port?: int32(name='Port', description='The port number that is used when Auto Scaling adds ECS instances to the vServer group. Valid values: 1 to 65535.', example='22'),
          vServerGroupId?: string(name='VServerGroupId', description='The ID of the vServer group.', example='rsp-bp1jp1rge****'),
        }
      ](name='VServerGroupAttributes', description='Details of the vServer group attributes.'),
    }
  ](name='VServerGroups', description='Details of the vServer groups.', position='Query'),
}

model DetachVServerGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DetachVServerGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachVServerGroupsResponseBody(name='body'),
}

/**
  * You can use the following parameters to specify the vServer groups that you want to detach from your scaling group.
  * *   LoadBalancerId: the ID of the Classic Load Balancer (CLB) instance.
  * *   VServerGroupId: the ID of the vServer group.
  * *   Port: the port number of the vServer group.
  * If the vServer group that is specified in this call matches the vServer group associated with your scaling group, the vServer group can be detached. Otherwise, the request for detaching the vServer group is ignored, and no error is reported.
  *
 */
async function detachVServerGroups(request: DetachVServerGroupsRequest): DetachVServerGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachVServerGroups', 'POST', '/', 'json', false, 'json', request);
}

model DisableAlarmRequest {
  alarmTaskId: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model DisableAlarmResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='086EFCD4-C76F-4DC6-9EE9-0D9B711E****'),
}

model DisableAlarmResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DisableAlarmResponseBody(name='body'),
}

async function disableAlarm(request: DisableAlarmRequest): DisableAlarmResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DisableAlarm', 'POST', '/', 'json', false, 'json', request);
}

model DisableScalingGroupRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model DisableScalingGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DisableScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DisableScalingGroupResponseBody(name='body'),
}

async function disableScalingGroup(request: DisableScalingGroupRequest): DisableScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DisableScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model EnableAlarmRequest {
  alarmTaskId: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model EnableAlarmResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='688B18B8-FB1E-42EB-A1ED-7F55B090****'),
}

model EnableAlarmResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnableAlarmResponseBody(name='body'),
}

async function enableAlarm(request: EnableAlarmRequest): EnableAlarmResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnableAlarm', 'POST', '/', 'json', false, 'json', request);
}

model EnableScalingGroupRequest {
  activeScalingConfigurationId?: string(name='ActiveScalingConfigurationId', description='The ID of the scaling configuration that you want to put into the Active state.', example='asc-bp1ffogfdauy0nu5****', position='Query'),
  instanceIds?: [ string ](name='InstanceIds', description='The IDs of ECS instances that you want to add to the scaling group after you enable the scaling group.

The ECS instances must meet the following requirements:

*   The ECS instances and the scaling group must reside in the same region.
*   The ECS instances must be in the Running state.
*   The ECS instances are not added to other scaling groups.
*   The billing method of the ECS instances must be subscription or pay-as-you-go, or the ECS instances must be preemptible instances.
*   If you specify the VswitchID parameter for the scaling group, the ECS instances must reside in the same virtual private cloud (VPC) as the specified vSwitch. You cannot add the ECS instances that reside in the classic network or other VPCs to the scaling group.
*   If you do not specify the VswitchID parameter for the scaling group, you cannot add ECS instances that reside in VPCs to the scaling group.', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template that is used by Auto Scaling to create ECS instances.', example='lt-m5e3ofjr1zn1aw7****', position='Query'),
  launchTemplateOverrides?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type that you want to use to override the instance type that is specified in the launch template.

If you want to scale instances based on the weighted capacities of the instances, you must specify both the InstanceType and WeightedCapacity parameters.

> This parameter is supported only if you specify the LaunchTemplateId parameter.

You can specify an instance type that is available for purchase as the value of the InstanceType parameter.', example='ecs.c5.xlarge'),
      weightedCapacity?: int32(name='WeightedCapacity', description='The weight of the instance type. The weight specifies the capacity of a single instance of the specified instance type in the scaling group. If you want to scale instances based on the weighted capacities of the instances, you must specify the WeightedCapacity parameter after you specify the InstanceType parameter.

A higher weight specifies that a smaller number of instances of the specified instance type are required to meet the expected capacity requirement.

Performance metrics, such as the number of vCPUs and the memory size of each instance type, may vary. You can specify different weights for different instance types based on your business requirements.

Example:

*   Current capacity: 0
*   Expected capacity: 6
*   Capacity of ecs.c5.xlarge: 4

To meet the expected capacity requirement, Auto Scaling must create and add two ecs.c5.xlarge instances.

> The capacity of the scaling group cannot exceed the sum of the maximum number of instances that is specified by the MaxSize parameter and the maximum weight of the instance types.

Valid values of the WeightedCapacity parameter: 1 to 500.', example='4'),
    }
  ](name='LaunchTemplateOverrides', description='Details of the instance types that you specify by using the Extended Configurations feature of the launch template.', position='Query'),
  launchTemplateVersion?: string(name='LaunchTemplateVersion', description='The version number of the launch template. Valid values:

*   A fixed template version number.
*   Default: the default template version.
*   Latest: the latest template version.', example='Default', position='Query'),
  loadBalancerWeights?: [ int32 ](name='LoadBalancerWeights', description='The weight of an ECS instance as a backend server in the backend vServer group.

Default value: 50.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp14wlu85wrpchm0****', position='Query'),
}

model EnableScalingGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model EnableScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnableScalingGroupResponseBody(name='body'),
}

/**
  * You can call this operation to enable a scaling group that is in the Inactive state and has an instance configuration source. The instance configuration source can be a scaling configuration, a launch template, or an Elastic Compute Service (ECS) instance that you specified when you created the scaling group. If a scaling group is not in the Inactive state or does not have an active instance configuration source, you cannot call this operation to enable the scaling group.
  * > A scaling group can have only one active instance configuration source. When you call this operation to enable a scaling group, you can specify a scaling configuration or a launch template for the scaling group. If an instance configuration source has been configured for the scaling group before you call this operation, the scaling configuration or launch template that you specify in the request overwrites the original scaling configuration or launch template.
  * If you specify a value for the InstanceIds parameter when you call the operation, Auto Scaling checks whether the total number of ECS instances is within the range allowed in the scaling group after you call the operation.
  * *   If the total number of ECS instances is less than the minimum number of instances required in the scaling group after you call the operation, Auto Scaling automatically creates the required number of pay-as-you-go ECS instances and adds the instances to the scaling group to reach the minimum number. For example, if the minimum number of instances required in your scaling group is five, and you specify the InstanceIds parameter to add two ECS instances to the scaling group, Auto Scaling automatically creates three instances in the scaling group after the two instances are added.
  * *   If the value of the TotalCapacity parameter is greater than the value of the MaxSize parameter, the call fails.
  *
 */
async function enableScalingGroup(request: EnableScalingGroupRequest): EnableScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnableScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model EnterStandbyRequest {
  async?: boolean(name='Async', example='false', position='Query'),
  clientToken?: string(name='ClientToken', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  instanceIds: [ string ](name='InstanceIds', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', example='asg-bp1fo0dbtsbmqa9h****', position='Query'),
}

model EnterStandbyResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', example='asa-2zeb04oym05qaceq****'),
}

model EnterStandbyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnterStandbyResponseBody(name='body'),
}

async function enterStandby(request: EnterStandbyRequest): EnterStandbyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnterStandby', 'POST', '/', 'json', false, 'json', request);
}

model ExecuteScalingRuleRequest {
  breachThreshold?: float(name='BreachThreshold', description='The threshold specified when the step scaling rule is executed. Valid values: -9.999999E18 to 9.999999E18.', example='1.0', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  metricValue?: float(name='MetricValue', description='The metric value specified when the step scaling rule is executed. Valid values: -9.999999E18 to 9.999999E18.', example='1.0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingRuleAri: string(name='ScalingRuleAri', description='The unique identifier of the scaling rule.

> You can call the ExecuteScalingRule operation to execute only simple scaling rules and step scaling rules. To execute a step scaling rule, you must specify the BreachThreshold and MetricValue parameters.', example='ari:acs:ess:cn-hangzhou:140692647406****:scalingrule/asr-bp1dvirgwkoowxk7****', position='Query'),
}

model ExecuteScalingRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp13o672yeautiil****'),
}

model ExecuteScalingRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ExecuteScalingRuleResponseBody(name='body'),
}

/**
  * Before you call this operation, take note of the following items:
  * *   The scaling group is in the Active state.
  * *   No scaling activities in the scaling group are in progress.
  * If no scaling activities in the scaling group are in progress, the operation can trigger scaling activities even before the cooldown time expires.
  * A successful call indicates that Auto Scaling accepts the request. However, the scaling activity may still fail. You can obtain the status of a scaling activity by using the value of the ScalingActivityId parameter in the response.
  * If the addition of a specified number of Elastic Compute Service (ECS) instances to a scaling group causes the total number of ECS instances in the scaling group to exceed the maximum number of instances allowed, Auto Scaling adds only a specific number of ECS instances to ensure that the total number of instances is equal to the maximum number of instances.
  * If the removal of a specified number of ECS instances from a scaling group causes the total number of ECS instances in the scaling group to drop below the minimum number of instances allowed, Auto Scaling removes only a specific number of ECS instances to ensure that the total number of instances is equal to the minimum number of instances.
  * You can specify only a limited number of ECS instances in each adjustment. For more information, see the description of the AdjustmentValue parameter in the CreateScalingRule topic.
  *
 */
async function executeScalingRule(request: ExecuteScalingRuleRequest): ExecuteScalingRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ExecuteScalingRule', 'POST', '/', 'json', false, 'json', request);
}

model ExitStandbyRequest {
  async?: boolean(name='Async', description='Specifies whether to put the ECS instance into the Standby state in an asynchronous manner. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests.

The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  instanceIds: [ string ](name='InstanceIds', description='The IDs of the ECS instances.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1fo0dbtsbmqa9h****', position='Query'),
}

model ExitStandbyResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-2zeb04oym05qaceq****'),
}

model ExitStandbyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ExitStandbyResponseBody(name='body'),
}

async function exitStandby(request: ExitStandbyRequest): ExitStandbyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ExitStandby', 'POST', '/', 'json', false, 'json', request);
}

model ListTagKeysRequest {
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query. If this parameter is empty, all results are returned.', example='caeba0bbb2be03f84eb48b699f0a****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the Auto Scaling resource.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the Auto Scaling resource. Set the value to scalinggroup. This indicates that the tags are added to scaling groups.', example='scalinggroup', position='Query'),
}

model ListTagKeysResponseBody = {
  keys?: [ string ](name='Keys', description='Details of the tag keys.'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query. If this parameter is empty, all results are returned.', example='caeba0bbb2be03f84eb48b699f0a****'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='DC09A6AA-2713-4E10-A2E9-E6C5C43A****'),
}

model ListTagKeysResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagKeysResponseBody(name='body'),
}

async function listTagKeys(request: ListTagKeysRequest): ListTagKeysResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagKeys', 'POST', '/', 'json', false, 'json', request);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceIds?: [ string ](name='ResourceIds', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', example='scalinggroup', position='Query'),
  tags?: [ 
    {
      key?: string(name='Key', example='TestKey'),
      value?: string(name='Value', example='TestValue'),
    }
  ](name='Tags', position='Query'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', example='DE65F6B7-7566-4802-9007-96F2494A****'),
  tagResources?: [ 
    {
      propagate?: boolean(name='Propagate', example='false'),
      resourceId?: string(name='ResourceId', example='asg-bp17xb4x1vr29lgt****'),
      resourceType?: string(name='ResourceType', example='ALIYUN::ESS::SCALINGGROUP'),
      tagKey?: string(name='TagKey', example='TestKey'),
      tagValue?: string(name='TagValue', example='TestValue'),
    }
  ](name='TagResources'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagResources', 'POST', '/', 'json', false, 'json', request);
}

model ListTagValuesRequest {
  key: string(name='Key', description='The key of the messages that you want to query.', example='ESS', position='Query'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the query. The return value is the value of the NextToken response parameter that was returned last time the QueryInstanceByTag operation was called.', example='caeba0bbb2be03f84eb48b699f0a****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Default value: 10. Maximum value: 100.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the Auto Scaling resource. Only scaling groups are supported. Set the value to scalinggroup.', example='scalinggroup', position='Query'),
}

model ListTagValuesResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is returned for the next query.', example='caeba0bbb2be03f84eb48b699f0a****'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='AB444F46-1CFF-4B06-B8F0-B45D3158****'),
  values?: [ string ](name='Values', description='The information of the tag values.'),
}

model ListTagValuesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagValuesResponseBody(name='body'),
}

async function listTagValues(request: ListTagValuesRequest): ListTagValuesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagValues', 'POST', '/', 'json', false, 'json', request);
}

model ModifyAlarmRequest {
  alarmActions?: [ string ](name='AlarmActions', description='The unique identifiers of the scaling rules that are associated with the event-triggered task.', position='Query'),
  alarmTaskId: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_f95ce797-dc2e-4bad-9618-14fee7d1****', position='Query'),
  comparisonOperator?: string(name='ComparisonOperator', description='The operator that is used to compare the metric value and the metric threshold. Valid values:

*   If the metric value is greater than or equal to the metric threshold, set the value to `>=`.
*   If the metric value is less than or equal to the metric threshold, set the value to `<=`.
*   If the metric value is greater than the metric threshold, set the value to `>`.
*   If the metric value is less than the metric threshold, set the value to `<`.', example='>=', position='Query'),
  description?: string(name='Description', description='The description of the event-triggered task.', example='Test alarm task.', position='Query'),
  dimensions?: [ 
    {
      dimensionKey?: string(name='DimensionKey', description='The dimension key of the metric. Valid values of DimensionKey vary based on the value of MetricType.

*   If you set MetricType to custom, you can specify this parameter based on your business requirements.

*   If you set MetricType to system, DimensionKey has the following valid values:

    *   user_id: the ID of your Alibaba Cloud account
    *   scaling_group: the scaling group that is monitored by the event-triggered task.
    *   device: the type of the NIC.
    *   state: the state of the TCP connection', example='device'),
      dimensionValue?: string(name='DimensionValue', description='The dimension value of the metric. Valid values of DimensionValue vary based on the value of DimensionKey.

*   If you set MetricType to custom, you can specify this parameter based on your business requirements.

*   If you set MetricType to system, DimensionKey has the following valid values:

    *   user_id: The system specifies the value.

    *   scaling_group: The system specifies the value.

    *   If you set DimensionKey to device, you can set DimensionValue to eth0 or eth1.

        *   For instances that reside in the classic network, eth0 specifies the internal NIC. Only one eth0 NIC exists on each instance that resides in a VPC.
        *   For instances that reside in the classic network, eth1 specifies the public NIC.

    *   If you set DimensionKey to state, you can set DimensionValue to TCP_TOTAL or ESTABLISHED.

        *   TCP_TOTAL specifies the total number of TCP connections.
        *   ESTABLISHED specifies the number of established TCP connections.', example='eth0'),
    }
  ](name='Dimensions', description='The dimensions of the metric.', position='Query'),
  effective?: string(name='Effective', description='The effective period of the event-triggered task.

The Effective value follows the cron expression format. The default format is `X X X X X ?`. In the format:

*   X: a placeholder for a field, which represents seconds, minutes, hours, days, and months in sequence. X can be a definite value or a special character that has logical meaning. For information about the valid values of X, see [Cron expression](~~25907~~).
*   ?: No value is specified.

> By default, the value of this parameter is specified in **UTC+8**. You can specify the time zone in the `TZ=+yy` format before a cron expression. y indicates the time zone. For example, `TZ=+00 * * 1-2 * * ?` specifies that the event-triggered task is in effect between 01:00 and 02:59 (UTC+0) every day.

Examples:

*   ` * * * * * ?  `: The event-triggered task is in effect at all times.
*   ` * * 17-18 * * ?  `: The event-triggered task is in effect between 17:00:00 and 18:59:00 (UTC+8) every day.
*   `TZ=+00 * * 1-2 * * ?`: The event-triggered task is in effect between 01:00:00 and 02:59:00 (UTC+0) every day.', example='TZ=+00 * * 1-2 * * ?', position='Query'),
  evaluationCount?: int32(name='EvaluationCount', description='The number of times that the threshold must be reached before a scaling rule can be executed. For example, if you set this parameter to 3, the average CPU utilization must reach or exceed 80% three times in a row before a scaling rule is triggered.', example='3', position='Query'),
  expressions?: [ 
    {
      comparisonOperator?: string(name='ComparisonOperator', description='The operator that is used to compare the metric value and the metric threshold. Valid values:

*   If the metric value is greater than or equal to the metric threshold, set the value to `>=`.
*   If the metric value is less than or equal to the metric threshold, set the value to `<=`.
*   If the metric value is greater than the metric threshold, set the value to `>`.
*   If the metric value is less than the metric threshold, set the value to `<`.

Default value: >=', example='>='),
      metricName?: string(name='MetricName', description='The name of the metric that is specified in the multi-metric alert rule. Valid values of MetricName vary based on the value of MetricType.

*   If you set MetricType to custom, the valid values of MetricName are your custom metrics.

*   If you set MetricType to system, MetricName has the following valid values:

    *   CpuUtilization: (ECS) the CPU utilization. Unit: %.
    *   IntranetTx: the outbound traffic over the internal network from an ECS instance. Unit: KB/min.
    *   IntranetRx: the inbound traffic over the internal network to an ECS instance. Unit: KB/min.
    *   VpcInternetTx: the outbound traffic over the Internet from an ECS instance that resides in a VPC. Unit: KB/min.
    *   VpcInternetRx: the inbound traffic over the Internet to an ECS instance that resides in a VPC. Unit: KB/min.
    *   SystemDiskReadBps: the number of bytes read from the system disk that is used by an ECS instance per second.
    *   SystemDiskWriteBps: the number of bytes written to the system disk that is used by an ECS instance per second.
    *   SystemDiskReadOps: the number of read operations on the system disk that is used by an ECS instance per second.
    *   SystemDiskWriteOps: the number of write operations on the system disk that is used by an ECS instance per second.
    *   CpuUtilizationAgent: the CPU utilization of an agent. Unit: %.
    *   GpuUtilizationAgent: the GPU utilization of an agent. Unit: %.
    *   GpuMemoryFreeUtilizationAgent: the percentage of idle GPU memory of an agent.
    *   GpuMemoryUtilizationAgent: the GPU memory usage of an agent. Unit: %.
    *   MemoryUtilization: the memory usage of an agent. Unit: %.
    *   LoadAverage: the average system load of an agent.
    *   TcpConnection: the total number of TCP connections of an agent.
    *   TcpConnection: the number of established TCP connections of an agent.
    *   PackagesNetOut: the number of packets that are sent by the internal NIC used by an agent.
    *   PackagesNetIn: the number of packets that are received by the internal NIC used by an agent.
    *   EciPodCpuUtilization: the CPU utilization of an elastic container instance. Unit: %.
    *   EciPodMemoryUtilization: the memory usage of an elastic container instance. Unit: %.

For more information, see [Event-triggered task for system monitoring](~~74854~~).', example='CpuUtilization'),
      period?: int32(name='Period', description='The period of time during which the statistics of a metric in the multi-metric alert rule is collected. Unit: seconds. Valid values:

*   15
*   60
*   120
*   300
*   900

> If your scaling group is of the ECS type and uses CloudMonitor metrics, you can set Period to 15. In other cases, you can set Period to 60, 120, 300, or 900. In most cases, the name of a CloudMonitor metric contains Agent.

Default value: 300', example='300'),
      statistics?: string(name='Statistics', description='The method that is used to aggregate the statistics of a metric that is specified in the multi-metric alert rule. Valid values:

*   Average
*   Minimum
*   Maximum', example='Average'),
      threshold?: float(name='Threshold', description='The threshold of a metric in the multi-metric alert rule. If the threshold is reached the specified number of times within the specified period, a scaling rule is executed.', example='40.0'),
    }
  ](name='Expressions', description='The expressions that are specified in the multi-metric alert rule.', position='Query'),
  expressionsLogicOperator?: string(name='ExpressionsLogicOperator', description='The relationship between the trigger conditions in the multi-metric alert rule. Valid values:

*   `&&`: An alert is triggered only if all metrics in the multi-metric alert rule meet the trigger conditions. In this case, an alert is triggered only if the results of all trigger conditions that are specified in the multi-metric alert rule are `true`.
*   \\`\\`: An alert is triggered as long as one of the metrics in the multi-metric alert rule meets the trigger condition.

Default value: `&&`', example='&&', position='Query'),
  groupId?: int32(name='GroupId', description='The ID of the application group to which the custom metric belongs. This parameter must be specified when MetricType is set to custom.', example='4055401', position='Query'),
  metricName?: string(name='MetricName', description='The name of the metric. Valid values of MetricName vary based on the value of MetricType.

*   If you set MetricType to custom, the valid values of MetricName are your custom metrics.

*   If you set MetricType to system, MetricName has the following valid values:

    *   CpuUtilization: (ECS) the CPU utilization. Unit: %.
    *   IntranetTx: the outbound traffic over the internal network from an ECS instance. Unit: KB/min.
    *   IntranetRx: the inbound traffic over the internal network to an ECS instance. Unit: KB/min.
    *   VpcInternetTx: the outbound traffic over the Internet from an ECS instance that resides in a virtual private cloud (VPC). Unit: KB/min.
    *   VpcInternetRx: the inbound traffic over the Internet to an ECS instance that resides in a VPC. Unit: KB/min.
    *   SystemDiskReadBps: the number of bytes read from the system disk that is used by an ECS instance per second.
    *   SystemDiskWriteBps: the number of bytes written to the system disk that is used by an ECS instance per second.
    *   SystemDiskReadOps: the number of read operations on the system disk that is used by an ECS instance per second.
    *   SystemDiskWriteOps: the number of write operations on the system disk that is used by an ECS instance per second.
    *   CpuUtilizationAgent: the CPU utilization of an agent. Unit: %.
    *   GpuMemoryFreeUtilizationAgent: the percentage of idle GPU memory of an agent.
    *   GpuMemoryUtilizationAgent: the GPU memory usage of an agent. Unit: %.
    *   MemoryUtilization: the memory usage of an agent. Unit: %.
    *   LoadAverage: the average system load of an agent.
    *   TcpConnection: the total number of TCP connections of an agent.
    *   TcpConnection: the number of established TCP connections of an agent.
    *   PackagesNetOut: the number of packets that are sent by the internal network interface controller (NIC) used by an agent.
    *   PackagesNetIn: the number of packets that are received by the internal NIC used by an agent.
    *   EciPodCpuUtilization: the CPU utilization of an elastic container instance. Unit: %.
    *   EciPodMemoryUtilization: the memory usage of an elastic container instance. Unit: %.

For more information, see [Event-triggered task for system monitoring](~~74854~~).', example='MemoryUtilization', position='Query'),
  metricType?: string(name='MetricType', description='The type of the metric. Valid values:

*   system: system metrics of CloudMonitor
*   custom: custom metrics that are reported to CloudMonitor', example='system', position='Query'),
  name?: string(name='Name', description='The name of the event-triggered task.', example='alarmtask****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The period of time during which statistics about the metric is collected. Unit: seconds. Valid values:

*   15
*   60
*   120
*   300
*   900

> If your scaling group is of the ECS type and uses CloudMonitor metrics, you can set Period to 15. In other cases, you can set Period to 60, 120, 300, or 900. In most cases, the name of a CloudMonitor metric contains Agent.', example='300', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the event-triggered task.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  statistics?: string(name='Statistics', description='The method that is used to aggregate statistics for the metric. Valid values:

*   Average
*   Minimum
*   Maximum', example='Average', position='Query'),
  threshold?: float(name='Threshold', description='The threshold of a metric in the multi-metric alert rule. If the threshold is reached the specified number of times within the specified period, a scaling rule is executed.', example='80', position='Query'),
}

model ModifyAlarmResponseBody = {
  alarmTaskId?: string(name='AlarmTaskId', description='The ID of the event-triggered task.', example='asg-bp1hvbnmkl10vll5****_83948190-acdd-483f-98f7-b77f4778****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='BACACF83-7070-4953-A8FD-D81F89F1****'),
}

model ModifyAlarmResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyAlarmResponseBody(name='body'),
}

/**
  * *   If you set MetricType to custom, you must report your custom metrics to CloudMonitor before you can create event-triggered tasks by using the custom metrics. For more information, see [Custom monitoring event-triggered tasks](~~74861~~).
  * *   When you create an event-triggered task, you must specify MetricName, DimensionKey, and DimensionValue to determine the range of statistics that you want to aggregate for the metrics of the scaling group. For example, you can specify the user_id and scaling_group dimensions for an event-triggered task to aggregate monitoring data of all Elastic Compute Service (ECS) instances in a scaling group within an Alibaba Cloud account.
  *     *   If you set MetricType to custom, the valid values are your custom metrics.
  *     *   For information about the metrics that are supported if you set MetricType to system, see [Event-triggered task for system monitoring](~~74854~~).
  * > The user_id and scaling_group dimensions are automatically populated. You need to only specify the device and state dimensions. For more information, see `DimensionKey` and `DimensionValue` in the "Request parameters" section of this topic.
  *
 */
async function modifyAlarm(request: ModifyAlarmRequest): ModifyAlarmResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyAlarm', 'POST', '/', 'json', false, 'json', request);
}

model ModifyEciScalingConfigurationRequest {
  acrRegistryInfos?: [ 
    {
      domains?: [ string ](name='Domains', description='The domain names of the Container Registry Enterprise Edition instances. By default, all domain names of the Container Registry Enterprise Edition instances are displayed. You can specify one or more domain names. Separate multiple domain names with commas (,).'),
      instanceId?: string(name='InstanceId', description='The ID of the Container Registry Enterprise Edition instance.', example='cri-nwj395hgf6f3****'),
      instanceName?: string(name='InstanceName', description='The name of the Container Registry Enterprise Edition instance.', example='acr-test'),
      regionId?: string(name='RegionId', description='The region ID of the Container Registry Enterprise Edition instance.', example='cn-hangzhou'),
    }
  ](name='AcrRegistryInfos', description='Information about the Container Registry Enterprise Edition instance.', position='Query'),
  activeDeadlineSeconds?: long(name='ActiveDeadlineSeconds', description='The validity period. Unit: seconds.', example='1000', position='Query'),
  autoCreateEip?: boolean(name='AutoCreateEip', description='Specifies whether to automatically create an elastic IP address (EIP) and bind the EIP to the elastic container instance.', example='true', position='Query'),
  autoMatchImageCache?: boolean(name='AutoMatchImageCache', description='Specifies whether to automatically match the image cache.

Default value: false.', example='false', position='Query'),
  containerGroupName?: string(name='ContainerGroupName', description='The name of the elastic container instance. The name must meet the following requirements:

*   The name must be 2 to 128 characters in length
*   The name can contain only lowercase letters, digits, and hyphens (-). It cannot start or end with a hyphen (-).', example='nginx-test', position='Query'),
  containers?: [ 
    {
      livenessProbe: {
        exec: {
            commands?: [ string ](name='Commands'),
        }(name='Exec'),
        failureThreshold?: int32(name='FailureThreshold'),
        httpGet: {
            path?: string(name='Path'),
            port?: int32(name='Port'),
            scheme?: string(name='Scheme'),
        }(name='HttpGet'),
        initialDelaySeconds?: int32(name='InitialDelaySeconds'),
        periodSeconds?: int32(name='PeriodSeconds'),
        successThreshold?: int32(name='SuccessThreshold'),
        tcpSocket: {
            port?: int32(name='Port'),
        }(name='TcpSocket'),
        timeoutSeconds?: int32(name='TimeoutSeconds'),
      }(name='LivenessProbe'),
      readinessProbe: {
        exec: {
            commands?: [ string ](name='Commands'),
        }(name='Exec'),
        failureThreshold?: int32(name='FailureThreshold'),
        httpGet: {
            path?: string(name='Path'),
            port?: int32(name='Port'),
            scheme?: string(name='Scheme'),
        }(name='HttpGet'),
        initialDelaySeconds?: int32(name='InitialDelaySeconds'),
        periodSeconds?: int32(name='PeriodSeconds'),
        successThreshold?: int32(name='SuccessThreshold'),
        tcpSocket: {
            port?: int32(name='Port'),
        }(name='TcpSocket'),
        timeoutSeconds?: int32(name='TimeoutSeconds'),
      }(name='ReadinessProbe'),
      securityContext: {
        capability: {
            adds?: [ string ](name='Adds'),
        }(name='Capability'),
        readOnlyRootFilesystem?: boolean(name='ReadOnlyRootFilesystem'),
        runAsUser?: long(name='RunAsUser'),
      }(name='SecurityContext'),
      args?: [ string ](name='Args', description='The arguments that correspond to the startup commands of the container. You can specify up to 10 arguments.'),
      commands?: [ string ](name='Commands', description='The commands that you want to execute in the container when you use the command line interface (CLI) to perform probes.'),
      cpu?: float(name='Cpu', description='The number of vCPUs that you want to allocate to the container.', example='0.25'),
      environmentVars?: [ 
        {
          fieldRef: {
            fieldPath?: string(name='FieldPath'),
          }(name='FieldRef'),
          key?: string(name='Key', description='The key of the environment variable. Specify the name in the `[0-9a-zA-Z]` format. The name must be 1 to 128 characters in length, and can contain underscores (\\_). It cannot start with a digit.', example='PATH'),
          value?: string(name='Value', description='The value of the environment variable. The value must be 0 to 256 characters in length.', example='/usr/local/bin'),
        }
      ](name='EnvironmentVars', description='Information about the environment variables.'),
      gpu?: int32(name='Gpu', description='The number of GPUs that you want to allocate to the container.', example='1'),
      image?: string(name='Image', description='The image of the container.', example='registry-vpc.cn-hangzhou.aliyuncs.com/eci_open/nginx:latest'),
      imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy. Valid values:

*   Always: pulls images each time.
*   IfNotPresent: pulls images only if no on-premises images are available. On-premises images are preferentially used. If no on-premises images are available, image pulling is performed.
*   Never: never pulls images. On-premises images are always used.', example='Always'),
      lifecyclePostStartHandlerExecs?: [ string ](name='LifecyclePostStartHandlerExecs'),
      lifecyclePostStartHandlerHttpGetHost?: string(name='LifecyclePostStartHandlerHttpGetHost'),
      lifecyclePostStartHandlerHttpGetPath?: string(name='LifecyclePostStartHandlerHttpGetPath'),
      lifecyclePostStartHandlerHttpGetPort?: int32(name='LifecyclePostStartHandlerHttpGetPort'),
      lifecyclePostStartHandlerHttpGetScheme?: string(name='LifecyclePostStartHandlerHttpGetScheme'),
      lifecyclePostStartHandlerTcpSocketHost?: string(name='LifecyclePostStartHandlerTcpSocketHost'),
      lifecyclePostStartHandlerTcpSocketPort?: int32(name='LifecyclePostStartHandlerTcpSocketPort'),
      lifecyclePreStopHandlerExecs?: [ string ](name='LifecyclePreStopHandlerExecs'),
      lifecyclePreStopHandlerHttpGetHost?: string(name='LifecyclePreStopHandlerHttpGetHost'),
      lifecyclePreStopHandlerHttpGetPath?: string(name='LifecyclePreStopHandlerHttpGetPath'),
      lifecyclePreStopHandlerHttpGetPort?: int32(name='LifecyclePreStopHandlerHttpGetPort'),
      lifecyclePreStopHandlerHttpGetScheme?: string(name='LifecyclePreStopHandlerHttpGetScheme'),
      lifecyclePreStopHandlerTcpSocketHost?: string(name='LifecyclePreStopHandlerTcpSocketHost'),
      lifecyclePreStopHandlerTcpSocketPort?: int32(name='LifecyclePreStopHandlerTcpSocketPort'),
      memory?: float(name='Memory', description='The memory size of the container. Unit: GiB.', example='0.5'),
      name?: string(name='Name', description='The name of the container image.', example='nginx'),
      ports?: [ 
        {
          port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='80'),
          protocol?: string(name='Protocol', description='The type of the protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
        }
      ](name='Ports', description='Information about the ports.'),
      stdin?: boolean(name='Stdin', description='Specifies whether the container allocates buffer resources to standard input streams when the container is running. If you do not specify this parameter, an end-of-file (EOF) error may occur.

Default value: false.', example='false'),
      stdinOnce?: boolean(name='StdinOnce', description='Specifies whether standard input streams are disconnected after a client is disconnected.

If you set the StdinOnce parameter to true, standard input streams are connected after the container is started, and remain idle until a client is connected to receive data. After the client is disconnected, streams are also disconnected, and remain disconnected until the container is started again.', example='false'),
      tty?: boolean(name='Tty', description='Specifies whether to enable interaction. Default value: false.

If the command is a /bin/bash command, set the value to true.', example='false'),
      volumeMounts?: [ 
        {
          mountPath?: string(name='MountPath', description='The path where the container mounts the volume.

>  Data stored in the path of the container is directly overwritten by the content of the volume.', example='/pod/data'),
          mountPropagation?: string(name='MountPropagation', description='The mount propagation setting of the volume. Mount propagation allows the sharing of volumes that are mounted on one container with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.', example='None'),
          name?: string(name='Name', description='The name of the volume. The value of this parameter is the same as the value of the Volumes.Name parameter.', example='default-volume1'),
          readOnly?: boolean(name='ReadOnly', description='Specifies whether the volume is read-only.

Default value: false.', example='false'),
          subPath?: string(name='SubPath', description='The subdirectory of the volume.', example='data2/'),
        }
      ](name='VolumeMounts', description='Information about the volume mount of the container.'),
      workingDir?: string(name='WorkingDir', description='The working directory of the container.', example='/usr/local/'),
    }
  ](name='Containers', description='The containers.', position='Query'),
  containersUpdateType?: string(name='ContainersUpdateType', position='Query'),
  costOptimization?: boolean(name='CostOptimization', description='Specifies whether to enable the cost optimization feature. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  cpu?: float(name='Cpu', description='The number of vCPUs of the elastic container instance.', example='1.0', position='Query'),
  cpuOptionsCore?: int32(name='CpuOptionsCore', description='The number of physical CPU cores. This parameter is not available for all instance types. For more information, see [Specify custom CPU options](~~197781~~).', example='2', minimum=0, maximum=1000, position='Query'),
  cpuOptionsThreadsPerCore?: int32(name='CpuOptionsThreadsPerCore', description='The number of threads per core. This parameter is not available for all instance types. A value of 1 indicates that Hyper-Threading is disabled. For more information, see [Specify custom CPU options](~~197781~~).', example='2', position='Query'),
  dataCacheBucket?: string(name='DataCacheBucket', position='Query'),
  dataCacheBurstingEnabled?: boolean(name='DataCacheBurstingEnabled', position='Query'),
  dataCachePL?: string(name='DataCachePL', position='Query'),
  dataCacheProvisionedIops?: int32(name='DataCacheProvisionedIops', position='Query'),
  description?: string(name='Description', description='> This parameter is unavailable.', example='desc', position='Query'),
  dnsConfigNameServers?: [ string ](name='DnsConfigNameServers', description='The IP addresses of the DNS servers.', position='Query'),
  dnsConfigOptions?: [ 
    {
      name?: string(name='Name', description='The variable name of the option.', example='name'),
      value?: string(name='Value', description='The variable value of the option.', example='value'),
    }
  ](name='DnsConfigOptions', description='The options. Each option is a name-value pair. The value in the name-value pair is optional.', position='Query'),
  dnsConfigSearchs?: [ string ](name='DnsConfigSearchs', description='The DNS lookup domains.', position='Query'),
  dnsPolicy?: string(name='DnsPolicy', description='The Domain Name System (DNS) policy. Valid values:

*   None: uses the DNS that is set for the DnsConfig field.
*   Default: use the DNS that is set for the runtime environment.', example='Default', position='Query'),
  egressBandwidth?: long(name='EgressBandwidth', description='The maximum outbound bandwidth. Unit: bit/s.', example='1024000', minimum=0, maximum=9223372036854775807, position='Query'),
  eipBandwidth?: int32(name='EipBandwidth', description='The bandwidth of the EIP.

Default value: 5. Unit: Mbit/s.', example='5', minimum=0, maximum=1000000, position='Query'),
  enableSls?: boolean(name='EnableSls', description='> This parameter is unavailable.', example='false', position='Query'),
  ephemeralStorage?: int32(name='EphemeralStorage', description='The size of the temporary storage space. By default, an enhanced SSD (ESSD) of the PL1 level is used. Unit: GiB.', example='20', minimum=0, maximum=5000, position='Query'),
  hostAliases?: [ 
    {
      hostnames?: [ string ](name='Hostnames', description='The hostnames that you want to add.'),
      ip?: string(name='Ip', description='The IP address that you want to add.', example='192.0.XX.XX'),
    }
  ](name='HostAliases', description='Information about the hosts.', position='Query'),
  hostName?: string(name='HostName', description='The name of the elastic container instance.', example='test', position='Query'),
  imageRegistryCredentials?: [ 
    {
      password?: string(name='Password', description='The password that is used to access the image repository.', example='yourpaasword'),
      server?: string(name='Server', description='The domain name of the image repository.', example='registry-vpc.cn-shanghai.aliyuncs.com'),
      userName?: string(name='UserName', description='The username that is used to access the image repository.', example='yourusername'),
    }
  ](name='ImageRegistryCredentials', description='Information about the image repository.', position='Query'),
  imageSnapshotId?: string(name='ImageSnapshotId', description='The ID of the image cache.', example='imc-2zebxkiifuyzzlhl****', position='Query'),
  ingressBandwidth?: long(name='IngressBandwidth', description='The maximum inbound bandwidth. Unit: bit/s.', example='1024000', minimum=0, maximum=9223372036854775807, position='Query'),
  initContainers?: [ 
    {
      securityContext: {
        capability: {
            adds?: [ string ](name='Adds'),
        }(name='Capability'),
        readOnlyRootFilesystem?: boolean(name='ReadOnlyRootFilesystem'),
        runAsUser?: long(name='RunAsUser'),
      }(name='SecurityContext'),
      args?: [ string ](name='Args', description='The startup parameter of the container.'),
      commands?: [ string ](name='Commands', description='The commands that you want to run to start the container.'),
      cpu?: float(name='Cpu', description='The number of vCPUs that you want to allocate to the container.', example='0.5'),
      gpu?: int32(name='Gpu', description='The number of GPUs that you want to allocate to the container.', example='1'),
      image?: string(name='Image', description='The container image.', example='nginx'),
      imagePullPolicy?: string(name='ImagePullPolicy', description='The image pulling policy. Valid values:

*   Always: pulls images each time.
*   IfNotPresent: pulls images only if no on-premises images are available. On-premises images are preferentially used. If no on-premises images are available, image pulling is performed.
*   Never: never pulls images. On-premises images are always used. Image pulling is not performed.', example='Always'),
      initContainerEnvironmentVars?: [ 
        {
          fieldRef: {
            fieldPath?: string(name='FieldPath'),
          }(name='FieldRef'),
          key?: string(name='Key', description='The key of the environment variable. The key must be 1 to 128 characters in length. Specify the name in the `[0-9a-zA-Z]` format. The name can contain underscores and cannot start with a digit.', example='Path'),
          value?: string(name='Value', description='The value of the environment variable. The value must be 0 to 256 characters in length.', example='/usr/bin/'),
        }
      ](name='InitContainerEnvironmentVars', description='The environment variables of the init container.'),
      initContainerPorts?: [ 
        {
          port?: int32(name='Port', description='The port number. Valid values: 1 to 65535.', example='1'),
          protocol?: string(name='Protocol', description='The type of the protocol. Valid values:

*   TCP
*   UDP', example='TCP'),
        }
      ](name='InitContainerPorts', description='The ports of the init container.'),
      initContainerVolumeMounts?: [ 
        {
          mountPath?: string(name='MountPath', description='The path where the container mounts the volume.

>  Data stored in the path of the container is overwritten by the content of the volume.', example='/usr/share/'),
          mountPropagation?: string(name='MountPropagation', description='The mount propagation setting of the volume. Mount propagation allows the sharing of volumes that are mounted on one container with other containers in the same pod, or even with other pods on the same node. Valid values:

*   None: The volume mount does not receive subsequent mounts that are mounted to this volume or its subdirectories.
*   HostToCotainer: The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories.
*   Bidirectional: This value is similar to HostToCotainer. The volume mount receives all subsequent mounts that are mounted to this volume or its subdirectories. In addition, all volume mounts that are created by the container are propagated back to the instance and to all containers of all pods that use the same volume.

Default value: None.', example='None'),
          name?: string(name='Name', description='The name of the volume.', example='test-empty'),
          readOnly?: boolean(name='ReadOnly', description='Specifies whether the mount path is read-only.

Default value: false.', example='false'),
          subPath?: string(name='SubPath', description='The subdirectory of the volume. The elastic container instance can mount different directories of the same volume to different subdirectories of containers.', example='Always'),
        }
      ](name='InitContainerVolumeMounts', description='Information about the volume mounts of the init container.'),
      memory?: float(name='Memory', description='The size of the memory. Unit: GiB.', example='1.0'),
      name?: string(name='Name', description='The name of the container.', example='test-init'),
      workingDir?: string(name='WorkingDir', description='The working directory.', example='/usr/local'),
    }
  ](name='InitContainers', description='The init containers.', position='Query'),
  instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance type, which is used to filter the instance types that meet the specified criteria. This parameter takes effect only if you set the `CostOptimization` parameter to true. Valid values:

*   EntryLevel: shared instance type. Instances of this level are the most cost-effective but may not provide stable computing performance in a consistent manner. Instances of this level are suitable for business scenarios in which the CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: Instances of this level provide stable performance and dedicated resources, and are suitable for business scenarios that require high stability. For more information, see [Instance family](~~25378~~).
*   CreditEntryLevel: This value is valid only for burstable instances. CPU credits are used to ensure computing performance. Instances of this level are suitable for scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see the [Overview](~~59977~~) topic of burstable instances.', example='EnterpriseLevel', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses.', example='1', position='Query'),
  loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of the elastic container instance as a backend server. Valid values: 1 to 100.', example='50', position='Query'),
  memory?: float(name='Memory', description='The memory size of the elastic container instance. Unit: GiB.', example='2.0', position='Query'),
  ntpServers?: [ string ](name='NtpServers', description='The domain names of the NTP server.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role for the instance. You can use an instance RAM role to access both elastic container instances and Elastic Compute Service (ECS) instances. For more information, see [Use an instance RAM role by calling API operations](~~61178~~).', example='RamTestRole', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-uf66jeqopgqa9hdn****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  restartPolicy?: string(name='RestartPolicy', description='The instance restart policy. Valid values:

*   Always: always restarts the elastic container instance.
*   Never: never restarts the elastic container instance.
*   OnFailure: restarts the elastic container instance upon failures.

Default value: Always.', example='Always', position='Query'),
  scalingConfigurationId: string(name='ScalingConfigurationId', description='The ID of the scaling configuration that you want to modify.', example='asc-bp16har3jpj6fjbx****', position='Query'),
  scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration. The name must be 2 to 64 characters in length and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

The name of the scaling configuration must be unique within a scaling group in a region. If you do not specify this parameter, the value of the ScalingConfigurationId parameter is used.', example='test-modify', position='Query'),
  securityContextSysCtls?: [ 
    {
      name?: string(name='Name', description='The name of the security context in which the elastic container instance runs.', example='kernel.msgmax'),
      value?: string(name='Value', description='The variable value of the security context in which the elastic container instance runs.', example='65536'),
    }
  ](name='SecurityContextSysCtls', description='The system information of the security context in which the elastic container instance runs.', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which you want to associate the elastic container instance. Elastic container instances that are associated with the same security group can access each other.

If you do not specify a security group, the system uses the default security group in the region that you selected. Make sure that the inbound rules of the security group contain the protocols and the port numbers of the containers that you want to expose. If you do not have a default security group in the region, the system creates a default security group, and then adds the declared container protocols and port numbers to the inbound rules of the security group.', example='sg-uf66jeqopgqa9hdn****', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the preemptible elastic container instance. The value can be accurate to three decimal places.

If you set the SpotStrategy parameter to SpotWithPriceLimit, you must also specify the SpotPriceLimit parameter.', example='0.025', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the elastic container instance. Valid values:

*   NoSpot: The instance is a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is used as the bid price.

Default value: NoSpot.', example='SpotPriceLimit', position='Query'),
  tags?: [ 
    {
      key?: string(name='Key', description='The key of the tag.', example='version'),
      value?: string(name='Value', description='The value of the tag.', example='3'),
    }
  ](name='Tags', description='Information about the tags.', position='Query'),
  terminationGracePeriodSeconds?: long(name='TerminationGracePeriodSeconds', description='The buffer time in which the program handles operations before the program is stopped. Unit: seconds.', example='60', position='Query'),
  volumes?: [ 
    {
      diskVolume: {
        diskId?: string(name='DiskId'),
        diskSize?: int32(name='DiskSize'),
        fsType?: string(name='FsType'),
      }(name='DiskVolume'),
      emptyDirVolume: {
        medium?: string(name='Medium'),
        sizeLimit?: string(name='SizeLimit'),
      }(name='EmptyDirVolume'),
      flexVolume: {
        driver?: string(name='Driver'),
        fsType?: string(name='FsType'),
        options?: string(name='Options'),
      }(name='FlexVolume'),
      hostPathVolume: {
        path?: string(name='Path'),
        type?: string(name='Type'),
      }(name='HostPathVolume'),
      NFSVolume: {
        path?: string(name='Path'),
        readOnly?: boolean(name='ReadOnly'),
        server?: string(name='Server'),
      }(name='NFSVolume'),
      configFileVolumeConfigFileToPath?: [ 
        {
          content?: string(name='Content', description='The content of the configuration file, which can be up to 32 KB in size.', example='bGl1bWk='),
          mode?: int32(name='Mode', description='The permissions on ConfigFileVolume.', example='0644'),
          path?: string(name='Path', description='The relative path to the configuration file.', example='/usr/bin/'),
        }
      ](name='ConfigFileVolumeConfigFileToPath', description='The paths to the configuration files.'),
      configFileVolumeDefaultMode?: int32(name='ConfigFileVolumeDefaultMode', description='The default permissions on ConfigFileVolume.', example='0644'),
      name?: string(name='Name', description='The name of the volume.', example='default-volume1'),
      type?: string(name='Type', description='The type of HostPathVolume. Examples: File, Directory, and Socket.', example='EmptyDirVolume'),
    }
  ](name='Volumes', description='Information about the volumes.', position='Query'),
}

model ModifyEciScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='89945DD3-9072-47D0-A318-353284CF****'),
}

model ModifyEciScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyEciScalingConfigurationResponseBody(name='body'),
}

/**
  * If you want to change the name of a scaling configuration in a scaling group, make sure that the new name is unique within the scaling group.
  *
 */
async function modifyEciScalingConfiguration(request: ModifyEciScalingConfigurationRequest): ModifyEciScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyEciScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model ModifyLifecycleHookRequest {
  defaultResult?: string(name='DefaultResult', description='The action that you want Auto Scaling to perform after the lifecycle hook times out. Valid values:

*   CONTINUE: Auto Scaling continues to respond to scale-in or scale-out requests.
*   ABANDON: Auto Scaling releases Elastic Compute Service (ECS) instances that are created during scale-out activities or removes ECS instances from the scaling group during scale-in activities.
*   ROLLBACK: For scale-in activities, Auto Scaling rejects the requests to release ECS instances but rolls back ECS instances. For scale-out activities, the ROLLBACK setting has the same effect as the ABANDON setting.

If a scaling group has multiple lifecycle hooks in effect and you set the DefaultResult parameter for one of the lifecycle hooks to ABANDON or ROLLBACK, the following rule applies to scale-in activities: When the lifecycle hook whose DefaultResult parameter is set to ABANDON or ROLLBACK times out, other lifecycle hooks time out ahead of schedule. In other cases, Auto Scaling performs the action only after all lifecycle hooks time out. The action that Auto Scaling performs is specified by the DefaultResult parameter of the last lifecycle hook that times out.', example='CONTINUE', position='Query'),
  heartbeatTimeout?: int32(name='HeartbeatTimeout', description='The period of time before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action specified by the DefaultResult parameter. Valid values: 30 to 21600. Unit: seconds.

You can call the RecordLifecycleActionHeartbeat operation to extend the period of time before a lifecycle hook times out. You can also call the CompleteLifecycleAction operation to end a lifecycle hook ahead of schedule.', example='600', position='Query'),
  lifecycleHookId?: string(name='LifecycleHookId', description='The ID of the lifecycle hook that you want to modify.', example='ash-bp1fxuqyi98w0aib****', position='Query'),
  lifecycleHookName?: string(name='LifecycleHookName', description='The name of the lifecycle hook that you want to modify.', example='test_SCALE_IN', position='Query'),
  lifecycleHookStatus?: string(name='LifecycleHookStatus', description='The status that you want to specify for the lifecycle hook. Valid values:

*   Active
*   InActive

If you do not specify this parameter, the status of the lifecycle hook remains unchanged after you call this operation.

> By default, a lifecycle hook is in the Active state after you create it.', example='Active', position='Query'),
  lifecycleTransition?: string(name='LifecycleTransition', description='The type of the scaling activity to which the lifecycle hook applies. Valid values:

*   SCALE_OUT: scale-out activity
*   SCALE_IN: scale-in activity', example='SCALE_IN', position='Query'),
  notificationArn?: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method.

*   If the notification method is a Message Service (MNS) queue, specify the value in the acs:mns:{region-id}:{account-id}:queue/{queuename} format.
*   If the notification method is an MNS topic, specify the value in the acs:mns:{region-id}:{account-id}:topic/{topicname} format.
*   If the notification method is an Operation Orchestration Service (OOS) template, specify the value in the acs:oos:{region-id}:{account-id}:template/{templatename} format.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.
*   templatename: the name of the OOS template.', example='acs:mns:cn-beijing:161456884340****:queue/modifyLifecycleHo****', position='Query'),
  notificationMetadata?: string(name='NotificationMetadata', description='The fixed string that is included in a notification. Auto Scaling sends the notification when the lifecycle hook takes effect. The value of this parameter cannot exceed 4,096 characters in length.

Auto Scaling sends the value of the NotificationMetadata parameter together with the notification. This helps you categorize your notifications. If you specify the NotificationMetadata parameter, you must also specify the NotificationArn parameter.', example='Test', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group to which the lifecycle hook belongs.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model ModifyLifecycleHookResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyLifecycleHookResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyLifecycleHookResponseBody(name='body'),
}

/**
  * You can use one of the following methods to specify the lifecycle hook that you want to modify:
  * *   Specify the lifecycle hook ID by using the LifecycleHookId parameter. When you use this method, the ScalingGroupId and LifecycleHookName parameters are ignored.
  * *   Specify the scaling group ID by using the ScalingGroupId parameter and specify the lifecycle hook name by using the LifecycleHookName parameter.
  *
 */
async function modifyLifecycleHook(request: ModifyLifecycleHookRequest): ModifyLifecycleHookResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyLifecycleHook', 'POST', '/', 'json', false, 'json', request);
}

model ModifyNotificationConfigurationRequest {
  notificationArn: string(name='NotificationArn', description='The Alibaba Cloud Resource Name (ARN) of the notification method. The following list describes the value formats of this parameter:

*   If you use CloudMonitor as the notification method, the value format of this parameter is acs:ess:{region-id}:{account-id}:cloudmonitor.
*   If you use an MNS queue as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:queue/{queuename}.
*   If you use an MNS topic as the notification method, the value format of this parameter is acs:mns:{region-id}:{account-id}:topic/{topicname}.

The variables in the preceding formats have the following meanings:

*   region-id: the region ID of the scaling group.
*   account-id: the ID of the Alibaba Cloud account.
*   queuename: the name of the MNS queue.
*   topicname: the name of the MNS topic.', example='acs:ess:cn-beijing:161456884340****:cloudmonitor', position='Query'),
  notificationTypes: [ string ](name='NotificationTypes', description='The types of the notifications that you want to modify. You can modify one to eight notifications. Specify multiple values in the repeated list form.

You can call the DescribeNotificationTypes operation to query the values of this parameter.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-beijing', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model ModifyNotificationConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyNotificationConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyNotificationConfigurationResponseBody(name='body'),
}

async function modifyNotificationConfiguration(request: ModifyNotificationConfigurationRequest): ModifyNotificationConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyNotificationConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model ModifyScalingConfigurationRequest {
  imageOptions?: {
    loginAsNonRoot?: boolean(name='LoginAsNonRoot'),
  }(name='ImageOptions', position='Query'),
  privatePoolOptions?: {
    id?: string(name='Id', description='The ID of the private pool. The ID of a private pool is the same as the ID of the elasticity assurance or capacity reservation for which the private pool is generated.', example='eap-bp67acfmxazb4****'),
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool that you want to use to start instances. A private pool is generated when an elasticity assurance or a capacity reservation takes effect. You can select a private pool for Auto Scaling to start instances. Valid values:

*   Open: open private pool. Auto Scaling selects a matching open private pool to start instances. If no matching open private pools exist, Auto Scaling uses the resources in the public pool to start instances. In this case, you do not need to specify PrivatePoolOptions.Id.
*   Target: specified private pool. Auto Scaling uses the resources in the specified private pool to start instances. If the private pool is unavailable, Auto Scaling cannot start the instances. If you set this parameter to Target, you must specify PrivatePoolOptions.Id.
*   None: no private pool: Auto Scaling does not use the resources in private pools to start instances.', example='Open'),
  }(name='PrivatePoolOptions', position='Query'),
  systemDisk?: {
    autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that you want to apply to the system disk.', example='sp-bp12m37ccmxvbmi5****'),
    burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the burst feature for the system disk. Valid values:

*   true
*   false

> This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`.', example='false'),
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: enhanced SSD (ESSD)
*   ephemeral_ssd: local SSD

If you specify SystemDisk.Category, you cannot specify `SystemDiskCategories`. If you do not specify SystemDisk.Category or `SystemDiskCategories`, the default value of SystemDisk.Category is used. For non-I/O optimized instances of Generation I instance types, the default value is cloud. For instances of other instance types, the default value is cloud_efficiency.', example='cloud_efficiency'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length. The description can contain letters but cannot start with `http://` or `https://`.', example='Test system disk.'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). The name must start with a letter but cannot start with [http:// or https://. Default value: null.](http://https://。、（:）、（\\_）（-）。：)', example='cloud_ssdSystem'),
    encryptAlgorithm?: string(name='EncryptAlgorithm', description='The algorithm that you want to use to encrypt the system disk. Valid values:

*   AES-256
*   SM4-128

Default value: AES-256', example='AES-256'),
    encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true
*   false

Default value: false', example='false'),
    KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key that you want to use to encrypt the system disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level (PL) of the system disk that is an ESSD. Valid values:

*   PL0: An ESSD can provide up to 10,000 random read/write IOPS.
*   PL1: An ESSD can provide up to 50,000 random read/write IOPS.
*   PL2: An ESSD can provide up to 100,000 random read/write IOPS.
*   PL3: An ESSD can provide up to 1,000,000 random read/write IOPS.

> For more information about how to select ESSD PLs, see [ESSD](~~122389~~).', example='PL0'),
    provisionedIops?: long(name='ProvisionedIops', description='The IOPS metric that is preconfigured for the system disk.

> IOPS measures the number of read and write operations that an EBS device can process per second.', example='100'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   If you set SystemDisk.Category to cloud: 20 to 500.
*   If you set SystemDisk.Category to cloud_efficiency: 20 to 500.
*   If you set SystemDisk.Category to cloud_ssd: 20 to 500.
*   If you set SystemDisk.Category to cloud_essd: 20 to 500.
*   If you set SystemDisk.Category to ephemeral_ssd: 20 to 500.

The value of SystemDisk.Size must be greater than or equal to max{20, ImageSize}.', example='50'),
  }(name='SystemDisk', position='Query'),
  affinity?: string(name='Affinity', description='Specifies whether to associate an ECS instance on a dedicated host with the dedicated host. Valid values:

*   default: does not associate the ECS instance with the dedicated host. If you start an instance that is stopped in economical mode and the original dedicated host has insufficient resources, the instance is automatically deployed to another dedicated host in the automatic deployment resource pool.
*   host: associates the ECS instance with the dedicated host. If you start an ECS instance that is stopped in economical mode, the ECS instance remains on the original dedicated host. If the original dedicated host has insufficient resources, the ECS instance fails to start.', example='default', position='Query'),
  cpu?: int32(name='Cpu', description='The number of vCPUs.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set Cpu to 2 and Memory to 16 to specify instance types that have 2 vCPUs and 16 GiB of memory. If you specify Cpu and Memory, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances by using the lowest-priced instance type.

> You can specify CPU and Memory to determine the range of instance types only if you set Scaling Policy to Cost Optimization Policy and you do not specify an instance type in the scaling configuration.', example='2', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: standard mode. For more information, see the "Standard mode" section in the [Burstable instances](~~59977~~) topic.
*   Unlimited: unlimited mode. For more information, see the "Unlimited mode" section in the [Burstable instances](~~59977~~) topic.', example='Standard', position='Query'),
  customPriorities?: [ 
    {
      instanceType?: string(name='InstanceType'),
      vswitchId?: string(name='VswitchId'),
    }
  ](name='CustomPriorities', position='Query'),
  dataDisks?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that you want to apply to the data disk.', example='sp-bp19nq9enxqkomib****'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the burst feature for the system disk. Valid values:

*   true
*   false

> This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`.', example='false'),
      categories?: [ string ](name='Categories', description='The categories of the data disks. Valid values:

*   cloud: basic disk. The DeleteWithInstance attribute of a basic disk that is created together with the instance is set to true.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud_essd: ESSD.

> If you specify Categories, you cannot specify `DataDisk.Category`.'),
      category?: string(name='Category', description='The category of the data disk. Valid values:

*   cloud: basic disk. The DeleteWithInstance attribute of a basic disk that is created together with the instance is set to true.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   ephemeral_ssd: local SSD.
*   cloud_essd: ESSD.

If you specify Category, you cannot specify `Categories`. If you do not specify Category or `Categories`, the default value of Category is used:

*   For I/O optimized instances, the default value is cloud_efficiency.
*   For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the data disk when the instance to which the data disk is attached is released. Valid values:

*   true
*   false

This parameter is available only for independent disks whose Category is set to cloud, cloud_efficiency, cloud_ssd, cloud_essd, or cloud_auto. If you specify this parameter for other disks, an error is reported.', example='true'),
      description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length. The description can contain letters but cannot start with `http://` or `https://`.', example='Test data disk.'),
      device?: string(name='Device', description='The mount target of the data disk. If you do not specify Device, a mount target is automatically assigned when Auto Scaling creates ECS instances. The name of the mount target ranges from /dev/xvdb to /dev/xvdz.', example='/dev/xvdd'),
      diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). The name must start with a letter but cannot start with `http://` or `https://`.', example='cloud_ssdData'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true
*   false', example='false'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key that you want to use to encrypt the data disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      performanceLevel?: string(name='PerformanceLevel', description='The PL of the data disk that is an ESSD. Valid values:

*   PL0: An ESSD can provide up to 10,000 random read/write IOPS.
*   PL1: An ESSD can provide up to 50,000 random read/write IOPS.
*   PL2: An ESSD can provide up to 100,000 random read/write IOPS.
*   PL3: An ESSD can provide up to 1,000,000 random read/write IOPS.

> For more information about how to select ESSD PLs, see [ESSD](~~122389~~).', example='PL1'),
      provisionedIops?: long(name='ProvisionedIops', description='The IOPS metric that is preconfigured for the data disk.

> IOPS measures the number of read and write operations that an Elastic Block Storage (EBS) device can process per second.', example='100'),
      size?: int32(name='Size', description='The size of the data disk. Unit: GiB. Valid values:

*   If you set Categories cloud: 5 to 2000.
*   If you set Categories to cloud_efficiency: 20 to 32768.
*   If you set Categories to cloud_ssd: 20 to 32768.
*   If you set Categories to cloud_essd: 20 to 32768.
*   If you set Categories to ephemeral_ssd: 5 to 800.

The size of the data disk must be greater than or equal to the size of the snapshot that is specified by SnapshotId.', example='100'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot that you want to use to create data disks. If you specify this parameter, DataDisk.N.Size is ignored. The size of the disk is the same as the size of the specified snapshot.

If you specify a snapshot that is created on or before July 15, 2013, the operation fails and the system returns InvalidSnapshot.TooOld.', example='s-snapshot****'),
    }
  ](name='DataDisks', description='The data disks.', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host on which you want to create ECS instances. You cannot create preemptible instances on dedicated hosts. If you specify DedicatedHostId, SpotStrategy and SpotPriceLimit are ignored.

You can call the DescribeDedicatedHosts operation to query the most recent list of dedicated host IDs.', example='dh-bp67acfmxazb4p****', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set of the ECS instances that are created by using the scaling configuration.', example='ds-bp13v7bjnj9gis****', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the ECS instance. The hostname cannot start or end with a period (.) or a hyphen (-). The hostname cannot contain consecutive periods (.) or hyphens (-). Naming conventions for different types of instances:

*   Windows instances: The hostname must be 2 to 15 characters in length, and can contain letters, digits, and hyphens (-). The hostname cannot contain periods (.) or contain only digits.
*   Other instances, such as Linux instances: The hostname must be 2 to 64 characters in length. Separate a hostname into multiple segments with periods (.). Each segment can contain letters, digits, and hyphens (-).', example='hos****', position='Query'),
  hpcClusterId?: string(name='HpcClusterId', description='The ID of the Elastic High Performance Computing (E-HPC) cluster to which the ECS instances belong.', example='hpc-clusterid', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. If you specify this parameter, the latest custom images that are available in the specified image family are returned. Then, you can use the images to create instances. If you specify ImageId, you cannot specify ImageFamily.', example='hangzhou-daily-update', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image that is used by Auto Scaling to automatically create ECS instances.

> If the image that is specified in the scaling configuration contains system disks and data disks, the data that is stored in the data disks is cleared after you modify the image.', example='centos6u5_64_20G_aliaegis_2014****.vhd', position='Query'),
  imageName?: string(name='ImageName', description='The name of the image. Each image name must be unique in a region. If you specify ImageId, ImageName is ignored.

You cannot use ImageName to specify images from Alibaba Cloud Marketplace.', example='suse11sp3_64_20G_aliaegis_2015****.vhd', position='Query'),
  instanceDescription?: string(name='InstanceDescription', description='The description of the ECS instance. The description must be 2 to 256 characters in length. The description can contain letters but cannot start with `http://` or `https://`.', example='Test instance.', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the Elastic Compute Service (ECS) instance that is automatically created by using the scaling configuration.', example='inst****', position='Query'),
  instancePatternInfos?: [ 
    {
      architectures?: [ string ](name='Architectures', description='The architectures of the instance types.

*   X86: x86 architecture.
*   Heterogeneous: heterogeneous architecture, such as GPUs and FPGAs.
*   BareMetal: ECS Bare Metal Instance architecture.
*   Arm: ARM architecture.
*   SuperComputeCluster: Super Computing Cluster architecture.

By default, all values are included.'),
      burstablePerformance?: string(name='BurstablePerformance', description='Specifies whether to include burstable instance types. Valid values:

*   Exclude: does not include burstable instance types.
*   Include: includes burstable instance types.
*   Required: includes only burstable instance types.

Default value: Include', example='Include'),
      cores?: int32(name='Cores', description='The number of vCPUs that you want to allocate to an instance type in intelligent configuration mode. You can use this parameter to filter the available instance types that meet the specified criteria. For more information, see [Overview of instance families](~~25378~~).

When you specify this parameter, take note of the following items:

*   InstancePatternInfo is available only for scaling groups that reside in VPCs.
*   If you specify InstancePatternInfo, you must also specify Cores and Memory.
*   If you specify an instance type by using InstanceType or InstanceTypes, Auto Scaling preferentially creates instances by using the instance type that is specified by InstanceType or InstanceTypes for scale-outs. If the specified instance type does not have sufficient inventory, Auto Scaling creates instances by using the lowest-priced instance type that is specified by InstancePatternInfo.', example='2'),
      excludedInstanceTypes?: [ string ](name='ExcludedInstanceTypes', description='The instance types that you want to exclude. You can use wildcard characters such as an asterisk (\\*) to exclude an instance type or an instance family. Examples:

*   ecs.c6.large: excludes the ecs.c6.large instance type.
*   ecs.c6.\\*: excludes the c6 instance family.'),
      instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family. You can use this parameter to filter instance types that meet the specified criteria. This parameter takes effect only if you set `CostOptimization` to true. Valid values:

*   EntryLevel: entry level (shared instance type). Instance types of this level are the most cost-effective but may not provide stable computing performance in a consistent manner. Instance types of this level are suitable for business scenarios in which CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: enterprise level. Instance types of this level provide stable performance and dedicated resources and are suitable for business scenarios that require high stability. For more information, see the [Overview of instance families](~~25378~~) topic.
*   CreditEntryLevel: credit entry level. This value is valid only for burstable instances. CPU credits are used to ensure computing performance. Instance types of this level are suitable for business scenarios in which CPU utilization is low but may fluctuate in specific scenarios. For more information, see [Overview](~~59977~~) of burstable instances.', example='EnterpriseLevel'),
      maxPrice?: float(name='MaxPrice', description='The maximum hourly price for a pay-as-you-go instance or a preemptible instance in intelligent configuration mode. You can use this parameter to filter the available instance types that meet the specified criteria.

> If you set SpotStrategy to SpotWithPriceLimit, specify MaxPrice. In other scenarios, MaxPrice is optional.', example='2'),
      memory?: float(name='Memory', description='The memory size that you want to allocate to an instance type in intelligent configuration mode. Unit: GiB. You can use this parameter to filter the available instance types that meet the specified criteria.', example='4'),
    }
  ](name='InstancePatternInfos', description='The intelligent configuration settings, which determines the range of instance types that meet the specified criteria.', position='Query'),
  instanceTypeOverrides?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type. If you want to specify the capacity of instance types in the scaling configuration, specify InstanceType and WeightedCapacity at the same time.

You can use InstanceType to specify multiple instance types and WeightedCapacity to specify the weights of the instance types.

> If you specify InstanceType, you cannot specify InstanceTypes.

You can use InstanceType to specify only instance types that are available for purchase.', example='ecs.c5.xlarge'),
      weightedCapacity?: int32(name='WeightedCapacity', description='The weight of the instance type. The weight specifies the capacity of an instance of the specified instance type in the scaling group. If you want Auto Scaling to scale instances in the scaling group based on the weighted capacity of the instances, specify WeightedCapacity after you specify InstanceType.

A higher weight specifies that a smaller number of instances of the specified instance type are required to meet the expected capacity requirement.

Performance metrics, such as the number of vCPUs and the memory size of each instance type, may vary. You can specify different weights for different instance types based on your business requirements.

Example:

*   Current capacity: 0
*   Expected capacity: 6
*   Capacity of ecs.c5.xlarge: 4

To meet the expected capacity requirement, Auto Scaling must create and add two ecs.c5.xlarge instances.

> The capacity of the scaling group cannot exceed the sum of the maximum number of instances that is specified by MaxSize and the maximum weight of the instance types.

Valid values of WeightedCapacity: 1 to 500.', example='4'),
    }
  ](name='InstanceTypeOverrides', description='The instance types.', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', description='The instance type. If you specify InstanceTypes, InstanceType is ignored.

Auto Scaling creates instances based on the priorities of instance types. If Auto Scaling cannot create instances by using the instance type that has the highest priority, Auto Scaling creates instances by using the instance type that has the next highest priority.', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The metering method for network usage. Valid values:

*   PayByBandwidth: You are charged for the maximum available bandwidth that is specified by InternetMaxBandwidthOut.
*   PayByTraffic: You are charged for the actual data transfer. InternetMaxBandwidthOut specifies only the maximum available bandwidth.', example='PayByBandwidth', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values:

*   If you set InternetChargeType to PayByBandwidth: 0 to 100. If you leave this parameter empty, this parameter is automatically set to 0.
*   If you set InternetChargeType to PayByTraffic: 0 to 100. If you leave this parameter empty, an error is returned.', example='50', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether to create an I/O optimized instance. Valid values:

*   none: does not create an I/O optimized instance.
*   optimized: creates an I/O optimized instance.', example='none', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of randomly generated IPv6 addresses that you want to allocate to the elastic network interface (ENI).', example='1', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair that you can use to log on to an ECS instance.

*   Windows instances do not support this parameter.
*   By default, the username and password authentication method is disabled for Linux instances.', example='KeyPair_Name', position='Query'),
  loadBalancerWeight?: int32(name='LoadBalancerWeight', description='The weight of an ECS instance as a backend server. Valid values: 1 to 100.', example='50', position='Query'),
  memory?: int32(name='Memory', description='The memory size. Unit: GiB.

You can specify the number of vCPUs and the memory size to determine the range of instance types. For example, you can set Cpu to 2 and Memory to 16 to specify instance types that have 2 vCPUs and 16 GiB of memory. If you specify Cpu and Memory, Auto Scaling determines the available instance types based on factors such as I/O optimization requirements and zones. Then, Auto Scaling preferentially creates instances by using the lowest-priced instance type.

> You can specify CPU and Memory to determine the range of instance types only if you set Scaling Policy to Cost Optimization Policy and you do not specify an instance type in the scaling configuration.', example='16', position='Query'),
  override?: boolean(name='Override', description='Specifies whether to overwrite existing data. Valid values:

*   true
*   false', example='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password that is preconfigured in the image. Before you use this parameter, make sure that a password is configured in the image.', example='false', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the RAM role that you want to attach to the ECS instance. The name is provided and maintained by Resource Access Management (RAM). You can call the ListRoles operation to query the available RAM roles. You can call the CreateRole operation to create RAM roles.', example='RamRoleTest', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ECS instances belong.', example='abcd1234abcd****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingConfigurationId: string(name='ScalingConfigurationId', description='The ID of the scaling configuration that you want to modify.', example='asc-bp16har3jpj6fjbx****', position='Query'),
  scalingConfigurationName?: string(name='ScalingConfigurationName', description='The name of the scaling configuration. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.

The name of the scaling configuration must be unique in a region. If you do not specify this parameter, the scaling configuration ID is used.', example='test-modify', position='Query'),
  schedulerOptions?: map[string]any(name='SchedulerOptions', description='The scheduler options.', example='["testManagedPrivateSpaceId****"]', shrink='json', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group with which ECS instances are associated. The ECS instances that are associated with the same security group can access each other.', example='sg-F876F****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups.', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The retention period of the preemptible instance. Unit: hours. Valid values: 0, 1, 2, 3, 4, 5, and 6.

*   The following retention periods are available in invitational preview: 2, 3, 4, 5, and 6 hours. If you want to set this parameter to one of these values, submit a ticket.
*   If you set this parameter to 0, no retention period is specified for the preemptible instance.', example='1', position='Query'),
  spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance. Default value: Terminate. Set the value to Terminate. This value specifies that the preemptible instance is to be released.', example='Terminate', position='Query'),
  spotPriceLimits?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type of the preemptible instance. This parameter takes effect only if you set SpotStrategy to SpotWithPriceLimit.', example='ecs.g6.large'),
      priceLimit?: float(name='PriceLimit', description='The price limit of the preemptible instance. This parameter takes effect only if you set SpotStrategy to SpotWithPriceLimit.', example='0.125'),
    }
  ](name='SpotPriceLimits', description='The preemptible instance types.', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The preemption policy that you want to apply to pay-as-you-go instances and preemptible instances. Valid values:

*   NoSpot: The instance is created as a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance that has a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bidding price.', example='NoSpot', position='Query'),
  storageSetId?: string(name='StorageSetId', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', position='Query'),
  systemDiskCategories?: [ string ](name='SystemDiskCategories', description='The categories of the system disks. If Auto Scaling cannot create instances by using the disk category that has the highest priority, Auto Scaling creates instances by using the disk category that has the next highest priority. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD

> If you specify SystemDiskCategories, you cannot specify `SystemDisk.Category`.', position='Query'),
  tags?: string(name='Tags', description='The tags of the ECS instance. Specify the tags as key-value pairs. You can specify up to 20 tags. When you specify tag keys and tag values, take note of the following items:

*   A tag key can be up to 64 characters in length. The key cannot start with `acs:` or `aliyun`, and cannot contain `http://` or `https://`. The tag key cannot be an empty string.
*   A tag value can be up to 128 characters in length. The value cannot start with `acs:` or `aliyun`, and cannot contain `http://` or `https://`. The tag value can be an empty string.', example='{"key1":"value1","key2":"value2", ... "key5":"value5"}', position='Query'),
  tenancy?: string(name='Tenancy', description='Specifies whether to create an ECS instance on a dedicated host. Valid values:

*   default: does not create the ECS instance on a dedicated host.
*   host: creates the ECS instance on a dedicated host. If you do not specify DedicatedHostId, Alibaba Cloud selects a dedicated host for the ECS instance.', example='default', position='Query'),
  userData?: string(name='UserData', description='The user data of the ECS instance. The data must be encoded in Base64. The maximum size of the data before encoding is 16 KB.', example='echo hello ecs!', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the ECS instances that are created by using the scaling configuration.', example='cn-hangzhou-g', position='Query'),
}

model ModifyScalingConfigurationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyScalingConfigurationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyScalingConfigurationResponseBody(name='body'),
}

/**
  * You can change the name of a scaling configuration in a scaling group. The name must be unique within the scaling group.
  *
 */
async function modifyScalingConfiguration(request: ModifyScalingConfigurationRequest): ModifyScalingConfigurationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyScalingConfiguration', 'POST', '/', 'json', false, 'json', request);
}

model ModifyScalingGroupRequest {
  activeScalingConfigurationId?: string(name='ActiveScalingConfigurationId', description='The ID of the active scaling configuration in the scaling group.', example='asc-bp17pelvl720x5ub****', position='Query'),
  allocationStrategy?: string(name='AllocationStrategy', description='The allocation policy. Auto Scaling selects instance types based on the allocation policy to create the required number of instances. The policy can be applied to pay-as-you-go instances and preemptible instances at the same time. This parameter takes effect only when you set the MultiAZPolicy parameter to COMPOSABLE. Valid values:

*   priority: Auto Scaling selects instance types based on the specified order to create the required number of instances.
*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of instances.

Default value: priority.', example='priority', position='Query'),
  azBalance?: boolean(name='AzBalance', description='Specifies whether to evenly distribute instances in the scaling group across zones. This parameter takes effect only when you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  compensateWithOnDemand?: boolean(name='CompensateWithOnDemand', description='Specifies whether to automatically create pay-as-you-go instances to meet the requirements on the number of ECS instances in the scaling group when the number of preemptible instances cannot be reached due to reasons such as costs and insufficient resources. This parameter takes effect only if you set the MultiAZPolicy parameter in the CreateScalingGroup operation to COST_OPTIMIZED. Valid values:

*   true
*   false', example='true', position='Query'),
  customPolicyARN?: string(name='CustomPolicyARN', description='The ARN of the custom scaling policy (Function). This parameter takes effect only when you specify CustomPolicy as the first step of the instance removal policy.', example='acs:fc:cn-zhangjiakou:16145688****:services/ess_custom_terminate_policy.LATEST/functions/ess_custom_terminate_policy_name', position='Query'),
  defaultCooldown?: int32(name='DefaultCooldown', description='The default cooldown time of the scaling group. This parameter takes effect only for scaling groups that have simple scaling rules. Valid values: 0 to 86400. Unit: seconds. During the cooldown time, Auto Scaling executes only scaling activities that are triggered by event-triggered tasks associated with CloudMonitor.', example='600', minimum=0, maximum=86400, position='Query'),
  desiredCapacity?: int32(name='DesiredCapacity', description='The expected number of ECS instances in the scaling group. Auto Scaling automatically maintains the specified expected number of ECS instances. The expected number cannot be greater than the value of the MaxSize parameter and cannot be less than the value of the MinSize parameter.', example='5', position='Query'),
  disableDesiredCapacity?: boolean(name='DisableDesiredCapacity', description='伸缩组是否关闭期望实例数功能。取值范围：

- false：启用期望实例数功能。
- true：关闭期望实例数功能。

> 只有伸缩组当前无伸缩活动时，才能将该参数设置为true（即关闭伸缩组的期望实例数功能），关闭伸缩组的期望实例数功能时伸缩组当前的DesiredCapacity属性也会被清空，但伸缩组中当前的实例数量不发生变化。', example='false', position='Query'),
  groupDeletionProtection?: boolean(name='GroupDeletionProtection', description='Specifies whether to enable deletion protection for the scaling group. Valid values:

*   true: enables deletion protection for the scaling group. This way, the scaling group cannot be deleted.
*   false: disables deletion protection for the scaling group.', example='true', position='Query'),
  healthCheckType?: string(name='HealthCheckType', description='The health check mode of the scaling group. Valid values:

*   NONE: Auto Scaling does not perform health checks on instances in the scaling group.
*   ECS: Auto Scaling performs health checks on ECS instances in the scaling group.', example='ECS', position='Query'),
  healthCheckTypes?: [ string ](name='HealthCheckTypes', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template that is used by Auto Scaling to create instances.', example='lt-m5e3ofjr1zn1aw7****', position='Query'),
  launchTemplateOverrides?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type. The instance type that you specify by using the InstanceType parameter overwrites the instance type that is specified in the launch template.

If you want Auto Scaling to scale instances in the scaling group based on the instance type weight, you must specify both the InstanceType and WeightedCapacity parameters.

> This parameter takes effect only after you specify the LaunchTemplateId parameter.

You can use the InstanceType parameter to specify only instance types that are available for purchase.', example='ecs.c5.xlarge'),
      spotPriceLimit?: float(name='SpotPriceLimit', description='本参数用于指定实例启动模板覆盖规格（即`LaunchTemplateOverride.N.InstanceType`）的竞价价格上限。您可以指定N个该参数，扩展启动模板支持N个实例规格。N的取值范围：1~10。
>仅当`LaunchTemplateId`参数指定了启动模板时，该参数才生效。', example='0.025'),
      weightedCapacity?: int32(name='WeightedCapacity', description='The weight of the instance type. The weight specifies the capacity of a single instance of the specified instance type in the scaling group. If you want Auto Scaling to scale instances in the scaling group based on the weighted capacity of instances, you must specify the WeightedCapacity parameter after you specify the InstanceType parameter.

A higher weight specifies that a smaller number of instances of the specified instance type are required to meet the expected capacity.

Performance metrics, such as the number of vCPUs and the memory size of each instance type, may vary. You can specify different weights for different instance types based on your business requirements.

Example:

*   Current capacity: 0
*   Expected capacity: 6
*   Capacity of ecs.c5.xlarge: 4

To meet the expected capacity requirement, Auto Scaling must create and add two ecs.c5.xlarge instances.

> The capacity of the scaling group cannot exceed the sum of the maximum number of instances that is specified by the MaxSize parameter and the maximum weight of the instance type.

Valid values of the WeightedCapacity parameter: 1 to 500.', example='4'),
    }
  ](name='LaunchTemplateOverrides', description='Details of the instance types that are specified in the extended configurations of the launch template.', position='Query'),
  launchTemplateVersion?: string(name='LaunchTemplateVersion', description='The version number of the launch template. Valid values:

*   A fixed template version number.
*   Default: The default template version is always used.
*   Latest: The latest template version is always used.', example='Default', position='Query'),
  maxInstanceLifetime?: int32(name='MaxInstanceLifetime', description='The maximum life span of the instance in the scaling group. Unit: seconds.

Valid values: 86400 to Integer.maxValue. ``You can also set this parameter to 0. A value of 0 indicates that the instance has an unlimited life span in the scaling group.

Default value: null.

> You cannot specify this parameter for scaling groups that manage elastic container instances or scaling groups whose ScalingPolicy is set to recycle.', example='null', position='Query'),
  maxSize?: int32(name='MaxSize', description='The maximum number of ECS instances in the scaling group. When the number of ECS instances in the scaling group is greater than the value of the MaxSize parameter, Auto Scaling automatically removes ECS instances from the scaling group until the number of instances is equal to the value of the MaxSize parameter.

The value range of the MaxSize parameter varies based on the instance quota. You can go to [Quota Center](https://quotas.console.aliyun.com/products/ess/quotas) to check the quota of **instances that can be included in a scaling group**.

For example, if the quota of instances that can be included in a scaling group is 2000, the valid values of the MaxSize parameter range from 0 to 2000.', example='99', position='Query'),
  minSize?: int32(name='MinSize', description='The minimum number of ECS instances in the scaling group. When the number of ECS instances in the scaling group is less than the value of the MinSize parameter, Auto Scaling automatically creates ECS instances and adds the instances to the scaling group until the number of instances is equal to the value of the MinSize parameter.

> The value of the MinSize parameter must be less than or equal to the value of the MaxSize parameter.', example='1', position='Query'),
  multiAZPolicy?: string(name='MultiAZPolicy', description='The scaling policy for the multi-zone scaling group that contains ECS instances. Valid values:

*   PRIORITY: ECS instances are scaled based on the vSwitch priority. The first vSwitch specified by using the VSwitchIds parameter has the highest priority. Auto Scaling preferentially scales instances in the zone where the vSwitch that has the highest priority resides. If the scaling fails, Auto Scaling scales instances in the zone where the vSwitch that has the next highest priority resides.
*   COST_OPTIMIZED: During a scale-out activity, Auto Scaling preferentially creates ECS instances of the instance type that has the lowest unit price of vCPU. During a scale-in activity, Auto Scaling preferentially removes ECS instances of the instance types that have the highest unit price of vCPU. Auto Scaling preferentially creates preemptible instances when preemptible instance types are specified in the scaling configuration. You can use the `CompensateWithOnDemand` parameter to specify whether to automatically create pay-as-you-go instances when Auto Scaling fails to create preemptible instances.

> The `COST_OPTIMIZED` setting takes effect only when multiple instance types are specified or at least one instance type is specified for preemptible instances.

*   BALANCE: ECS instances are evenly distributed across zones that are specified in the scaling group. If ECS instances are unevenly distributed among zones due to insufficient resources, you can call the RebalanceInstance operation to evenly distribute the instances among the zones.
*   COMPOSABLE: You can flexibly combine the preceding policies based on your business requirements.', example='PRIORITY', position='Query'),
  onDemandBaseCapacity?: int32(name='OnDemandBaseCapacity', description='The minimum number of pay-as-you-go instances that must be included in the scaling group. Valid values: 0 to 1000. If the number of pay-as-you-go instances is less than the value of this parameter, Auto Scaling preferentially creates pay-as-you-go instances.

If you set the `MultiAZPolicy` parameter to `COMPOSABLE` Policy, the default value is 0.', example='30', position='Query'),
  onDemandPercentageAboveBaseCapacity?: int32(name='OnDemandPercentageAboveBaseCapacity', description='The expected percentage of pay-as-you-go instances in the excess instances when the minimum number of pay-as-you-go instances reaches the requirement. Valid values: 0 to 100.

If you set the `MultiAZPolicy` parameter to `COMPOSABLE` Policy, the default value is 100.', example='20', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  removalPolicies?: [ string ](name='RemovalPolicies', description='The policy that is used to remove ECS instances from the scaling group. Valid values:

*   OldestInstance: removes ECS instances that are added at the earliest point in time to the scaling group.
*   NewestInstance: removes ECS instances that are most recently added to the scaling group.
*   OldestScalingConfiguration: removes ECS instances that are created based on the earliest scaling configuration.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group that you want to modify.', example='asg-bp1ffogfdauy0jw0****', position='Query'),
  scalingGroupName?: string(name='ScalingGroupName', description='The name of the scaling group. The name of each scaling group must be unique in a region. The name must be 2 to 64 characters in length and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit.', example='scalinggroup****', position='Query'),
  spotAllocationStrategy?: string(name='SpotAllocationStrategy', description='The allocation policy of preemptible instances. You can use this parameter to individually specify the allocation policy of preemptible instances. This parameter takes effect only when you set the `MultiAZPolicy` parameter to `COMPOSABLE`. Valid values:

*   priority: Auto Scaling selects instance types based on the specified order to create the required number of preemptible instances.
*   lowestPrice: Auto Scaling selects instance types that have the lowest unit price of vCPUs to create the required number of preemptible instances.

Default value: priority.', example='lowestPrice', position='Query'),
  spotInstancePools?: int32(name='SpotInstancePools', description='The number of instance types that you specify. Auto Scaling creates preemptible instances of multiple instance types that are provided at the lowest price. Valid values: 0 to 10.

If you set the `MultiAZPolicy` parameter to `COMPOSABLE` Policy, the default value is 2.', example='5', position='Query'),
  spotInstanceRemedy?: boolean(name='SpotInstanceRemedy', description='Specifies whether to supplement preemptible instances. If this parameter is set to true, Auto Scaling creates an instance to replace a preemptible instance when Auto Scaling receives the system message that the preemptible instance is to be reclaimed.', example='true', position='Query'),
  vSwitchIds?: [ string ](name='VSwitchIds', description='The IDs of vSwitches.

This parameter takes effect only when the network type of the scaling group is virtual private cloud (VPC). The specified vSwitches and the scaling group must reside in the same VPC.

The vSwitches can reside in different zones. The vSwitches are sorted in ascending order. The first vSwitch specified by using the VSwitchIds parameter has the highest priority. If Auto Scaling fails to create ECS instances in the zone where the vSwitch that has the highest priority resides, Auto Scaling creates ECS instances in the zone where the vSwitch that has the next highest priority resides.', position='Query'),
}

model ModifyScalingGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyScalingGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyScalingGroupResponseBody(name='body'),
}

/**
  * *   You cannot call this operation to modify the settings of the following parameters:
  *     *   RegionId
  *     *   LoadBalancerId
  * > If you want to change the CLB instances that are associated with your scaling group, call the AttachLoadBalancers and DetachLoadBalancers operations.
  *     *   DBInstanceId
  *     **
  *     **Note**If you want to change the ApsaraDB RDS instances that are associated with your scaling group, call the AttachDBInstances and DetachDBInstances operations.
  * *   You can modify only scaling groups that are in the Active or Inactive state.
  * *   If you enable a new scaling configuration, Elastic Compute Service (ECS) instances that are created based on the previous scaling configuration still run as expected in the scaling group.
  * *   If the total number of instances in the scaling group is greater than the allowed maximum number after you change the value of the MaxSize parameter, Auto Scaling automatically removes instances from the scaling group to ensure that the number of instances is within the new range.
  * *   If the total number of instances in the scaling group is less than the allowed minimum number after you change the value of the MinSize parameter, Auto Scaling automatically adds instances to the scaling group to ensure that the number of instances is within the new range.
  * *   If the total number of instances in the scaling group does not match the expected number of instances after you change the value of the DesiredCapacity parameter, Auto Scaling automatically adds instances to or removes instances from the scaling group to ensure that the number of instances matches the value of the DesiredCapacity parameter.
  *
 */
async function modifyScalingGroup(request: ModifyScalingGroupRequest): ModifyScalingGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyScalingGroup', 'POST', '/', 'json', false, 'json', request);
}

model ModifyScalingRuleRequest {
  adjustmentType?: string(name='AdjustmentType', description='The adjustment method of the scaling rule. This is required when the ScalingRuleType parameter is set to SimpleScalingRule or StepScalingRule. Valid values:

*   QuantityChangeInCapacity: adds the specified number of ECS instances to or removes the specified number of ECS instances from the scaling group.
*   PercentChangeInCapacity: adds the specified percentage of ECS instances to or removes the specified percentage of ECS instances from the scaling group.
*   TotalCapacity: adjusts the number of ECS instances in the scaling group to the specified number.', example='QuantityChangeInCapacity', position='Query'),
  adjustmentValue?: int32(name='AdjustmentValue', description='The target value specified in the scaling rule. This parameter is required when the ScalingRuleType parameter is set to SimpleScalingRule or StepScalingRule. The number of ECS instances that are scaled in a single scaling activity cannot exceed 1,000.

*   Valid values if you set the AdjustmentType parameter to QuantityChangeInCapacity: -1000 to 1000.
*   Valid values if you set the AdjustmentType parameter to PercentChangeInCapacity: -100 to 10000.
*   Valid values if you set the AdjustmentType parameter to TotalCapacity: 0 to 2000.', example='100', position='Query'),
  alarmDimensions?: [ 
    {
      dimensionKey?: string(name='DimensionKey', description='监控项关联的维度信息键。', example='rulePool'),
      dimensionValue?: string(name='DimensionValue', description='监控项关联的维度信息值。', example='sgp-l1cbirz451yxu2dxxx'),
    }
  ](name='AlarmDimensions', description='监控项维度信息值，适用于目标追踪规则，当监控项需额外维度信息时设置，例如LoadBalancerRealServerAverageQps监控项需指定rulePool维度信息。', position='Query'),
  cooldown?: int32(name='Cooldown', description='The cooldown time of the scaling rule. This parameter is available only if you set the ScalingRuleType parameter to SimpleScalingRule.

Valid values: 0 to 86400. Unit: seconds.', example='60', position='Query'),
  disableScaleIn?: boolean(name='DisableScaleIn', description='Specifies whether to disable scale-in. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule.', example='true', position='Query'),
  estimatedInstanceWarmup?: int32(name='EstimatedInstanceWarmup', description='The warmup period of an instance. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule. Auto Scaling adds ECS instances that are in the warmup state to a scaling group but does not report monitoring data to CloudMonitor during the warmup period.

> Auto Scaling calculates the number of ECS instances that need to be scaled. ECS instances in the warmup state are not counted towards the current capacity of the scaling group.

Valid values: 0 to 86400. Unit: seconds.', example='60', position='Query'),
  initialMaxSize?: int32(name='InitialMaxSize', description='The maximum number of ECS instances in the scaling group. If you specify this parameter, you must also specify the PredictiveValueBehavior parameter.', example='100', position='Query'),
  metricName?: string(name='MetricName', description='The predefined metric that you want to monitor. This parameter is required only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule.

Valid values if you set the ScalingRuleType parameter to TargetTrackingScalingRule:

*   CpuUtilization: the average CPU utilization
*   ClassicInternetRx: the average inbound Internet traffic over the classic network
*   ClassicInternetTx: the average outbound Internet traffic over the classic network
*   VpcInternetRx: the average inbound Internet traffic over the virtual private cloud (VPC)
*   VpcInternetTx: the average outbound Internet traffic over the VPC
*   IntranetRx: the average inbound traffic over the internal network
*   IntranetTx: the average outbound traffic over the internal network

Valid values if you set the ScalingRuleType parameter to PredictiveScalingRule:

*   CpuUtilization: the average CPU utilization
*   IntranetRx: the average inbound traffic over the internal network
*   IntranetTx: the average outbound traffic over the internal network', example='CpuUtilization', position='Query'),
  minAdjustmentMagnitude?: int32(name='MinAdjustmentMagnitude', description='The minimum number of instances that must be scaled when the AdjustmentType parameter is set to PercentChangeInCapacity. This parameter takes effect only if you set the ScalingRuleType parameter to SimpleScalingRule or StepScalingRule.', example='1', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  predictiveScalingMode?: string(name='PredictiveScalingMode', description='The mode of the predictive scaling rule. Valid values:

*   PredictAndScale: produces predictions and creates prediction tasks.
*   PredictOnly: produces predictions but does not create prediction tasks.', example='PredictAndScale', position='Query'),
  predictiveTaskBufferTime?: int32(name='PredictiveTaskBufferTime', description='The amount of buffer time before the prediction task is executed. By default, all prediction tasks that are automatically created for a predictive scaling rule are executed on the hour. You can specify an amount of buffer time for resource preparation before the prediction tasks are executed. Valid values: 0 to 60.', example='30', position='Query'),
  predictiveValueBehavior?: string(name='PredictiveValueBehavior', description='Specifies which one of the initial maximum capacity and the predicted value can be used as the maximum value for prediction tasks. Valid values:

*   MaxOverridePredictiveValue: uses the initial maximum capacity as the maximum value for prediction tasks if the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMax: uses the predicted value as the maximum value for prediction tasks when the predicted value is greater than the initial maximum capacity.
*   PredictiveValueOverrideMaxWithBuffer: increases the predicted value by a percentage that is specified by the PredictiveValueBuffer parameter. If the predicted value that is increased by the percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks.', example='MaxOverridePredictiveValue', position='Query'),
  predictiveValueBuffer?: int32(name='PredictiveValueBuffer', description='The percentage of the increment to the predicted value when the PredictiveValueBehavior parameter is set to PredictiveValueOverrideMaxWithBuffer. If the predicted value increased by this percentage is greater than the initial maximum capacity, the increased value is used as the maximum value for prediction tasks. Valid values: 0 to 100.', example='50', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scaleInEvaluationCount?: int32(name='ScaleInEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-in activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.', example='15', position='Query'),
  scaleOutEvaluationCount?: int32(name='ScaleOutEvaluationCount', description='The number of consecutive times that the event-triggered task created for scale-out activities must meet the threshold conditions before an alert is triggered. After a target tracking scaling rule is created, an event-triggered task is automatically created and then associated with the target tracking scaling rule.', example='3', position='Query'),
  scalingRuleId: string(name='ScalingRuleId', description='The ID of the scaling rule that you want to modify.', example='asr-bp1dvirgwkoowxk7****', position='Query'),
  scalingRuleName?: string(name='ScalingRuleName', description='The name of the scaling rule. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). The name must start with a letter or a digit. The name of a scaling rule must be unique in the scaling group to which the scaling rule belongs and within an Alibaba Cloud account.', example='scalingrule****', position='Query'),
  stepAdjustments?: [ 
    {
      metricIntervalLowerBound?: float(name='MetricIntervalLowerBound', description='The lower limit that is specified in a step adjustment. This parameter is available only if you set the ScalingRuleType parameter to StepScalingRule. Valid values: -9.999999E18 to 9.999999E18.', example='1.0'),
      metricIntervalUpperBound?: float(name='MetricIntervalUpperBound', description='The upper limit specified in a step adjustment. This parameter is available only if you set the ScalingRuleType parameter to StepScalingRule. Valid values: -9.999999E18 to 9.999999E18.', example='5.0'),
      scalingAdjustment?: int32(name='ScalingAdjustment', description='The number of ECS instances that you want to scale in a step adjustment. This parameter is available only if you set the ScalingRuleType parameter to StepScalingRule.', example='1'),
    }
  ](name='StepAdjustments', description='Details of the step adjustments.', position='Query'),
  targetValue?: float(name='TargetValue', description='The target value. This parameter is available only if you set the ScalingRuleType parameter to TargetTrackingScalingRule or PredictiveScalingRule. The value must be greater than 0 and can have up to three decimal places.', example='0.125', position='Query'),
}

model ModifyScalingRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyScalingRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyScalingRuleResponseBody(name='body'),
}

async function modifyScalingRule(request: ModifyScalingRuleRequest): ModifyScalingRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyScalingRule', 'POST', '/', 'json', false, 'json', request);
}

model ModifyScheduledTaskRequest {
  description?: string(name='Description', description='The description of the scheduled task. The description must be 2 to 200 characters in length.', example='Test scheduled task.', position='Query'),
  desiredCapacity?: int32(name='DesiredCapacity', description='The expected number of instances in the scaling group if you specify the ScalingGroupId parameter.

> You must specify the `DesiredCapacity` parameter when you create a scaling group.', example='10', position='Query'),
  launchExpirationTime?: int32(name='LaunchExpirationTime', description='The time period during which the failed scheduled task is retried. Unit: seconds. Valid values: 0 to 1800.

Default value: 600.', example='600', minimum=0, maximum=86400, position='Query'),
  launchTime?: string(name='LaunchTime', description='The point in time at which the scheduled task is triggered. The time follows the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. The time must be in UTC. You cannot enter a time point later than 90 days from the point in time at which the scheduled task is modified.

*   If you specify the `RecurrenceType` parameter, the task is repeatedly executed at the time point that is specified by the LaunchTime parameter.
*   If you do not specify the `RecurrenceType` parameter, the task is executed only once at the point in time that is specified by the LaunchTime parameter.', example='2014-08-18T10:52Z', position='Query'),
  maxValue?: int32(name='MaxValue', description='The maximum number of instances in the scaling group if you specify the ScalingGroupId parameter.', example='10', position='Query'),
  minValue?: int32(name='MinValue', description='The minimum number of instances in the scaling group if you specify the ScalingGroupId parameter.', example='0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  recurrenceEndTime?: string(name='RecurrenceEndTime', description='The end time of the scheduled task. Specify the time in the ISO 8601 standard in the YYYY-MM-DDThh:mmZ format. The time must be in UTC. You cannot enter a point in time that is later than 365 days from the point in time at which the scheduled task is modified.', example='2014-08-20T16:55Z', position='Query'),
  recurrenceType?: string(name='RecurrenceType', description='The interval at which the scheduled task is repeated. Valid values:

*   Daily: The scheduled task is executed once every specified number of days.
*   Weekly: The scheduled task is executed on each specified day of the week.
*   Monthly: The scheduled task is executed on each specified day of the month.
*   Cron: The scheduled task is executed based on the specified cron expression.

After you modify the scheduled task, the values that you specify for the `RecurrenceType` and `RecurrenceValue` parameters must be valid at the same time.', example='Daily', position='Query'),
  recurrenceValue?: string(name='RecurrenceValue', description='The number of recurrences of the scheduled task.

*   If you set the `RecurrenceType` parameter to `Daily`, you can specify only one value for this parameter. Valid values: 1 to 31.
*   If you set the `RecurrenceType` parameter to `Weekly`, you can specify multiple values for this parameter. Separate the values with commas (,). The values that correspond to Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday are 0, 1, 2, 3, 4, 5, and 6.``
*   If you set the `RecurrenceType` parameter to `Monthly`, you can specify two values in the `A-B` format for this parameter. Valid values of A and B: 1 to 31. B must be greater than or equal to A.
*   If you set the `RecurrenceType` parameter to `Cron`, you can specify a cron expression. A cron expression is written in UTC time and consists of the following fields: minute, hour, day, month, and week. The expression can contain the letters L and W and the following wildcard characters: commas (,), question marks (?), hyphens (-), asterisks (\\*), number signs (#), and forward slashes (/).

After you modify the scheduled task, the values that you specify for the `RecurrenceType` and `RecurrenceValue` parameters must be valid at the same time.', example='2', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId?: string(name='ScalingGroupId', description='The ID of the scaling group whose number of instances must be modified when the scheduled task is triggered. If you specify the `ScalingGroupId` parameter for a scheduled task, you must specify the minimum, maximum, or expected numbers of instances for a scaling group in the scheduled task. That is, you must specify at least one of the `MinValue`, `MaxValue`, and `DesiredCapacity` parameters.

> You cannot specify the `ScheduledAction` and `ScalingGroupId` parameters at the same time.', example='asg-bp18p2yfxow2dloq****', position='Query'),
  scheduledAction?: string(name='ScheduledAction', description='The scaling rule that you want to execute when the scheduled task is triggered. Specify the unique identifier of the scaling rule. If you specify the `ScheduledAction` parameter, you must select an existing scaling rule for the scheduled task.

> You cannot specify the `ScheduledAction` and `ScalingGroupId` parameters at the same time.', example='ari:acs:ess:cn-hangzhou:14069264****:scalingrule/asr-bp12tcnol686y1ik****', position='Query'),
  scheduledTaskId: string(name='ScheduledTaskId', description='The ID of the scheduled task.', example='edRtShc57WGXdt8TlPbr****', position='Query'),
  scheduledTaskName?: string(name='ScheduledTaskName', description='The name of the scheduled task. The name must be 2 to 64 characters in length, and can contain letters, digits, underscores (\\_), hyphens (-), and periods (.). It must start with a letter or a digit. The name of the scheduled task must be unique in the region and within the Alibaba Cloud account.', example='scheduled****', position='Query'),
  taskEnabled?: boolean(name='TaskEnabled', description='Specifies whether to enable the scheduled task. Valid values:

*   true
*   false

Default value: true.', example='true', position='Query'),
}

model ModifyScheduledTaskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyScheduledTaskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyScheduledTaskResponseBody(name='body'),
}

/**
  * You can use the following parameters to specify the scaling method of a scheduled task:
  * *   If you use the `ScheduledAction` parameter, you must select an existing scaling rule for the scheduled task.
  * *   If you use the `ScalingGroupId` parameter, you must specify the minimum number, maximum number, or expected number of instances in the scheduled task.
  * > You cannot specify the `ScheduledAction` and `ScalingGroupId` parameters at the same time.
  *
 */
async function modifyScheduledTask(request: ModifyScheduledTaskRequest): ModifyScheduledTaskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyScheduledTask', 'POST', '/', 'json', false, 'json', request);
}

model RebalanceInstancesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model RebalanceInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-kjgffgdfadah****'),
}

model RebalanceInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RebalanceInstancesResponseBody(name='body'),
}

async function rebalanceInstances(request: RebalanceInstancesRequest): RebalanceInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RebalanceInstances', 'POST', '/', 'json', false, 'json', request);
}

model RecordLifecycleActionHeartbeatRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  heartbeatTimeout?: int32(name='heartbeatTimeout', description='The period of time before the lifecycle hook ends. Auto Scaling performs the specified action after the lifecycle hook ends. Valid values: 30 to 21600. Unit: seconds.

You can call this operation to prolong the length of a lifecycle hook. You can also call the CompleteLifecycleAction operation to end a lifecycle hook ahead of schedule.

Default value: 600.', example='600', position='Query'),
  lifecycleActionToken: string(name='lifecycleActionToken', description='The token of the lifecycle hook. You can obtain this token by using a Message Service (MNS) queue or an MNS topic that is specified for the lifecycle hook.', example='F324B880-900E-4968-85DD-81691113****', position='Query'),
  lifecycleHookId: string(name='lifecycleHookId', description='The ID of the lifecycle hook.', example='ash-bp1fxuqyi98w0aib****', position='Query'),
}

model RecordLifecycleActionHeartbeatResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model RecordLifecycleActionHeartbeatResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RecordLifecycleActionHeartbeatResponseBody(name='body'),
}

/**
  * You can call this operation to prolong the length of a lifecycle hook up to 20 times. Take note that the total length of a lifecycle hook cannot exceed 6 hours.
  *
 */
async function recordLifecycleActionHeartbeat(request: RecordLifecycleActionHeartbeatRequest): RecordLifecycleActionHeartbeatResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RecordLifecycleActionHeartbeat', 'POST', '/', 'json', false, 'json', request);
}

model RemoveInstancesRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  decreaseDesiredCapacity?: boolean(name='DecreaseDesiredCapacity', example='true', position='Query'),
  instanceIds: [ string ](name='InstanceIds', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', example='cn-qingdao', position='Query'),
  removePolicy?: string(name='RemovePolicy', example='release', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model RemoveInstancesResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  scalingActivityId?: string(name='ScalingActivityId', example='asa-bp175o6f6ego3r2j****'),
}

model RemoveInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RemoveInstancesResponseBody(name='body'),
}

async function removeInstances(request: RemoveInstancesRequest): RemoveInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RemoveInstances', 'POST', '/', 'json', false, 'json', request);
}

model ResumeProcessesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  processes: [ string ](name='Processes', description='Details of the processes that you want to resume.', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp15oubotmrq11xe****', position='Query'),
}

model ResumeProcessesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request', example='E38EB733-D714-4658-8A5F-0688AB68****'),
}

model ResumeProcessesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ResumeProcessesResponseBody(name='body'),
}

async function resumeProcesses(request: ResumeProcessesRequest): ResumeProcessesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ResumeProcesses', 'POST', '/', 'json', false, 'json', request);
}

model ScaleWithAdjustmentRequest {
  adjustmentType: string(name='AdjustmentType', description='The type of the scaling policy. Valid values:

*   QuantityChangeInCapacity: adds the specified number of ECS instances to or removes the specified number of ECS instances from the scaling group.
*   PercentChangeInCapacity: adds the specified percentage of ECS instances to or removes the specified percentage of ECS instances from the scaling group.
*   TotalCapacity: adjusts the number of ECS instances in the scaling group to a specified number.', example='QuantityChangeInCapacity', position='Query'),
  adjustmentValue: int32(name='AdjustmentValue', description='The number of instances in each adjustment. The number of ECS instances in each adjustment cannot exceed 1,000.

*   Valid values if you set the AdjustmentType parameter to QuantityChangeInCapacity: -1000 to 1000.
*   Valid values if you set the AdjustmentType parameter to PercentChangeInCapacity: -100 to 10000.
*   Valid values if you set the AdjustmentType parameter to TotalCapacity: 0 to 2000.', example='100', minimum=-2147483648, maximum=2147483647, position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  minAdjustmentMagnitude?: int32(name='MinAdjustmentMagnitude', description='The minimum number of instances allowed in each adjustment. This parameter takes effect only if you set the `AdjustmentType` parameter to `PercentChangeInCapacity`.', example='1', position='Query'),
  overrides?: {
    containerOverrides?: [ 
      {
        args?: [ string ](name='Args'),
        commands?: [ string ](name='Commands'),
        cpu?: float(name='Cpu'),
        environmentVars?: [ 
          {
            key?: string(name='Key'),
            value?: string(name='Value'),
          }
        ](name='EnvironmentVars'),
        memory?: float(name='Memory'),
        name?: string(name='Name'),
      }
    ](name='ContainerOverrides'),
    cpu?: float(name='Cpu'),
    memory?: float(name='Memory'),
  }(name='Overrides', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-j6c1o397427hyjdc****', position='Query'),
  syncActivity?: boolean(name='SyncActivity', description='Specifies whether to trigger the scaling activity in a synchronous manner. This parameter takes effect only on scaling groups for which you specified an expected number of instances. Valid values:

*   true: triggers the scaling activity in a synchronous manner. The scaling activity is triggered at the time when the scaling rule is executed.
*   false: does not trigger the scaling activity in a synchronous manner. After you change the expected number of instances for the scaling group, Auto Scaling checks whether the total number of instances in the scaling group matches the new expected number of instances and determines whether to trigger the scaling activity based on the check result.

> For more information about the Expected Number of Instances feature, see [Expected number of instances](~~146231~~).

Default value: false.', example='false', position='Query'),
}

model ScaleWithAdjustmentResponseBody = {
  activityType?: string(name='ActivityType', description='伸缩活动的类型。

当ActivityType为CapacityChange时，表示返回值ScalingActivityId对应伸缩活动仅修改伸缩组期望实例数，没有立刻执行扩缩。适用范围：期望实例数类型伸缩组。', example='CapacityChange'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  scalingActivityId?: string(name='ScalingActivityId', description='The ID of the scaling activity.', example='asa-bp175o6f6ego3r2j****'),
}

model ScaleWithAdjustmentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ScaleWithAdjustmentResponseBody(name='body'),
}

/**
  * Compared with the ExecuteScalingRule operation, the ScaleWithAdjustment operation does not require a scaling rule to be created in advance. Before you call the ScaleWithAdjustment operation, take note of the following items:
  * *   The following conditions must be met:
  *     *   The scaling group is in the Active state.
  *     *   No scaling activities in the scaling group are in progress.
  * *   If no scaling activities in the scaling group are in progress, the operation can trigger scaling activities even before the cooldown time expires.
  * *   If the addition of a specified number of Elastic Compute Service (ECS) instances to a scaling group causes the total number of ECS instances in the scaling group to exceed the maximum number of instances allowed, Auto Scaling adds only a specific number of ECS instances to ensure that the total number of instances is equal to the maximum number of instances.
  * *   If the removal of a specified number of ECS instances from a scaling group causes the total number of ECS instances in the scaling group to drop below the minimum number of instances allowed, Auto Scaling removes only a specific number of ECS instances to ensure that the total number of instances is equal to the minimum number of instances.
  * A successful call indicates that Auto Scaling accepts the request. However, the scaling activity may still fail. You can obtain the status of a scaling activity by using the value of the `ScalingActivityId` parameter in the response.
  *
 */
async function scaleWithAdjustment(request: ScaleWithAdjustmentRequest): ScaleWithAdjustmentResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ScaleWithAdjustment', 'POST', '/', 'json', false, 'json', request);
}

model SetGroupDeletionProtectionRequest {
  groupDeletionProtection: boolean(name='GroupDeletionProtection', description='Specifies whether to enable deletion protection for the scaling group. Valid values:

*   true: enables deletion protection for the scaling group. This way, the scaling group cannot be deleted.
*   false: disables deletion protection for the scaling group.', example='true', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID.', example='cn-qingdao', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp1igpak5ft1flyp****', position='Query'),
}

model SetGroupDeletionProtectionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='CCC29E24-3AEC-4F2C-8A14-78B14FA738B7'),
}

model SetGroupDeletionProtectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SetGroupDeletionProtectionResponseBody(name='body'),
}

async function setGroupDeletionProtection(request: SetGroupDeletionProtectionRequest): SetGroupDeletionProtectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetGroupDeletionProtection', 'POST', '/', 'json', false, 'json', request);
}

model SetInstanceHealthRequest {
  healthStatus: string(name='HealthStatus', description='The health status of the ECS instance in the scaling group. If ECS instances do not run as expected, Auto Scaling considers the ECS instances unhealthy. Valid values:

*   Healthy
*   Unhealthy

Auto Scaling automatically removes unhealthy ECS instances from the scaling group and then releases the automatically created instances among the unhealthy instances.

Unhealthy ECS instances that are manually added to the scaling group are released based on the management mode of the instance lifecycles. If the lifecycles of the ECS instances are not managed by the scaling group, Auto Scaling removes the instances from the scaling group but does not release the instances. If the lifecycles of the ECS instances are managed by the scaling group, Auto Scaling removes the instances from the scaling group and releases the instances.

>  Make sure that you have sufficient balance within your Alibaba Cloud account. If you have overdue payments within your Alibaba Cloud account, pay-as-you-go and preemptible instances are stopped or released. For information about how the states of ECS instances change when you have overdue payments within your Alibaba Cloud account, see [Overdue payments](~~170589~~).', example='Healthy', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp1ap6bro51a7fsa****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
}

model SetInstanceHealthResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='B755AE57-6093-43E4-938E-DEA422A9****'),
}

model SetInstanceHealthResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SetInstanceHealthResponseBody(name='body'),
}

/**
  * Configures the health check feature for Elastic Compute Service (ECS) instances.
  *
 */
async function setInstanceHealth(request: SetInstanceHealthRequest): SetInstanceHealthResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetInstanceHealth', 'POST', '/', 'json', false, 'json', request);
}

model SetInstancesProtectionRequest {
  instanceIds: [ string ](name='InstanceIds', description='The IDs of the ECS instances.', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  protectedFromScaleIn: boolean(name='ProtectedFromScaleIn', description='Specifies whether to put ECS instances into the Protected state. Auto Scaling does not remove ECS instances in the Protected state from scaling groups during scale-in activities.

*   true
*   false', example='true', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp18p2yfxow2dloq****', position='Query'),
}

model SetInstancesProtectionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model SetInstancesProtectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SetInstancesProtectionResponseBody(name='body'),
}

/**
  * Puts one or more Elastic Compute Service (ECS) instances into the Protected state.
  *
 */
async function setInstancesProtection(request: SetInstancesProtectionRequest): SetInstancesProtectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SetInstancesProtection', 'POST', '/', 'json', false, 'json', request);
}

model SuspendProcessesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that the value is unique among different requests.

The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25965~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  processes: [ string ](name='Processes', description='The types of the processes that you want to suspend. Valid values:

*   scalein
*   scaleout
*   healthcheck
*   alarmnotification
*   scheduledaction

You can suspend five processes of the preceding types at the same time. If you try to suspend more than five processes at the same time, Auto Scaling automatically removes duplicate processes.', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the scaling group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  scalingGroupId: string(name='ScalingGroupId', description='The ID of the scaling group.', example='asg-bp15oubotmrq11xe****', position='Query'),
}

model SuspendProcessesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='3E2033F0-03B4-419D-BCE2-C2339DB51****'),
}

model SuspendProcessesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SuspendProcessesResponseBody(name='body'),
}

async function suspendProcesses(request: SuspendProcessesRequest): SuspendProcessesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SuspendProcesses', 'POST', '/', 'json', false, 'json', request);
}

model TagResourcesRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
  resourceIds: [ string ](name='ResourceIds', description='The IDs of the Auto Scaling resources. You can specify 1 to 50 resource IDs.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Only scaling groups are supported. Set the value to scalinggroup.', example='scalinggroup', position='Query'),
  tags: [ 
    {
      key?: string(name='Key', description='The key of the tag that you want to add to the Auto Scaling resource.

You cannot specify empty strings as tag keys. The tag key must be 1 to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      propagate?: boolean(name='Propagate', description='Specifies whether to propagate the tag that you want to add. Valid values:

*   true: propagates the tag only to instances that are newly created and does not propagate the tag to instances that are already running in the scaling group.
*   false: does not propagate the tag to any instances.

Default value: false.', example='false'),
      value?: string(name='Value', description='The value of the tag that you want to add to the Auto Scaling resource.

You can specify empty strings as tag values. The tag value must be 0 to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:`.', example='TestValue'),
    }
  ](name='Tags', description='Details of the tags.', position='Query'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='74C4E313-8570-479F-8791-DC25360D****'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TagResources', 'POST', '/', 'json', false, 'json', request);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to remove all tags from the Auto Scaling resource. This parameter takes effect only if you do not specify the `TagKeys` parameter. Valid values:

*   true: removes all tags from the Auto Scaling resource.
*   false: does not remove tags from the Auto Scaling resource.

Default value: false.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the Auto Scaling resource. You can call the DescribeRegions operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceIds: [ string ](name='ResourceIds', description='The IDs of the Auto Scaling resources. You can specify 1 to 50 resource IDs.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Only scaling groups are supported. Set the value to scalinggroup.', example='scalinggroup', position='Query'),
  tagKeys?: [ string ](name='TagKeys', description='The keys of the tags that you want to remove from the Auto Scaling resource. You can specify 1 to 20 tag keys.', position='Query'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='3AEBB1B9-5B13-4311-951F-C3C7FA2B****'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UntagResources', 'POST', '/', 'json', false, 'json', request);
}

model VerifyAuthenticationRequest {
  onlyCheck?: boolean(name='OnlyCheck', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  uid?: long(name='Uid', example='12345678123*****', position='Query'),
}

model VerifyAuthenticationResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model VerifyAuthenticationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: VerifyAuthenticationResponseBody(name='body'),
}

async function verifyAuthentication(request: VerifyAuthenticationRequest): VerifyAuthenticationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'VerifyAuthentication', 'POST', '/', 'json', false, 'json', request);
}

model VerifyUserRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model VerifyUserResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model VerifyUserResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: VerifyUserResponseBody(name='body'),
}

async function verifyUser(request: VerifyUserRequest): VerifyUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'VerifyUser', 'POST', '/', 'json', false, 'json', request);
}

