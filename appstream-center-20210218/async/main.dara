/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'appstream-center';
  @version = '2021-02-18';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model GetAuthCodeRequest {
  endUserId?: string(name='EndUserId', example='alice', position='Body'),
  externalUserId?: string(name='ExternalUserId', example='alice', position='Body'),
  policy?: string(name='Policy', position='Body'),
}

model GetAuthCodeResponseBody = {
  authModel?: {
    authCode?: string(name='AuthCode', example='acv2ZEq2TNSqOlX+DvyetHGRT08iPhbWg/os1W4HojpBxkMQZkAnbKSfz/wNvS0E149IQZ5TogvBUE8ghCSVV+QBnv48Y+sn4z9fY5ywZA1peI5s4TplQI0TADBhPZXEIzMOdmbNsDGGlGcKOAq8ixd1Epzdu9XfvRzdLOO6o3zQwTZxXsjOgGBW8JTcgCP9W9iYiIjHIdZ2VCAnmMzuyVkyED8gymEevH10QoclyH/O3s8Yq6VF34gMXihDQeiI8PyiAZrW0JWXSWpdy3n4yGtAqMAgv46FzTA+XJ6C********'),
    endUserId?: string(name='EndUserId', example='alice'),
    expireTime?: string(name='ExpireTime', example='2015-01-23T12:33:18Z'),
  }(name='AuthModel'),
  requestId?: string(name='RequestId', description='Id of the request', example='1CBAFFAB-B697-4049-A9B1-67E1FC5F****'),
}

model GetAuthCodeResponse = {
  headers: map[string]string(name='headers'),
  body: GetAuthCodeResponseBody(name='body'),
}

async function getAuthCode(request: GetAuthCodeRequest): GetAuthCodeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetAuthCode', 'POST', '/', 'json', true, 'form', request);
}

