/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'central';
  
  checkConfig(config);
  @endpoint = getEndpoint('dytnsapi', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model GetPhoneNumberIdentificationResultRequest {
  authCode?: string(name='AuthCode', example='K***9i7CIe'),
  outId?: string(name='OutId', example='149b03d2-a749-4e6e-8f5b-34******5815'),
  ownerId?: long(name='OwnerId'),
  phoneNumber?: string(name='PhoneNumber', example='628211****113'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  sessionId?: string(name='SessionId', example='8636b75e2fcb40c53ffecc2b5947115c.149b03d2a7494e6e8f5b34c915245815.707c7f0d93f4409db0761aa5da94ce01.1686******041'),
  sessionPayload?: string(name='SessionPayload', example='uQne0vsuNywXVvI4VP5taHsgDNsd3BwcbmrhjXi58WbxBGFW+e8ufMEi9j89YonphV6NZ1PIeKvboHtU1nsSjZMTcoFPfkjqaORIHdSlPb6vmIzqOnJMsP1KPQ8K1JLXSaAKsB2lQ5A9HCkX2HzDEwje14HYQsnPd/Ka2YWgXuL0N8GE9oYi25d4DdlU0XR52YjSj8GMLSgbW7yNxEPvUCOQG83FZfQqmIWG2+0C/fQ3gdG9WI7AeeHZo4IRKGtQnpjKGtZZl8VoLPNIswDqZeeyjCyZlKUXKrAt4Co9c4I4q8G1jZm53COQJ+DuTiWH7w+tois3WJwFV/HmdlAKt8SqpiVrEv47VQ9V+8FYsdKz3A3CRyBVgNj6wYKKbwaI9BdQoOkbYzzA8CfAKO5w1oYVD2nOcYS/AffbPbE31PJj7SdVvKghwPL56OVdjS9Hd0iW0SMBWD0F1iRNCUNHL3ffHcFjJLdhTrMt8VHSRn0nOlvO1ZaWqMQ0yE0q*************************kXTpoQLo0+0h+CEcf90hTg8XdMhj9B0A3SOINceLlmoZb3czvYl00+CC0075DjOX41YtnuAUfaNYPgLIZkjYyq+JopBQFAkxPUbJHC0oCzB9dQahUthWY38OPBs='),
}

model GetPhoneNumberIdentificationResultResponseBody = {
  code?: string(name='Code', example='OK'),
  data?: {
    isIdentified?: string(name='IsIdentified', example='true'),
  }(name='Data'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='68A40250-50CD-034C-B728-0BD******177'),
}

model GetPhoneNumberIdentificationResultResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: GetPhoneNumberIdentificationResultResponseBody(name='body'),
}

async function getPhoneNumberIdentificationResultWithOptions(request: GetPhoneNumberIdentificationResultRequest, runtime: Util.RuntimeOptions): GetPhoneNumberIdentificationResultResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.authCode)) {
    query['AuthCode'] = request.authCode;
  }
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.phoneNumber)) {
    query['PhoneNumber'] = request.phoneNumber;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.sessionId)) {
    query['SessionId'] = request.sessionId;
  }
  if (!Util.isUnset(request.sessionPayload)) {
    query['SessionPayload'] = request.sessionPayload;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetPhoneNumberIdentificationResult',
    version = '2023-01-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function getPhoneNumberIdentificationResult(request: GetPhoneNumberIdentificationResultRequest): GetPhoneNumberIdentificationResultResponse {
  var runtime = new Util.RuntimeOptions{};
  return getPhoneNumberIdentificationResultWithOptions(request, runtime);
}

model GetPhoneNumberIdentificationUrlRequest {
  authCode?: string(name='AuthCode', example='K***9i7CIe'),
  ip?: string(name='Ip', example='114.124.***.13'),
  outId?: string(name='OutId', example='149b03d2-a749-4e6e-8f5b-34******5815'),
  ownerId?: long(name='OwnerId'),
  phoneNumber?: string(name='PhoneNumber', example='628211****113'),
  rememberPhoneNumber?: boolean(name='RememberPhoneNumber', example='true'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model GetPhoneNumberIdentificationUrlResponseBody = {
  code?: string(name='Code', example='OK'),
  data?: {
    identificationUrl?: string(name='IdentificationUrl', example='https://global-ip-auth.dycpaas.com/global/biz/ip_auth/start?ipa_s_c_c=IPF0000000000000******&ipa_s_i=8636b75e2fcb40c53ffecc2b59******'),
    sessionId?: string(name='SessionId', example='8636b75e2fcb40c53ffecc2b5947115c.149b03d2a7494e6e8f5b34c915245815.707c7f0d93f4409db0761aa5da94ce01.1686******041'),
  }(name='Data'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='68A40250-50CD-034C-B728-0BD******177'),
}

model GetPhoneNumberIdentificationUrlResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: GetPhoneNumberIdentificationUrlResponseBody(name='body'),
}

async function getPhoneNumberIdentificationUrlWithOptions(request: GetPhoneNumberIdentificationUrlRequest, runtime: Util.RuntimeOptions): GetPhoneNumberIdentificationUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.authCode)) {
    query['AuthCode'] = request.authCode;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.phoneNumber)) {
    query['PhoneNumber'] = request.phoneNumber;
  }
  if (!Util.isUnset(request.rememberPhoneNumber)) {
    query['RememberPhoneNumber'] = request.rememberPhoneNumber;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetPhoneNumberIdentificationUrl',
    version = '2023-01-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function getPhoneNumberIdentificationUrl(request: GetPhoneNumberIdentificationUrlRequest): GetPhoneNumberIdentificationUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return getPhoneNumberIdentificationUrlWithOptions(request, runtime);
}

