/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Dysmsapi';
  @version = '2017-05-25';
  @endpointRule = 'central';
  @endpointMap = {
    'ap-southeast-1' = 'dysmsapi.ap-southeast-1.aliyuncs.com',
    'ap-southeast-5' = 'dysmsapi.ap-southeast-5.aliyuncs.com',
    'cn-beijing' = 'dysmsapi-proxy.cn-beijing.aliyuncs.com',
    'cn-hongkong' = 'dysmsapi-xman.cn-hongkong.aliyuncs.com',
    'eu-central-1' = 'dysmsapi.eu-central-1.aliyuncs.com',
    'us-east-1' = 'dysmsapi.us-east-1.aliyuncs.com',
  };
}

function close(): void {
  @handler.close();
}

model AddExtCodeSignRequest {
  extCode: string(name='ExtCode', description='扩展码A3

This parameter is required.', example='01', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='签名

This parameter is required.', example='示例值', position='Query'),
}

model AddExtCodeSignResponseBody = {
  accessDeniedDetail?: string(name='AccessDeniedDetail'),
  code?: string(name='Code', example='OK'),
  data?: boolean(name='Data', example='true'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='90E63D28-E31D-1EB2-8939-A9486641****'),
  success?: boolean(name='Success', example='true'),
}

model AddExtCodeSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddExtCodeSignResponseBody(name='body'),
}

/**
  * @param request  the request parameters of AddExtCodeSign  AddExtCodeSignRequest
  * @return AddExtCodeSignResponse
 */
async function addExtCodeSign(request: AddExtCodeSignRequest): AddExtCodeSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddExtCodeSign', 'POST', '/', 'json', false, 'json', request);
}

model AddShortUrlRequest {
  effectiveDays: string(name='EffectiveDays', description='The validity period of the short URL. Unit: days. The maximum validity period is 90 days.

This parameter is required.', example='7', position='Body'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  shortUrlName: string(name='ShortUrlName', description='The service name of the short URL. The name cannot exceed 13 characters in length.

This parameter is required.', example='The Alibaba Cloud Short Link service.', position='Body'),
  sourceUrl: string(name='SourceUrl', description='The source URL. The URL cannot exceed 1,000 characters in length.

This parameter is required.', example='https://www.****.com/product/sms', position='Body'),
}

model AddShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    expireDate?: string(name='ExpireDate', description='The time when the short URL expires.

> The value of **ExpireDate** is on the hour.', example='2021-09-19 00:00:00'),
    shortUrl?: string(name='ShortUrl', description='The short URL.', example='http://****.cn/6y8uy7'),
    sourceUrl?: string(name='SourceUrl', description='The source URL.', example='https://www.****.com/product/sms'),
  }(name='Data', description='The details of the short URL.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model AddShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddShortUrlResponseBody(name='body'),
}

/**
  * @description *   Before you call this operation, you must register the primary domain name of the source URL in the Short Message Service (SMS) console. After the domain name is registered, you can call this operation to create a short URL. For more information, see [Domain name registration](https://help.aliyun.com/document_detail/302325.html#title-mau-zdh-hd0).
  * *   You can create up to 3,000 short URLs within a natural day.
  * *   After a short URL is generated, a security review is required. Generally, the review takes 10 minutes to 2 hours to complete. Before the security review is passed, the short URL cannot be directly accessed.
  * @param request  the request parameters of AddShortUrl  AddShortUrlRequest
  * @return AddShortUrlResponse
 */
async function addShortUrl(request: AddShortUrlRequest): AddShortUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddShortUrl', 'POST', '/', 'json', true, 'form', request);
}

model AddSmsSignRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  remark: string(name='Remark', description='The description of the signature application. The description cannot exceed 200 characters in length. The description is one of the reference information for signature review. We recommend that you describe the use scenarios of your services in detail, and provide information that can verify the services, such as a website URL, a domain name with an ICP filing, an app download URL, an official account name, or a mini program name. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.

This parameter is required.', example='This is the abbreviation of our company.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signFileList: [ 
    {
      fileContents: string(name='FileContents', description='The Base64-encoded string of the qualification document. An image cannot exceed 2 MB in size. In some scenarios, you must upload supporting documents to apply for signatures. For more information, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='R0lGODlhHAAmAKIHAKqqqsvLy0hISObm5vf394uL****'),
      fileSuffix: string(name='FileSuffix', description='The format of the qualification document. You can upload multiple images. Images in JPG, PNG, GIF, or JPEG format are supported.

In some scenarios, you must upload supporting documents to apply for signatures. For more information, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

> If you apply for a signature for other users or if the signature source is the name of an enterprise or public institution, you must upload a certificate and a letter of authorization. For more information, see [Certificate](https://help.aliyun.com/document_detail/108076.html) and [Letter of authorization](https://help.aliyun.com/document_detail/56741.html).

This parameter is required.', example='jpg'),
    }
  ](name='SignFileList', description='The signature files.

This parameter is required.', position='Body'),
  signName: string(name='SignName', description='The name of the signature.

> 

*   The signature name is not case-sensitive. For example, [Alibaba Cloud Communication] and [alibaba cloud communication] are considered as the same name.

*   If your verification code signature and general-purpose signature have the same name, the system uses the general-purpose signature to send messages by default.

This parameter is required.', example='Aliyun', position='Query'),
  signSource: int32(name='SignSource', description='The source of the signature. Valid values:

*   **0**: the full name or abbreviation of an enterprise or institution
*   **1**: the full name or abbreviation of a website that has obtained an ICP filing from the Ministry of Industry and Information Technology (MIIT) of China
*   **2**: the full name or abbreviation of an app
*   **3**: the full name or abbreviation of an official account or mini-program
*   **4**: the full name or abbreviation of an e-commerce store
*   **5**: the full name or abbreviation of a trademark

This parameter is required.', example='1', position='Query'),
  signType?: int32(name='SignType', description='The type of the signature. Valid values:

*   **0**: verification code
*   **1**: general-purpose', example='1', position='Query'),
}

model AddSmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signName?: string(name='SignName', description='The name of the signature.', example='Aliyun'),
}

model AddSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddSmsSignResponseBody(name='body'),
}

/**
  * @description You can call the AddSmsSign operation or use the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm#/overview) to create an SMS signature. The signature must comply with the [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html). You can call the QuerySmsSign operation or use the SMS console to query the review status of the signature.
  * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
  * ### QPS limit
  * You can call this operation only once per second. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * > 
  * *   You cannot cancel the review of a signature.
  * *   Individual users can create only one verification code signature, and can create only one general-purpose signature within a natural day. If you need to apply for multiple signatures, we recommend that you upgrade your account to an enterprise user.
  * *   If you need to use the same signature for messages sent to recipients both in and outside the Chinese mainland, the signature must be a general-purpose signature.
  * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
  * *   An SMS signature must undergo a thorough review process before it can be approved for use.
  * @param request  the request parameters of AddSmsSign  AddSmsSignRequest
  * @return AddSmsSignResponse
 */
async function addSmsSign(request: AddSmsSignRequest): AddSmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddSmsSign', 'POST', '/', 'json', true, 'form', request);
}

model AddSmsTemplateRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  remark: string(name='Remark', description='The description of the message template. It is one of the reference information for template review. The description cannot exceed 100 characters in length.

This parameter is required.', example='Apply for a template to send verification codes.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateContent: string(name='TemplateContent', description='The content of the template. The content can be up to 500 characters in length. For more information, see [Message template specifications](https://help.aliyun.com/document_detail/108253.html).

This parameter is required.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!', position='Query'),
  templateName: string(name='TemplateName', description='The name of the template. The name can be up to 30 characters in length.

This parameter is required.', example='Aliyun Test', position='Query'),
  templateType: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: notification
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland

> Only enterprise users can send promotional messages, or send messages to countries or regions outside the Chinese mainland.

This parameter is required.', example='1', position='Query'),
}

model AddSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_15255****'),
}

model AddSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddSmsTemplateResponseBody(name='body'),
}

/**
  * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to apply for a message template. The template must comply with the [message template specifications](https://help.aliyun.com/document_detail/108253.html). You can call the [QuerySmsTemplate](https://help.aliyun.com/document_detail/419289.html) operation or use the Alibaba Cloud SMS console to check whether the message template is approved.
  * > 
  * *   Message templates pending approval can be withdrawn. You can withdraw a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
  * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
  * *   If you call the AddSmsTemplate operation, you can apply for a maximum of 100 message templates in a calendar day. After you apply for a message template, we recommend that you wait for at least 30 seconds before you apply for another one. If you use the Alibaba Cloud SMS console, you can apply for an unlimited number of message templates.
  * *   Messages sent to the Chinese mainland and messages sent to countries or regions outside the Chinese mainland use separate message templates. Create message templates based on your needs.
  * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
  * *   A signature must undergo a thorough review process before it can be approved for use. For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
  * ### QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of AddSmsTemplate  AddSmsTemplateRequest
  * @return AddSmsTemplateResponse
 */
async function addSmsTemplate(request: AddSmsTemplateRequest): AddSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model CheckMobilesCardSupportRequest {
  mobiles: [  map[string]any ](name='Mobiles', description='The list of mobile phone numbers that receive messages.

This parameter is required.', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_****', position='Query'),
}

model CheckMobilesCardSupportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    queryResult?: [ 
      {
        mobile?: string(name='mobile', description='The mobile phone number.', example='1390000****'),
        support?: boolean(name='support', description='Indicates whether the mobile phone number supports card messages.

*   **true**
*   **false**', example='true'),
      }
    ](name='queryResult', description='The list of returned results.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model CheckMobilesCardSupportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CheckMobilesCardSupportResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 2,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of CheckMobilesCardSupport  CheckMobilesCardSupportRequest
  * @return CheckMobilesCardSupportResponse
 */
async function checkMobilesCardSupport(request: CheckMobilesCardSupportRequest): CheckMobilesCardSupportResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CheckMobilesCardSupport', 'POST', '/', 'json', false, 'json', request);
}

model ConversionDataIntlRequest {
  conversionRate: string(name='ConversionRate', description='The conversion rate.

> The value of this parameter is a double, and ranges from 0 to 1.

This parameter is required.', example='0.53', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  reportTime?: long(name='ReportTime', description='The time point at which the conversion rate is monitored. The value is a UNIX timestamp. Unit: milliseconds.

> If you do not specify this parameter, the current timestamp is used by default.', example='1349055900000', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ConversionDataIntlResponseBody = {
  code?: string(name='Code', description='The status code. If OK is returned, the request is successful. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html?spm=a2c4g.101345.0.0.74326ff2J5EZyt).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
}

model ConversionDataIntlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ConversionDataIntlResponseBody(name='body'),
}

/**
  * @param request  the request parameters of ConversionDataIntl  ConversionDataIntlRequest
  * @return ConversionDataIntlResponse
 */
async function conversionDataIntl(request: ConversionDataIntlRequest): ConversionDataIntlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ConversionDataIntl', 'POST', '/', 'json', false, 'json', request);
}

model CreateCardSmsTemplateRequest {
  factorys?: string(name='Factorys', description='The mobile phone manufacturer. Valid values:

*   **HuaWei**: HUAWEI
*   **XiaoMi**: Xiaomi
*   **OPPO**: OPPO
*   **VIVO**: vivo
*   **MEIZU**: MEIZU

> If this parameter is not specified, the system automatically specifies a supported mobile phone manufacturer.', example='XiaoMi', position='Query'),
  memo?: string(name='Memo', description='The description of the message template.', example='Image and Text Template', position='Query'),
  template: map[string]any(name='Template', description='The content of the card message template.

> 

*   For information about fields such as Template, ExtendInfo, TemplateContent, TmpCard, and Action, see [Parameters of card message templates](https://help.aliyun.com/document_detail/434929.html).

*   Message template content varies based on the template type. For more information, see [Sample message templates](https://help.aliyun.com/document_detail/435361.html).

This parameter is required.', example='{
       "extendInfo":{
              "scene":"HMOVM",
              "purpose":"2",
              "userExt":{
                     "outId":"1234554321"
              }
       },
       "templateContent":{
              "pages":[
                     {
"tmpCards":[
                                   {
                                          "type":"IMAGE",
                                          "srcType":1,
                                          "src":"28755",
                                          "actionType":"OPEN_APP",
                                          "action":{
                                                 "target":"https://s.tb.cn/c.KxzZ",
                                                 "merchantName":"test-template",
                                                 "packageName":[
                                                        "com.taobao.taobao"],
                                                 "floorUrl":"https://s.tb.cn/c.KxzZ"
                                          },
                                          "positionNumber":1
                                   },
                                   {
                                          "type":"TEXT",
                                          "content":"this is a test msg.",
                                          "isTextTitle":true,
                                          "positionNumber":2
                                   },
                                   {
                                          "type":"TEXT",
                                          "content":"Promotional information",
                                          "isTextTitle":false,
                                          "positionNumber":3
                                   },
                                   {
                                          "type":"BUTTON",
                                          "content":"Promotional information,",
                                          "actionType":"OPEN_BROWSER",
                                          "action":{
                                                 "target":"https://www.aliyun.com",
                                                 "merchantName":"Currently on the Alibaba Cloud official website."
},
                                          "positionNumber":4
                                   }]
                     }]
       },
       "cardSignName":"aliyun",
       "cardType":5
}', shrink='json', position='Query'),
  templateName: string(name='TemplateName', description='The name of the card message template.

This parameter is required.', example='Aliyun Image and Text Template', position='Query'),
}

model CreateCardSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    templateCode?: string(name='TemplateCode', description='The code of the message template.

You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview).

> Make sure that the message template has been approved.', example='CARD_SMS_60000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model CreateCardSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateCardSmsTemplateResponseBody(name='body'),
}

/**
  * @description *   The CreateCardSmsTemplate operation saves the card message template information, submits it to the mobile phone manufacturer for approval, and returns the message template ID.
  * *   If the type of the message template is not supported or events that are not supported by the mobile phone manufacturer are specified, the template is not submitted. For more information, see [Supported message templates](https://help.aliyun.com/document_detail/434611.html).
  * *   For information about sample card message templates, see [Sample card message templates](https://help.aliyun.com/document_detail/435361.html).
  * ### QPS limit
  * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of CreateCardSmsTemplate  CreateCardSmsTemplateRequest
  * @return CreateCardSmsTemplateResponse
 */
async function createCardSmsTemplate(request: CreateCardSmsTemplateRequest): CreateCardSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateCardSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model CreateSmartShortUrlRequest {
  outId?: string(name='OutId', example='示例值示例值', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNumbers: string(name='PhoneNumbers', description='This parameter is required.', example='15900195***', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sourceUrl: string(name='SourceUrl', description='This parameter is required.', example='示例值', position='Query'),
}

model CreateSmartShortUrlResponseBody = {
  code?: string(name='Code', example='示例值示例值示例值'),
  message?: string(name='Message', example='示例值示例值示例值'),
  model?: [ 
    {
      domain?: string(name='Domain', example='示例值'),
      expiration?: long(name='Expiration', example='11'),
      phoneNumber?: string(name='PhoneNumber', example='示例值'),
      shortName?: string(name='ShortName', example='示例值'),
      shortUrl?: string(name='ShortUrl', example='示例值示例值'),
    }
  ](name='Model'),
  requestId?: string(name='RequestId', example='示例值示例值'),
}

model CreateSmartShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmartShortUrlResponseBody(name='body'),
}

/**
  * @param request  the request parameters of CreateSmartShortUrl  CreateSmartShortUrlRequest
  * @return CreateSmartShortUrlResponse
 */
async function createSmartShortUrl(request: CreateSmartShortUrlRequest): CreateSmartShortUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSmartShortUrl', 'POST', '/', 'json', false, 'json', request);
}

model CreateSmsSignRequest {
  applySceneContent?: string(name='ApplySceneContent', description='Application scenarios, instructions as follows:
- For registered websites, enter the domain name with HTTP or HTTPS that has been registered with the MIIT.

- For launched apps, provide a display link from the app store with HTTP or HTTPS, ensuring the app is online.

- For public accounts or mini-programs, input the full name, ensuring they are online.

- For e-commerce platform store names, applicable only to enterprise users, provide a display link with HTTP or HTTPS for the store.', example='http://www.aliyun.com/', position='Query'),
  moreData?: [ string ](name='MoreData', description='Additional information to supplement uploaded business proof documents or screenshots, which helps reviewers understand your business details.

This parameter is optional; please fill it out based on your actual needs.', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  qualificationId: long(name='QualificationId', description='Approved or under-review qualification ID.

> - Before applying for an SMS signature, please first [Apply for Qualification](https://help.aliyun.com/zh/sms/user-guide/new-qualification?spm=a2c4g.11186623.0.0.718d187bbkpMRK).
> - You can view the qualification ID on the [Qualification Management](https://dysms.console.aliyun.com/domestic/text/qualification) page.

This parameter is required.', example='8563**', position='Query'),
  remark?: string(name='Remark', description='Explanation of the SMS signature scenario, with a maximum length of 200 characters.

> The scenario explanation is one of the reference materials for signature review. Please provide a detailed description of the usage scenarios for your live services, along with links to verify these services such as website URLs with MIIT备案, app store display links, full names of public accounts or mini-programs, etc. For login scenarios, test account credentials are also required. A comprehensive application explanation enhances the efficiency of signature and template reviews. Refer to the **Application Scenario** column in the [Signature Source](https://help.aliyun.com/zh/sms/user-guide/signature-specifications-1?spm=a2c4g.11186623.0.i2#section-xup-k46-yi4) table for filling in SMS scenarios.', example='SMS signature for the login scenario using verification code.', maxLength=500, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='Signature name. Please adhere to the [Signature Specifications](https://help.aliyun.com/zh/sms/user-guide/signature-specifications-1?spm=a2c4g.11186623.0.0.4f9710fder2gR7#section-0p8-qn8-mmy).

> - Signature names are case-insensitive; e.g., 【Aliyun Communication】 and 【aliyun communication】 are considered identical.
> - If your verification code signature and general signature names are the same, the system defaults to using the general signature for sending SMS messages.

This parameter is required.', example='Aliyun', position='Query'),
  signSource: int32(name='SignSource', description='Signature source. Values:

- **0**: Full name or abbreviation of an enterprise or institution.
- **1**: Full name or abbreviation of a MIIT-registered website.
- **2**: Full name or abbreviation of an App.
- **3**: Full name or abbreviation of an official account or mini-program.
- **4**: Full name or abbreviation of an e-commerce platform store.
- **5**: Full name or abbreviation of a trademark.

For detailed information on signature sources, refer to [Signature Source](https://help.aliyun.com/zh/sms/user-guide/signature-specifications-1?spm=a2c4g.11186623.0.0.4f9710fder2gR7#section-xup-k46-yi4).

> This interface does not support applying for signatures with sources as **Test or Learning** and **Trial Use**. If you need to apply for signatures with these sources, please go to the [SMS Service Console](https://dysms.console.aliyun.com/domestic/text/sign/add/qualification).

This parameter is required.', example='1', position='Query'),
  signType?: int32(name='SignType', description='Signature type. Values:

- **0**: Verification Code

- **1**: General (Default)

> It is recommended to use the default value: **General**.', example='1', position='Query'),
  thirdParty?: boolean(name='ThirdParty', description='Choose whether the applied signature is for self-use or third-party use.

- false: Self-use (default)

- true: Third-party use
>Notice: Please select self-use qualification ID when the signature is for self-use; choose third-party use qualification ID when it\\"s for third-party use.', example='false', position='Query'),
}

model CreateSmsSignResponseBody = {
  code?: string(name='Code', description='Request status code.

- OK indicates a successful request.
- For other error codes, refer to the [Error Code List](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='successful'),
  orderId?: string(name='OrderId', description='Work order number.

This parameter is used by auditors when querying the audit. You will need to provide this work order number if you require expedited review.', example='2004415****'),
  requestId?: string(name='RequestId', description='The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and issue localization.', example='CCA2BCFF-2BA7-427C-90EE-AC6994748607'),
  signName?: string(name='SignName', description='Signature name.', example='Aliyun'),
}

model CreateSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmsSignResponseBody(name='body'),
}

/**
  * @description - For details about the announcement of changes to the new and original interfaces, see [Announcement on Updates to SMS Service Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - Individual authenticated users can apply for one formal signature per natural day under the same Alibaba Cloud account, while enterprise authenticated users have no current restrictions. For details on the differences in rights between individual and enterprise users, please refer to [User Guide](https://help.aliyun.com/zh/sms/user-guide/usage-notes?spm).
  * - Signature information applied through the interface will be synchronized in the SMS service console. For operations related to signatures in the console, see [SMS Signatures](https://help.aliyun.com/zh/sms/user-guide/create-signatures?spm).
  * - After submitting the signature application, you can query the signature review status and details via the [GetSmsSign](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-getsmssign?spm) interface. You can also [Configure Receipt Messages](https://help.aliyun.com/zh/sms/developer-reference/configure-delivery-receipts-1?spm) and obtain signature review status messages through SignSmsReport.
  * @param request  the request parameters of CreateSmsSign  CreateSmsSignRequest
  * @return CreateSmsSignResponse
 */
async function createSmsSign(request: CreateSmsSignRequest): CreateSmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSmsSign', 'POST', '/', 'json', false, 'json', request);
}

model CreateSmsTemplateRequest {
  applySceneContent?: string(name='ApplySceneContent', description='If there is an applicable scenario, you can fill it in.', example='http://www.aliyun.com/', position='Query'),
  intlType?: int32(name='IntlType', description='International/Hong Kong, Macao, and Taiwan template type. When the **TemplateType** parameter is **3**, this parameter is required for international/Hong Kong, Macao, and Taiwan templates, with values:
- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional message.', example='0', position='Query'),
  moreData?: [ string ](name='MoreData', description='Additional materials you can upload, such as business proof documents or screenshots, to help reviewers understand your business details.

This parameter is optional; please fill it in according to actual needs.', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  relatedSignName?: string(name='RelatedSignName', description='The signature name that the template needs to be associated with. The associated SMS signature must have passed the review.

This parameter is mandatory when the TemplateType parameter is **0**, **1**, or **2**.

<notice>Associating a signature can expedite the review process. Note that this associated signature is unrelated to the signature selected when sending SMS messages.</notice>', example='Aliyun', position='Query'),
  remark?: string(name='Remark', description='Please describe the business scenario where you use SMS or provide an online link to the scenario, along with a complete example of the SMS (with variable contents filled), as complete information helps increase the template approval rate. Failure to follow guidelines or leaving this field blank may affect the approval of your template.', example='Request verification code SMS.', maxLength=500, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateContent: string(name='TemplateContent', description='Template content, up to 500 characters in length.

Both the template content and variable content must comply with SMS specifications; otherwise, the template will fail the review. You can also view common template examples on the template application page. Using sample templates can enhance review efficiency and success rates. For variable specifications, see [TemplateContent Variable Parameter Filling Specifications](https://help.aliyun.com/zh/sms/templaterule-template-variable-parameter-filling-example).

This parameter is required.', example='You are applying for mobile registration. The verification code is: ${code}. It is valid for 5 minutes!', maxLength=500, position='Query'),
  templateName: string(name='TemplateName', description='Template name, up to 30 characters in length.

This parameter is required.', example='aliyunCode', maxLength=30, position='Query'),
  templateRule?: string(name='TemplateRule', description='Template variable rules.

For filling in variable rules, refer to the [Sample Documentation](https://help.aliyun.com/zh/sms/templaterule-template-variable-parameter-filling-example).', example='{"code":"characterWithNumber"}', position='Query'),
  templateType: int32(name='TemplateType', description='SMS type. Values:

- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional message.
- **3**: International/Hong Kong, Macao, and Taiwan messages.

> Only enterprise-verified users can apply for promotional messages and international/Hong Kong, Macao, and Taiwan messages. For details on the differences between personal and enterprise user rights, please refer to [Usage Instructions](https://help.aliyun.com/zh/sms/user-guide/usage-notes?spm=a2c4g.11186623.0.0.67447f576NJnE8).

This parameter is required.', example='0', position='Query'),
}

model CreateSmsTemplateResponseBody = {
  code?: string(name='Code', description='Request status code.

* OK indicates a successful request.
* For other error codes, refer to the **Error Codes** section of this chapter or the product\\"s [API Error Codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='successful'),
  orderId?: string(name='OrderId', description='Work order ID.

This parameter is used by auditors when querying audits. If you need expedited review, you must provide this work order number.', example='2005020****'),
  requestId?: string(name='RequestId', description='The ID generated by Alibaba Cloud for this request, which is a unique identifier that can be used for troubleshooting and issue定位.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', description='SMS template code.

After submitting the template application, you can use the SMS template code to query the template audit details via the [GetSmsTemplate](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-getsmstemplate?) API. You can also [configure delivery receipts](https://help.aliyun.com/zh/sms/developer-reference/configure-delivery-receipts-1?spm), and obtain the template audit status messages through TemplateSmsReport.', example='SMS_10000****'),
  templateName?: string(name='TemplateName', description='SMS template name.', example='aliyunCode'),
}

model CreateSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmsTemplateResponseBody(name='body'),
}

/**
  * @description - For details about the changes of this new interface compared to the original one, please refer to [Announcement on the Update of SMS Service Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - It is recommended to apply for SMS templates via the API with at least a 30-second interval between each request.
  * - The template information applied through the API will be synchronized in the SMS service console. For operations related to templates in the console, please refer to SMS Templates.
  * - After submitting the template application, you can query the audit status and details using the GetSmsTemplate interface. You can also configure delivery receipts to obtain the audit status messages via TemplateSmsReport.
  * - Domestic SMS templates are not interchangeable with international/Hong Kong, Macao, and Taiwan SMS templates. Please apply for templates based on your business scenario.
  * - Only enterprise-verified users can apply for promotional messages and international/Hong Kong, Macao, and Taiwan messages. For differences in rights between personal and enterprise users, please refer to Usage Instructions.
  * @param request  the request parameters of CreateSmsTemplate  CreateSmsTemplateRequest
  * @return CreateSmsTemplateResponse
 */
async function createSmsTemplate(request: CreateSmsTemplateRequest): CreateSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model DeleteExtCodeSignRequest {
  extCode: string(name='ExtCode', description='扩展码A3

This parameter is required.', example='01', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='签名

This parameter is required.', example='示例值', position='Query'),
}

model DeleteExtCodeSignResponseBody = {
  accessDeniedDetail?: string(name='AccessDeniedDetail'),
  code?: string(name='Code', example='OK'),
  data?: boolean(name='Data', example='false'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='90E63D28-E31D-1EB2-8939-A9486641****'),
  success?: boolean(name='Success', example='true'),
}

model DeleteExtCodeSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteExtCodeSignResponseBody(name='body'),
}

/**
  * @param request  the request parameters of DeleteExtCodeSign  DeleteExtCodeSignRequest
  * @return DeleteExtCodeSignResponse
 */
async function deleteExtCodeSign(request: DeleteExtCodeSignRequest): DeleteExtCodeSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteExtCodeSign', 'POST', '/', 'json', false, 'json', request);
}

model DeleteShortUrlRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sourceUrl: string(name='SourceUrl', description='The source address. The address can be up to 1,000 characters in length.

This parameter is required.', example='https://www.****.com/product/sms', position='Body'),
}

model DeleteShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model DeleteShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteShortUrlResponseBody(name='body'),
}

/**
  * @description ### QPS limits
  * You can call this operation up to 100 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of DeleteShortUrl  DeleteShortUrlRequest
  * @return DeleteShortUrlResponse
 */
async function deleteShortUrl(request: DeleteShortUrlRequest): DeleteShortUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteShortUrl', 'POST', '/', 'json', true, 'form', request);
}

model DeleteSmsSignRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='The signature.

> The signature must be submitted by the current Alibaba Cloud account, and has been approved.

This parameter is required.', example='Aliyun', position='Query'),
}

model DeleteSmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
}

model DeleteSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSmsSignResponseBody(name='body'),
}

/**
  * @description *   You cannot delete a signature that has not been approved.
  * *   After you delete a signature, you cannot recover it. Proceed with caution.
  * ### QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of DeleteSmsSign  DeleteSmsSignRequest
  * @return DeleteSmsSignResponse
 */
async function deleteSmsSign(request: DeleteSmsSignRequest): DeleteSmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSmsSign', 'POST', '/', 'json', false, 'json', request);
}

model DeleteSmsTemplateRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm) and obtain the message template code on the **Message Templates** tab. You can also obtain the message template code by calling the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation.

This parameter is required.', example='SMS_152550****', position='Query'),
}

model DeleteSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='CCA2BCFF-2BA7-427C-90EE-AC6994748607'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_20375****'),
}

model DeleteSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSmsTemplateResponseBody(name='body'),
}

/**
  * @description *   Message templates pending approval can be withdrawn. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
  * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
  * *   You cannot recover deleted message templates. Proceed with caution.
  * ### QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of DeleteSmsTemplate  DeleteSmsTemplateRequest
  * @return DeleteSmsTemplateResponse
 */
async function deleteSmsTemplate(request: DeleteSmsTemplateRequest): DeleteSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model GetCardSmsDetailsRequest {
  bizCardId?: string(name='BizCardId', description='Card SMS sending ID, which is the BizCardId field in the response when calling SendCardSms or SendBatchCardSms.', example='123456^0', position='Query'),
  bizDigitId?: string(name='BizDigitId', description='Digital SMS sending ID, which is the BizDigitalId field in the response when calling SendCardSms or SendBatchCardSms.', example='12346^0', position='Query'),
  bizSmsId?: string(name='BizSmsId', description='Text SMS sending ID, which is the BizSmsId field in the response when calling SendCardSms or SendBatchCardSms.', example='1234576^0', position='Query'),
  currentPage?: long(name='CurrentPage', description='For paginated viewing of sending records, specify the current page number of the sending records.', example='1', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize?: long(name='PageSize', description='For paginated viewing of sending records, specify the number of card SMS records to display per page.

The value range is 1~50.', example='10', position='Query'),
  phoneNumber: string(name='PhoneNumber', description='Domestic phone number that received the SMS. Format: 11-digit phone number, for example, 1390000****.

This parameter is required.', example='1390000****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sendDate: string(name='SendDate', description='Card SMS sending date, supports querying records from the last 30 days.

Format: yyyyMMdd, for example, 20240112.

This parameter is required.', example='20240112', position='Query'),
}

model GetCardSmsDetailsResponseBody = {
  accessDeniedDetail?: string(name='AccessDeniedDetail', description='Access denied detail; this field is returned only if the RAM check fails.', example='无'),
  cardSendDetailDTO?: {
    currentPage?: long(name='CurrentPage', description='Current page number', example='1'),
    pageSize?: long(name='PageSize', description='Page size', example='10'),
    records?: [ 
      {
        errCode?: string(name='ErrCode', description='Error code for sending', example='Success'),
        outId?: string(name='OutId', description='Customer-transmitted outId', example='12345678'),
        phoneNumber?: string(name='PhoneNumber', description='Phone number that received the SMS', example='156****9080'),
        receiveDate?: string(name='ReceiveDate', description='Receive date', example='2024-09-27 11:26:35'),
        receiveType?: string(name='ReceiveType', description='Receive SMS type', example='CARD_SMS'),
        renderDate?: string(name='RenderDate', description='Render date', example='2024-09-27 12:13:39'),
        renderStatus?: long(name='RenderStatus', description='Render status. 0: Not rendered; 1: Rendered successfully; 3: Not rendered', example='1'),
        sendDate?: string(name='SendDate', description='Time when the SMS was sent', example='2024-09-27 11:26:32'),
        sendStatus?: long(name='SendStatus', description='Sending status. 1: Sending; 2: Send failed; 3: Sent successfully; 4: Addressing failed', example='3'),
        smsContent?: string(name='SmsContent', description='SMS content. Only applicable for text messages.', example='您收到一条短信消息'),
        templateCode?: string(name='TemplateCode', description='Template code', example='CARD_SMS_6***'),
      }
    ](name='Records', description='List of card SMS sending records'),
    totalCount?: long(name='TotalCount', description='Total count', example='10'),
  }(name='CardSendDetailDTO', description='Card SMS sending result'),
  code?: string(name='Code', description='Request status code.
* OK indicates a successful request.
* For other error codes, see [API Error Codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  success?: boolean(name='Success', description='Indicates whether the API call was successful. Values:
- **true** - **false**', example='true'),
}

model GetCardSmsDetailsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetCardSmsDetailsResponseBody(name='body'),
}

/**
  * @param request  the request parameters of GetCardSmsDetails  GetCardSmsDetailsRequest
  * @return GetCardSmsDetailsResponse
 */
async function getCardSmsDetails(request: GetCardSmsDetailsRequest): GetCardSmsDetailsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetCardSmsDetails', 'POST', '/', 'json', false, 'json', request);
}

model GetCardSmsLinkRequest {
  cardCodeType?: int32(name='CardCodeType', description='The code type of the URLs.

*   **1**: group texting
*   **2**: personalization', example='2', position='Query'),
  cardLinkType?: int32(name='CardLinkType', description='The type of the short URLs.

*   1: standard short code.
*   2: custom short code.

> If the **CardLinkType** is not specified, standard short codes are generated. If you need to generate custom short codes, contact Alibaba Cloud SMS technical support.', example='1', position='Query'),
  cardTemplateCode: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_****', position='Query'),
  cardTemplateParamJson?: string(name='CardTemplateParamJson', description='The variables of the message template.', example='[{},{}]', position='Query'),
  customShortCodeJson?: string(name='CustomShortCodeJson', description='The custom short code. It can contain 4 to 8 digits or letters.

> If the CardLinkType parameter is set to 2, the CustomShortCodeJson parameter is required.', example='abCde', position='Query'),
  domain?: string(name='Domain', description='The original domain name. You must submit domain names for approval in advance.

> 

*   If the **CardLinkType** parameter is set to **2**, the **Domain** parameter is required.

*   The **Domain** parameter cannot exceed 100 characters in length. If the parameter is not specified, a default domain name is used.', example='xxx.com', position='Query'),
  outId?: string(name='OutId', description='The extension field.', example='BC20220608102511660860762****', position='Query'),
  phoneNumberJson?: string(name='PhoneNumberJson', description='The mobile phone numbers of recipients, custom identifiers, or system identifiers.

> 

*   A maximum of 10,000 mobile phone numbers are supported.

*   You can enter custom identifier. Each identifier can be a maximum of 60 characters in length.

*   You can apply for a maximum of 10 OPPO templates at a time.', example='[\\"1390000****
\\",\\"1370000****
\\"]', position='Query'),
  signNameJson: string(name='SignNameJson', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.', example='[\\"aliyun\\", \\"aliyun2\\"]', position='Query'),
}

model GetCardSmsLinkResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    cardPhoneNumbers?: string(name='CardPhoneNumbers', description='The mobile phone numbers that support card messages.', example='[\\"1390000****\\",\\"1370000****\\"]'),
    cardSignNames?: string(name='CardSignNames', description='The signatures must correspond to the mobile numbers and short URLs in sequence.', example='["aliyun","aliyun2"]'),
    cardSmsLinks?: string(name='CardSmsLinks', description='The short URLs.', example='[\\"mw2m.cn/LAaGGa\\",\\"mw2m.cn/LAAaes\\"]'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone numbers that do not support card messages.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetCardSmsLinkResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetCardSmsLinkResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of GetCardSmsLink  GetCardSmsLinkRequest
  * @return GetCardSmsLinkResponse
 */
async function getCardSmsLink(request: GetCardSmsLinkRequest): GetCardSmsLinkResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetCardSmsLink', 'POST', '/', 'json', false, 'json', request);
}

model GetMediaResourceIdRequest {
  extendInfo?: string(name='ExtendInfo', description='The extended fields.

> If you set the ResourceType parameter to **2**, this parameter is required.', example='{\\"img_rate\\":\\"oneToOne\\"}', position='Query'),
  fileSize: long(name='FileSize', description='The size of the resource. Unit: bytes.

This parameter is required.', example='12', minimum=0, maximum=9223372036854775807, position='Query'),
  memo?: string(name='Memo', description='The description of the resource.', example='remark', position='Query'),
  ossKey: string(name='OssKey', description='The address of the resource.

This parameter is required.', example='oss://alicom-fc-media/1947741454322274/alicom-fc-media/pic/202205191526575398603697152.png', position='Query'),
  resourceType: int32(name='ResourceType', description='The type of the resource.

*   **1**: text.
*   **2**: image. A small image cannot exceed 100 KB in size, and a large image cannot exceed 2 MB in size. The image must be clear. Supported format: JPG, JPEG, and PNG.
*   **3**: audio.
*   **4**: video. Supported format: MP4.

> 

*   If you set the ResourceType parameter to 2, the **img_rate** required is required. Valid values:

*   1:1

*   16:9

*   3:1

*   48:65

This parameter is required.', example='1', minimum=0, maximum=10000, position='Query'),
}

model GetMediaResourceIdResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    resUrlDownload?: string(name='ResUrlDownload', description='The download URL of the resource.', example='http://test-example.com/download.jpg'),
    resourceId?: long(name='ResourceId', description='The resource ID.', example='SMS_14571****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F07CF237-F6E3-5F77-B91B-F9B7C5DE84AB'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetMediaResourceIdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetMediaResourceIdResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of GetMediaResourceId  GetMediaResourceIdRequest
  * @return GetMediaResourceIdResponse
 */
async function getMediaResourceId(request: GetMediaResourceIdRequest): GetMediaResourceIdResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetMediaResourceId', 'POST', '/', 'json', false, 'json', request);
}

model GetOSSInfoForCardTemplateRequest {
}

model GetOSSInfoForCardTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    accessKeyId?: string(name='AccessKeyId', description='The AccessKey ID.', example='LTAIxetqt1Dg****'),
    aliUid?: string(name='AliUid', description='The ID of the Alibaba Cloud account.', example='599333677478****'),
    bucket?: string(name='Bucket', description='The name of the OSS bucket.', example='alicom-cardsms-resources'),
    expireTime?: string(name='ExpireTime', description='The timeout period.', example='1634209418'),
    host?: string(name='Host', description='The hostname.', example='https://alicom-cardsms-resources.oss-cn-zhangjiakou.aliyuncs.com'),
    policy?: string(name='Policy', description='The signature policy.', example='eyJxxx0='),
    signature?: string(name='Signature', description='The signature.', example='Aliyun'),
    startPath?: string(name='StartPath', description='The path of the policy.', example='1631792777'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetOSSInfoForCardTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetOSSInfoForCardTemplateResponseBody(name='body'),
}

/**
  * @description Resources such as images and videos used for card message templates can be uploaded to Object Storage Service (OSS) buckets for storage. For more information, see [Upload files to OSS](https://help.aliyun.com/document_detail/437303.html).
  * ### QPS limit
  * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of GetOSSInfoForCardTemplate  GetOSSInfoForCardTemplateRequest
  * @return GetOSSInfoForCardTemplateResponse
 */
async function getOSSInfoForCardTemplate(request: GetOSSInfoForCardTemplateRequest): GetOSSInfoForCardTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetOSSInfoForCardTemplate', 'POST', '/', 'json', false, 'json', request);
}

model GetOSSInfoForUploadFileRequest {
  bizType?: string(name='BizType', description='Business type, default value is **fcMediaSms**.

When creating signatures and templates, and uploading **additional materials**, this value is **fcMediaSms**.', example='fcMediaSms', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model GetOSSInfoForUploadFileResponseBody = {
  code?: string(name='Code', description='Request status code.

- OK return represents a successful request.
- For other error codes, please refer to the [Error Code List](https://help.aliyun.com/document_detail/101346.htm).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  model?: {
    accessKeyId?: string(name='AccessKeyId', description='AccessKey ID used for signing.', example='LTAIxetqt1Dg****'),
    expireTime?: string(name='ExpireTime', description='Expiration time.', example='1719297445'),
    host?: string(name='Host', description='Host address.', example='https://alicom-fc-media.oss-cn-zhangjiakou.aliyuncs.com'),
    policy?: string(name='Policy', description='Signature policy.', example='eyJleHBpcmF0aW9uIjoiMjAyN***Ni0yNVQwNjozNzoyNS45NzBaI**iY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwMF0sWyJzdGFydHMtd2l0***sIiRrZXkiLCIiXV19'),
    signature?: string(name='Signature', description='Signature information calculated based on **AccessKey Secret** and **Policy**. When calling the OSS API, OSS verifies this signature information to confirm the legitimacy of the Post request.', example='BXnwCWPrhVb*****aoZHZfli5KE='),
    startPath?: string(name='StartPath', description='Policy path.', example='123456'),
  }(name='Model', description='Return result.'),
  requestId?: string(name='RequestId', description='The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request, can be used for troubleshooting and issue定位.', example='A90E4451-FED7-49D2-87C8-00700EDCFD0D'),
  success?: boolean(name='Success', description='Indicates success. Values:

- **true**
- **false**', example='true'),
}

model GetOSSInfoForUploadFileResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetOSSInfoForUploadFileResponseBody(name='body'),
}

/**
  * @description - When creating signatures or templates, you can upload materials such as login pages with links, backend page screenshots, software copyrights, supplementary agreements, etc. This helps the review personnel understand your business details. If there are multiple materials, they can be combined into one file, supporting png, jpg, jpeg, doc, docx, pdf formats.
  * - For additional materials needed when creating signatures or templates, you can upload them to the OSS file system for storage. For file upload operations, refer to [OSS File Upload](https://help.aliyun.com/zh/sms/upload-files-through-oss).
  * @param request  the request parameters of GetOSSInfoForUploadFile  GetOSSInfoForUploadFileRequest
  * @return GetOSSInfoForUploadFileResponse
 */
async function getOSSInfoForUploadFile(request: GetOSSInfoForUploadFileRequest): GetOSSInfoForUploadFileResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetOSSInfoForUploadFile', 'POST', '/', 'json', false, 'json', request);
}

model GetSmsSignRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='Signature name. Must be an SMS signature already applied for by this account.

- Obtain from the return parameters after calling the [CreateSmsSign](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-createsmssign?spm) API.
- View the signature on the [Signature Management](https://dysms.console.aliyun.com/domestic/text/sign) page.

This parameter is required.', example='Aliyun', position='Query'),
}

model GetSmsSignResponseBody = {
  applyScene?: string(name='ApplyScene', description='Content of application scenarios.', example='http://www.aliyun.com/'),
  auditInfo?: {
    auditDate?: string(name='AuditDate', description='Audit date and time.', example='2024-06-03 12:02:34'),
    rejectInfo?: string(name='RejectInfo', description='Reasons for not passing the review.', example='reason for rejection.'),
  }(name='AuditInfo', description='Audit information.'),
  code?: string(name='Code', description='Request status code.

- OK indicates a successful request.
- For other error codes, see [API Error Codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='Creation date and time of the SMS signature.', example='2024-06-03 10:02:34'),
  fileUrlList?: [ string ](name='FileUrlList', description='更多资料信息，补充上传业务证明文件或业务截图文件列表。'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  orderId?: string(name='OrderId', description='Work order number.

Used by reviewers when querying the review. You need to provide this work order number if you require expedited review.', example='20044156924'),
  qualificationId?: long(name='QualificationId', description='Credential ID, the credential ID associated when applying for the signature.', example='2004393****'),
  registerResult?: int32(name='RegisterResult'),
  remark?: string(name='Remark', description='Explanation of the SMS signature scenario, with a maximum length of 200 characters.', example='Send verification code text message during login.'),
  requestId?: string(name='RequestId', description='The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and issue localization.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signCode?: string(name='SignCode', description='SMS signature code.', example='SIGN_100000077042023_17174665*****_ZM2kG'),
  signName?: string(name='SignName', description='SMS signature name.', example='Aliyun'),
  signStatus?: long(name='SignStatus', description='Signature review status. Values:

- **0**: Under review.
- **1**: Approved.
- **2**: Review failed, please check the Reason parameter for the failure cause.
- **10**: Review canceled.', example='2'),
  signTag?: string(name='SignTag', description='Signature tag indicating whether the signature is user-defined, system-provided, test, or trial. Values:

- 2: User-defined signature
- 3: System-provided signature
- 4: Test signature
- 5: Trial signature', example='2'),
  signUsage?: string(name='SignUsage', description='scenarios for using signatures.', example='App.'),
  thirdParty?: boolean(name='ThirdParty', description='Signature usage indication—self-use or third-party use.

- false: Self-use (default)

- true: Third-party use', example='false'),
}

model GetSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetSmsSignResponseBody(name='body'),
}

/**
  * @description - For details about the changes of this new interface and the original one, please refer to [Announcement on the Update of SMS Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - Review Time: Generally, after submitting the signature, Alibaba Cloud expects to complete the review within 2 hours (Review Business Hours: Monday to Sunday 9:00~21:00, with legal holidays postponed). It is recommended to submit your application before 18:00.
  * - If the signature fails the review, the reason for the failure will be returned. Please refer to [Handling Suggestions for Failed SMS Reviews](https://help.aliyun.com/zh/sms/user-guide/causes-of-application-failures-and-suggestions?spm), invoke the [UpdateSmsSign](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-updatesmssign?spm) API, or modify the unapproved SMS signature on the [Signature Management](https://dysms.console.aliyun.com/domestic/text/sign) page.
  * @param request  the request parameters of GetSmsSign  GetSmsSignRequest
  * @return GetSmsSignResponse
 */
async function getSmsSign(request: GetSmsSignRequest): GetSmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetSmsSign', 'POST', '/', 'json', false, 'json', request);
}

model GetSmsTemplateRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateCode: string(name='TemplateCode', description='SMS template code.

- Obtain the SMS template code from the return parameters of the [CreateSmsTemplate](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-createsmstemplate?spm) API.
- View the SMS template code on the [Template Management](https://dysms.console.aliyun.com/domestic/text/template) page.

This parameter is required.', example='SMS_20375****', position='Query'),
}

model GetSmsTemplateResponseBody = {
  applyScene?: string(name='ApplyScene', description='Application scenario content.', example='http://www.aliyun.com/'),
  auditInfo?: {
    auditDate?: string(name='AuditDate', description='Audit date and time.', example='2024-06-03 11:20:34'),
    rejectInfo?: string(name='RejectInfo', description='Reasons for failed audit.', example='模板内容中包含错别字。'),
  }(name='AuditInfo', description='Audit information.'),
  code?: string(name='Code', description='Request status code.

* OK indicates a successful request.
* For other error codes, please refer to [API Error Codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='The time when the SMS template was created.', example='2024-06-03 10:02:34'),
  fileUrlList?: {
    fileUrl?: [ string ](name='FileUrl')
  }(name='FileUrlList', description='File information, compatible with signatures created by the [AddSmsSign](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-addsmstemplate?spm) API.'),
  intlType?: int32(name='IntlType', description='International/Hong Kong, Macao, and Taiwan template type. When the **TemplateType** parameter is **3**, this parameter is required for international/Hong Kong, Macao, and Taiwan templates, with values:
- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional SMS.', example='0'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  moreDataFileUrlList?: {
    moreDataFileUrl?: [ string ](name='MoreDataFileUrl')
  }(name='MoreDataFileUrlList', description='Additional documentation information, supplementing uploaded business proof files or operational screenshots file list.'),
  orderId?: string(name='OrderId', description='Work order number.

This parameter is used by auditors when querying the audit. You need to provide this work order number when requesting expedited review.', example='2003019****'),
  relatedSignName?: string(name='RelatedSignName', description='The SMS signature associated with the template when applied.', example='阿里云'),
  remark?: string(name='Remark', description='Explanation for the SMS template application, which is one of the reference information for template review.', example='申请验证码模板'),
  requestId?: string(name='RequestId', description='The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and issue定位.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  templateCode?: string(name='TemplateCode', description='SMS template code.', example='SMS_20375****'),
  templateContent?: string(name='TemplateContent', description='Content of the SMS template.', example='您正在申请手机注册，验证码为：${code}，5分钟内有效！'),
  templateName?: string(name='TemplateName', description='Name of the SMS template.', example='验证码'),
  templateStatus?: string(name='TemplateStatus', description='Template review status. Return values:

- **0**: Under review.
- **1**: Approved.
- **2**: Not approved, with reasons for failure returned. Please refer to [Handling Suggestions for Failed SMS Reviews](https://help.aliyun.com/zh/sms/user-guide/causes-of-application-failures-and-suggestions?spm=a2c4g.11186623.0.0.41fd339f3bPSCQ), invoke the [UpdateSmsTemplate](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-updatesmstemplate?spm) API or modify the SMS template on the [Template Management](https://dysms.console.aliyun.com/domestic/text/template) page.
- **10**: Review canceled.', example='2'),
  templateTag?: int32(name='TemplateTag', description='Template identifier, indicating whether the template is user-defined or system-provided. Values:

- **2**: User-defined template.

- **3**: System-provided template.', example='2'),
  templateType?: string(name='TemplateType', description='SMS type. Values:

- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional SMS.
- **3**: International/Hong Kong, Macao, and Taiwan messages.

> Only enterprise-certified users can apply for promotional SMS and international/Hong Kong, Macao, and Taiwan messages. For details on the differences between personal and enterprise user rights, please refer to [Usage Notes](https://help.aliyun.com/zh/sms/user-guide/usage-notes?spm=a2c4g.11186623.0.0.67447f576NJnE8).', example='0'),
  variableAttribute?: string(name='VariableAttribute', description='Template variable rules.

For detailed rules of template variables, refer to the [Example Document](https://help.aliyun.com/zh/sms/templaterule-template-variable-parameter-filling-example).', example='{"code":"characterWithNumber"}'),
}

model GetSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetSmsTemplateResponseBody(name='body'),
}

/**
  * @description - For details about the announcement of changes to the new and original interfaces, see [Announcement on Updates to SMS Service Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - Review Time: Under normal circumstances, Alibaba Cloud expects to complete the review within 2 hours after template submission (review working hours: Monday to Sunday 9:00~21:00, with statutory holidays postponed). It is recommended to submit your application before 18:00.
  * - If the template fails the review, the reason for the failure will be returned. Please refer to [Handling Suggestions for Failed SMS Reviews](https://help.aliyun.com/zh/sms/user-guide/causes-of-application-failures-and-suggestions?spm=a2c4g.11186623.0.0.41fd339f3bPSCQ), invoke the [ModifySmsTemplate](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-modifysmstemplate?spm=a2c4g.11186623.0.0.5b1f6e8bQloFit) API or modify the SMS template on the [Template Management](https://dysms.console.aliyun.com/domestic/text/template) page.
  * - The current QuerySmsTemplate interface queries the audit details of a single template by template code. The [QuerySmsTemplateList](https://help.aliyun.com/zh/sms/developer-reference/api-dysmsapi-2017-05-25-querysmstemplatelist?spm=a2c4g.11186623.0.0.24086e8bO8cFn4) interface can query the template details of all templates under your current account.
  * @param request  the request parameters of GetSmsTemplate  GetSmsTemplateRequest
  * @return GetSmsTemplateResponse
 */
async function getSmsTemplate(request: GetSmsTemplateRequest): GetSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', description='The token used to query the next page.', example='23432453245', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='20', position='Query'),
  prodCode?: string(name='ProdCode', description='The name of the cloud service. Set the value to **dysms**.', example='dysms', position='Query'),
  regionId: string(name='RegionId', description='The region ID. Set the value to **cn-hangzhou**.

This parameter is required.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The code of the message template. Specify either the Tag or the ResourceId parameter.', example='SMS_23423423', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Set the value to TEMPLATE.

This parameter is required.', example='TEMPLATE', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag.', example='TestKey'),
      value?: string(name='Value', description='The value of the tag.', example='TestValue'),
    }
  ](name='Tag', description='The tag list. Specify either the Tag or the ResourceId parameter. You can specify a maximum of 20 tags.', position='Query'),
}

model ListTagResourcesResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  nextToken?: string(name='NextToken', description='The token used to query the next page.', example='"23432453245"'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  tagResources?: {
    tagResource?: [ 
    {
      resourceId?: string(name='ResourceId', description='The code of the message template.', example='SMS_23423****'),
      resourceType?: string(name='ResourceType', description='The type of resource.', example='ALIYUN::DYSMS::TEMPLATE'),
      tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
    }
  ](name='TagResource')
  }(name='TagResources', description='The list of tags.'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of ListTagResources  ListTagResourcesRequest
  * @return ListTagResourcesResponse
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagResources', 'POST', '/', 'json', false, 'json', request);
}

model ModifySmsSignRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  remark: string(name='Remark', description='The scenario description of your released services. Provide the information of your services, such as a website URL, a domain name with an ICP filing, an app download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.

> The description can be up to 200 characters in length.

This parameter is required.', example='This is the abbreviation of our company.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signFileList: [ 
    {
      fileContents: string(name='FileContents', description='The base64-encoded string of the signed files. The size of the image cannot exceed 2 MB.

In some scenarios, documents are required to prove your identity. For more information, see [Signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='R0lGODlhHAAmAKIHAKqqqsvLy0hISObm5vf394uLiwAA'),
      fileSuffix: string(name='FileSuffix', description='The format of the documents. You can upload multiple images. JPG, PNG, GIF, and JPEG are supported.

In some scenarios, documents are required to prove your identity. For more information, see [Signature specifications](https://help.aliyun.com/document_detail/108076.html).

> If the signature is used for other purposes or the signature source is an enterprise or public institution, you must upload some documents and an authorization letter. For more information, see [Documents](https://help.aliyun.com/document_detail/108076.html) and [Letter of authorization](https://help.aliyun.com/document_detail/56741.html).

This parameter is required.', example='jpg'),
    }
  ](name='SignFileList', description='The list of signature files.

This parameter is required.', position='Body'),
  signName: string(name='SignName', description='The signature.

This parameter is required.', example='Aliyun', position='Query'),
  signSource: int32(name='SignSource', description='The source of the signature. Valid values:

*   **0**: full name or abbreviation of an enterprise or institution.
*   **1**: full name or abbreviation of a website with Ministry of Industry and Information Technology (MIIT) filing.
*   **2**: full name or abbreviation of an app.
*   **3**: full name or abbreviation of a WeChat official account or applet.
*   **4**: full name or abbreviation of an e-commerce store.
*   **5**: full name or abbreviation of a trademark.

This parameter is required.', example='1', position='Query'),
  signType?: int32(name='SignType', description='The type of the signature. Valid values:

*   **0**: verification-code signature
*   **1**: general-purpose signature', example='1', position='Query'),
}

model ModifySmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
}

model ModifySmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySmsSignResponseBody(name='body'),
}

/**
  * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to modify an existing signature and submit the signature for approval. The signature must comply with the [signature specifications](https://help.aliyun.com/document_detail/108076.html).
  * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
  * ### QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * > 
  * *   Signatures pending approval cannot be modified.
  * *   You cannot modify a signature after it is approved. If you no longer need the signature, you can delete it.
  * *   If you are an individual user, you cannot apply for a new signature on the same day that your signature is rejected or deleted. We recommend that you modify the rejected signature and submit it again.
  * @param request  the request parameters of ModifySmsSign  ModifySmsSignRequest
  * @return ModifySmsSignResponse
 */
async function modifySmsSign(request: ModifySmsSignRequest): ModifySmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySmsSign', 'POST', '/', 'json', true, 'form', request);
}

model ModifySmsTemplateRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  remark: string(name='Remark', description='The description of the message template. It is one of the reference information for template review. The description cannot exceed 100 characters in length.

This parameter is required.', example='Modify the parameters of the template.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.

This parameter is required.', example='SMS_15255****', position='Query'),
  templateContent: string(name='TemplateContent', description='The content of the template. The content must be 1 to 500 characters in length.

> When you modify a template, design the template content based on the review comments.

This parameter is required.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!', position='Query'),
  templateName: string(name='TemplateName', description='The name of the template. The name must be 1 to 30 characters in length.

This parameter is required.', example='aliyun verification code', position='Query'),
  templateType: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: text message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland

This parameter is required.', example='1', position='Query'),
}

model ModifySmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_15255****'),
}

model ModifySmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySmsTemplateResponseBody(name='body'),
}

/**
  * @description After you apply for a message template, if the template fails to pass the review, you can call this operation to modify the template and submit the template again. You can call this operation to modify only a template for a specific message type.
  * The template content must comply with the [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).
  * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
  * ### QPS limit
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of ModifySmsTemplate  ModifySmsTemplateRequest
  * @return ModifySmsTemplateResponse
 */
async function modifySmsTemplate(request: ModifySmsTemplateRequest): ModifySmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model QueryCardSmsTemplateRequest {
  templateCode: string(name='TemplateCode', description='The code of the message template.

You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_4139', position='Query'),
}

model QueryCardSmsTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    templates?: [  map[string]any ](name='Templates', description='The array of objects.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryCardSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryCardSmsTemplateResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QueryCardSmsTemplate  QueryCardSmsTemplateRequest
  * @return QueryCardSmsTemplateResponse
 */
async function queryCardSmsTemplate(request: QueryCardSmsTemplateRequest): QueryCardSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryCardSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model QueryCardSmsTemplateReportRequest {
  endDate?: string(name='EndDate', description='The end of the time range to query. Specify the time in the yyyy-MM-dd HH:mm:ss format.', example='2020-10-11 00:00:01', position='Query'),
  startDate?: string(name='StartDate', description='The beginning of the time range to query. Specify the time in the yyyy-MM-dd HH:mm:ss format.', example='2020-10-10 00:00:01', position='Query'),
  templateCodes: [ string ](name='TemplateCodes', description='The array of message templates.

This parameter is required.', position='Query'),
}

model QueryCardSmsTemplateReportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    model?: [  map[string]any ](name='model', description='The details of the data returned.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryCardSmsTemplateReportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryCardSmsTemplateReportResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QueryCardSmsTemplateReport  QueryCardSmsTemplateReportRequest
  * @return QueryCardSmsTemplateReportResponse
 */
async function queryCardSmsTemplateReport(request: QueryCardSmsTemplateReportRequest): QueryCardSmsTemplateReportResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryCardSmsTemplateReport', 'POST', '/', 'json', false, 'json', request);
}

model QueryExtCodeSignRequest {
  extCode?: string(name='ExtCode', description='扩展码A3', example='01', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNo?: long(name='PageNo', example='1', position='Query'),
  pageSize?: long(name='PageSize', example='20', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName?: string(name='SignName', description='签名', example='示例值示例值', position='Query'),
}

model QueryExtCodeSignResponseBody = {
  accessDeniedDetail?: string(name='AccessDeniedDetail'),
  code?: string(name='Code', example='OK'),
  data?: {
    list?: [ 
      {
        active?: long(name='Active', description='是否可回收', example='1'),
        extCode?: string(name='ExtCode', description='扩展码A3', example='01'),
        sendCount?: long(name='SendCount', description='近1个月发送成功条数（只读）', example='69'),
        signName?: string(name='SignName', description='签名', example='示例值示例值'),
        source?: string(name='Source', description='来源', example='示例值示例值示例值'),
      }
    ](name='List'),
    pageNo?: long(name='PageNo', example='1'),
    pageSize?: long(name='PageSize', example='20'),
    total?: long(name='Total', example='5'),
  }(name='Data'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='90E63D28-E31D-1EB2-8939-A9486641****'),
  success?: boolean(name='Success', example='true'),
}

model QueryExtCodeSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryExtCodeSignResponseBody(name='body'),
}

/**
  * @param request  the request parameters of QueryExtCodeSign  QueryExtCodeSignRequest
  * @return QueryExtCodeSignResponse
 */
async function queryExtCodeSign(request: QueryExtCodeSignRequest): QueryExtCodeSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryExtCodeSign', 'POST', '/', 'json', false, 'json', request);
}

model QueryMobilesCardSupportRequest {
  mobiles: [  map[string]any ](name='Mobiles', description='The list of mobile phone numbers.

This parameter is required.', shrink='json', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_0000', position='Query'),
}

model QueryMobilesCardSupportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    queryResult?: [ 
      {
        mobile?: string(name='Mobile', description='The mobile phone number.', example='1380000****'),
        support?: boolean(name='Support', description='Indicates whether the mobile phone number supports card messages. Valid values:

*   **true**
*   **false**', example='true'),
      }
    ](name='QueryResult', description='The list of returned results.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='08C17DFE-2E10-54F4-BAFB-7180039CC217'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryMobilesCardSupportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryMobilesCardSupportResponseBody(name='body'),
}

/**
  * @param request  the request parameters of QueryMobilesCardSupport  QueryMobilesCardSupportRequest
  * @return QueryMobilesCardSupportResponse
 */
async function queryMobilesCardSupport(request: QueryMobilesCardSupportRequest): QueryMobilesCardSupportResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryMobilesCardSupport', 'POST', '/', 'json', false, 'json', request);
}

model QueryPageSmartShortUrlLogRequest {
  createDateEnd: long(name='CreateDateEnd', description='This parameter is required.', example='20181225', position='Query'),
  createDateStart: long(name='CreateDateStart', description='This parameter is required.', example='20181225', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNo: long(name='PageNo', description='This parameter is required.', example='1', position='Query'),
  pageSize: long(name='PageSize', description='This parameter is required.', example='10', position='Query'),
  phoneNumber?: string(name='PhoneNumber', example='1390000****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  shortUrl?: string(name='ShortUrl', example='http://ays.cn/****', position='Query'),
}

model QueryPageSmartShortUrlLogResponseBody = {
  code?: string(name='Code', example='示例值示例值'),
  message?: string(name='Message', example='示例值示例值'),
  model?: {
    list?: [ 
      {
        clickState?: long(name='ClickState', example='87'),
        clickTime?: long(name='ClickTime', example='51'),
        createTime?: long(name='CreateTime', example='64'),
        phoneNumber?: string(name='PhoneNumber', example='示例值示例值'),
        shortName?: string(name='ShortName', example='示例值示例值示例值'),
        shortUrl?: string(name='ShortUrl', example='示例值示例值示例值'),
      }
    ](name='List'),
    pageNo?: long(name='PageNo', example='74'),
    pageSize?: long(name='PageSize', example='15'),
    totalCount?: long(name='TotalCount', example='66'),
    totalPage?: long(name='TotalPage', example='86'),
  }(name='Model'),
  requestId?: string(name='RequestId', example='示例值示例值'),
  success?: boolean(name='Success', example='true'),
}

model QueryPageSmartShortUrlLogResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryPageSmartShortUrlLogResponseBody(name='body'),
}

/**
  * @param request  the request parameters of QueryPageSmartShortUrlLog  QueryPageSmartShortUrlLogRequest
  * @return QueryPageSmartShortUrlLogResponse
 */
async function queryPageSmartShortUrlLog(request: QueryPageSmartShortUrlLogRequest): QueryPageSmartShortUrlLogResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryPageSmartShortUrlLog', 'POST', '/', 'json', false, 'json', request);
}

model QuerySendDetailsRequest {
  bizId?: string(name='BizId', description='The ID of the delivery receipt. The delivery receipt ID is the value of the BizId parameter that is returned when you call the SendSms or SendBatchSms operation.', example='134523^435****', position='Query'),
  currentPage: long(name='CurrentPage', description='The page number of the first page.

This parameter is required.', example='1', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize: long(name='PageSize', description='The number of items displayed per page.

Valid values: 1 to 50.

This parameter is required.', example='10', position='Query'),
  phoneNumber: string(name='PhoneNumber', description='The mobile numbers of the recipients. Format:

*   If you send messages in the Chinese mainland, specify an 11-digit mobile number, for example, 1390000\\*\\*\\*\\*.
*   If you send messages to countries or regions outside the Chinese mainland, specify this parameter in the \\<Area code>\\<Mobile number> format. Example: 8520000\\*\\*\\*\\*.

This parameter is required.', example='1390000****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sendDate: string(name='SendDate', description='The date when the message was sent. You can query messages that were sent within the last 30 days.

Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20181228', position='Query'),
}

model QuerySendDetailsResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  smsSendDetailDTOs?: {
    smsSendDetailDTO?: [ 
    {
      content?: string(name='Content', description='The content of the message.', example='【Aliyun】This is a test message.'),
      errCode?: string(name='ErrCode', description='The status code returned by the carrier.

*   If the message is delivered, "DELIVERED" is returned.
*   For information about the error codes that may be returned if the message is not delivered, see [error codes](https://help.aliyun.com/document_detail/101347.html).', example='DELIVERED'),
      outId?: string(name='OutId', description='The extended field.', example='123'),
      phoneNum?: string(name='PhoneNum', description='The mobile numbers of the recipients.', example='1390000****'),
      receiveDate?: string(name='ReceiveDate', description='The date and time when the message was received.', example='2019-01-08 16:44:13'),
      sendDate?: string(name='SendDate', description='The date and time when the message was sent.', example='2019-01-08 16:44:10'),
      sendStatus?: long(name='SendStatus', description='The delivery status of the message. Valid values:

*   **1**: The message has not received a delivery receipt yet.
*   **2**: The message failed to be delivered.
*   **3**: The message was delivered.', example='3'),
      templateCode?: string(name='TemplateCode', description='The ID of the message template.', example='SMS_12231****'),
    }
  ](name='SmsSendDetailDTO')
  }(name='SmsSendDetailDTOs', description='The details of the message.'),
  totalCount?: string(name='TotalCount', description='The number of sent messages.', example='1'),
}

model QuerySendDetailsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySendDetailsResponseBody(name='body'),
}

/**
  * @param request  the request parameters of QuerySendDetails  QuerySendDetailsRequest
  * @return QuerySendDetailsResponse
 */
async function querySendDetails(request: QuerySendDetailsRequest): QuerySendDetailsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySendDetails', 'POST', '/', 'json', false, 'json', request);
}

model QuerySendStatisticsRequest {
  endDate: string(name='EndDate', description='The end of the time range to query. Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20201003', position='Query'),
  isGlobe: int32(name='IsGlobe', description='The site from where the message is sent. Valid values:

*   **1**: China site
*   **2**: international site

This parameter is required.', example='1', minLength=1, maxLength=2, minimum=1, maximum=2, position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageIndex: int32(name='PageIndex', description='The page number. Default value: **1**.

This parameter is required.', example='1', minLength=1, minimum=1, position='Query'),
  pageSize: int32(name='PageSize', description='The number of entries to return on each page. Valid values: **1 to 50**.

This parameter is required.', example='10', minLength=1, maxLength=50, minimum=1, maximum=50, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun', position='Query'),
  startDate: string(name='StartDate', description='The beginning of the time range to query. Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20201002', position='Query'),
  templateType?: int32(name='TemplateType', description='The type of the message template. Valid values: Valid values:

*   **0**: verification code
*   **1**: notification
*   **2**: promotional message (Enterprise users only)
*   **3**: international purpose (Enterprise users only)
*   **7**: digital message', example='0', position='Query'),
}

model QuerySendStatisticsResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    targetList?: [ 
      {
        noRespondedCount?: long(name='NoRespondedCount', description='The number of messages without a delivery receipt.', example='1'),
        respondedFailCount?: long(name='RespondedFailCount', description='The number of messages with a delivery receipt that indicates a failure.', example='2'),
        respondedSuccessCount?: long(name='RespondedSuccessCount', description='The number of messages with a delivery receipt that indicates a success.', example='17'),
        sendDate?: string(name='SendDate', description='The date when the message is sent. Format: yyyyMMdd. Example: 20181225.', example='20201010'),
        totalCount?: long(name='TotalCount', description='The number of delivered messages.', example='20'),
      }
    ](name='TargetList', description='The details of the data returned.'),
    totalSize?: long(name='TotalSize', description='The total number of entries returned.', example='20'),
  }(name='Data', description='The data returned.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
}

model QuerySendStatisticsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySendStatisticsResponseBody(name='body'),
}

/**
  * @description You can call the operation to query message delivery details, including the number of delivered messages, the number of messages with delivery receipts, and the time that a message is sent. If a large number of messages are sent on the specified date, you can specify the number of items displayed on each page and the number of pages to view the details by page.
  * ### QPS limits
  * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QuerySendStatistics  QuerySendStatisticsRequest
  * @return QuerySendStatisticsResponse
 */
async function querySendStatistics(request: QuerySendStatisticsRequest): QuerySendStatisticsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySendStatistics', 'POST', '/', 'json', false, 'json', request);
}

model QueryShortUrlRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  shortUrl: string(name='ShortUrl', description='The short URL. You can query the short URL by calling the [AddShortUrl](https://help.aliyun.com/document_detail/186774.html) operation.

This parameter is required.', example='http://****.cn/6y8uy7', position='Body'),
}

model QueryShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    createDate?: string(name='CreateDate', description='The time when the short URL was created.', example='2019-01-08 16:44:13'),
    expireDate?: string(name='ExpireDate', description='The time when the short URL expires.', example='2019-01-22 11:21:11'),
    pageViewCount?: string(name='PageViewCount', description='The PV.', example='300'),
    shortUrl?: string(name='ShortUrl', description='The short URL.', example='http://****.cn/6y8uy7'),
    shortUrlName?: string(name='ShortUrlName', description='The service name of the short URL.', example='The Alibaba Cloud Short Link service.'),
    shortUrlStatus?: string(name='ShortUrlStatus', description='The status of the short URL. Valid values:

*   **expired**
*   **effective**
*   **audit**
*   **reject**', example='expired'),
    sourceUrl?: string(name='SourceUrl', description='The source address.', example='https://www.****.com/product/sms'),
    uniqueVisitorCount?: string(name='UniqueVisitorCount', description='The UV.', example='23'),
  }(name='Data', description='The details of the short URL.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model QueryShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryShortUrlResponseBody(name='body'),
}

/**
  * @description ### QPS limits
  * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QueryShortUrl  QueryShortUrlRequest
  * @return QueryShortUrlResponse
 */
async function queryShortUrl(request: QueryShortUrlRequest): QueryShortUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryShortUrl', 'POST', '/', 'json', true, 'form', request);
}

model QuerySmsSignRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='The signature.

This parameter is required.', example='Aliyun', position='Query'),
}

model QuerySmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='The date and time when the signature was created.', example='2019-01-08 16:44:13'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  reason?: string(name='Reason', description='The remarks of the review. Valid values:

*   If the signature is in the **Approved** or **Pending Approval** state, No Remarks is returned.
*   If the signature is in the **Not Approved** state, the reason why the signature is rejected is returned.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
  signStatus?: int32(name='SignStatus', description='The status of the signature. Valid values:

*   **0**: The signature is pending approval.
*   **1**: The signature is approved.
*   **2**: The signature is rejected. The Reason parameter indicates the reason why the signature is rejected.
*   **10**: The signature is cancelled.', example='1'),
}

model QuerySmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsSignResponseBody(name='body'),
}

/**
  * @description After you apply for an SMS signature, you can query its status by using the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm) or calling the operation. If the signature is rejected, you can modify the signature based on the reason why it is rejected.
  * ### QPS limits
  * You can call this API operation up to 500 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QuerySmsSign  QuerySmsSignRequest
  * @return QuerySmsSignResponse
 */
async function querySmsSign(request: QuerySmsSignRequest): QuerySmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySmsSign', 'POST', '/', 'json', false, 'json', request);
}

model QuerySmsSignListRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  pageIndex?: int32(name='PageIndex', description='The page number. Default value: **1**.', example='1', minLength=1, minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of signatures per page. Valid values: **1 to 50**.', example='10', minimum=1, maximum=50, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model QuerySmsSignListResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  currentPage?: int32(name='CurrentPage', description='The page number. Default value: **1**.', example='1'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  pageSize?: int32(name='PageSize', description='The number of signatures per page. Valid values: **1 to 50**.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  smsSignList?: [ 
    {
      auditStatus?: string(name='AuditStatus', description='The approval status of the signature. Valid values:

*   **AUDIT_STATE_INIT**: The signature is pending approval.
*   **AUDIT_STATE_PASS**: The signature is approved.
*   **AUDIT_STATE_NOT_PASS**: The signature is rejected. You can view the reason in the Reason response parameter.
*   **AUDIT_STATE_CANCEL**: The approval is canceled.', example='AUDIT_STATE_NOT_PASS'),
      businessType?: string(name='BusinessType', description='The type of the signature scenario. The return value ends with "type". Valid values:

*   Verification code type
*   General-purpose type', example='Verification code type'),
      createDate?: string(name='CreateDate', description='The time when the signature was created. Format: yyyy-MM-dd HH:mm:ss.', example='2020-01-08 16:44:13'),
      orderId?: string(name='OrderId', description='The ticket ID.', example='236****5'),
      reason?: {
        rejectDate?: string(name='RejectDate', description='The time when the signature was rejected. Format: yyyy-MM-dd HH:mm:ss.', example='2020-01-08 19:02:13'),
        rejectInfo?: string(name='RejectInfo', description='The reason why the signature was rejected.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
        rejectSubInfo?: string(name='RejectSubInfo', description='The remarks about the rejection.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
      }(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the signature is rejected is returned.'),
      signName?: string(name='SignName', description='The name of the signature.', example='Aliyun'),
    }
  ](name='SmsSignList', description='The queried message signatures.'),
  totalCount?: long(name='TotalCount', description='The total number of signatures.', example='100'),
}

model QuerySmsSignListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsSignListResponseBody(name='body'),
}

/**
  * @description You can call this operation to query the details of message signatures, including the name, creation time, and approval status of each signature. If a message template is rejected, the reason is returned. Modify the message signature based on the reason.
  * ### QPS limit
  * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QuerySmsSignList  QuerySmsSignListRequest
  * @return QuerySmsSignListResponse
 */
async function querySmsSignList(request: QuerySmsSignListRequest): QuerySmsSignListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySmsSignList', 'POST', '/', 'json', false, 'json', request);
}

model QuerySmsTemplateRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.

This parameter is required.', example='SMS_1525***', position='Query'),
}

model QuerySmsTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='The time when the message template was created.', example='2019-06-04 11:42:17'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  reason?: string(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the message template is rejected is returned.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
  requestId?: string(name='RequestId', description='The request ID.', example='0A974B78-02BF-4C79-ADF3-90CFBA1B55B1'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_16703****'),
  templateContent?: string(name='TemplateContent', description='The content of the message template.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!'),
  templateName?: string(name='TemplateName', description='The name of the message template.', example='aliyun verification code'),
  templateStatus?: int32(name='TemplateStatus', description='The approval status of the message template. Valid values:

*   **0**: The message template is pending approval.
*   **1**: The message template is approved.
*   **AUDIT_STATE_NOT_PASS**: The message template is rejected. You can view the reason in the Reason response parameter.
*   **10**: The approval is canceled.', example='1'),
  templateType?: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: notification message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland', example='1'),
}

model QuerySmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsTemplateResponseBody(name='body'),
}

/**
  * @description After you create a message template, you can call this operation to query the approval status of the template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
  * ### QPS limit
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QuerySmsTemplate  QuerySmsTemplateRequest
  * @return QuerySmsTemplateResponse
 */
async function querySmsTemplate(request: QuerySmsTemplateRequest): QuerySmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

model QuerySmsTemplateListRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  pageIndex?: int32(name='PageIndex', description='The page number. Default value: **1**.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of templates per page. Valid values: **1 to 50**.', example='10', minimum=1, maximum=50, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model QuerySmsTemplateListResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  currentPage?: int32(name='CurrentPage', description='The page number. Default value: **1**.', example='1'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  pageSize?: int32(name='PageSize', description='The number of templates per page. Valid values: **1 to 50**.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  smsTemplateList?: [ 
    {
      auditStatus?: string(name='AuditStatus', description='The approval status of the message template. Valid values:

*   **AUDIT_STATE_INIT**: The message template is pending approval.
*   **AUDIT_STATE_PASS**: The message template is approved.
*   **AUDIT_STATE_NOT_PASS**: The message template is rejected. You can view the reason in the Reason response parameter.
*   **AUDIT_STATE_CANCEL** or **AUDIT_SATE_CANCEL**: The approval is canceled.', example='AUDIT_STATE_PASS'),
      createDate?: string(name='CreateDate', description='The time when the message template was created. The time is in the yyyy-MM-dd HH:mm:ss format.', example='2020-06-04 11:42:17'),
      orderId?: string(name='OrderId', description='The ticket ID.', example='2361****'),
      outerTemplateType?: int32(name='OuterTemplateType', description='The type of the message template. We recommend that you specify this parameter. Valid values:

*   **0**: verification code
*   **1**: notification message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland
*   **7**: digital message

> The template type is the same as the value of the TemplateType parameter in the AddSmsTemplate and ModifySmsTemplate operations.', example='0'),
      reason?: {
        rejectDate?: string(name='RejectDate', description='The time when the message template was rejected. Format: yyyy-MM-dd HH:mm:ss.', example='2020-06-04 16:01:17'),
        rejectInfo?: string(name='RejectInfo', description='The reason why the message template was rejected.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
        rejectSubInfo?: string(name='RejectSubInfo', description='The remarks about the rejection.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
      }(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the message template is rejected is returned.'),
      templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.', example='SMS_1525***'),
      templateContent?: string(name='TemplateContent', description='The content of the message template.', example='123456789'),
      templateName?: string(name='TemplateName', description='The name of the message template.', example='aliyun verification code'),
      templateType?: int32(name='TemplateType', description='The type of the message template. Valid values:

*   **0**: notification message
*   **1**: promotional message
*   **2**: verification code
*   **6**: message sent to countries or regions outside the Chinese mainland
*   **7**: digital message', example='7'),
    }
  ](name='SmsTemplateList', description='The queried message templates.'),
  totalCount?: long(name='TotalCount', description='The total number of templates.', example='100'),
}

model QuerySmsTemplateListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsTemplateListResponseBody(name='body'),
}

/**
  * @description You can call this operation to query the details of message templates, including the name, creation time, and approval status of each template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
  * ### QPS limit
  * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of QuerySmsTemplateList  QuerySmsTemplateListRequest
  * @return QuerySmsTemplateListResponse
 */
async function querySmsTemplateList(request: QuerySmsTemplateListRequest): QuerySmsTemplateListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySmsTemplateList', 'POST', '/', 'json', false, 'json', request);
}

model SendBatchCardSmsRequest {
  cardTemplateCode: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_3245', position='Query'),
  cardTemplateParamJson?: string(name='CardTemplateParamJson', description='The variables of the card message template.', example='[{\\"customurl\\":\\"http://www.alibaba.com\\",\\"dyncParams\\":\\"{\\\\\\"a\\\\\\":\\\\\\"hello\\\\\\",\\\\\\"b\\\\\\":\\\\\\"world\\\\\\"}\\"}]', position='Query'),
  digitalTemplateCode?: string(name='DigitalTemplateCode', description='The code of the digital message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='DIGITAL_SMS_234080176', position='Query'),
  digitalTemplateParamJson?: string(name='DigitalTemplateParamJson', description='The variables of the digital message template.', example='[{"a":1,"b":2},{"a":9,"b":8}]', position='Query'),
  fallbackType: string(name='FallbackType', description='The rollback type. Valid values:

*   **SMS**: text message
*   **DIGITALSMS**: digital message
*   **NONE**: none

This parameter is required.', example='SMS', position='Query'),
  outId?: string(name='OutId', description='The ID that is reserved for the caller of the operation.', example='16545681783595370', position='Query'),
  phoneNumberJson: string(name='PhoneNumberJson', description='The mobile numbers of the recipients.

This parameter is required.', example='[\\"1390000****\\",\\"1370000****\\"]"', position='Query'),
  signNameJson: string(name='SignNameJson', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.', example='[\\"aliyun\\",\\"aliyuncode\\"]', position='Query'),
  smsTemplateCode?: string(name='SmsTemplateCode', description='The code of the text message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='SMS_234251075', position='Query'),
  smsTemplateParamJson?: string(name='SmsTemplateParamJson', description='The variables of the text message template.', example='[{"a":1,"b":2},{"a":9,"b":8}]', position='Query'),
  smsUpExtendCodeJson?: string(name='SmsUpExtendCodeJson', description='The extension code of the upstream message.', example='[\\"6\\",\\"6\\"]', position='Query'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Alibaba Cloud console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the **template code** on the **Templates** tab.

> You must specify a message template that is created in the SMS console and approved by Alibaba Cloud. If you send messages to countries or regions outside the Chinese mainland, use the corresponding message templates.', example='SMS_20375****', position='Query'),
  templateParamJson?: string(name='TemplateParamJson', description='The value of the variable in the message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid. In addition, the sequence of variable values must be the same as that of the mobile numbers and signatures.', example='[{"name":"TemplateParamJson"},{"name":"TemplateParamJson"}]', position='Query'),
}

model SendBatchCardSmsResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    bizCardId?: string(name='BizCardId', description='The ID of the card message.', example='123'),
    bizDigitalId?: string(name='BizDigitalId', description='The ID of the digital message.', example='3214'),
    bizSmsId?: string(name='BizSmsId', description='The ID of the text message.', example='3256'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    mediaMobiles?: string(name='MediaMobiles', description='The mobile phone number from which the card message is sent.', example='1390000****'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone number whose card message is rolled back.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model SendBatchCardSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendBatchCardSmsResponseBody(name='body'),
}

/**
  * @description You can call the operation to send multiple card messages to a maximum of mobile phone numbers at a time. Different signatures and rollback settings can be specified for the mobile phone numbers.
  * ### QPS limit
  * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of SendBatchCardSms  SendBatchCardSmsRequest
  * @return SendBatchCardSmsResponse
 */
async function sendBatchCardSms(request: SendBatchCardSmsRequest): SendBatchCardSmsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendBatchCardSms', 'POST', '/', 'json', false, 'json', request);
}

model SendBatchSmsRequest {
  outId?: string(name='OutId', description='The extension field of the external record. The value is a string that contains no more than 256 characters.

> The parameter is optional.', example='abcdefg', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNumberJson: string(name='PhoneNumberJson', description='The mobile number of the recipient. Format:

*   Message delivery to the Chinese mainland: +/+86/0086/86 or an 11-digit mobile number without a prefix. Example: 1590000\\*\\*\\*\\*.
*   Message delivery to countries or regions outside the Chinese mainland: Dialing code + Mobile number. Example: 852000012\\*\\*\\*\\*.

> We recommend that you call the SendSms operation to send verification codes.

This parameter is required.', example='["1590000****","1350000****"]', position='Body'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signNameJson: string(name='SignNameJson', description='The signature.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the signature in the **Signature** column on the **Signatures** tab.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.', example='["Aliyun","Alibaba"]', position='Body'),
  smsUpExtendCodeJson?: string(name='SmsUpExtendCodeJson', description='The extension code of the MO message. Format: JSON array.

> The parameter is optional.', example='["90999","90998"]', position='Body'),
  templateCode: string(name='TemplateCode', description='The code of the message template.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the message template in the **Template Code** column on the **Message Templates** tab.

> The message templates must be created on the Go Globe page and approved.

This parameter is required.', example='SMS_15255****', position='Query'),
  templateParamJson?: string(name='TemplateParamJson', description='The value of the variable in the message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid. In addition, the sequence of variable values must be the same as that of the mobile numbers and signatures.', example='[{"name":"TemplateParamJson"},{"name":"TemplateParamJson"}]', position='Body'),
}

model SendBatchSmsResponseBody = {
  bizId?: string(name='BizId', description='The ID of the delivery receipt. You can use one of the following methods to query the delivery status of a message based on the ID.

*   Call the [QuerySendDetails](https://help.aliyun.com/document_detail/102352.html) operation.
*   Log on to the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview). In the left-side navigation pane, choose **Analytics** > **Delivery Report**.', example='9006197469364984400'),
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D230E'),
}

model SendBatchSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendBatchSmsResponseBody(name='body'),
}

/**
  * @description You can call the operation to send messages to a maximum of 100 recipients at a time.
  * @param request  the request parameters of SendBatchSms  SendBatchSmsRequest
  * @return SendBatchSmsResponse
 */
async function sendBatchSms(request: SendBatchSmsRequest): SendBatchSmsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendBatchSms', 'POST', '/', 'json', true, 'form', request);
}

model SendCardSmsRequest {
  cardObjects: [ 
    {
      customUrl?: string(name='customUrl', description='The URL to which the message is redirected if the message fails to be rendered.', example='https://alibaba.com'),
      dyncParams?: string(name='dyncParams', description='The variables. Special characters, such as $ and {}, do not need to be entered.', example='{\\"param3\\":\\"three\\",\\"param1\\":\\"one\\",\\"param2\\":\\"two\\"}'),
      mobile?: string(name='mobile', description='The mobile phone number.', example='1390000****'),
    }
  ](name='CardObjects', description='The objects of the message template.

This parameter is required.', position='Query'),
  cardTemplateCode: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_70', position='Query'),
  digitalTemplateCode?: string(name='DigitalTemplateCode', description='The code of the digital message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='SMS_003', position='Query'),
  digitalTemplateParam?: string(name='DigitalTemplateParam', description='The variables of the digital message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid.', example='{\\"msg\\",\\"xxxd\\"}', position='Query'),
  fallbackType: string(name='FallbackType', description='The rollback type. Valid values:

*   **SMS**: text message
*   **DIGITALSMS**: digital message
*   **NONE**: none

This parameter is required.', example='SMS', position='Query'),
  outId?: string(name='OutId', description='The ID that is reserved for the caller of the operation.', example='38d76c9b-4a9a-4c89-afae-61fd8e0e****', position='Query'),
  signName: string(name='SignName', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signature must be approved.

This parameter is required.', example='aliyun', position='Query'),
  smsTemplateCode?: string(name='SmsTemplateCode', description='The code of the text message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved. If you set the **FallbackType** parameter to **SMS**, this parameter is required.', example='SIER_TEST_01', position='Query'),
  smsTemplateParam?: string(name='SmsTemplateParam', description='The variables of the text message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid.', example='{\\"uri\\":\\"Zg11tZ\\"}', position='Query'),
  smsUpExtendCode?: string(name='SmsUpExtendCode', description='The extension code of the upstream message. Upstream messages are messages sent to the communication service provider. Upstream messages are used to customize a service, complete an inquiry, or send a request. You are charged for sending upstream messages based on the billing standards of the service provider.

> If you do not need upstream messages, ignore this parameter.', example='1', position='Query'),
  templateCode?: string(name='TemplateCode', description='The code of the text message template.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the message template in the **Template Code** column on the **Message Templates** tab.

> The message templates must be created on the Go Globe page and approved.', example='SMS_2322****', position='Query'),
  templateParam?: string(name='TemplateParam', description='The variables of the message template. Format: JSON.

> If you need to add line breaks to the JSON template, make sure that the format is valid.', example='{
      \\"code\\": \\"1111\\"
}', position='Query'),
}

model SendCardSmsResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    bizCardId?: string(name='BizCardId', description='The ID of the card message.', example='123'),
    bizDigitalId?: string(name='BizDigitalId', description='The ID of the digital message.', example='232'),
    bizSmsId?: string(name='BizSmsId', description='The ID of the text message.', example='524'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    mediaMobiles?: string(name='MediaMobiles', description='The mobile phone number from which the card message is sent.', example='1390000****'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone number whose card message is rolled back.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D28D0'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model SendCardSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendCardSmsResponseBody(name='body'),
}

/**
  * @description *   Make sure that the message template that you want to use has been approved. If the mobile phone number of a recipient does not support card messages, the SendCardSms operation allows the rollback feature to ensure successful delivery.
  * *   When you call the SendCardSms operation to send card messages, the operation checks whether the mobile phone numbers of the recipients support card messages. If the mobile phone numbers do not support card messages, you can specify whether to enable rollback. Otherwise, the card message cannot be delivered.
  * ### QPS limit
  * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of SendCardSms  SendCardSmsRequest
  * @return SendCardSmsResponse
 */
async function sendCardSms(request: SendCardSmsRequest): SendCardSmsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendCardSms', 'POST', '/', 'json', false, 'json', request);
}

model SendSmsRequest {
  outId?: string(name='OutId', description='The extension field.

> You can ignore this parameter if you do not have special requirements.', example='abcdefgh', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNumbers: string(name='PhoneNumbers', description='The mobile numbers of the recipients. Format:

*   If you send messages to the Chinese mainland, specify mobile numbers that are prefixed with +, +86, 0086, or 86, or 11-digit mobile numbers without prefixes. Example: 1390000\\*\\*\\*\\*.
*   If you send messages to countries or regions outside the Chinese mainland, specify this parameter in the \\<Area code>\\<Mobile number> format. Example: 852000012\\*\\*\\*\\*.

You can send messages to multiple mobile numbers, separate the mobile numbers with commas (,). You can specify up to 1,000 mobile numbers in each request. Compared with sending messages to a single mobile number, sending messages to multiple mobile numbers requires longer response time.

> We recommend that you send one verification code message to a mobile number in each request.

This parameter is required.', example='1390000****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='The signature.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the signature on the **Signatures** tab.

> You must specify a signature that is created in the SMS console and approved by Alibaba Cloud. For more information about SMS signature specifications, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='Aliyun', position='Query'),
  smsUpExtendCode?: string(name='SmsUpExtendCode', description='The extension code of the upstream message. Upstream messages are messages sent to the communication service provider. Upstream messages are used to customize a service, complete an inquiry, or send a request. You are charged for sending upstream messages based on the billing standards of the service provider.

> The extension code is automatically generated by the system when the signature is generated. You do not need to specify the extension code. You can ignore this parameter if you do not have special requirements.', example='90999', position='Query'),
  templateCode: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the **template code** on the **Templates** tab.

> You must specify a message template that is created in the SMS console and approved by Alibaba Cloud. If you send messages to countries or regions outside the Chinese mainland, use the corresponding message templates.

This parameter is required.', example='SMS_15305****', position='Query'),
  templateParam?: string(name='TemplateParam', description='The value of the variable in the message template. You can specify multiple parameter values. Example:{"name":"Sam","number":"1390000\\*\\*\\*\\*"}.

> 

*   If line breaks are required in JSON-formatted data, they must meet the relevant requirements that are specified in the standard JSON protocol.

*   For more information about template variables, see [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).', example='{"code":"1111"}', position='Query'),
}

model SendSmsResponseBody = {
  bizId?: string(name='BizId', description='The ID of the delivery receipt.

You can call the [QuerySendDetails](~~QuerySendDetails~~) operation to query the delivery status based on the receipt ID.', example='9006197469364984****'),
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
}

model SendSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendSmsResponseBody(name='body'),
}

/**
  * @description *   This operation is mainly used to send a single message. In special scenarios, you can send multiple messages with the same content to a maximum of 1,000 mobile numbers. Note that group sending may be delayed.
  * *   To send messages with different signatures and template content to multiple mobile numbers in a single request, call the [SendBatchSms](https://help.aliyun.com/document_detail/102364.html) operation.
  * *   You are charged for using Alibaba Cloud Short Message Service (SMS) based on the amount of messages sent. For more information, see [Pricing](https://www.aliyun.com/price/product#/sms/detail).
  * *   If your verification code signature and general-purpose signature have the same name, the system uses the general-purpose signature to send messages by default.
  * @param request  the request parameters of SendSms  SendSmsRequest
  * @return SendSmsResponse
 */
async function sendSms(request: SendSmsRequest): SendSmsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendSms', 'POST', '/', 'json', false, 'json', request);
}

model SmsConversionIntlRequest {
  conversionTime?: long(name='ConversionTime', description='The time when the OTP message was delivered. The value is a UNIX timestamp. Unit: milliseconds.

*   If you leave the parameter empty, the current timestamp is specified by default.
*   If you specify the parameter, the timestamp must be greater than the message sending time and less than the current timestamp.', example='1349055900000', position='Query'),
  delivered: boolean(name='Delivered', description='Specifies whether customers replied to the OTP message. Valid values: true and false.

This parameter is required.', example='true', position='Query'),
  messageId: string(name='MessageId', description='The ID of the message.

This parameter is required.', example='1008030300****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model SmsConversionIntlResponseBody = {
  code?: string(name='Code', description='The response code. If OK is returned, the request is successful. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html?spm=a2c4g.101345.0.0.74326ff2J5EZyt).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
}

model SmsConversionIntlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SmsConversionIntlResponseBody(name='body'),
}

/**
  * @description Metrics:
  * *   Requested OTP messages
  * *   Verified OTP messages
  * An OTP conversion rate is calculated based on the following formula: OTP conversion rate = Number of verified OTP messages/Number of requested OTP messages.
  * > If you call the SmsConversion operation to query OTP conversion rates, your business may be affected. We recommend that you perform the following operations: 1. Call the SmsConversion operation in an asynchronous manner by configuring queues or events. 2. Manually degrade your services or use a circuit breaker to automatically degrade services.
  * @param request  the request parameters of SmsConversionIntl  SmsConversionIntlRequest
  * @return SmsConversionIntlResponse
 */
async function smsConversionIntl(request: SmsConversionIntlRequest): SmsConversionIntlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SmsConversionIntl', 'POST', '/', 'json', false, 'json', request);
}

model TagResourcesRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  prodCode?: string(name='ProdCode', description='The name of the cloud service. Set the value to **dysms**.', example='dysms', position='Query'),
  regionId: string(name='RegionId', description='The region ID. Set the value to **cn-hangzhou**.

This parameter is required.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The code of the message template.', example='SMS_23423423', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Set the value to **TEMPLATE**.

This parameter is required.', example='TEMPLATE', position='Query'),
  tag: [ 
    {
      key?: string(name='Key', description='The array of tag keys. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The array of tag values. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tag.

This parameter is required.', position='Query'),
}

model TagResourcesResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: string(name='Data', description='Indicates whether tags were attached. Valid values:

*   **true**
*   **false**', example='true'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C****'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of TagResources  TagResourcesRequest
  * @return TagResourcesResponse
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TagResources', 'POST', '/', 'json', false, 'json', request);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to delete all tags from the message template. Valid values:

*   **true**
*   **false**', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prodCode?: string(name='ProdCode', description='The name of the cloud service. Set the value to **dysms**.', example='dysms', position='Query'),
  regionId: string(name='RegionId', description='The region. Set the value to cn-hangzhou.

This parameter is required.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The array of message template codes. You can specify 1 to 20 message templates.', example='SMS_23423423', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Set the value to TEMPLATE.

This parameter is required.', example='TEMPLATE', position='Query'),
  tagKey?: [ string ](name='TagKey', description='The array of tag keys. You can specify 1 to 20 tag keys.', example='TestKey', position='Query'),
}

model UntagResourcesResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: string(name='Data', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C****'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

/**
  * @description ### QPS limit
  * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * @param request  the request parameters of UntagResources  UntagResourcesRequest
  * @return UntagResourcesResponse
 */
async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UntagResources', 'POST', '/', 'json', false, 'json', request);
}

model UpdateExtCodeSignRequest {
  existExtCode: string(name='ExistExtCode', description='要修改的扩展码A3

This parameter is required.', example='01', position='Query'),
  newExtCode: string(name='NewExtCode', description='修改后的扩展码A3

This parameter is required.', example='02', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='签名

This parameter is required.', example='示例值示例值示例值', position='Query'),
}

model UpdateExtCodeSignResponseBody = {
  accessDeniedDetail?: string(name='AccessDeniedDetail'),
  code?: string(name='Code', example='OK'),
  data?: boolean(name='Data', example='false'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='90E63D28-E31D-1EB2-8939-A9486641****'),
  success?: boolean(name='Success', example='true'),
}

model UpdateExtCodeSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateExtCodeSignResponseBody(name='body'),
}

/**
  * @param request  the request parameters of UpdateExtCodeSign  UpdateExtCodeSignRequest
  * @return UpdateExtCodeSignResponse
 */
async function updateExtCodeSign(request: UpdateExtCodeSignRequest): UpdateExtCodeSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateExtCodeSign', 'POST', '/', 'json', false, 'json', request);
}

model UpdateSmsSignRequest {
  applySceneContent?: string(name='ApplySceneContent', description='Application scenarios, instructions as follows:
- For registered websites, please enter the domain name registered with MIIT, including HTTP or HTTPS.
- For launched apps, provide the display link from the app store with HTTP or HTTPS, ensuring the app is online.
- For public accounts or mini-programs, fill in the full name, ensuring they are online.
- For e-commerce platform store names (for enterprise users only), provide the display link with HTTP or HTTPS.', example='http://www.aliyun.com/', position='Query'),
  moreData?: [ string ](name='MoreData', description='Additional materials, such as uploading business proof documents or screenshots of business operations, to help reviewers understand your business details.', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  qualificationId: long(name='QualificationId', description='Approved or under-review qualification ID.

> - Before applying for an SMS signature, please first [apply for qualifications](https://help.aliyun.com/zh/sms/user-guide/new-qualification?spm=a2c4g.11186623.0.0.718d187bbkpMRK).
> - You can view the qualification ID on the [Qualification Management](https://dysms.console.aliyun.com/domestic/text/qualification) page.

This parameter is required.', example='8563**', position='Query'),
  remark?: string(name='Remark', description='Explanation of the SMS signature scenario, with a maximum length of 200 characters.

> The scenario explanation is one of the reference information for signature review. Please provide a detailed description of the usage scenarios of the launched business, along with verifiable information such as website links, registered domain addresses, app store download links, full names of public accounts or mini-programs, etc. For login scenarios, test account credentials are also required. A well-informed application explanation will enhance the efficiency of signature and template reviews. Refer to the **Application Scenarios** column in the [Signature Source](https://help.aliyun.com/zh/sms/user-guide/signature-specifications-1?spm=a2c4g.11186623.0.i2#section-xup-k46-yi4) table for filling in SMS scenarios.', example='登录场景申请验证码', maxLength=500, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  signName: string(name='SignName', description='Signature not yet approved.

This parameter is required.', example='阿里云验证码', position='Query'),
  signSource: int32(name='SignSource', description='Source of the signature. Values:

- **0**: Full name or abbreviation of enterprises and institutions.
- **1**: Full name or abbreviation of MIIT-registered websites.
- **2**: Full name or abbreviation of app applications.
- **3**: Full name or abbreviation of public accounts or mini-programs.
- **4**: Full name or abbreviation of e-commerce platform store names.
- **5**: Full name or abbreviation of trademarks.

This parameter is required.', example='1', position='Query'),
  signType?: int32(name='SignType', description='Signature type. It is recommended to use the default value.

- **0**: Verification code
- **1**: General (default)', example='1', position='Query'),
  thirdParty?: boolean(name='ThirdParty', description='Whether the signature is for self-use or others.

- false: Self-use
- true: Others
>Notice: When the signature is for self-use, select the self-use qualification ID; when it\\"s for others, choose the others\\" qualification ID.', example='false', position='Query'),
}

model UpdateSmsSignResponseBody = {
  code?: string(name='Code', description='Request status code.

* OK indicates a successful request.
* For other error codes, refer to [Error Code List](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  orderId?: string(name='OrderId', description='Work order number.

This parameter is used by auditors when querying audits. You need to provide this work order number for expedited review.', example='2004417****'),
  requestId?: string(name='RequestId', description='The ID of this call request, uniquely generated by Alibaba Cloud, which can be used for troubleshooting and issue localization.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  signName?: string(name='SignName', description='The modified signature name.', example='登录验证'),
}

model UpdateSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateSmsSignResponseBody(name='body'),
}

/**
  * @description - For details about the changes of this new interface and the original one, please refer to [Announcement on the Update of SMS Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - Only signatures that have not passed the review can be modified. Please refer to [Handling Suggestions for Failed SMS Reviews](https://help.aliyun.com/zh/sms/user-guide/causes-of-application-failures-and-suggestions?spm) and call this interface to modify and resubmit for review after modification.
  * - Signature information applied through the interface will be synchronized in the SMS service console. For operations related to signatures in the console, please see [SMS Signatures](https://help.aliyun.com/zh/sms/user-guide/create-signatures?spm).
  * @param request  the request parameters of UpdateSmsSign  UpdateSmsSignRequest
  * @return UpdateSmsSignResponse
 */
async function updateSmsSign(request: UpdateSmsSignRequest): UpdateSmsSignResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateSmsSign', 'POST', '/', 'json', false, 'json', request);
}

model UpdateSmsTemplateRequest {
  applySceneContent?: string(name='ApplySceneContent', description='Application scenarios, instructions as follows:
- For registered websites, please enter the MIIT-registered domain with HTTP or HTTPS.
- For launched apps, provide the app store display link with HTTP or HTTPS, ensuring the app is online.
- For public accounts or mini-programs, enter the full name of the public account or mini-program, ensuring they are online.
- For e-commerce platform stores, applicable only to enterprise users, enter the display link of the e-commerce store with HTTP or HTTPS.', example='http://www.aliyun.com/', position='Query'),
  intlType?: int32(name='IntlType', description='International/Hong Kong, Macao, and Taiwan template type. When the **TemplateType** parameter is **3**, this parameter is required for international/Hong Kong, Macao, and Taiwan templates, with values:
- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional SMS.', example='0', position='Query'),
  moreData?: [ string ](name='MoreData', description='Additional information, such as uploading business proof documents or screenshots, to help reviewers understand your business details. Optional and can be left unset.', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  relatedSignName?: string(name='RelatedSignName', description='SMS signature associated with the template during the application.', example='阿里云', position='Query'),
  remark?: string(name='Remark', description='Explanation for the SMS template application, which serves as a reference for template review.', example='登录场景使用验证码', maxLength=500, position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateCode: string(name='TemplateCode', description='Template Code of an unapproved template.

This parameter is required.', example='SMS_152550****', position='Query'),
  templateContent: string(name='TemplateContent', description='Template content, up to 500 characters in length.

Both the template content and variable content must comply with SMS regulations; otherwise, the template will fail the review. You can also view common template examples on the template application page. Using sample templates can enhance review efficiency and success rates. Variable specifications can be found in [TemplateContent Parameter Variable Specifications](https://help.aliyun.com/zh/sms/templaterule-template-variable-parameter-filling-example?spm).

This parameter is required.', example='您正在申请手机注册，验证码为：${code}，5分钟内有效！', maxLength=500, position='Query'),
  templateName: string(name='TemplateName', description='Template name, up to 30 characters in length.

This parameter is required.', example='验证码', maxLength=30, position='Query'),
  templateRule?: string(name='TemplateRule', description='Template variable rules.

For guidance on filling variable rules, refer to the [Sample Documentation](https://help.aliyun.com/zh/sms/templaterule-template-variable-parameter-filling-example?spm).', example='{"code":"characterWithNumber"}', position='Query'),
  templateType: int32(name='TemplateType', description='SMS type. Values:

- **0**: Verification code.
- **1**: SMS notification.
- **2**: Promotional SMS.
- **3**: International/Hong Kong, Macao, and Taiwan messages.

> Only enterprise-certified users can apply for promotional SMS and international/Hong Kong, Macao, and Taiwan messages. Details on differences between personal and enterprise user rights are available in [Usage Guidelines](https://help.aliyun.com/zh/sms/user-guide/usage-notes?spm=a2c4g.11186623.0.0.67447f576NJnE8).

This parameter is required.', example='0', position='Query'),
}

model UpdateSmsTemplateResponseBody = {
  code?: string(name='Code', description='Request status code.

* OK indicates a successful request.
* For other error codes, refer to the **Error Codes** section of this chapter or the product\\"s [API Error Codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='Description of the status code.', example='OK'),
  orderId?: string(name='OrderId', description='Work order number.

This parameter is used by auditors when querying audits. You need to provide this work order number when requesting expedited review.', example='20041271****'),
  requestId?: string(name='RequestId', description='The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used to troubleshoot and locate issues.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  templateCode?: string(name='TemplateCode', description='Code of the SMS template.', example='SMS_152550****'),
  templateName?: string(name='TemplateName', description='Name of the SMS template.', example='验证码'),
}

model UpdateSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateSmsTemplateResponseBody(name='body'),
}

/**
  * @description - For details about the changes of this new interface compared to the original one, please refer to [Announcement on SMS Service Update: Signature & Template Interfaces](https://help.aliyun.com/zh/sms/product-overview/announcement-on-sms-service-update-signature-template-interface).
  * - Only templates that have not passed the review can be modified. Please refer to [Handling Suggestions for Failed SMS Template Reviews](https://help.aliyun.com/zh/sms/user-guide/causes-of-application-failures-and-suggestions?spm=a2c4g.11186623.0.0.4bf5561ajcFtMQ) and call this interface to modify and resubmit for review.
  * - Modifications made through the interface will be synchronized in the SMS service console. For related operations on templates in the console, see [SMS Templates](https://help.aliyun.com/zh/sms/user-guide/message-templates/?spm=a2c4g.11186623.0.0.35a947464Itaxp).
  * ### QPS Limit
  * The single-user QPS limit for this interface is 1000 times/second. Exceeding this limit will result in API throttling, which may impact your business. Please make calls reasonably.
  * @param request  the request parameters of UpdateSmsTemplate  UpdateSmsTemplateRequest
  * @return UpdateSmsTemplateResponse
 */
async function updateSmsTemplate(request: UpdateSmsTemplateRequest): UpdateSmsTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateSmsTemplate', 'POST', '/', 'json', false, 'json', request);
}

