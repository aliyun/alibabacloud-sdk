/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'central';
  @endpointMap = {
    ap-southeast-1 = 'dysmsapi.ap-southeast-1.aliyuncs.com',
    ap-southeast-5 = 'dysmsapi.ap-southeast-5.aliyuncs.com',
    cn-beijing = 'dysmsapi-proxy.cn-beijing.aliyuncs.com',
    cn-hongkong = 'dysmsapi-xman.cn-hongkong.aliyuncs.com',
    eu-central-1 = 'dysmsapi.eu-central-1.aliyuncs.com',
    us-east-1 = 'dysmsapi.us-east-1.aliyuncs.com',
  };

  checkConfig(config);
  @endpoint = getEndpoint('dysmsapi', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model AddShortUrlRequest {
  effectiveDays?: string(name='EffectiveDays', description='The validity period of the short URL. Unit: days. The maximum validity period is 90 days.

This parameter is required.', example='7'),
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  shortUrlName?: string(name='ShortUrlName', description='The service name of the short URL. The name cannot exceed 13 characters in length.

This parameter is required.', example='The Alibaba Cloud Short Link service.'),
  sourceUrl?: string(name='SourceUrl', description='The source URL. The URL cannot exceed 1,000 characters in length.

This parameter is required.', example='https://www.****.com/product/sms'),
}

model AddShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    expireDate?: string(name='ExpireDate', description='The time when the short URL expires.

> The value of **ExpireDate** is on the hour.', example='2021-09-19 00:00:00'),
    shortUrl?: string(name='ShortUrl', description='The short URL.', example='http://****.cn/6y8uy7'),
    sourceUrl?: string(name='SourceUrl', description='The source URL.', example='https://www.****.com/product/sms'),
  }(name='Data', description='The details of the short URL.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model AddShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddShortUrlResponseBody(name='body'),
}

/**
 * @summary Creates a short URL.
 *
 * @description *   Before you call this operation, you must register the primary domain name of the source URL in the Short Message Service (SMS) console. After the domain name is registered, you can call this operation to create a short URL. For more information, see [Domain name registration](https://help.aliyun.com/document_detail/302325.html#title-mau-zdh-hd0).
 * *   You can create up to 3,000 short URLs within a natural day.
 * *   After a short URL is generated, a security review is required. Generally, the review takes 10 minutes to 2 hours to complete. Before the security review is passed, the short URL cannot be directly accessed.
 *
 * @param request AddShortUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return AddShortUrlResponse
 */
async function addShortUrlWithOptions(request: AddShortUrlRequest, runtime: Util.RuntimeOptions): AddShortUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.effectiveDays)) {
    body['EffectiveDays'] = request.effectiveDays;
  }
  if (!Util.isUnset(request.shortUrlName)) {
    body['ShortUrlName'] = request.shortUrlName;
  }
  if (!Util.isUnset(request.sourceUrl)) {
    body['SourceUrl'] = request.sourceUrl;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'AddShortUrl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a short URL.
 *
 * @description *   Before you call this operation, you must register the primary domain name of the source URL in the Short Message Service (SMS) console. After the domain name is registered, you can call this operation to create a short URL. For more information, see [Domain name registration](https://help.aliyun.com/document_detail/302325.html#title-mau-zdh-hd0).
 * *   You can create up to 3,000 short URLs within a natural day.
 * *   After a short URL is generated, a security review is required. Generally, the review takes 10 minutes to 2 hours to complete. Before the security review is passed, the short URL cannot be directly accessed.
 *
 * @param request AddShortUrlRequest
 * @return AddShortUrlResponse
 */
async function addShortUrl(request: AddShortUrlRequest): AddShortUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return addShortUrlWithOptions(request, runtime);
}

model AddSmsSignRequest {
  ownerId?: long(name='OwnerId'),
  remark?: string(name='Remark', description='The description of the signature application. The description cannot exceed 200 characters in length. The description is one of the reference information for signature review. We recommend that you describe the use scenarios of your services in detail, and provide information that can verify the services, such as a website URL, a domain name with an ICP filing, an app download URL, an official account name, or a mini program name. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.

This parameter is required.', example='This is the abbreviation of our company.'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signFileList?: [ 
    {
      fileContents?: string(name='FileContents', description='The Base64-encoded string of the qualification document. An image cannot exceed 2 MB in size. In some scenarios, you must upload supporting documents to apply for signatures. For more information, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='R0lGODlhHAAmAKIHAKqqqsvLy0hISObm5vf394uL****'),
      fileSuffix?: string(name='FileSuffix', description='The format of the qualification document. You can upload multiple images. Images in JPG, PNG, GIF, or JPEG format are supported.

In some scenarios, you must upload supporting documents to apply for signatures. For more information, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

> If you apply for a signature for other users or if the signature source is the name of an enterprise or public institution, you must upload a certificate and a letter of authorization. For more information, see [Certificate](https://help.aliyun.com/document_detail/108076.html) and [Letter of authorization](https://help.aliyun.com/document_detail/56741.html).

This parameter is required.', example='jpg'),
    }
  ](name='SignFileList', description='The signature files.

This parameter is required.'),
  signName?: string(name='SignName', description='The name of the signature.

> 

*   The signature name is not case-sensitive. For example, [Alibaba Cloud Communication] and [alibaba cloud communication] are considered as the same name.

*   If your verification code signature and general-purpose signature have the same name, the system uses the general-purpose signature to send messages by default.

This parameter is required.', example='Aliyun'),
  signSource?: int32(name='SignSource', description='The source of the signature. Valid values:

*   **0**: the full name or abbreviation of an enterprise or institution
*   **1**: the full name or abbreviation of a website that has obtained an ICP filing from the Ministry of Industry and Information Technology (MIIT) of China
*   **2**: the full name or abbreviation of an app
*   **3**: the full name or abbreviation of an official account or mini-program
*   **4**: the full name or abbreviation of an e-commerce store
*   **5**: the full name or abbreviation of a trademark

This parameter is required.', example='1'),
  signType?: int32(name='SignType', description='The type of the signature. Valid values:

*   **0**: verification code
*   **1**: general-purpose', example='1'),
}

model AddSmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signName?: string(name='SignName', description='The name of the signature.', example='Aliyun'),
}

model AddSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddSmsSignResponseBody(name='body'),
}

/**
 * @summary Creates a signature.
 *
 * @description You can call the AddSmsSign operation or use the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm#/overview) to create an SMS signature. The signature must comply with the [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html). You can call the QuerySmsSign operation or use the SMS console to query the review status of the signature.
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limit
 * You can call this operation only once per second. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 * > 
 * *   You cannot cancel the review of a signature.
 * *   Individual users can create only one verification code signature, and can create only one general-purpose signature within a natural day. If you need to apply for multiple signatures, we recommend that you upgrade your account to an enterprise user.
 * *   If you need to use the same signature for messages sent to recipients both in and outside the Chinese mainland, the signature must be a general-purpose signature.
 * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
 * *   An SMS signature must undergo a thorough review process before it can be approved for use.
 *
 * @param request AddSmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return AddSmsSignResponse
 */
async function addSmsSignWithOptions(request: AddSmsSignRequest, runtime: Util.RuntimeOptions): AddSmsSignResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.signSource)) {
    query['SignSource'] = request.signSource;
  }
  if (!Util.isUnset(request.signType)) {
    query['SignType'] = request.signType;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.signFileList)) {
    body['SignFileList'] = request.signFileList;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'AddSmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a signature.
 *
 * @description You can call the AddSmsSign operation or use the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm#/overview) to create an SMS signature. The signature must comply with the [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html). You can call the QuerySmsSign operation or use the SMS console to query the review status of the signature.
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limit
 * You can call this operation only once per second. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 * > 
 * *   You cannot cancel the review of a signature.
 * *   Individual users can create only one verification code signature, and can create only one general-purpose signature within a natural day. If you need to apply for multiple signatures, we recommend that you upgrade your account to an enterprise user.
 * *   If you need to use the same signature for messages sent to recipients both in and outside the Chinese mainland, the signature must be a general-purpose signature.
 * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
 * *   An SMS signature must undergo a thorough review process before it can be approved for use.
 *
 * @param request AddSmsSignRequest
 * @return AddSmsSignResponse
 */
async function addSmsSign(request: AddSmsSignRequest): AddSmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return addSmsSignWithOptions(request, runtime);
}

model AddSmsTemplateRequest {
  ownerId?: long(name='OwnerId'),
  remark?: string(name='Remark', description='The description of the message template. It is one of the reference information for template review. The description cannot exceed 100 characters in length.

This parameter is required.', example='Apply for a template to send verification codes.'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateContent?: string(name='TemplateContent', description='The content of the template. The content can be up to 500 characters in length. For more information, see [Message template specifications](https://help.aliyun.com/document_detail/108253.html).

This parameter is required.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!'),
  templateName?: string(name='TemplateName', description='The name of the template. The name can be up to 30 characters in length.

This parameter is required.', example='Aliyun Test'),
  templateType?: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: notification
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland

> Only enterprise users can send promotional messages, or send messages to countries or regions outside the Chinese mainland.

This parameter is required.', example='1'),
}

model AddSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_15255****'),
}

model AddSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddSmsTemplateResponseBody(name='body'),
}

/**
 * @summary Creates a message template.
 *
 * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to apply for a message template. The template must comply with the [message template specifications](https://help.aliyun.com/document_detail/108253.html). You can call the [QuerySmsTemplate](https://help.aliyun.com/document_detail/419289.html) operation or use the Alibaba Cloud SMS console to check whether the message template is approved.
 * > 
 * *   Message templates pending approval can be withdrawn. You can withdraw a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   If you call the AddSmsTemplate operation, you can apply for a maximum of 100 message templates in a calendar day. After you apply for a message template, we recommend that you wait for at least 30 seconds before you apply for another one. If you use the Alibaba Cloud SMS console, you can apply for an unlimited number of message templates.
 * *   Messages sent to the Chinese mainland and messages sent to countries or regions outside the Chinese mainland use separate message templates. Create message templates based on your needs.
 * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
 * *   A signature must undergo a thorough review process before it can be approved for use. For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request AddSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return AddSmsTemplateResponse
 */
async function addSmsTemplateWithOptions(request: AddSmsTemplateRequest, runtime: Util.RuntimeOptions): AddSmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateContent)) {
    query['TemplateContent'] = request.templateContent;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'AddSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a message template.
 *
 * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to apply for a message template. The template must comply with the [message template specifications](https://help.aliyun.com/document_detail/108253.html). You can call the [QuerySmsTemplate](https://help.aliyun.com/document_detail/419289.html) operation or use the Alibaba Cloud SMS console to check whether the message template is approved.
 * > 
 * *   Message templates pending approval can be withdrawn. You can withdraw a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   If you call the AddSmsTemplate operation, you can apply for a maximum of 100 message templates in a calendar day. After you apply for a message template, we recommend that you wait for at least 30 seconds before you apply for another one. If you use the Alibaba Cloud SMS console, you can apply for an unlimited number of message templates.
 * *   Messages sent to the Chinese mainland and messages sent to countries or regions outside the Chinese mainland use separate message templates. Create message templates based on your needs.
 * *   If you apply for a signature or message template, you must specify the signature scenario or template type. You must also provide the information of your services, such as a website URL, a domain name with an ICP filing, an application download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.
 * *   A signature must undergo a thorough review process before it can be approved for use. For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request AddSmsTemplateRequest
 * @return AddSmsTemplateResponse
 */
async function addSmsTemplate(request: AddSmsTemplateRequest): AddSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return addSmsTemplateWithOptions(request, runtime);
}

model CheckMobilesCardSupportRequest {
  mobiles?: [  map[string]any ](name='Mobiles', description='The list of mobile phone numbers that receive messages.

This parameter is required.'),
  templateCode?: string(name='TemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_****'),
}

model CheckMobilesCardSupportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    queryResult?: [ 
      {
        mobile?: string(name='mobile', description='The mobile phone number.', example='1390000****'),
        support?: boolean(name='support', description='Indicates whether the mobile phone number supports card messages.

*   **true**
*   **false**', example='true'),
      }
    ](name='queryResult', description='The list of returned results.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model CheckMobilesCardSupportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CheckMobilesCardSupportResponseBody(name='body'),
}

/**
 * @summary Checks whether a mobile phone number can receive card messages.
 *
 * @description ### QPS limit
 * You can call this operation up to 2,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request CheckMobilesCardSupportRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CheckMobilesCardSupportResponse
 */
async function checkMobilesCardSupportWithOptions(request: CheckMobilesCardSupportRequest, runtime: Util.RuntimeOptions): CheckMobilesCardSupportResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.mobiles)) {
    query['Mobiles'] = request.mobiles;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CheckMobilesCardSupport',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Checks whether a mobile phone number can receive card messages.
 *
 * @description ### QPS limit
 * You can call this operation up to 2,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request CheckMobilesCardSupportRequest
 * @return CheckMobilesCardSupportResponse
 */
async function checkMobilesCardSupport(request: CheckMobilesCardSupportRequest): CheckMobilesCardSupportResponse {
  var runtime = new Util.RuntimeOptions{};
  return checkMobilesCardSupportWithOptions(request, runtime);
}

model ConversionDataIntlRequest {
  conversionRate?: string(name='ConversionRate', description='The conversion rate.

> The value of this parameter is a double, and ranges from 0 to 1.

This parameter is required.', example='0.53'),
  ownerId?: long(name='OwnerId'),
  reportTime?: long(name='ReportTime', description='The time point at which the conversion rate is monitored. The value is a UNIX timestamp. Unit: milliseconds.

> If you do not specify this parameter, the current timestamp is used by default.', example='1349055900000'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model ConversionDataIntlResponseBody = {
  code?: string(name='Code', description='The status code. If OK is returned, the request is successful. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html?spm=a2c4g.101345.0.0.74326ff2J5EZyt).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
}

model ConversionDataIntlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ConversionDataIntlResponseBody(name='body'),
}

/**
 * @summary Sends conversion rate information to Alibaba Cloud SMS.
 *
 * @param request ConversionDataIntlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ConversionDataIntlResponse
 */
async function conversionDataIntlWithOptions(request: ConversionDataIntlRequest, runtime: Util.RuntimeOptions): ConversionDataIntlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.conversionRate)) {
    query['ConversionRate'] = request.conversionRate;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.reportTime)) {
    query['ReportTime'] = request.reportTime;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ConversionDataIntl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Sends conversion rate information to Alibaba Cloud SMS.
 *
 * @param request ConversionDataIntlRequest
 * @return ConversionDataIntlResponse
 */
async function conversionDataIntl(request: ConversionDataIntlRequest): ConversionDataIntlResponse {
  var runtime = new Util.RuntimeOptions{};
  return conversionDataIntlWithOptions(request, runtime);
}

model CreateCardSmsTemplateRequest {
  factorys?: string(name='Factorys', description='The mobile phone manufacturer. Valid values:

*   **HuaWei**: HUAWEI
*   **XiaoMi**: Xiaomi
*   **OPPO**: OPPO
*   **VIVO**: vivo
*   **MEIZU**: MEIZU

> If this parameter is not specified, the system automatically specifies a supported mobile phone manufacturer.', example='XiaoMi'),
  memo?: string(name='Memo', description='The description of the message template.'),
  template?: map[string]any(name='Template', description='The content of the card message template.

> 

*   For information about fields such as Template, ExtendInfo, TemplateContent, TmpCard, and Action, see [Parameters of card message templates](https://help.aliyun.com/document_detail/434929.html).

*   Message template content varies based on the template type. For more information, see [Sample message templates](https://help.aliyun.com/document_detail/435361.html).

This parameter is required.'),
  templateName?: string(name='TemplateName', description='The name of the card message template.

This parameter is required.'),
}

model CreateCardSmsTemplateShrinkRequest {
  factorys?: string(name='Factorys', description='The mobile phone manufacturer. Valid values:

*   **HuaWei**: HUAWEI
*   **XiaoMi**: Xiaomi
*   **OPPO**: OPPO
*   **VIVO**: vivo
*   **MEIZU**: MEIZU

> If this parameter is not specified, the system automatically specifies a supported mobile phone manufacturer.', example='XiaoMi'),
  memo?: string(name='Memo', description='The description of the message template.'),
  templateShrink?: string(name='Template', description='The content of the card message template.

> 

*   For information about fields such as Template, ExtendInfo, TemplateContent, TmpCard, and Action, see [Parameters of card message templates](https://help.aliyun.com/document_detail/434929.html).

*   Message template content varies based on the template type. For more information, see [Sample message templates](https://help.aliyun.com/document_detail/435361.html).

This parameter is required.'),
  templateName?: string(name='TemplateName', description='The name of the card message template.

This parameter is required.'),
}

model CreateCardSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    templateCode?: string(name='TemplateCode', description='The code of the message template.

You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview).

> Make sure that the message template has been approved.', example='CARD_SMS_60000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model CreateCardSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateCardSmsTemplateResponseBody(name='body'),
}

/**
 * @summary Creates a card message template.
 *
 * @description *   The CreateCardSmsTemplate operation saves the card message template information, submits it to the mobile phone manufacturer for approval, and returns the message template ID.
 * *   If the type of the message template is not supported or events that are not supported by the mobile phone manufacturer are specified, the template is not submitted. For more information, see [Supported message templates](https://help.aliyun.com/document_detail/434611.html).
 * *   For information about sample card message templates, see [Sample card message templates](https://help.aliyun.com/document_detail/435361.html).
 * ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param tmpReq CreateCardSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateCardSmsTemplateResponse
 */
async function createCardSmsTemplateWithOptions(tmpReq: CreateCardSmsTemplateRequest, runtime: Util.RuntimeOptions): CreateCardSmsTemplateResponse {
  Util.validateModel(tmpReq);
  var request = new CreateCardSmsTemplateShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.template)) {
    request.templateShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.template, 'Template', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.factorys)) {
    query['Factorys'] = request.factorys;
  }
  if (!Util.isUnset(request.memo)) {
    query['Memo'] = request.memo;
  }
  if (!Util.isUnset(request.templateShrink)) {
    query['Template'] = request.templateShrink;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateCardSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a card message template.
 *
 * @description *   The CreateCardSmsTemplate operation saves the card message template information, submits it to the mobile phone manufacturer for approval, and returns the message template ID.
 * *   If the type of the message template is not supported or events that are not supported by the mobile phone manufacturer are specified, the template is not submitted. For more information, see [Supported message templates](https://help.aliyun.com/document_detail/434611.html).
 * *   For information about sample card message templates, see [Sample card message templates](https://help.aliyun.com/document_detail/435361.html).
 * ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request CreateCardSmsTemplateRequest
 * @return CreateCardSmsTemplateResponse
 */
async function createCardSmsTemplate(request: CreateCardSmsTemplateRequest): CreateCardSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return createCardSmsTemplateWithOptions(request, runtime);
}

model CreateSmartShortUrlRequest {
  outId?: string(name='OutId', example='示例值示例值'),
  ownerId?: long(name='OwnerId'),
  phoneNumbers?: string(name='PhoneNumbers', description='This parameter is required.', example='15900195***'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  sourceUrl?: string(name='SourceUrl', description='This parameter is required.', example='示例值'),
}

model CreateSmartShortUrlResponseBody = {
  code?: string(name='Code', example='示例值示例值示例值'),
  message?: string(name='Message', example='示例值示例值示例值'),
  model?: [ 
    {
      domain?: string(name='Domain', example='示例值'),
      expiration?: long(name='Expiration', example='11'),
      phoneNumber?: string(name='PhoneNumber', example='示例值'),
      shortName?: string(name='ShortName', example='示例值'),
      shortUrl?: string(name='ShortUrl', example='示例值示例值'),
    }
  ](name='Model'),
  requestId?: string(name='RequestId', example='示例值示例值'),
}

model CreateSmartShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmartShortUrlResponseBody(name='body'),
}

/**
 * @summary 创建短链
 *
 * @param request CreateSmartShortUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateSmartShortUrlResponse
 */
async function createSmartShortUrlWithOptions(request: CreateSmartShortUrlRequest, runtime: Util.RuntimeOptions): CreateSmartShortUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.phoneNumbers)) {
    query['PhoneNumbers'] = request.phoneNumbers;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.sourceUrl)) {
    query['SourceUrl'] = request.sourceUrl;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateSmartShortUrl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 创建短链
 *
 * @param request CreateSmartShortUrlRequest
 * @return CreateSmartShortUrlResponse
 */
async function createSmartShortUrl(request: CreateSmartShortUrlRequest): CreateSmartShortUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return createSmartShortUrlWithOptions(request, runtime);
}

model CreateSmsSignRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  moreData?: [ string ](name='MoreData'),
  ownerId?: long(name='OwnerId'),
  qualificationId?: long(name='QualificationId', description='This parameter is required.', example='2004393xxxx'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='This parameter is required.'),
  signSource?: int32(name='SignSource', description='This parameter is required.', example='1'),
  signType?: int32(name='SignType', example='1'),
  thirdParty?: boolean(name='ThirdParty', example='false'),
}

model CreateSmsSignShrinkRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  moreDataShrink?: string(name='MoreData'),
  ownerId?: long(name='OwnerId'),
  qualificationId?: long(name='QualificationId', description='This parameter is required.', example='2004393xxxx'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='This parameter is required.'),
  signSource?: int32(name='SignSource', description='This parameter is required.', example='1'),
  signType?: int32(name='SignType', example='1'),
  thirdParty?: boolean(name='ThirdParty', example='false'),
}

model CreateSmsSignResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  orderId?: string(name='OrderId', example='20044156924'),
  requestId?: string(name='RequestId', example='CCA2BCFF-2BA7-427C-90EE-AC6994748607'),
  signName?: string(name='SignName'),
}

model CreateSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmsSignResponseBody(name='body'),
}

/**
 * @summary 创建短信签名
 *
 * @param tmpReq CreateSmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateSmsSignResponse
 */
async function createSmsSignWithOptions(tmpReq: CreateSmsSignRequest, runtime: Util.RuntimeOptions): CreateSmsSignResponse {
  Util.validateModel(tmpReq);
  var request = new CreateSmsSignShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.moreData)) {
    request.moreDataShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.moreData, 'MoreData', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.applySceneContent)) {
    query['ApplySceneContent'] = request.applySceneContent;
  }
  if (!Util.isUnset(request.moreDataShrink)) {
    query['MoreData'] = request.moreDataShrink;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.qualificationId)) {
    query['QualificationId'] = request.qualificationId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.signSource)) {
    query['SignSource'] = request.signSource;
  }
  if (!Util.isUnset(request.signType)) {
    query['SignType'] = request.signType;
  }
  if (!Util.isUnset(request.thirdParty)) {
    query['ThirdParty'] = request.thirdParty;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateSmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 创建短信签名
 *
 * @param request CreateSmsSignRequest
 * @return CreateSmsSignResponse
 */
async function createSmsSign(request: CreateSmsSignRequest): CreateSmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return createSmsSignWithOptions(request, runtime);
}

model CreateSmsTemplateRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  intlType?: int32(name='IntlType', example='0'),
  moreData?: [ string ](name='MoreData'),
  ownerId?: long(name='OwnerId'),
  relatedSignName?: string(name='RelatedSignName'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateContent?: string(name='TemplateContent', description='This parameter is required.'),
  templateName?: string(name='TemplateName', description='This parameter is required.'),
  templateRule?: string(name='TemplateRule', example='{"code":"characterWithNumber"}'),
  templateType?: int32(name='TemplateType', description='This parameter is required.', example='0'),
}

model CreateSmsTemplateShrinkRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  intlType?: int32(name='IntlType', example='0'),
  moreDataShrink?: string(name='MoreData'),
  ownerId?: long(name='OwnerId'),
  relatedSignName?: string(name='RelatedSignName'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateContent?: string(name='TemplateContent', description='This parameter is required.'),
  templateName?: string(name='TemplateName', description='This parameter is required.'),
  templateRule?: string(name='TemplateRule', example='{"code":"characterWithNumber"}'),
  templateType?: int32(name='TemplateType', description='This parameter is required.', example='0'),
}

model CreateSmsTemplateResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  orderId?: string(name='OrderId', example='20044158441'),
  requestId?: string(name='RequestId', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', example='SMS_100000056'),
  templateName?: string(name='TemplateName'),
}

model CreateSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSmsTemplateResponseBody(name='body'),
}

/**
 * @summary 创建短信模板
 *
 * @param tmpReq CreateSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateSmsTemplateResponse
 */
async function createSmsTemplateWithOptions(tmpReq: CreateSmsTemplateRequest, runtime: Util.RuntimeOptions): CreateSmsTemplateResponse {
  Util.validateModel(tmpReq);
  var request = new CreateSmsTemplateShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.moreData)) {
    request.moreDataShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.moreData, 'MoreData', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.applySceneContent)) {
    query['ApplySceneContent'] = request.applySceneContent;
  }
  if (!Util.isUnset(request.intlType)) {
    query['IntlType'] = request.intlType;
  }
  if (!Util.isUnset(request.moreDataShrink)) {
    query['MoreData'] = request.moreDataShrink;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.relatedSignName)) {
    query['RelatedSignName'] = request.relatedSignName;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateContent)) {
    query['TemplateContent'] = request.templateContent;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!Util.isUnset(request.templateRule)) {
    query['TemplateRule'] = request.templateRule;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 创建短信模板
 *
 * @param request CreateSmsTemplateRequest
 * @return CreateSmsTemplateResponse
 */
async function createSmsTemplate(request: CreateSmsTemplateRequest): CreateSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return createSmsTemplateWithOptions(request, runtime);
}

model DeleteShortUrlRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  sourceUrl?: string(name='SourceUrl', description='The source address. The address can be up to 1,000 characters in length.

This parameter is required.', example='https://www.****.com/product/sms'),
}

model DeleteShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model DeleteShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteShortUrlResponseBody(name='body'),
}

/**
 * @summary Deletes a short URL. After you delete a short URL, it cannot be changed to its original state.
 *
 * @description ### QPS limits
 * You can call this operation up to 100 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteShortUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteShortUrlResponse
 */
async function deleteShortUrlWithOptions(request: DeleteShortUrlRequest, runtime: Util.RuntimeOptions): DeleteShortUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.sourceUrl)) {
    body['SourceUrl'] = request.sourceUrl;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'DeleteShortUrl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a short URL. After you delete a short URL, it cannot be changed to its original state.
 *
 * @description ### QPS limits
 * You can call this operation up to 100 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteShortUrlRequest
 * @return DeleteShortUrlResponse
 */
async function deleteShortUrl(request: DeleteShortUrlRequest): DeleteShortUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteShortUrlWithOptions(request, runtime);
}

model DeleteSmsSignRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='The signature.

> The signature must be submitted by the current Alibaba Cloud account, and has been approved.

This parameter is required.', example='Aliyun'),
}

model DeleteSmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
}

model DeleteSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSmsSignResponseBody(name='body'),
}

/**
 * @summary Deletes a signature.
 *
 * @description *   You cannot delete a signature that has not been approved.
 * *   After you delete a signature, you cannot recover it. Proceed with caution.
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteSmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteSmsSignResponse
 */
async function deleteSmsSignWithOptions(request: DeleteSmsSignRequest, runtime: Util.RuntimeOptions): DeleteSmsSignResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteSmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a signature.
 *
 * @description *   You cannot delete a signature that has not been approved.
 * *   After you delete a signature, you cannot recover it. Proceed with caution.
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteSmsSignRequest
 * @return DeleteSmsSignResponse
 */
async function deleteSmsSign(request: DeleteSmsSignRequest): DeleteSmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteSmsSignWithOptions(request, runtime);
}

model DeleteSmsTemplateRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm) and obtain the message template code on the **Message Templates** tab. You can also obtain the message template code by calling the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation.

This parameter is required.', example='SMS_152550****'),
}

model DeleteSmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='CCA2BCFF-2BA7-427C-90EE-AC6994748607'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_20375****'),
}

model DeleteSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSmsTemplateResponseBody(name='body'),
}

/**
 * @summary Deletes a message template.
 *
 * @description *   Message templates pending approval can be withdrawn. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   You cannot recover deleted message templates. Proceed with caution.
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteSmsTemplateResponse
 */
async function deleteSmsTemplateWithOptions(request: DeleteSmsTemplateRequest, runtime: Util.RuntimeOptions): DeleteSmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a message template.
 *
 * @description *   Message templates pending approval can be withdrawn. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   Message templates that have been approved can be deleted, and cannot be modified. You can delete a message template pending approval on the Message Templates tab in the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview).
 * *   You cannot recover deleted message templates. Proceed with caution.
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request DeleteSmsTemplateRequest
 * @return DeleteSmsTemplateResponse
 */
async function deleteSmsTemplate(request: DeleteSmsTemplateRequest): DeleteSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteSmsTemplateWithOptions(request, runtime);
}

model GetCardSmsLinkRequest {
  cardCodeType?: int32(name='CardCodeType', description='The code type of the URLs.

*   **1**: group texting
*   **2**: personalization', example='2'),
  cardLinkType?: int32(name='CardLinkType', description='The type of the short URLs.

*   1: standard short code.
*   2: custom short code.

> If the **CardLinkType** is not specified, standard short codes are generated. If you need to generate custom short codes, contact Alibaba Cloud SMS technical support.', example='1'),
  cardTemplateCode?: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_****'),
  cardTemplateParamJson?: string(name='CardTemplateParamJson', description='The variables of the message template.'),
  customShortCodeJson?: string(name='CustomShortCodeJson', description='The custom short code. It can contain 4 to 8 digits or letters.

> If the CardLinkType parameter is set to 2, the CustomShortCodeJson parameter is required.', example='abCde'),
  domain?: string(name='Domain', description='The original domain name. You must submit domain names for approval in advance.

> 

*   If the **CardLinkType** parameter is set to **2**, the **Domain** parameter is required.

*   The **Domain** parameter cannot exceed 100 characters in length. If the parameter is not specified, a default domain name is used.', example='xxx.com'),
  outId?: string(name='OutId', description='The extension field.', example='BC20220608102511660860762****'),
  phoneNumberJson?: string(name='PhoneNumberJson', description='The mobile phone numbers of recipients, custom identifiers, or system identifiers.

> 

*   A maximum of 10,000 mobile phone numbers are supported.

*   You can enter custom identifier. Each identifier can be a maximum of 60 characters in length.

*   You can apply for a maximum of 10 OPPO templates at a time.', example='[\\\\"1390000****
\\\\",\\\\"1370000****
\\\\"]'),
  signNameJson?: string(name='SignNameJson', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.'),
}

model GetCardSmsLinkResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    cardPhoneNumbers?: string(name='CardPhoneNumbers', description='The mobile phone numbers that support card messages.', example='[\\\\"1390000****\\\\",\\\\"1370000****\\\\"]'),
    cardSignNames?: string(name='CardSignNames', description='The signatures must correspond to the mobile numbers and short URLs in sequence.'),
    cardSmsLinks?: string(name='CardSmsLinks', description='The short URLs.', example='[\\\\"mw2m.cn/LAaGGa\\\\",\\\\"mw2m.cn/LAAaes\\\\"]'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone numbers that do not support card messages.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetCardSmsLinkResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetCardSmsLinkResponseBody(name='body'),
}

/**
 * @summary Queries the short URLs of a card messages template.
 *
 * @description ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request GetCardSmsLinkRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetCardSmsLinkResponse
 */
async function getCardSmsLinkWithOptions(request: GetCardSmsLinkRequest, runtime: Util.RuntimeOptions): GetCardSmsLinkResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.cardCodeType)) {
    query['CardCodeType'] = request.cardCodeType;
  }
  if (!Util.isUnset(request.cardLinkType)) {
    query['CardLinkType'] = request.cardLinkType;
  }
  if (!Util.isUnset(request.cardTemplateCode)) {
    query['CardTemplateCode'] = request.cardTemplateCode;
  }
  if (!Util.isUnset(request.cardTemplateParamJson)) {
    query['CardTemplateParamJson'] = request.cardTemplateParamJson;
  }
  if (!Util.isUnset(request.customShortCodeJson)) {
    query['CustomShortCodeJson'] = request.customShortCodeJson;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.phoneNumberJson)) {
    query['PhoneNumberJson'] = request.phoneNumberJson;
  }
  if (!Util.isUnset(request.signNameJson)) {
    query['SignNameJson'] = request.signNameJson;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetCardSmsLink',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the short URLs of a card messages template.
 *
 * @description ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request GetCardSmsLinkRequest
 * @return GetCardSmsLinkResponse
 */
async function getCardSmsLink(request: GetCardSmsLinkRequest): GetCardSmsLinkResponse {
  var runtime = new Util.RuntimeOptions{};
  return getCardSmsLinkWithOptions(request, runtime);
}

model GetMediaResourceIdRequest {
  extendInfo?: string(name='ExtendInfo', description='The extended fields.

> If you set the ResourceType parameter to **2**, this parameter is required.', example='{\\\\"img_rate\\\\":\\\\"oneToOne\\\\"}'),
  fileSize?: long(name='FileSize', description='The size of the resource. Unit: bytes.

This parameter is required.', example='12'),
  memo?: string(name='Memo', description='The description of the resource.'),
  ossKey?: string(name='OssKey', description='The address of the resource.

This parameter is required.', example='oss://alicom-fc-media/1947741454322274/alicom-fc-media/pic/202205191526575398603697152.png'),
  resourceType?: int32(name='ResourceType', description='The type of the resource.

*   **1**: text.
*   **2**: image. A small image cannot exceed 100 KB in size, and a large image cannot exceed 2 MB in size. The image must be clear. Supported format: JPG, JPEG, and PNG.
*   **3**: audio.
*   **4**: video. Supported format: MP4.

> 

*   If you set the ResourceType parameter to 2, the **img_rate** required is required. Valid values:

*   1:1

*   16:9

*   3:1

*   48:65

This parameter is required.', example='1'),
}

model GetMediaResourceIdResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    resUrlDownload?: string(name='ResUrlDownload', description='The download URL of the resource.', example='http://test-example.com/download.jpg'),
    resourceId?: long(name='ResourceId', description='The resource ID.', example='SMS_14571****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F07CF237-F6E3-5F77-B91B-F9B7C5DE84AB'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetMediaResourceIdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetMediaResourceIdResponseBody(name='body'),
}

/**
 * @summary Converts a resource uploaded to the specified Object Storage Service (OSS) bucket for unified management. Then, a resource ID is returned. You can manage the resource based on the ID.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request GetMediaResourceIdRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetMediaResourceIdResponse
 */
async function getMediaResourceIdWithOptions(request: GetMediaResourceIdRequest, runtime: Util.RuntimeOptions): GetMediaResourceIdResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.extendInfo)) {
    query['ExtendInfo'] = request.extendInfo;
  }
  if (!Util.isUnset(request.fileSize)) {
    query['FileSize'] = request.fileSize;
  }
  if (!Util.isUnset(request.memo)) {
    query['Memo'] = request.memo;
  }
  if (!Util.isUnset(request.ossKey)) {
    query['OssKey'] = request.ossKey;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetMediaResourceId',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Converts a resource uploaded to the specified Object Storage Service (OSS) bucket for unified management. Then, a resource ID is returned. You can manage the resource based on the ID.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request GetMediaResourceIdRequest
 * @return GetMediaResourceIdResponse
 */
async function getMediaResourceId(request: GetMediaResourceIdRequest): GetMediaResourceIdResponse {
  var runtime = new Util.RuntimeOptions{};
  return getMediaResourceIdWithOptions(request, runtime);
}

model GetOSSInfoForCardTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    accessKeyId?: string(name='AccessKeyId', description='The AccessKey ID.', example='LTAIxetqt1Dg****'),
    aliUid?: string(name='AliUid', description='The ID of the Alibaba Cloud account.', example='599333677478****'),
    bucket?: string(name='Bucket', description='The name of the OSS bucket.', example='alicom-cardsms-resources'),
    expireTime?: string(name='ExpireTime', description='The timeout period.', example='1634209418'),
    host?: string(name='Host', description='The hostname.', example='https://alicom-cardsms-resources.oss-cn-zhangjiakou.aliyuncs.com'),
    policy?: string(name='Policy', description='The signature policy.', example='eyJxxx0='),
    signature?: string(name='Signature', description='The signature.', example='Aliyun'),
    startPath?: string(name='StartPath', description='The path of the policy.', example='1631792777'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model GetOSSInfoForCardTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetOSSInfoForCardTemplateResponseBody(name='body'),
}

/**
 * @summary Queries the OSS configuration information about card messages.
 *
 * @description Resources such as images and videos used for card message templates can be uploaded to Object Storage Service (OSS) buckets for storage. For more information, see [Upload files to OSS](https://help.aliyun.com/document_detail/437303.html).
 * ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request GetOSSInfoForCardTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetOSSInfoForCardTemplateResponse
 */
async function getOSSInfoForCardTemplateWithOptions(runtime: Util.RuntimeOptions): GetOSSInfoForCardTemplateResponse {
  var req = new OpenApi.OpenApiRequest{};
  var params = new OpenApi.Params{
    action = 'GetOSSInfoForCardTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the OSS configuration information about card messages.
 *
 * @description Resources such as images and videos used for card message templates can be uploaded to Object Storage Service (OSS) buckets for storage. For more information, see [Upload files to OSS](https://help.aliyun.com/document_detail/437303.html).
 * ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @return GetOSSInfoForCardTemplateResponse
 */
async function getOSSInfoForCardTemplate(): GetOSSInfoForCardTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return getOSSInfoForCardTemplateWithOptions(runtime);
}

model GetOSSInfoForUploadFileRequest {
  bizType?: string(name='BizType', example='fcMediaSms'),
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model GetOSSInfoForUploadFileResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  model?: {
    accessKeyId?: string(name='AccessKeyId', example='LTAIxetqt1Dg****'),
    expireTime?: string(name='ExpireTime', example='1719297445'),
    host?: string(name='Host', example='https://alicom-fc-media.oss-cn-zhangjiakou.aliyuncs.com'),
    policy?: string(name='Policy', example='eyJleHBpcmF0aW9uIjoiMjAyN***Ni0yNVQwNjozNzoyNS45NzBaI**iY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwMF0sWyJzdGFydHMtd2l0***sIiRrZXkiLCIiXV19'),
    signature?: string(name='Signature', example='BXnwCWPrhVb*****aoZHZfli5KE='),
    startPath?: string(name='StartPath', example='123456'),
  }(name='Model'),
  requestId?: string(name='RequestId', example='A90E4451-FED7-49D2-87C8-00700EDCFD0D'),
  success?: boolean(name='Success', example='true'),
}

model GetOSSInfoForUploadFileResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetOSSInfoForUploadFileResponseBody(name='body'),
}

/**
 * @summary 短信上传文件，获取授权信息
 *
 * @param request GetOSSInfoForUploadFileRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetOSSInfoForUploadFileResponse
 */
async function getOSSInfoForUploadFileWithOptions(request: GetOSSInfoForUploadFileRequest, runtime: Util.RuntimeOptions): GetOSSInfoForUploadFileResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.bizType)) {
    query['BizType'] = request.bizType;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetOSSInfoForUploadFile',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 短信上传文件，获取授权信息
 *
 * @param request GetOSSInfoForUploadFileRequest
 * @return GetOSSInfoForUploadFileResponse
 */
async function getOSSInfoForUploadFile(request: GetOSSInfoForUploadFileRequest): GetOSSInfoForUploadFileResponse {
  var runtime = new Util.RuntimeOptions{};
  return getOSSInfoForUploadFileWithOptions(request, runtime);
}

model GetSmsSignRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='This parameter is required.'),
}

model GetSmsSignResponseBody = {
  applyScene?: string(name='ApplyScene', example='http://www.aliyun.com/'),
  auditInfo?: {
    auditDate?: string(name='AuditDate', example='2024-06-03 12:02:34'),
    rejectInfo?: string(name='RejectInfo'),
  }(name='AuditInfo'),
  code?: string(name='Code', example='OK'),
  createDate?: string(name='CreateDate', example='2024-06-03 10:02:34'),
  fileUrlList?: [ string ](name='FileUrlList'),
  message?: string(name='Message', example='OK'),
  orderId?: string(name='OrderId', example='20044156924'),
  qualificationId?: long(name='QualificationId', example='2004393xxxx'),
  remark?: string(name='Remark'),
  requestId?: string(name='RequestId', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signCode?: string(name='SignCode', example='SIGN_100xxx077042023_16884xxxx64065_hrsdB'),
  signName?: string(name='SignName'),
  signStatus?: long(name='SignStatus', example='1'),
  signTag?: string(name='SignTag', example='2'),
  signUsage?: string(name='SignUsage'),
  thirdParty?: boolean(name='ThirdParty', example='false'),
}

model GetSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetSmsSignResponseBody(name='body'),
}

/**
 * @summary 查询短信签名详情
 *
 * @param request GetSmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetSmsSignResponse
 */
async function getSmsSignWithOptions(request: GetSmsSignRequest, runtime: Util.RuntimeOptions): GetSmsSignResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetSmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询短信签名详情
 *
 * @param request GetSmsSignRequest
 * @return GetSmsSignResponse
 */
async function getSmsSign(request: GetSmsSignRequest): GetSmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return getSmsSignWithOptions(request, runtime);
}

model GetSmsTemplateRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='This parameter is required.', example='SMS_20375****'),
}

model GetSmsTemplateResponseBody = {
  applyScene?: string(name='ApplyScene', example='http://www.aliyun.com/'),
  auditInfo?: {
    auditDate?: string(name='AuditDate', example='2024-06-03 11:20:34'),
    rejectInfo?: string(name='RejectInfo'),
  }(name='AuditInfo'),
  code?: string(name='Code', example='OK'),
  createDate?: string(name='CreateDate', example='2024-06-03 10:02:34'),
  fileUrlList?: {
    fileUrl?: [ string ](name='FileUrl')
  }(name='FileUrlList'),
  intlType?: int32(name='IntlType', example='0'),
  message?: string(name='Message', example='OK'),
  moreDataFileUrlList?: {
    moreDataFileUrl?: [ string ](name='MoreDataFileUrl')
  }(name='MoreDataFileUrlList'),
  orderId?: string(name='OrderId', example='20030193785'),
  relatedSignName?: string(name='RelatedSignName'),
  remark?: string(name='Remark'),
  requestId?: string(name='RequestId', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  templateCode?: string(name='TemplateCode', example='SMS_2322****'),
  templateContent?: string(name='TemplateContent'),
  templateName?: string(name='TemplateName'),
  templateStatus?: string(name='TemplateStatus', example='1'),
  templateTag?: int32(name='TemplateTag', example='2'),
  templateType?: string(name='TemplateType', example='1'),
  variableAttribute?: string(name='VariableAttribute', example='{"code":"characterWithNumber"}'),
}

model GetSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetSmsTemplateResponseBody(name='body'),
}

/**
 * @summary 查询文本短信模板详情
 *
 * @param request GetSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetSmsTemplateResponse
 */
async function getSmsTemplateWithOptions(request: GetSmsTemplateRequest, runtime: Util.RuntimeOptions): GetSmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询文本短信模板详情
 *
 * @param request GetSmsTemplateRequest
 * @return GetSmsTemplateResponse
 */
async function getSmsTemplate(request: GetSmsTemplateRequest): GetSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return getSmsTemplateWithOptions(request, runtime);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', description='The token used to query the next page.', example='23432453245'),
  ownerId?: long(name='OwnerId'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='20'),
  prodCode?: string(name='ProdCode', description='The name of the cloud service. Set the value to **dysms**.', example='dysms'),
  regionId?: string(name='RegionId', description='The region ID. Set the value to **cn-hangzhou**.

This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', description='The code of the message template. Specify either the Tag or the ResourceId parameter.', example='SMS_23423423'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to TEMPLATE.

This parameter is required.', example='TEMPLATE'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag.', example='TestKey'),
      value?: string(name='Value', description='The value of the tag.', example='TestValue'),
    }
  ](name='Tag', description='The tag list. Specify either the Tag or the ResourceId parameter. You can specify a maximum of 20 tags.'),
}

model ListTagResourcesResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  nextToken?: string(name='NextToken', description='The token used to query the next page.', example='"23432453245"'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  tagResources?: {
    tagResource?: [ 
    {
      resourceId?: string(name='ResourceId', description='The code of the message template.', example='SMS_23423****'),
      resourceType?: string(name='ResourceType', description='The type of resource.', example='ALIYUN::DYSMS::TEMPLATE'),
      tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
    }
  ](name='TagResource')
  }(name='TagResources', description='The list of tags.'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

/**
 * @summary Queries the tags of a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request ListTagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListTagResourcesResponse
 */
async function listTagResourcesWithOptions(request: ListTagResourcesRequest, runtime: Util.RuntimeOptions): ListTagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.prodCode)) {
    query['ProdCode'] = request.prodCode;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagResources',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the tags of a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request ListTagResourcesRequest
 * @return ListTagResourcesResponse
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagResourcesWithOptions(request, runtime);
}

model ModifySmsSignRequest {
  ownerId?: long(name='OwnerId'),
  remark?: string(name='Remark', description='The scenario description of your released services. Provide the information of your services, such as a website URL, a domain name with an ICP filing, an app download URL, or the name of your WeChat official account or mini program. For sign-in scenarios, you must also provide an account and password for tests. A detailed description can improve the review efficiency of signatures and templates.

> The description can be up to 200 characters in length.

This parameter is required.', example='This is the abbreviation of our company.'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signFileList?: [ 
    {
      fileContents?: string(name='FileContents', description='The base64-encoded string of the signed files. The size of the image cannot exceed 2 MB.

In some scenarios, documents are required to prove your identity. For more information, see [Signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='R0lGODlhHAAmAKIHAKqqqsvLy0hISObm5vf394uLiwAA'),
      fileSuffix?: string(name='FileSuffix', description='The format of the documents. You can upload multiple images. JPG, PNG, GIF, and JPEG are supported.

In some scenarios, documents are required to prove your identity. For more information, see [Signature specifications](https://help.aliyun.com/document_detail/108076.html).

> If the signature is used for other purposes or the signature source is an enterprise or public institution, you must upload some documents and an authorization letter. For more information, see [Documents](https://help.aliyun.com/document_detail/108076.html) and [Letter of authorization](https://help.aliyun.com/document_detail/56741.html).

This parameter is required.', example='jpg'),
    }
  ](name='SignFileList', description='The list of signature files.

This parameter is required.'),
  signName?: string(name='SignName', description='The signature.

This parameter is required.', example='Aliyun'),
  signSource?: int32(name='SignSource', description='The source of the signature. Valid values:

*   **0**: full name or abbreviation of an enterprise or institution.
*   **1**: full name or abbreviation of a website with Ministry of Industry and Information Technology (MIIT) filing.
*   **2**: full name or abbreviation of an app.
*   **3**: full name or abbreviation of a WeChat official account or applet.
*   **4**: full name or abbreviation of an e-commerce store.
*   **5**: full name or abbreviation of a trademark.

This parameter is required.', example='1'),
  signType?: int32(name='SignType', description='The type of the signature. Valid values:

*   **0**: verification-code signature
*   **1**: general-purpose signature', example='1'),
}

model ModifySmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
}

model ModifySmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySmsSignResponseBody(name='body'),
}

/**
 * @summary Modifies a rejected signature and submit it for approval. Signatures that are pending approval or have been approved cannot be modified.
 *
 * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to modify an existing signature and submit the signature for approval. The signature must comply with the [signature specifications](https://help.aliyun.com/document_detail/108076.html).
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 * > 
 * *   Signatures pending approval cannot be modified.
 * *   You cannot modify a signature after it is approved. If you no longer need the signature, you can delete it.
 * *   If you are an individual user, you cannot apply for a new signature on the same day that your signature is rejected or deleted. We recommend that you modify the rejected signature and submit it again.
 *
 * @param request ModifySmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifySmsSignResponse
 */
async function modifySmsSignWithOptions(request: ModifySmsSignRequest, runtime: Util.RuntimeOptions): ModifySmsSignResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.signSource)) {
    query['SignSource'] = request.signSource;
  }
  if (!Util.isUnset(request.signType)) {
    query['SignType'] = request.signType;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.signFileList)) {
    body['SignFileList'] = request.signFileList;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'ModifySmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies a rejected signature and submit it for approval. Signatures that are pending approval or have been approved cannot be modified.
 *
 * @description You can call the operation or use the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview) to modify an existing signature and submit the signature for approval. The signature must comply with the [signature specifications](https://help.aliyun.com/document_detail/108076.html).
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limits
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 * > 
 * *   Signatures pending approval cannot be modified.
 * *   You cannot modify a signature after it is approved. If you no longer need the signature, you can delete it.
 * *   If you are an individual user, you cannot apply for a new signature on the same day that your signature is rejected or deleted. We recommend that you modify the rejected signature and submit it again.
 *
 * @param request ModifySmsSignRequest
 * @return ModifySmsSignResponse
 */
async function modifySmsSign(request: ModifySmsSignRequest): ModifySmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifySmsSignWithOptions(request, runtime);
}

model ModifySmsTemplateRequest {
  ownerId?: long(name='OwnerId'),
  remark?: string(name='Remark', description='The description of the message template. It is one of the reference information for template review. The description cannot exceed 100 characters in length.

This parameter is required.', example='Modify the parameters of the template.'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.

This parameter is required.', example='SMS_15255****'),
  templateContent?: string(name='TemplateContent', description='The content of the template. The content must be 1 to 500 characters in length.

> When you modify a template, design the template content based on the review comments.

This parameter is required.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!'),
  templateName?: string(name='TemplateName', description='The name of the template. The name must be 1 to 30 characters in length.

This parameter is required.', example='aliyun verification code'),
  templateType?: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: text message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland

This parameter is required.', example='1'),
}

model ModifySmsTemplateResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_15255****'),
}

model ModifySmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySmsTemplateResponseBody(name='body'),
}

/**
 * @summary Modifies the information of an unapproved message template and submits it for review again.
 *
 * @description After you apply for a message template, if the template fails to pass the review, you can call this operation to modify the template and submit the template again. You can call this operation to modify only a template for a specific message type.
 * The template content must comply with the [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request ModifySmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifySmsTemplateResponse
 */
async function modifySmsTemplateWithOptions(request: ModifySmsTemplateRequest, runtime: Util.RuntimeOptions): ModifySmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  if (!Util.isUnset(request.templateContent)) {
    query['TemplateContent'] = request.templateContent;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifySmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the information of an unapproved message template and submits it for review again.
 *
 * @description After you apply for a message template, if the template fails to pass the review, you can call this operation to modify the template and submit the template again. You can call this operation to modify only a template for a specific message type.
 * The template content must comply with the [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).
 * For more information, see [Usage notes](https://help.aliyun.com/document_detail/55324.html).
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request ModifySmsTemplateRequest
 * @return ModifySmsTemplateResponse
 */
async function modifySmsTemplate(request: ModifySmsTemplateRequest): ModifySmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifySmsTemplateWithOptions(request, runtime);
}

model QueryCardSmsTemplateRequest {
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_4139'),
}

model QueryCardSmsTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    templates?: [  map[string]any ](name='Templates', description='The array of objects.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryCardSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryCardSmsTemplateResponseBody(name='body'),
}

/**
 * @summary Queries the review status of a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryCardSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QueryCardSmsTemplateResponse
 */
async function queryCardSmsTemplateWithOptions(request: QueryCardSmsTemplateRequest, runtime: Util.RuntimeOptions): QueryCardSmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QueryCardSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the review status of a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryCardSmsTemplateRequest
 * @return QueryCardSmsTemplateResponse
 */
async function queryCardSmsTemplate(request: QueryCardSmsTemplateRequest): QueryCardSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return queryCardSmsTemplateWithOptions(request, runtime);
}

model QueryCardSmsTemplateReportRequest {
  endDate?: string(name='EndDate', description='The end of the time range to query. Specify the time in the yyyy-MM-dd HH:mm:ss format.', example='2020-10-11 00:00:01'),
  startDate?: string(name='StartDate', description='The beginning of the time range to query. Specify the time in the yyyy-MM-dd HH:mm:ss format.', example='2020-10-10 00:00:01'),
  templateCodes?: [ string ](name='TemplateCodes', description='The array of message templates.

This parameter is required.'),
}

model QueryCardSmsTemplateReportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    model?: [  map[string]any ](name='model', description='The details of the data returned.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryCardSmsTemplateReportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryCardSmsTemplateReportResponseBody(name='body'),
}

/**
 * @summary Queries sent card messages.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryCardSmsTemplateReportRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QueryCardSmsTemplateReportResponse
 */
async function queryCardSmsTemplateReportWithOptions(request: QueryCardSmsTemplateReportRequest, runtime: Util.RuntimeOptions): QueryCardSmsTemplateReportResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endDate)) {
    query['EndDate'] = request.endDate;
  }
  if (!Util.isUnset(request.startDate)) {
    query['StartDate'] = request.startDate;
  }
  if (!Util.isUnset(request.templateCodes)) {
    query['TemplateCodes'] = request.templateCodes;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QueryCardSmsTemplateReport',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries sent card messages.
 *
 * @description ### QPS limit
 * You can call this operation up to 300 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryCardSmsTemplateReportRequest
 * @return QueryCardSmsTemplateReportResponse
 */
async function queryCardSmsTemplateReport(request: QueryCardSmsTemplateReportRequest): QueryCardSmsTemplateReportResponse {
  var runtime = new Util.RuntimeOptions{};
  return queryCardSmsTemplateReportWithOptions(request, runtime);
}

model QueryMobilesCardSupportRequest {
  mobiles?: [  map[string]any ](name='Mobiles', description='The list of mobile phone numbers.

This parameter is required.'),
  templateCode?: string(name='TemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_0000'),
}

model QueryMobilesCardSupportShrinkRequest {
  mobilesShrink?: string(name='Mobiles', description='The list of mobile phone numbers.

This parameter is required.'),
  templateCode?: string(name='TemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_0000'),
}

model QueryMobilesCardSupportResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    queryResult?: [ 
      {
        mobile?: string(name='Mobile', description='The mobile phone number.', example='1380000****'),
        support?: boolean(name='Support', description='Indicates whether the mobile phone number supports card messages. Valid values:

*   **true**
*   **false**', example='true'),
      }
    ](name='QueryResult', description='The list of returned results.'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='08C17DFE-2E10-54F4-BAFB-7180039CC217'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model QueryMobilesCardSupportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryMobilesCardSupportResponseBody(name='body'),
}

/**
 * @summary Checks whether a mobile phone number can receive card messages.
 *
 * @param tmpReq QueryMobilesCardSupportRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QueryMobilesCardSupportResponse
 */
async function queryMobilesCardSupportWithOptions(tmpReq: QueryMobilesCardSupportRequest, runtime: Util.RuntimeOptions): QueryMobilesCardSupportResponse {
  Util.validateModel(tmpReq);
  var request = new QueryMobilesCardSupportShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.mobiles)) {
    request.mobilesShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.mobiles, 'Mobiles', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.mobilesShrink)) {
    query['Mobiles'] = request.mobilesShrink;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QueryMobilesCardSupport',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Checks whether a mobile phone number can receive card messages.
 *
 * @param request QueryMobilesCardSupportRequest
 * @return QueryMobilesCardSupportResponse
 */
async function queryMobilesCardSupport(request: QueryMobilesCardSupportRequest): QueryMobilesCardSupportResponse {
  var runtime = new Util.RuntimeOptions{};
  return queryMobilesCardSupportWithOptions(request, runtime);
}

model QueryPageSmartShortUrlLogRequest {
  createDateEnd?: long(name='CreateDateEnd', description='This parameter is required.', example='20181225'),
  createDateStart?: long(name='CreateDateStart', description='This parameter is required.', example='20181225'),
  ownerId?: long(name='OwnerId'),
  pageNo?: long(name='PageNo', description='This parameter is required.', example='1'),
  pageSize?: long(name='PageSize', description='This parameter is required.', example='10'),
  phoneNumber?: string(name='PhoneNumber', example='1390000****'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  shortUrl?: string(name='ShortUrl', example='http://ays.cn/****'),
}

model QueryPageSmartShortUrlLogResponseBody = {
  code?: string(name='Code', example='示例值示例值'),
  message?: string(name='Message', example='示例值示例值'),
  model?: {
    list?: [ 
      {
        clickState?: long(name='ClickState', example='87'),
        clickTime?: long(name='ClickTime', example='51'),
        createTime?: long(name='CreateTime', example='64'),
        phoneNumber?: string(name='PhoneNumber', example='示例值示例值'),
        shortName?: string(name='ShortName', example='示例值示例值示例值'),
        shortUrl?: string(name='ShortUrl', example='示例值示例值示例值'),
      }
    ](name='List'),
    pageNo?: long(name='PageNo', example='74'),
    pageSize?: long(name='PageSize', example='15'),
    totalCount?: long(name='TotalCount', example='66'),
    totalPage?: long(name='TotalPage', example='86'),
  }(name='Model'),
  requestId?: string(name='RequestId', example='示例值示例值'),
  success?: boolean(name='Success', example='true'),
}

model QueryPageSmartShortUrlLogResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryPageSmartShortUrlLogResponseBody(name='body'),
}

/**
 * @summary 点击明细查询
 *
 * @param request QueryPageSmartShortUrlLogRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QueryPageSmartShortUrlLogResponse
 */
async function queryPageSmartShortUrlLogWithOptions(request: QueryPageSmartShortUrlLogRequest, runtime: Util.RuntimeOptions): QueryPageSmartShortUrlLogResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.createDateEnd)) {
    query['CreateDateEnd'] = request.createDateEnd;
  }
  if (!Util.isUnset(request.createDateStart)) {
    query['CreateDateStart'] = request.createDateStart;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageNo)) {
    query['PageNo'] = request.pageNo;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.phoneNumber)) {
    query['PhoneNumber'] = request.phoneNumber;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.shortUrl)) {
    query['ShortUrl'] = request.shortUrl;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QueryPageSmartShortUrlLog',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 点击明细查询
 *
 * @param request QueryPageSmartShortUrlLogRequest
 * @return QueryPageSmartShortUrlLogResponse
 */
async function queryPageSmartShortUrlLog(request: QueryPageSmartShortUrlLogRequest): QueryPageSmartShortUrlLogResponse {
  var runtime = new Util.RuntimeOptions{};
  return queryPageSmartShortUrlLogWithOptions(request, runtime);
}

model QuerySendDetailsRequest {
  bizId?: string(name='BizId', description='The ID of the delivery receipt. The delivery receipt ID is the value of the BizId parameter that is returned when you call the SendSms or SendBatchSms operation.', example='134523^435****'),
  currentPage?: long(name='CurrentPage', description='The page number of the first page.

This parameter is required.', example='1'),
  ownerId?: long(name='OwnerId'),
  pageSize?: long(name='PageSize', description='The number of items displayed per page.

Valid values: 1 to 50.

This parameter is required.', example='10'),
  phoneNumber?: string(name='PhoneNumber', description='The mobile numbers of the recipients. Format:

*   If you send messages in the Chinese mainland, specify an 11-digit mobile number, for example, 1390000\\\\*\\\\*\\\\*\\\\*.
*   If you send messages to countries or regions outside the Chinese mainland, specify this parameter in the \\\\<Area code>\\\\<Mobile number> format. Example: 8520000\\\\*\\\\*\\\\*\\\\*.

This parameter is required.', example='1390000****'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  sendDate?: string(name='SendDate', description='The date when the message was sent. You can query messages that were sent within the last 30 days.

Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20181228'),
}

model QuerySendDetailsResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  smsSendDetailDTOs?: {
    smsSendDetailDTO?: [ 
    {
      content?: string(name='Content', description='The content of the message.', example='【Aliyun】This is a test message.'),
      errCode?: string(name='ErrCode', description='The status code returned by the carrier.

*   If the message is delivered, "DELIVERED" is returned.
*   For information about the error codes that may be returned if the message is not delivered, see [error codes](https://help.aliyun.com/document_detail/101347.html).', example='DELIVERED'),
      outId?: string(name='OutId', description='The extended field.', example='123'),
      phoneNum?: string(name='PhoneNum', description='The mobile numbers of the recipients.', example='1390000****'),
      receiveDate?: string(name='ReceiveDate', description='The date and time when the message was received.', example='2019-01-08 16:44:13'),
      sendDate?: string(name='SendDate', description='The date and time when the message was sent.', example='2019-01-08 16:44:10'),
      sendStatus?: long(name='SendStatus', description='The delivery status of the message. Valid values:

*   **1**: The message has not received a delivery receipt yet.
*   **2**: The message failed to be delivered.
*   **3**: The message was delivered.', example='3'),
      templateCode?: string(name='TemplateCode', description='The ID of the message template.', example='SMS_12231****'),
    }
  ](name='SmsSendDetailDTO')
  }(name='SmsSendDetailDTOs', description='The details of the message.'),
  totalCount?: string(name='TotalCount', description='The number of sent messages.', example='1'),
}

model QuerySendDetailsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySendDetailsResponseBody(name='body'),
}

/**
 * @summary Queries the information about a message.
 *
 * @param request QuerySendDetailsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySendDetailsResponse
 */
async function querySendDetailsWithOptions(request: QuerySendDetailsRequest, runtime: Util.RuntimeOptions): QuerySendDetailsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.bizId)) {
    query['BizId'] = request.bizId;
  }
  if (!Util.isUnset(request.currentPage)) {
    query['CurrentPage'] = request.currentPage;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.phoneNumber)) {
    query['PhoneNumber'] = request.phoneNumber;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.sendDate)) {
    query['SendDate'] = request.sendDate;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySendDetails',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about a message.
 *
 * @param request QuerySendDetailsRequest
 * @return QuerySendDetailsResponse
 */
async function querySendDetails(request: QuerySendDetailsRequest): QuerySendDetailsResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySendDetailsWithOptions(request, runtime);
}

model QuerySendStatisticsRequest {
  endDate?: string(name='EndDate', description='The end of the time range to query. Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20201003'),
  isGlobe?: int32(name='IsGlobe', description='The site from where the message is sent. Valid values:

*   **1**: China site
*   **2**: international site

This parameter is required.', example='1'),
  ownerId?: long(name='OwnerId'),
  pageIndex?: int32(name='PageIndex', description='The page number. Default value: **1**.

This parameter is required.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Valid values: **1 to 50**.

This parameter is required.', example='10'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
  startDate?: string(name='StartDate', description='The beginning of the time range to query. Format: yyyyMMdd. Example: 20181225.

This parameter is required.', example='20201002'),
  templateType?: int32(name='TemplateType', description='The type of the message template. Valid values: Valid values:

*   **0**: verification code
*   **1**: notification
*   **2**: promotional message (Enterprise users only)
*   **3**: international purpose (Enterprise users only)
*   **7**: digital message', example='0'),
}

model QuerySendStatisticsResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    targetList?: [ 
      {
        noRespondedCount?: long(name='NoRespondedCount', description='The number of messages without a delivery receipt.', example='1'),
        respondedFailCount?: long(name='RespondedFailCount', description='The number of messages with a delivery receipt that indicates a failure.', example='2'),
        respondedSuccessCount?: long(name='RespondedSuccessCount', description='The number of messages with a delivery receipt that indicates a success.', example='17'),
        sendDate?: string(name='SendDate', description='The date when the message is sent. Format: yyyyMMdd. Example: 20181225.', example='20201010'),
        totalCount?: long(name='TotalCount', description='The number of delivered messages.', example='20'),
      }
    ](name='TargetList', description='The details of the data returned.'),
    totalSize?: long(name='TotalSize', description='The total number of entries returned.', example='20'),
  }(name='Data', description='The data returned.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
}

model QuerySendStatisticsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySendStatisticsResponseBody(name='body'),
}

/**
 * @summary Queries message delivery details.
 *
 * @description You can call the operation to query message delivery details, including the number of delivered messages, the number of messages with delivery receipts, and the time that a message is sent. If a large number of messages are sent on the specified date, you can specify the number of items displayed on each page and the number of pages to view the details by page.
 * ### QPS limits
 * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySendStatisticsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySendStatisticsResponse
 */
async function querySendStatisticsWithOptions(request: QuerySendStatisticsRequest, runtime: Util.RuntimeOptions): QuerySendStatisticsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endDate)) {
    query['EndDate'] = request.endDate;
  }
  if (!Util.isUnset(request.isGlobe)) {
    query['IsGlobe'] = request.isGlobe;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageIndex)) {
    query['PageIndex'] = request.pageIndex;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.startDate)) {
    query['StartDate'] = request.startDate;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySendStatistics',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries message delivery details.
 *
 * @description You can call the operation to query message delivery details, including the number of delivered messages, the number of messages with delivery receipts, and the time that a message is sent. If a large number of messages are sent on the specified date, you can specify the number of items displayed on each page and the number of pages to view the details by page.
 * ### QPS limits
 * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySendStatisticsRequest
 * @return QuerySendStatisticsResponse
 */
async function querySendStatistics(request: QuerySendStatisticsRequest): QuerySendStatisticsResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySendStatisticsWithOptions(request, runtime);
}

model QueryShortUrlRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  shortUrl?: string(name='ShortUrl', description='The short URL. You can query the short URL by calling the [AddShortUrl](https://help.aliyun.com/document_detail/186774.html) operation.

This parameter is required.', example='http://****.cn/6y8uy7'),
}

model QueryShortUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    createDate?: string(name='CreateDate', description='The time when the short URL was created.', example='2019-01-08 16:44:13'),
    expireDate?: string(name='ExpireDate', description='The time when the short URL expires.', example='2019-01-22 11:21:11'),
    pageViewCount?: string(name='PageViewCount', description='The PV.', example='300'),
    shortUrl?: string(name='ShortUrl', description='The short URL.', example='http://****.cn/6y8uy7'),
    shortUrlName?: string(name='ShortUrlName', description='The service name of the short URL.', example='The Alibaba Cloud Short Link service.'),
    shortUrlStatus?: string(name='ShortUrlStatus', description='The status of the short URL. Valid values:

*   **expired**
*   **effective**
*   **audit**
*   **reject**', example='expired'),
    sourceUrl?: string(name='SourceUrl', description='The source address.', example='https://www.****.com/product/sms'),
    uniqueVisitorCount?: string(name='UniqueVisitorCount', description='The UV.', example='23'),
  }(name='Data', description='The details of the short URL.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
}

model QueryShortUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryShortUrlResponseBody(name='body'),
}

/**
 * @summary Queries the status of a short URL.
 *
 * @description ### QPS limits
 * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryShortUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QueryShortUrlResponse
 */
async function queryShortUrlWithOptions(request: QueryShortUrlRequest, runtime: Util.RuntimeOptions): QueryShortUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.shortUrl)) {
    body['ShortUrl'] = request.shortUrl;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'QueryShortUrl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the status of a short URL.
 *
 * @description ### QPS limits
 * You can call this operation up to 20 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QueryShortUrlRequest
 * @return QueryShortUrlResponse
 */
async function queryShortUrl(request: QueryShortUrlRequest): QueryShortUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return queryShortUrlWithOptions(request, runtime);
}

model QuerySmsSignRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='The signature.

This parameter is required.', example='Aliyun'),
}

model QuerySmsSignResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='The date and time when the signature was created.', example='2019-01-08 16:44:13'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  reason?: string(name='Reason', description='The remarks of the review. Valid values:

*   If the signature is in the **Approved** or **Pending Approval** state, No Remarks is returned.
*   If the signature is in the **Not Approved** state, the reason why the signature is rejected is returned.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
  requestId?: string(name='RequestId', description='The request ID.', example='CC89A90C-978F-46AC-B80D-54738371E7CA'),
  signName?: string(name='SignName', description='The signature.', example='Aliyun'),
  signStatus?: int32(name='SignStatus', description='The status of the signature. Valid values:

*   **0**: The signature is pending approval.
*   **1**: The signature is approved.
*   **2**: The signature is rejected. The Reason parameter indicates the reason why the signature is rejected.
*   **10**: The signature is cancelled.', example='1'),
}

model QuerySmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsSignResponseBody(name='body'),
}

/**
 * @summary Queries the status of a signature.
 *
 * @description After you apply for an SMS signature, you can query its status by using the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm) or calling the operation. If the signature is rejected, you can modify the signature based on the reason why it is rejected.
 * ### QPS limits
 * You can call this API operation up to 500 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySmsSignResponse
 */
async function querySmsSignWithOptions(request: QuerySmsSignRequest, runtime: Util.RuntimeOptions): QuerySmsSignResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the status of a signature.
 *
 * @description After you apply for an SMS signature, you can query its status by using the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm) or calling the operation. If the signature is rejected, you can modify the signature based on the reason why it is rejected.
 * ### QPS limits
 * You can call this API operation up to 500 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsSignRequest
 * @return QuerySmsSignResponse
 */
async function querySmsSign(request: QuerySmsSignRequest): QuerySmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySmsSignWithOptions(request, runtime);
}

model QuerySmsSignListRequest {
  ownerId?: long(name='OwnerId'),
  pageIndex?: int32(name='PageIndex', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of signatures per page. Valid values: **1 to 50**.', example='10'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model QuerySmsSignListResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  currentPage?: int32(name='CurrentPage', description='The page number. Default value: **1**.', example='1'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  pageSize?: int32(name='PageSize', description='The number of signatures per page. Valid values: **1 to 50**.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  smsSignList?: [ 
    {
      auditStatus?: string(name='AuditStatus', description='The approval status of the signature. Valid values:

*   **AUDIT_STATE_INIT**: The signature is pending approval.
*   **AUDIT_STATE_PASS**: The signature is approved.
*   **AUDIT_STATE_NOT_PASS**: The signature is rejected. You can view the reason in the Reason response parameter.
*   **AUDIT_STATE_CANCEL**: The approval is canceled.', example='AUDIT_STATE_NOT_PASS'),
      businessType?: string(name='BusinessType', description='The type of the signature scenario. The return value ends with "type". Valid values:

*   Verification code type
*   General-purpose type', example='Verification code type'),
      createDate?: string(name='CreateDate', description='The time when the signature was created. Format: yyyy-MM-dd HH:mm:ss.', example='2020-01-08 16:44:13'),
      orderId?: string(name='OrderId', description='The ticket ID.', example='236****5'),
      reason?: {
        rejectDate?: string(name='RejectDate', description='The time when the signature was rejected. Format: yyyy-MM-dd HH:mm:ss.', example='2020-01-08 19:02:13'),
        rejectInfo?: string(name='RejectInfo', description='The reason why the signature was rejected.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
        rejectSubInfo?: string(name='RejectSubInfo', description='The remarks about the rejection.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
      }(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the signature is rejected is returned.'),
      signName?: string(name='SignName', description='The name of the signature.', example='Aliyun'),
    }
  ](name='SmsSignList', description='The queried message signatures.'),
  totalCount?: long(name='TotalCount', description='The total number of signatures.', example='100'),
}

model QuerySmsSignListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsSignListResponseBody(name='body'),
}

/**
 * @summary Queries message signatures by page.
 *
 * @description You can call this operation to query the details of message signatures, including the name, creation time, and approval status of each signature. If a message template is rejected, the reason is returned. Modify the message signature based on the reason.
 * ### QPS limit
 * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsSignListRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySmsSignListResponse
 */
async function querySmsSignListWithOptions(request: QuerySmsSignListRequest, runtime: Util.RuntimeOptions): QuerySmsSignListResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageIndex)) {
    query['PageIndex'] = request.pageIndex;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySmsSignList',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries message signatures by page.
 *
 * @description You can call this operation to query the details of message signatures, including the name, creation time, and approval status of each signature. If a message template is rejected, the reason is returned. Modify the message signature based on the reason.
 * ### QPS limit
 * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsSignListRequest
 * @return QuerySmsSignListResponse
 */
async function querySmsSignList(request: QuerySmsSignListRequest): QuerySmsSignListResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySmsSignListWithOptions(request, runtime);
}

model QuerySmsTemplateRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.

This parameter is required.', example='SMS_1525***'),
}

model QuerySmsTemplateResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  createDate?: string(name='CreateDate', description='The time when the message template was created.', example='2019-06-04 11:42:17'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  reason?: string(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the message template is rejected is returned.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
  requestId?: string(name='RequestId', description='The request ID.', example='0A974B78-02BF-4C79-ADF3-90CFBA1B55B1'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.', example='SMS_16703****'),
  templateContent?: string(name='TemplateContent', description='The content of the message template.', example='You are applying for mobile registration. The verification code is: ${code}, valid for 5 minutes!'),
  templateName?: string(name='TemplateName', description='The name of the message template.', example='aliyun verification code'),
  templateStatus?: int32(name='TemplateStatus', description='The approval status of the message template. Valid values:

*   **0**: The message template is pending approval.
*   **1**: The message template is approved.
*   **AUDIT_STATE_NOT_PASS**: The message template is rejected. You can view the reason in the Reason response parameter.
*   **10**: The approval is canceled.', example='1'),
  templateType?: int32(name='TemplateType', description='The type of the message. Valid values:

*   **0**: verification code
*   **1**: notification message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland', example='1'),
}

model QuerySmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsTemplateResponseBody(name='body'),
}

/**
 * @summary Queries the approval status of a message template.
 *
 * @description After you create a message template, you can call this operation to query the approval status of the template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
 * ### QPS limit
 * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySmsTemplateResponse
 */
async function querySmsTemplateWithOptions(request: QuerySmsTemplateRequest, runtime: Util.RuntimeOptions): QuerySmsTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the approval status of a message template.
 *
 * @description After you create a message template, you can call this operation to query the approval status of the template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
 * ### QPS limit
 * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsTemplateRequest
 * @return QuerySmsTemplateResponse
 */
async function querySmsTemplate(request: QuerySmsTemplateRequest): QuerySmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySmsTemplateWithOptions(request, runtime);
}

model QuerySmsTemplateListRequest {
  ownerId?: long(name='OwnerId'),
  pageIndex?: int32(name='PageIndex', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of templates per page. Valid values: **1 to 50**.', example='10'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model QuerySmsTemplateListResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  currentPage?: int32(name='CurrentPage', description='The page number. Default value: **1**.', example='1'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  pageSize?: int32(name='PageSize', description='The number of templates per page. Valid values: **1 to 50**.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='819BE656-D2E0-4858-8B21-B2E47708****'),
  smsTemplateList?: [ 
    {
      auditStatus?: string(name='AuditStatus', description='The approval status of the message template. Valid values:

*   **AUDIT_STATE_INIT**: The message template is pending approval.
*   **AUDIT_STATE_PASS**: The message template is approved.
*   **AUDIT_STATE_NOT_PASS**: The message template is rejected. You can view the reason in the Reason response parameter.
*   **AUDIT_STATE_CANCEL** or **AUDIT_SATE_CANCEL**: The approval is canceled.', example='AUDIT_STATE_PASS'),
      createDate?: string(name='CreateDate', description='The time when the message template was created. The time is in the yyyy-MM-dd HH:mm:ss format.', example='2020-06-04 11:42:17'),
      orderId?: string(name='OrderId', description='The ticket ID.', example='2361****'),
      outerTemplateType?: int32(name='OuterTemplateType', description='The type of the message template. We recommend that you specify this parameter. Valid values:

*   **0**: verification code
*   **1**: notification message
*   **2**: promotional message
*   **3**: message sent to countries or regions outside the Chinese mainland
*   **7**: digital message

> The template type is the same as the value of the TemplateType parameter in the AddSmsTemplate and ModifySmsTemplate operations.', example='0'),
      reason?: {
        rejectDate?: string(name='RejectDate', description='The time when the message template was rejected. Format: yyyy-MM-dd HH:mm:ss.', example='2020-06-04 16:01:17'),
        rejectInfo?: string(name='RejectInfo', description='The reason why the message template was rejected.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
        rejectSubInfo?: string(name='RejectSubInfo', description='The remarks about the rejection.', example='The document cannot verify the authenticity of the information. Please upload it again.'),
      }(name='Reason', description='The approval remarks.

*   If the value of AuditStatus is **AUDIT_STATE_PASS** or **AUDIT_STATE_INIT**, the value of Reason is No Approval Remarks.
*   If the value of AuditStatus is **AUDIT_STATE_NOT_PASS**, the reason why the message template is rejected is returned.'),
      templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the template code on the **Templates** tab. You can also call the [AddSmsTemplate](https://help.aliyun.com/document_detail/121208.html) operation to obtain the template code.', example='SMS_1525***'),
      templateContent?: string(name='TemplateContent', description='The content of the message template.', example='123456789'),
      templateName?: string(name='TemplateName', description='The name of the message template.', example='aliyun verification code'),
      templateType?: int32(name='TemplateType', description='The type of the message template. Valid values:

*   **0**: notification message
*   **1**: promotional message
*   **2**: verification code
*   **6**: message sent to countries or regions outside the Chinese mainland
*   **7**: digital message', example='7'),
    }
  ](name='SmsTemplateList', description='The queried message templates.'),
  totalCount?: long(name='TotalCount', description='The total number of templates.', example='100'),
}

model QuerySmsTemplateListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySmsTemplateListResponseBody(name='body'),
}

/**
 * @summary Queries message templates.
 *
 * @description You can call this operation to query the details of message templates, including the name, creation time, and approval status of each template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
 * ### QPS limit
 * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsTemplateListRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return QuerySmsTemplateListResponse
 */
async function querySmsTemplateListWithOptions(request: QuerySmsTemplateListRequest, runtime: Util.RuntimeOptions): QuerySmsTemplateListResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.pageIndex)) {
    query['PageIndex'] = request.pageIndex;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySmsTemplateList',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries message templates.
 *
 * @description You can call this operation to query the details of message templates, including the name, creation time, and approval status of each template. If a message template is rejected, the reason is returned. Modify the message template based on the reason.
 * ### QPS limit
 * You can call this operation up to 10 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request QuerySmsTemplateListRequest
 * @return QuerySmsTemplateListResponse
 */
async function querySmsTemplateList(request: QuerySmsTemplateListRequest): QuerySmsTemplateListResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySmsTemplateListWithOptions(request, runtime);
}

model SendBatchCardSmsRequest {
  cardTemplateCode?: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_3245'),
  cardTemplateParamJson?: string(name='CardTemplateParamJson', description='The variables of the card message template.', example='[{\\\\"customurl\\\\":\\\\"http://www.alibaba.com\\\\",\\\\"dyncParams\\\\":\\\\"{\\\\\\\\\\\\"a\\\\\\\\\\\\":\\\\\\\\\\\\"hello\\\\\\\\\\\\",\\\\\\\\\\\\"b\\\\\\\\\\\\":\\\\\\\\\\\\"world\\\\\\\\\\\\"}\\\\"}]'),
  digitalTemplateCode?: string(name='DigitalTemplateCode', description='The code of the digital message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='DIGITAL_SMS_234080176'),
  digitalTemplateParamJson?: string(name='DigitalTemplateParamJson', description='The variables of the digital message template.', example='[{"a":1,"b":2},{"a":9,"b":8}]'),
  fallbackType?: string(name='FallbackType', description='The rollback type. Valid values:

*   **SMS**: text message
*   **DIGITALSMS**: digital message
*   **NONE**: none

This parameter is required.', example='SMS'),
  outId?: string(name='OutId', description='The ID that is reserved for the caller of the operation.', example='16545681783595370'),
  phoneNumberJson?: string(name='PhoneNumberJson', description='The mobile numbers of the recipients.

This parameter is required.', example='[\\\\"1390000****\\\\",\\\\"1370000****\\\\"]"'),
  signNameJson?: string(name='SignNameJson', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.'),
  smsTemplateCode?: string(name='SmsTemplateCode', description='The code of the text message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='SMS_234251075'),
  smsTemplateParamJson?: string(name='SmsTemplateParamJson', description='The variables of the text message template.', example='[{"a":1,"b":2},{"a":9,"b":8}]'),
  smsUpExtendCodeJson?: string(name='SmsUpExtendCodeJson', description='The extension code of the upstream message.', example='[\\\\"6\\\\",\\\\"6\\\\"]'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Alibaba Cloud console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the **template code** on the **Templates** tab.

> You must specify a message template that is created in the SMS console and approved by Alibaba Cloud. If you send messages to countries or regions outside the Chinese mainland, use the corresponding message templates.', example='SMS_20375****'),
  templateParamJson?: string(name='TemplateParamJson', description='The value of the variable in the message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid. In addition, the sequence of variable values must be the same as that of the mobile numbers and signatures.', example='[{"name":"TemplateParamJson"},{"name":"TemplateParamJson"}]'),
}

model SendBatchCardSmsResponseBody = {
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   For more information about other response codes, see [API error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    bizCardId?: string(name='BizCardId', description='The ID of the card message.', example='123'),
    bizDigitalId?: string(name='BizDigitalId', description='The ID of the digital message.', example='3214'),
    bizSmsId?: string(name='BizSmsId', description='The ID of the text message.', example='3256'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    mediaMobiles?: string(name='MediaMobiles', description='The mobile phone number from which the card message is sent.', example='1390000****'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone number whose card message is rolled back.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  success?: boolean(name='Success', description='Indicates whether the request is successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model SendBatchCardSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendBatchCardSmsResponseBody(name='body'),
}

/**
 * @summary Sends multiple card messages at a time.
 *
 * @description You can call the operation to send multiple card messages to a maximum of mobile phone numbers at a time. Different signatures and rollback settings can be specified for the mobile phone numbers.
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request SendBatchCardSmsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SendBatchCardSmsResponse
 */
async function sendBatchCardSmsWithOptions(request: SendBatchCardSmsRequest, runtime: Util.RuntimeOptions): SendBatchCardSmsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.cardTemplateCode)) {
    query['CardTemplateCode'] = request.cardTemplateCode;
  }
  if (!Util.isUnset(request.cardTemplateParamJson)) {
    query['CardTemplateParamJson'] = request.cardTemplateParamJson;
  }
  if (!Util.isUnset(request.digitalTemplateCode)) {
    query['DigitalTemplateCode'] = request.digitalTemplateCode;
  }
  if (!Util.isUnset(request.digitalTemplateParamJson)) {
    query['DigitalTemplateParamJson'] = request.digitalTemplateParamJson;
  }
  if (!Util.isUnset(request.fallbackType)) {
    query['FallbackType'] = request.fallbackType;
  }
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.phoneNumberJson)) {
    query['PhoneNumberJson'] = request.phoneNumberJson;
  }
  if (!Util.isUnset(request.signNameJson)) {
    query['SignNameJson'] = request.signNameJson;
  }
  if (!Util.isUnset(request.smsTemplateCode)) {
    query['SmsTemplateCode'] = request.smsTemplateCode;
  }
  if (!Util.isUnset(request.smsTemplateParamJson)) {
    query['SmsTemplateParamJson'] = request.smsTemplateParamJson;
  }
  if (!Util.isUnset(request.smsUpExtendCodeJson)) {
    query['SmsUpExtendCodeJson'] = request.smsUpExtendCodeJson;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  if (!Util.isUnset(request.templateParamJson)) {
    query['TemplateParamJson'] = request.templateParamJson;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SendBatchCardSms',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Sends multiple card messages at a time.
 *
 * @description You can call the operation to send multiple card messages to a maximum of mobile phone numbers at a time. Different signatures and rollback settings can be specified for the mobile phone numbers.
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request SendBatchCardSmsRequest
 * @return SendBatchCardSmsResponse
 */
async function sendBatchCardSms(request: SendBatchCardSmsRequest): SendBatchCardSmsResponse {
  var runtime = new Util.RuntimeOptions{};
  return sendBatchCardSmsWithOptions(request, runtime);
}

model SendBatchSmsRequest {
  outId?: string(name='OutId', description='The extension field of the external record. The value is a string that contains no more than 256 characters.

> The parameter is optional.', example='abcdefg'),
  ownerId?: long(name='OwnerId'),
  phoneNumberJson?: string(name='PhoneNumberJson', description='The mobile number of the recipient. Format:

*   Message delivery to the Chinese mainland: +/+86/0086/86 or an 11-digit mobile number without a prefix. Example: 1590000\\\\*\\\\*\\\\*\\\\*.
*   Message delivery to countries or regions outside the Chinese mainland: Dialing code + Mobile number. Example: 852000012\\\\*\\\\*\\\\*\\\\*.

> We recommend that you call the SendSms operation to send verification codes.

This parameter is required.', example='["1590000****","1350000****"]'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signNameJson?: string(name='SignNameJson', description='The signature.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the signature in the **Signature** column on the **Signatures** tab.

> The signatures must be approved and correspond to the mobile numbers in sequence.

This parameter is required.', example='["Aliyun","Alibaba"]'),
  smsUpExtendCodeJson?: string(name='SmsUpExtendCodeJson', description='The extension code of the MO message. Format: JSON array.

> The parameter is optional.', example='["90999","90998"]'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the message template in the **Template Code** column on the **Message Templates** tab.

> The message templates must be created on the Go Globe page and approved.

This parameter is required.', example='SMS_15255****'),
  templateParamJson?: string(name='TemplateParamJson', description='The value of the variable in the message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid. In addition, the sequence of variable values must be the same as that of the mobile numbers and signatures.', example='[{"name":"TemplateParamJson"},{"name":"TemplateParamJson"}]'),
}

model SendBatchSmsResponseBody = {
  bizId?: string(name='BizId', description='The ID of the delivery receipt. You can use one of the following methods to query the delivery status of a message based on the ID.

*   Call the [QuerySendDetails](https://help.aliyun.com/document_detail/102352.html) operation.
*   Log on to the [Alibaba Cloud SMS console](https://dysms.console.aliyun.com/dysms.htm#/overview). In the left-side navigation pane, choose **Analytics** > **Delivery Report**.', example='9006197469364984400'),
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D230E'),
}

model SendBatchSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendBatchSmsResponseBody(name='body'),
}

/**
 * @summary Uses a single message template and multiple signatures to send messages to multiple recipients.
 *
 * @description You can call the operation to send messages to a maximum of 100 recipients at a time.
 *
 * @param request SendBatchSmsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SendBatchSmsResponse
 */
async function sendBatchSmsWithOptions(request: SendBatchSmsRequest, runtime: Util.RuntimeOptions): SendBatchSmsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  var body : map[string]any = {};
  if (!Util.isUnset(request.phoneNumberJson)) {
    body['PhoneNumberJson'] = request.phoneNumberJson;
  }
  if (!Util.isUnset(request.signNameJson)) {
    body['SignNameJson'] = request.signNameJson;
  }
  if (!Util.isUnset(request.smsUpExtendCodeJson)) {
    body['SmsUpExtendCodeJson'] = request.smsUpExtendCodeJson;
  }
  if (!Util.isUnset(request.templateParamJson)) {
    body['TemplateParamJson'] = request.templateParamJson;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
    body = OpenApiUtil.parseToMap(body),
  };
  var params = new OpenApi.Params{
    action = 'SendBatchSms',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Uses a single message template and multiple signatures to send messages to multiple recipients.
 *
 * @description You can call the operation to send messages to a maximum of 100 recipients at a time.
 *
 * @param request SendBatchSmsRequest
 * @return SendBatchSmsResponse
 */
async function sendBatchSms(request: SendBatchSmsRequest): SendBatchSmsResponse {
  var runtime = new Util.RuntimeOptions{};
  return sendBatchSmsWithOptions(request, runtime);
}

model SendCardSmsRequest {
  cardObjects?: [ 
    {
      customUrl?: string(name='customUrl', description='The URL to which the message is redirected if the message fails to be rendered.', example='https://alibaba.com'),
      dyncParams?: string(name='dyncParams', description='The variables. Special characters, such as $ and {}, do not need to be entered.'),
      mobile?: string(name='mobile', description='The mobile phone number.', example='1390000****'),
    }
  ](name='CardObjects', description='The objects of the message template.

This parameter is required.'),
  cardTemplateCode?: string(name='CardTemplateCode', description='The code of the message template. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.

This parameter is required.', example='CARD_SMS_70'),
  digitalTemplateCode?: string(name='DigitalTemplateCode', description='The code of the digital message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved.', example='SMS_003'),
  digitalTemplateParam?: string(name='DigitalTemplateParam', description='The variables of the digital message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid.', example='{\\\\"msg\\\\",\\\\"xxxd\\\\"}'),
  fallbackType?: string(name='FallbackType', description='The rollback type. Valid values:

*   **SMS**: text message
*   **DIGITALSMS**: digital message
*   **NONE**: none

This parameter is required.', example='SMS'),
  outId?: string(name='OutId', description='The ID that is reserved for the caller of the operation.', example='38d76c9b-4a9a-4c89-afae-61fd8e0e****'),
  signName?: string(name='SignName', description='The signature. You can view the template code in the **Signature** column on the **Signaturess** tab of the **Go China** page in the Alibaba Cloud SMS console.

> The signature must be approved.

This parameter is required.'),
  smsTemplateCode?: string(name='SmsTemplateCode', description='The code of the text message template that applies when the card message is rolled back. You can view the template code in the **Template Code** column on the **Templates** tab of the **Go China** page in the Alibaba Cloud SMS console.

> Make sure that the message template has been approved. If you set the **FallbackType** parameter to **SMS**, this parameter is required.', example='SIER_TEST_01'),
  smsTemplateParam?: string(name='SmsTemplateParam', description='The variables of the text message template.

> If you need to add line breaks to the JSON template, make sure that the format is valid.'),
  smsUpExtendCode?: string(name='SmsUpExtendCode', description='The extension code of the upstream message. Upstream messages are messages sent to the communication service provider. Upstream messages are used to customize a service, complete an inquiry, or send a request. You are charged for sending upstream messages based on the billing standards of the service provider.

> If you do not need upstream messages, ignore this parameter.', example='1'),
  templateCode?: string(name='TemplateCode', description='The code of the text message template.

Log on to the Alibaba Cloud SMS console. In the left-side navigation pane, click **Go Globe** or **Go China**. You can view the message template in the **Template Code** column on the **Message Templates** tab.

> The message templates must be created on the Go Globe page and approved.', example='SMS_2322****'),
  templateParam?: string(name='TemplateParam', description='The variables of the message template. Format: JSON.

> If you need to add line breaks to the JSON template, make sure that the format is valid.', example='{
      \\\\"code\\\\": \\\\"1111\\\\"
}'),
}

model SendCardSmsResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: {
    bizCardId?: string(name='BizCardId', description='The ID of the card message.', example='123'),
    bizDigitalId?: string(name='BizDigitalId', description='The ID of the digital message.', example='232'),
    bizSmsId?: string(name='BizSmsId', description='The ID of the text message.', example='524'),
    cardTmpState?: int32(name='CardTmpState', description='The review status of the card message template.

*   **0**: pending approval
*   **1**: approved
*   **2**: rejected

> Unapproved card messages are rolled back.', example='0'),
    mediaMobiles?: string(name='MediaMobiles', description='The mobile phone number from which the card message is sent.', example='1390000****'),
    notMediaMobiles?: string(name='NotMediaMobiles', description='The mobile phone number whose card message is rolled back.', example='1390000****'),
  }(name='Data', description='The data returned.'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D28D0'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values:

*   **true**
*   **false**', example='true'),
}

model SendCardSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendCardSmsResponseBody(name='body'),
}

/**
 * @summary Sends a card message.
 *
 * @description *   Make sure that the message template that you want to use has been approved. If the mobile phone number of a recipient does not support card messages, the SendCardSms operation allows the rollback feature to ensure successful delivery.
 * *   When you call the SendCardSms operation to send card messages, the operation checks whether the mobile phone numbers of the recipients support card messages. If the mobile phone numbers do not support card messages, you can specify whether to enable rollback. Otherwise, the card message cannot be delivered.
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request SendCardSmsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SendCardSmsResponse
 */
async function sendCardSmsWithOptions(request: SendCardSmsRequest, runtime: Util.RuntimeOptions): SendCardSmsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.cardObjects)) {
    query['CardObjects'] = request.cardObjects;
  }
  if (!Util.isUnset(request.cardTemplateCode)) {
    query['CardTemplateCode'] = request.cardTemplateCode;
  }
  if (!Util.isUnset(request.digitalTemplateCode)) {
    query['DigitalTemplateCode'] = request.digitalTemplateCode;
  }
  if (!Util.isUnset(request.digitalTemplateParam)) {
    query['DigitalTemplateParam'] = request.digitalTemplateParam;
  }
  if (!Util.isUnset(request.fallbackType)) {
    query['FallbackType'] = request.fallbackType;
  }
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.smsTemplateCode)) {
    query['SmsTemplateCode'] = request.smsTemplateCode;
  }
  if (!Util.isUnset(request.smsTemplateParam)) {
    query['SmsTemplateParam'] = request.smsTemplateParam;
  }
  if (!Util.isUnset(request.smsUpExtendCode)) {
    query['SmsUpExtendCode'] = request.smsUpExtendCode;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  if (!Util.isUnset(request.templateParam)) {
    query['TemplateParam'] = request.templateParam;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SendCardSms',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Sends a card message.
 *
 * @description *   Make sure that the message template that you want to use has been approved. If the mobile phone number of a recipient does not support card messages, the SendCardSms operation allows the rollback feature to ensure successful delivery.
 * *   When you call the SendCardSms operation to send card messages, the operation checks whether the mobile phone numbers of the recipients support card messages. If the mobile phone numbers do not support card messages, you can specify whether to enable rollback. Otherwise, the card message cannot be delivered.
 * ### QPS limit
 * You can call this operation up to 1,000 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request SendCardSmsRequest
 * @return SendCardSmsResponse
 */
async function sendCardSms(request: SendCardSmsRequest): SendCardSmsResponse {
  var runtime = new Util.RuntimeOptions{};
  return sendCardSmsWithOptions(request, runtime);
}

model SendSmsRequest {
  outId?: string(name='OutId', description='The extension field.

> You can ignore this parameter if you do not have special requirements.', example='abcdefgh'),
  ownerId?: long(name='OwnerId'),
  phoneNumbers?: string(name='PhoneNumbers', description='The mobile numbers of the recipients. Format:

*   If you send messages to the Chinese mainland, specify mobile numbers that are prefixed with +, +86, 0086, or 86, or 11-digit mobile numbers without prefixes. Example: 1390000\\\\*\\\\*\\\\*\\\\*.
*   If you send messages to countries or regions outside the Chinese mainland, specify this parameter in the \\\\<Area code>\\\\<Mobile number> format. Example: 852000012\\\\*\\\\*\\\\*\\\\*.

You can send messages to multiple mobile numbers, separate the mobile numbers with commas (,). You can specify up to 1,000 mobile numbers in each request. Compared with sending messages to a single mobile number, sending messages to multiple mobile numbers requires longer response time.

> We recommend that you send one verification code message to a mobile number in each request.

This parameter is required.', example='1390000****'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='The signature.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the signature on the **Signatures** tab.

> You must specify a signature that is created in the SMS console and approved by Alibaba Cloud. For more information about SMS signature specifications, see [SMS signature specifications](https://help.aliyun.com/document_detail/108076.html).

This parameter is required.', example='Aliyun'),
  smsUpExtendCode?: string(name='SmsUpExtendCode', description='The extension code of the upstream message. Upstream messages are messages sent to the communication service provider. Upstream messages are used to customize a service, complete an inquiry, or send a request. You are charged for sending upstream messages based on the billing standards of the service provider.

> The extension code is automatically generated by the system when the signature is generated. You do not need to specify the extension code. You can ignore this parameter if you do not have special requirements.', example='90999'),
  templateCode?: string(name='TemplateCode', description='The code of the message template.

You can log on to the [Short Message Service (SMS) console](https://dysms.console.aliyun.com/dysms.htm?spm=5176.12818093.categories-n-products.ddysms.3b2816d0xml2NA#/overview), click **Go China** or **Go Globe** in the left-side navigation pane, and then view the **template code** on the **Templates** tab.

> You must specify a message template that is created in the SMS console and approved by Alibaba Cloud. If you send messages to countries or regions outside the Chinese mainland, use the corresponding message templates.

This parameter is required.', example='SMS_15305****'),
  templateParam?: string(name='TemplateParam', description='The value of the variable in the message template. You can specify multiple parameter values. Example:{"name":"Sam","number":"1390000\\\\*\\\\*\\\\*\\\\*"}.

> 

*   If line breaks are required in JSON-formatted data, they must meet the relevant requirements that are specified in the standard JSON protocol.

*   For more information about template variables, see [SMS template specifications](https://help.aliyun.com/document_detail/108253.html).', example='{"code":"1111"}'),
}

model SendSmsResponseBody = {
  bizId?: string(name='BizId', description='The ID of the delivery receipt.

You can call the [QuerySendDetails](~~QuerySendDetails~~) operation to query the delivery status based on the receipt ID.', example='9006197469364984****'),
  code?: string(name='Code', description='The HTTP status code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
}

model SendSmsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendSmsResponseBody(name='body'),
}

/**
 * @summary Sends a message. Before you call this operation, submit a message signature and message template, and make sure that the signature and template are approved.
 *
 * @description *   This operation is mainly used to send a single message. In special scenarios, you can send multiple messages with the same content to a maximum of 1,000 mobile numbers. Note that group sending may be delayed.
 * *   To send messages with different signatures and template content to multiple mobile numbers in a single request, call the [SendBatchSms](https://help.aliyun.com/document_detail/102364.html) operation.
 * *   You are charged for using Alibaba Cloud Short Message Service (SMS) based on the amount of messages sent. For more information, see [Pricing](https://www.aliyun.com/price/product#/sms/detail).
 * *   If your verification code signature and general-purpose signature have the same name, the system uses the general-purpose signature to send messages by default.
 *
 * @param request SendSmsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SendSmsResponse
 */
async function sendSmsWithOptions(request: SendSmsRequest, runtime: Util.RuntimeOptions): SendSmsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.outId)) {
    query['OutId'] = request.outId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.phoneNumbers)) {
    query['PhoneNumbers'] = request.phoneNumbers;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.smsUpExtendCode)) {
    query['SmsUpExtendCode'] = request.smsUpExtendCode;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  if (!Util.isUnset(request.templateParam)) {
    query['TemplateParam'] = request.templateParam;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SendSms',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Sends a message. Before you call this operation, submit a message signature and message template, and make sure that the signature and template are approved.
 *
 * @description *   This operation is mainly used to send a single message. In special scenarios, you can send multiple messages with the same content to a maximum of 1,000 mobile numbers. Note that group sending may be delayed.
 * *   To send messages with different signatures and template content to multiple mobile numbers in a single request, call the [SendBatchSms](https://help.aliyun.com/document_detail/102364.html) operation.
 * *   You are charged for using Alibaba Cloud Short Message Service (SMS) based on the amount of messages sent. For more information, see [Pricing](https://www.aliyun.com/price/product#/sms/detail).
 * *   If your verification code signature and general-purpose signature have the same name, the system uses the general-purpose signature to send messages by default.
 *
 * @param request SendSmsRequest
 * @return SendSmsResponse
 */
async function sendSms(request: SendSmsRequest): SendSmsResponse {
  var runtime = new Util.RuntimeOptions{};
  return sendSmsWithOptions(request, runtime);
}

model SmsConversionIntlRequest {
  conversionTime?: long(name='ConversionTime', description='The time when the OTP message was delivered. The value is a UNIX timestamp. Unit: milliseconds.

*   If you leave the parameter empty, the current timestamp is specified by default.
*   If you specify the parameter, the timestamp must be greater than the message sending time and less than the current timestamp.', example='1349055900000'),
  delivered?: boolean(name='Delivered', description='Specifies whether customers replied to the OTP message. Valid values: true and false.

This parameter is required.', example='true'),
  messageId?: string(name='MessageId', description='The ID of the message.

This parameter is required.', example='1008030300****'),
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
}

model SmsConversionIntlResponseBody = {
  code?: string(name='Code', description='The response code. If OK is returned, the request is successful. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html?spm=a2c4g.101345.0.0.74326ff2J5EZyt).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8D****'),
}

model SmsConversionIntlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SmsConversionIntlResponseBody(name='body'),
}

/**
 * @summary Reports the status of an OTP message to Alibaba Cloud SMS.
 *
 * @description Metrics:
 * *   Requested OTP messages
 * *   Verified OTP messages
 * An OTP conversion rate is calculated based on the following formula: OTP conversion rate = Number of verified OTP messages/Number of requested OTP messages.
 * > If you call the SmsConversion operation to query OTP conversion rates, your business may be affected. We recommend that you perform the following operations: 1. Call the SmsConversion operation in an asynchronous manner by configuring queues or events. 2. Manually degrade your services or use a circuit breaker to automatically degrade services.
 *
 * @param request SmsConversionIntlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SmsConversionIntlResponse
 */
async function smsConversionIntlWithOptions(request: SmsConversionIntlRequest, runtime: Util.RuntimeOptions): SmsConversionIntlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.conversionTime)) {
    query['ConversionTime'] = request.conversionTime;
  }
  if (!Util.isUnset(request.delivered)) {
    query['Delivered'] = request.delivered;
  }
  if (!Util.isUnset(request.messageId)) {
    query['MessageId'] = request.messageId;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SmsConversionIntl',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Reports the status of an OTP message to Alibaba Cloud SMS.
 *
 * @description Metrics:
 * *   Requested OTP messages
 * *   Verified OTP messages
 * An OTP conversion rate is calculated based on the following formula: OTP conversion rate = Number of verified OTP messages/Number of requested OTP messages.
 * > If you call the SmsConversion operation to query OTP conversion rates, your business may be affected. We recommend that you perform the following operations: 1. Call the SmsConversion operation in an asynchronous manner by configuring queues or events. 2. Manually degrade your services or use a circuit breaker to automatically degrade services.
 *
 * @param request SmsConversionIntlRequest
 * @return SmsConversionIntlResponse
 */
async function smsConversionIntl(request: SmsConversionIntlRequest): SmsConversionIntlResponse {
  var runtime = new Util.RuntimeOptions{};
  return smsConversionIntlWithOptions(request, runtime);
}

model TagResourcesRequest {
  ownerId?: long(name='OwnerId'),
  prodCode?: string(name='ProdCode', description='The name of the cloud service. Set the value to **dysms**.', example='dysms'),
  regionId?: string(name='RegionId', description='The region ID. Set the value to **cn-hangzhou**.

This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', description='The code of the message template.', example='SMS_23423423'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to **TEMPLATE**.

This parameter is required.', example='TEMPLATE'),
  tag?: [ 
    {
      key?: string(name='Key', description='The array of tag keys. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The array of tag values. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tag.

This parameter is required.'),
}

model TagResourcesResponseBody = {
  code?: string(name='Code', description='The response code.

*   If OK is returned, the request is successful.
*   Other values indicate that the request fails. For more information, see [Error codes](https://help.aliyun.com/document_detail/101346.html).', example='OK'),
  data?: string(name='Data', description='Indicates whether tags were attached. Valid values:

*   **true**
*   **false**', example='true'),
  requestId?: string(name='RequestId', description='The request ID.', example='A90E4451-FED7-49D2-87C8-00700A8C****'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

/**
 * @summary Attaches tags to a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request TagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return TagResourcesResponse
 */
async function tagResourcesWithOptions(request: TagResourcesRequest, runtime: Util.RuntimeOptions): TagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.prodCode)) {
    query['ProdCode'] = request.prodCode;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'TagResources',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Attaches tags to a message template.
 *
 * @description ### QPS limit
 * You can call this operation up to 50 times per second per account. If the number of the calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
 *
 * @param request TagResourcesRequest
 * @return TagResourcesResponse
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return tagResourcesWithOptions(request, runtime);
}

model UntagResourcesRequest {
  all?: boolean(name='All', example='false'),
  ownerId?: long(name='OwnerId'),
  prodCode?: string(name='ProdCode', example='dysms'),
  regionId?: string(name='RegionId', description='This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', example='SMS_23423423'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  resourceType?: string(name='ResourceType', description='This parameter is required.', example='TEMPLATE'),
  tagKey?: [ string ](name='TagKey', example='TestKey'),
}

model UntagResourcesResponseBody = {
  code?: string(name='Code', example='OK'),
  data?: string(name='Data', example='true'),
  requestId?: string(name='RequestId', example='A90E4451-FED7-49D2-87C8-00700A8C****'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

/**
 * @param request UntagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UntagResourcesResponse
 */
async function untagResourcesWithOptions(request: UntagResourcesRequest, runtime: Util.RuntimeOptions): UntagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.all)) {
    query['All'] = request.all;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.prodCode)) {
    query['ProdCode'] = request.prodCode;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tagKey)) {
    query['TagKey'] = request.tagKey;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UntagResources',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @param request UntagResourcesRequest
 * @return UntagResourcesResponse
 */
async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return untagResourcesWithOptions(request, runtime);
}

model UpdateSmsSignRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  moreData?: [ string ](name='MoreData'),
  ownerId?: long(name='OwnerId'),
  qualificationId?: long(name='QualificationId', description='This parameter is required.', example='2004393xxxx'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='This parameter is required.'),
  signSource?: int32(name='SignSource', description='This parameter is required.', example='1'),
  signType?: int32(name='SignType', example='1'),
  thirdParty?: boolean(name='ThirdParty', example='false'),
}

model UpdateSmsSignShrinkRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  moreDataShrink?: string(name='MoreData'),
  ownerId?: long(name='OwnerId'),
  qualificationId?: long(name='QualificationId', description='This parameter is required.', example='2004393xxxx'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  signName?: string(name='SignName', description='This parameter is required.'),
  signSource?: int32(name='SignSource', description='This parameter is required.', example='1'),
  signType?: int32(name='SignType', example='1'),
  thirdParty?: boolean(name='ThirdParty', example='false'),
}

model UpdateSmsSignResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  orderId?: string(name='OrderId', example='20044174408'),
  requestId?: string(name='RequestId', example='A90E4451-FED7-49D2-87C8-00700A8C4D0D'),
  signName?: string(name='SignName'),
}

model UpdateSmsSignResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateSmsSignResponseBody(name='body'),
}

/**
 * @summary 修改文本短信签名
 *
 * @param tmpReq UpdateSmsSignRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UpdateSmsSignResponse
 */
async function updateSmsSignWithOptions(tmpReq: UpdateSmsSignRequest, runtime: Util.RuntimeOptions): UpdateSmsSignResponse {
  Util.validateModel(tmpReq);
  var request = new UpdateSmsSignShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.moreData)) {
    request.moreDataShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.moreData, 'MoreData', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.applySceneContent)) {
    query['ApplySceneContent'] = request.applySceneContent;
  }
  if (!Util.isUnset(request.moreDataShrink)) {
    query['MoreData'] = request.moreDataShrink;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.qualificationId)) {
    query['QualificationId'] = request.qualificationId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.signName)) {
    query['SignName'] = request.signName;
  }
  if (!Util.isUnset(request.signSource)) {
    query['SignSource'] = request.signSource;
  }
  if (!Util.isUnset(request.signType)) {
    query['SignType'] = request.signType;
  }
  if (!Util.isUnset(request.thirdParty)) {
    query['ThirdParty'] = request.thirdParty;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UpdateSmsSign',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 修改文本短信签名
 *
 * @param request UpdateSmsSignRequest
 * @return UpdateSmsSignResponse
 */
async function updateSmsSign(request: UpdateSmsSignRequest): UpdateSmsSignResponse {
  var runtime = new Util.RuntimeOptions{};
  return updateSmsSignWithOptions(request, runtime);
}

model UpdateSmsTemplateRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  intlType?: int32(name='IntlType', example='0'),
  moreData?: [ string ](name='MoreData'),
  ownerId?: long(name='OwnerId'),
  relatedSignName?: string(name='RelatedSignName'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='This parameter is required.', example='SMS_152550****'),
  templateContent?: string(name='TemplateContent', description='This parameter is required.'),
  templateName?: string(name='TemplateName', description='This parameter is required.'),
  templateRule?: string(name='TemplateRule', example='{"code":"characterWithNumber"}'),
  templateType?: int32(name='TemplateType', description='This parameter is required.', example='0'),
}

model UpdateSmsTemplateShrinkRequest {
  applySceneContent?: string(name='ApplySceneContent', example='http://www.aliyun.com/'),
  intlType?: int32(name='IntlType', example='0'),
  moreDataShrink?: string(name='MoreData'),
  ownerId?: long(name='OwnerId'),
  relatedSignName?: string(name='RelatedSignName'),
  remark?: string(name='Remark'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  templateCode?: string(name='TemplateCode', description='This parameter is required.', example='SMS_152550****'),
  templateContent?: string(name='TemplateContent', description='This parameter is required.'),
  templateName?: string(name='TemplateName', description='This parameter is required.'),
  templateRule?: string(name='TemplateRule', example='{"code":"characterWithNumber"}'),
  templateType?: int32(name='TemplateType', description='This parameter is required.', example='0'),
}

model UpdateSmsTemplateResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  orderId?: string(name='OrderId', example='200412717818'),
  requestId?: string(name='RequestId', example='819BE656-D2E0-4858-8B21-B2E477085AAF'),
  templateCode?: string(name='TemplateCode', example='SMS_2322****'),
  templateName?: string(name='TemplateName'),
}

model UpdateSmsTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateSmsTemplateResponseBody(name='body'),
}

/**
 * @summary 修改文本短信模板
 *
 * @param tmpReq UpdateSmsTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UpdateSmsTemplateResponse
 */
async function updateSmsTemplateWithOptions(tmpReq: UpdateSmsTemplateRequest, runtime: Util.RuntimeOptions): UpdateSmsTemplateResponse {
  Util.validateModel(tmpReq);
  var request = new UpdateSmsTemplateShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.moreData)) {
    request.moreDataShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.moreData, 'MoreData', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.applySceneContent)) {
    query['ApplySceneContent'] = request.applySceneContent;
  }
  if (!Util.isUnset(request.intlType)) {
    query['IntlType'] = request.intlType;
  }
  if (!Util.isUnset(request.moreDataShrink)) {
    query['MoreData'] = request.moreDataShrink;
  }
  if (!Util.isUnset(request.ownerId)) {
    query['OwnerId'] = request.ownerId;
  }
  if (!Util.isUnset(request.relatedSignName)) {
    query['RelatedSignName'] = request.relatedSignName;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceOwnerAccount)) {
    query['ResourceOwnerAccount'] = request.resourceOwnerAccount;
  }
  if (!Util.isUnset(request.resourceOwnerId)) {
    query['ResourceOwnerId'] = request.resourceOwnerId;
  }
  if (!Util.isUnset(request.templateCode)) {
    query['TemplateCode'] = request.templateCode;
  }
  if (!Util.isUnset(request.templateContent)) {
    query['TemplateContent'] = request.templateContent;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!Util.isUnset(request.templateRule)) {
    query['TemplateRule'] = request.templateRule;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UpdateSmsTemplate',
    version = '2017-05-25',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 修改文本短信模板
 *
 * @param request UpdateSmsTemplateRequest
 * @return UpdateSmsTemplateResponse
 */
async function updateSmsTemplate(request: UpdateSmsTemplateRequest): UpdateSmsTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return updateSmsTemplateWithOptions(request, runtime);
}

