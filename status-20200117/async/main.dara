/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Status';
  @version = '2020-01-17';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model ListEventInProgressRequest {
  regionIds: [ string ](name='RegionIds', shrink='json', position='Body'),
}

model ListEventInProgressResponseBody = {
  data?: [ 
    {
      eventUpdates?: [ 
        {
          content?: string(name='Content'),
          publishTime?: long(name='PublishTime', example='1680660940017'),
        }
      ](name='EventUpdates'),
      id?: long(name='Id', example='101'),
      impacts?: [ 
        {
          product?: {
            productId?: string(name='ProductId', example='ecs'),
            productName?: string(name='ProductName'),
          }(name='Product'),
          recoveryTime?: long(name='RecoveryTime', example='1680660940017'),
          region?: {
            regionId?: string(name='RegionId', example='cn-shanghai'),
            regionName?: string(name='RegionName'),
          }(name='Region'),
          startTime?: long(name='StartTime', example='1680660940017'),
        }
      ](name='Impacts'),
      startTime?: long(name='StartTime', example='1680660940017'),
      title?: string(name='Title'),
    }
  ](name='Data'),
  requestId?: string(name='RequestId', example='56CC5080-39B9-50AD-AEA1-483D9B0F8F24'),
}

model ListEventInProgressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListEventInProgressResponseBody(name='body'),
}

async function listEventInProgress(request: ListEventInProgressRequest): ListEventInProgressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListEventInProgress', 'POST', '/', 'json', true, 'form', request);
}

