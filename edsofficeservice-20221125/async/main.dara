/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'EdsOfficeService';
  @version = '2022-11-25';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model CreateDesktopPoolRequest {
}

model CreateDesktopPoolResponseBody = {
  code?: string(name='Code'),
  data?: string(name='Data'),
  httpStatusCode?: int32(name='HttpStatusCode'),
  message?: string(name='Message'),
  requestId?: string(name='RequestId'),
  success?: boolean(name='Success'),
}

model CreateDesktopPoolResponse = {
  headers: map[string]string(name='headers'),
  body: CreateDesktopPoolResponseBody(name='body'),
}

async function createDesktopPool(request: CreateDesktopPoolRequest): CreateDesktopPoolResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDesktopPool', 'POST', '/', 'json', false, 'json', request);
}

