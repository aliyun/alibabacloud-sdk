/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'IntelligentCreation';
  @version = '2024-11-07';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model CreateLabelTaskRequest {
  fileUrl?: string(name='fileUrl', example='oss://test/test', position='Body'),
  idempotentId?: string(name='idempotentId', example='7caa09aa60204086909ba3958810a567', position='Body'),
  labelTemplateId?: string(name='labelTemplateId', example='1_for_7_label_v1', position='Body'),
}

model CreateLabelTaskResponseBody = {
  errorCode?: string(name='errorCode', example='PARAM_ERROR'),
  errorMessage?: string(name='errorMessage'),
  requestId?: string(name='requestId', example='56AC346B-AF40-5E4F-AFFE-FD8BA5E6FB3A'),
  success?: boolean(name='success', example='true'),
  taskId?: string(name='taskId', example='829682927337963520'),
}

model CreateLabelTaskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateLabelTaskResponseBody(name='body'),
}

/**
  * @param request  the request parameters of CreateLabelTask  CreateLabelTaskRequest
  * @return CreateLabelTaskResponse
 */
async function createLabelTask(request: CreateLabelTaskRequest): CreateLabelTaskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'CreateLabelTask', 'POST', '/yic/yic-console/openService/v1/aitag/createLabelTask', 'json', false, 'json', request);
}

model GetLabelTaskResultRequest {
  taskId?: string(name='taskId', example='313123123', position='Query'),
}

model GetLabelTaskResultResponseBody = {
  message?: string(name='message', example='ok'),
  requestId?: string(name='requestId', example='D5798660-1531-5D12-9C20-16FEE9D22351'),
  resultDataUrl?: string(name='resultDataUrl', example='https://yic-pre.oss-cn-hangzhou.aliyuncs.com/ai_tag_algo_log/1539704706413278/829593441691238400/merge_label_final_result?Expires=1732083305&OSSAccessKeyId=LTAI5tPHLyFPhh4UoRias4Zg&Signature=Am3cBxlc6hYFKtdGlw9o1R26Vsk%3D'),
  status?: string(name='status', example='SUCCESS'),
  tokens?: long(name='tokens', example='20023'),
}

model GetLabelTaskResultResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetLabelTaskResultResponseBody(name='body'),
}

/**
  * @param request  the request parameters of GetLabelTaskResult  GetLabelTaskResultRequest
  * @return GetLabelTaskResultResponse
 */
async function getLabelTaskResult(request: GetLabelTaskResultRequest): GetLabelTaskResultResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetLabelTaskResult', 'GET', '/yic/yic-console/openService/v1/aitag/getLabelTask', 'json', false, 'json', request);
}

