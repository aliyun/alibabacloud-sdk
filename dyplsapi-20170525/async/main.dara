/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Dyplsapi';
  @version = '2017-05-25';
  @endpointRule = 'central';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model AddAxnTrackNoRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoX: string(name='PhoneNoX', description='The private number in the AXN binding, that is, phone number X.

You can call the [BindAxn](~~110258~~) operation to obtain the value of PhoneNoX.', example='1700000****', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC2235****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  subsId: string(name='SubsId', description='The binding ID.

You can call the [BindAxn](~~110258~~) operation to obtain the value of SubsId.', example='15678890****', position='Query'),
  trackNo: string(name='trackNo', description='The tracking number.', example='abcde*****', position='Query'),
}

model AddAxnTrackNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='1A4CADEF-8516-5890-9177-A1A4D97F****'),
}

model AddAxnTrackNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddAxnTrackNoResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function addAxnTrackNo(request: AddAxnTrackNoRequest): AddAxnTrackNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddAxnTrackNo', 'POST', '/', 'json', false, 'json', request);
}

model AddSecretBlacklistRequest {
  blackNo: string(name='BlackNo', description='The numbers in the blacklist. A point-to-point blacklist has a pair of numbers separated by a colon (:). A number pool blacklist has only one single number.

>  The asterisks (\\*) in the sample value are not wildcards.', example='1825638****:1825248****', position='Query'),
  blackType: string(name='BlackType', description='The blacklist type. Valid values:

*   **POINT_TO_POINT_BLACK**: point-to-point blacklist.
*   **PARTNER_GLOBAL_NUMBER_BLACK**: number pool blacklist.', example='POINT_TO_POINT_BLACK', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the Number Pool Management page.', example='FC2235****', position='Query'),
  remark?: string(name='Remark', description='The blacklist remarks.', example='Customer service feedback', position='Query'),
  wayControl?: string(name='WayControl', description='The control on the call direction.

*   **PHONEA_REJECT**: The first number in the blacklist can be used to call the second number, but the second number cannot be used to call the first number.
*   **PHONEB_REJECT**: The first number in the blacklist cannot be used to call the second number, but the second number can be used to call the first number.
*   If this parameter is left empty, the two numbers in the blacklist cannot be used to call each other.

>  This parameter is available only for a point-to-point blacklist.

Valid values:

*   DUPLEX_REJECT
*   PHONEA_REJECT
*   PHONEB_REJECT', example='PHONEA_REJECT', position='Query'),
}

model AddSecretBlacklistResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
}

model AddSecretBlacklistResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddSecretBlacklistResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function addSecretBlacklist(request: AddSecretBlacklistRequest): AddSecretBlacklistResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddSecretBlacklist', 'POST', '/', 'json', false, 'json', request);
}

model BindAxbRequest {
  ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model. On the [Automatic Speech Recognition (ASR) Model Management](https://dyplsnext.console.aliyun.com/?spm=5176.12818093.categories-n-products.ddypls.22e616d0a0tEFC#/asr) page, you can view the ID of the ASR model.', example='7ee372834d2f4cc7ac0d0ab2d0ae1aac', position='Query'),
  ASRStatus?: boolean(name='ASRStatus', description='Specifies whether to enable automatic speech recognition (ASR). Valid values:

*   **false** (default): disables ASR.
*   **true**: enables ASR.', example='false', position='Query'),
  callDisplayType?: int32(name='CallDisplayType', description='Re-sets the phone number display logic in the AXB binding. Fixed value: **1**, indicating that phone number X is displayed on both the calling phone and the called phone.

>  Due to the regulatory restrictions imposed by carriers, the setting to display real phone numbers during calls does not take effect.', example='1', position='Query'),
  callRestrict?: string(name='CallRestrict', description='The status of the one-way call restriction. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.', example='CONTROL_AX_DISABLE', position='Query'),
  callTimeout?: int32(name='CallTimeout', description='The maximum ringing duration for each number in sequential ringing. Unit: seconds. The value ranges from 5 to 20.', example='10', minimum=0, maximum=180, position='Query'),
  dtmfConfig?: string(name='DtmfConfig', description='Specifies the dual tone multiple frequency (DTMF) key configuration in the AXB binding. The following content can be configured:

*   endCallIvrPhoneNo: for whom the audio is played, user A or user B.
*   waitingDtmfTime: the maximum waiting time after the first audio is played. The maximum waiting time is 30 seconds.
*   maxLoop: the maximum number of loop playback times of the first audio if the DTMF key is not matched. The maximum number of loop playback times is 5.
*   step1File: the name of the first audio.
*   step2File: the name of the second audio.
*   validKey: the valid key values, such as 1,2. Only two valid key values can be set, and the key values are separated by a comma (,).
*   waitingEndCall: The waiting duration to hang up a call. The waiting duration is allowed by a carrier. The maximum waiting duration is 10 seconds.', example='{
    "endCallIvrPhoneNo":"A",
    "waitingDtmfTime":10,
    "maxLoop":3,
    "step1File":"62ab72f8-4750-4234-859e-e8d678c0cad3-flow_tts_test_1.wav",
    "step2File":"62ab72f8-4750-4234-859e-e8d678c0cad3-flow_tts_test_2.wav",
    "validKey":"1,2",
    "waitingEndCall":2
}', position='Query'),
  expectCity?: string(name='ExpectCity', description='Specifies the city to which phone number X to be selected belongs.

*   If no phone number for the specified city is available in the current phone number pool or this parameter is not specified, a phone number that belongs to another city is randomly selected from the current phone number pool and assigned as phone number X.
*   If**Number X Assignment Mode** is set to **Strict Matching Mode** and no phone number meets the requirement, the system displays an allocation error.', example='hangzhou', position='Query'),
  expiration: string(name='Expiration', description='The expiration time of the AXB binding.

>  The expiration time must be more than 1 minute later than the time when you call this API operation.', example='2021-09-05 12:00:00', position='Query'),
  isRecordingEnabled?: boolean(name='IsRecordingEnabled', description='Specifies whether to record all calls made by the bound phone numbers. Valid values:

*   **true**
*   **false** (default)', example='true', position='Query'),
  outId?: string(name='OutId', description='The extension field for the external business. This parameter is returned in a call record receipt.', example='abcdef', position='Query'),
  outOrderId?: string(name='OutOrderId', description='The ID of the external business.', example='34553330****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoA: string(name='PhoneNoA', description='Phone number A in the AXB binding.

Phone number A can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoB?: string(name='PhoneNoB', description='Phone number B in the AXB binding. If phone number A is used to call phone number X, the call is forwarded to phone number B. Phone number B can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.

>  If you need to update phone number B, call the [UpdateSubscription](~~110253~~) operation.', example='139****0000', position='Query'),
  phoneNoX?: string(name='PhoneNoX', description='Phone number X in the AXB binding.

Phone number X is the phone number that you purchased in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) or by using the [BuySecretNo](~~110266~~) operation before you bind a phone number. Phone number X is used to forward calls.

If you do not specify this parameter, a random phone number is selected from the phone number pool based on the value of the ExpectCity parameter and is used as phone number X.', example='139****0000', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC5526*****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  ringConfig?: string(name='RingConfig', description='Sets the ringtone code for enterprise Color Ring Back Tone (CRBT) in the AXB binding.

*   Ringtone setting when phone number A is used to call phone number X in the AXB binding: AXBRing_A
*   Ringtone setting when phone number B is used to call phone number X in the AXB binding: AXBRing_B

Enterprise CRBT codes: Enterprise CRBT codes can be queried in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). You can choose **Number Pool Management** > **Enterprise CRBT Management** to view enterprise CRBT codes. You can also upload, delete, or perform other operations on enterprise CRBT codes.

>  The bound enterprise CRBTs are preferentially used. If no enterprise CRBT is set or the setting does not take effect, the enterprise CRBTs at the phone number pool level are used.', example='{"AXBRing_B":"1000****1","AXBRing_A":"1000****1"}', position='Query'),
}

model BindAxbResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9297B722-A016-43FB-B51A-E54050D9369D'),
  secretBindDTO?: {
    extension?: string(name='Extension', description='The extension of the phone number.

>  The BindAxb operation does not involve an extension. Ignore this parameter.', example='130'),
    secretNo?: string(name='SecretNo', description='The private number, that is, phone number X.', example='139****0000'),
    subsId?: string(name='SubsId', description='The binding ID.', example='1**************3'),
  }(name='SecretBindDTO', description='The information returned after the phone numbers were bound.'),
}

model BindAxbResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BindAxbResponseBody(name='body'),
}

/**
  * Before you add an AXB binding, we recommend that you specify role A and role B in the AXB device certificate (ProductKey, DeviceName, and DeviceSecret) in your business scenario. For example, in a taxi-hailing scenario, role A is the passenger and role B is the driver.
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function bindAxb(request: BindAxbRequest): BindAxbResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BindAxb', 'POST', '/', 'json', false, 'json', request);
}

model BindAxgRequest {
  ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model.', example='980abddb908f48e8b987cb2cd303****', position='Query'),
  ASRStatus?: boolean(name='ASRStatus', description='Specifies whether to enable automatic speech recognition (ASR). Valid values:

*   **False** (default): disables ASR.
*   **True**: enables ASR.', example='False', position='Query'),
  callDisplayType?: int32(name='CallDisplayType', description='Re-sets the phone number display logic in the AXG binding. Fixed value: **1**, indicating that phone number X is displayed on both the calling phone and the called phone.

>  Due to the regulatory restrictions imposed by carriers, the setting to display real phone numbers during calls does not take effect.', example='1', position='Query'),
  callRestrict?: string(name='CallRestrict', description='The status of call restrictions. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.', example='CONTROL_AX_DISABLE', position='Query'),
  expectCity?: string(name='ExpectCity', description='Specifies the city to which phone number X to be selected belongs.

*   If no phone number for the specified city is available in the current phone number pool or this parameter is not specified, a phone number that belongs to another city is randomly selected from the current phone number pool and assigned as phone number X.
*   If Number X Assignment Mode is set to Strict Matching Mode and no phone number meets the requirement, the system displays an allocation error.', example='hangzhou', position='Query'),
  expiration: string(name='Expiration', description='The expiration time of the AXG binding. The value is accurate to seconds.

>  The expiration time must be more than 1 minute later than the time when you call this API operation.', example='2019-09-05 12:00:00', position='Query'),
  groupId: string(name='GroupId', description='The group ID in the AXG binding. You can view the group ID by using either of the following methods:

*   On the **Number Pool Management** page in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account), filter AXG privacy numbers and click **Number Group G Management** to view the group IDs of number groups G.****
*   If the [CreateAxgGroup](~~110250~~) operation is called to create number group G, the value of **GroupId** in the response of the CreateAxgGroup operation is specified as the value of the request parameter **GroupId** of the BindAxg operation.

>  Number group G must have one or more phone numbers.', example='1234', position='Query'),
  isRecordingEnabled?: boolean(name='IsRecordingEnabled', description='Specifies whether to record all calls made by the bound phone numbers.', example='true', position='Query'),
  outId?: string(name='OutId', description='The extension field for the external business. This parameter is returned in a call record receipt.', example='abcdef', position='Query'),
  outOrderId?: string(name='OutOrderId', description='The ID of the external business.', example='abcdef', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoA: string(name='PhoneNoA', description='Phone number A in the AXG binding. Phone number A can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoB?: string(name='PhoneNoB', description='Phone number B in the AXG binding. If phone number A is used to call phone number X, the call is forwarded to phone number B. If you need to update phone number B, call the [UpdateSubscription](~~110253~~) operation.

Phone number B can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoX?: string(name='PhoneNoX', description='Phone number X in the AXG binding. If you do not specify this parameter, a random phone number is selected from the phone number pool based on the value of the **ExpectCity** parameter and is used as phone number X.

>  Phone number X is the phone number that you purchased in the Phone Number Protection console or by using the [BuySecretNo](~~110266~~) operation before you bind a phone number. Phone number X is used to forward calls.', example='139****0000', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  ringConfig?: string(name='RingConfig', description='Sets the ringtone for enterprise Color Ring Back Tone (CRBT) in the AXG binding.

*   Ringtone setting (with a callback number) when phone number A is used to call phone number X in the AXG binding: AXGRing_AB
*   Ringtone setting (without a callback number) when phone number A is used to call phone number X in the AXG binding: AXGRing_A
*   Ringtone setting when a phone number in number group G is used to call phone number X in the AXG binding: AXGRing_G
*   Enterprise CRBT codes: Enterprise CRBT codes can be queried in the Phone Number Protection console. You can choose **Number Pool Management > Enterprise CRBT Management** to view and manage enterprise CRBT codes. You can also upload, delete, or perform other operations on enterprise CRBT codes.

>  The bound enterprise CRBTs are preferentially used. If no enterprise CRBT is set or the setting does not take effect, the enterprise CRBTs at the phone number pool level are used.', example='{"AXGRing_AB":"100000001","AXGRing_A":"100000002","AXGRing_G":"100000003"}', position='Query'),
}

model BindAxgResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  secretBindDTO?: {
    extension?: string(name='Extension', description='The extension of the phone number.

>  The BindAxg operation does not involve an extension. Ignore this parameter.', example='139****0000'),
    secretNo?: string(name='SecretNo', description='The private number, that is, phone number X.', example='139****0000'),
    subsId?: string(name='SubsId', description='The binding ID.', example='1************3'),
  }(name='SecretBindDTO', description='The information returned after the phone numbers were bound.'),
}

model BindAxgResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BindAxgResponseBody(name='body'),
}

/**
  * An AXG protection solution can be configured to meet the requirements for grading users, limiting the scope of calls, and restricting order snatching. The letter G represents a phone number group to which you can add phone numbers as needed.
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function bindAxg(request: BindAxgRequest): BindAxgResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BindAxg', 'POST', '/', 'json', false, 'json', request);
}

model BindAxnRequest {
  ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model. On the [Automatic Speech Recognition (ASR) Model Management](https://dyplsnext.console.aliyun.com/?spm=5176.12818093.categories-n-products.ddypls.22e616d0a0tEFC#/asr) page, you can view the ID of the ASR model.', example='7ee372834d2f4cc7ac0d0ab2d0ae1aac', position='Query'),
  ASRStatus?: boolean(name='ASRStatus', description='Specifies whether to enable automatic speech recognition (ASR). Valid values:

*   **false** (default): disables ASR.
*   **true**: enables ASR.', example='true', position='Query'),
  callDisplayType?: int32(name='CallDisplayType', description='Re-sets the phone number display logic in the AXN binding. Fixed value: **1**, indicating that phone number X is displayed on both the calling phone and the called phone.

>  Due to the regulatory restrictions imposed by carriers, the setting to display real phone numbers during calls does not take effect.', example='1', position='Query'),
  callRestrict?: string(name='CallRestrict', description='The status of one-way call restrictions. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.', example='CONTROL_AX_DISABLE', position='Query'),
  callTimeout?: int32(name='CallTimeout', description='The maximum ringing duration for each number in sequential ringing. Unit: seconds.', example='10', minimum=5, maximum=20, position='Query'),
  expectCity?: string(name='ExpectCity', description='Specifies the city to which phone number X to be selected belongs.

*   If no phone number for the specified city is available in the current phone number pool or this parameter is not specified, a phone number that belongs to another city is randomly selected from the current phone number pool and assigned as phone number X.
*   If **Number X Assignment Mode** is set to **Strict Matching Mode** and no phone number meets the requirement, the system displays an allocation error.', example='hangzhou', position='Query'),
  expiration: string(name='Expiration', description='The expiration time of the AXN binding. Unit: seconds.

>  The expiration time must be more than 60 seconds later than the time when you call this API operation.', example='2021-09-05 12:00:00', position='Query'),
  isRecordingEnabled?: boolean(name='IsRecordingEnabled', description='Specifies whether to record all calls made by the bound phone numbers. Valid values:

*   **true**
*   **false** (default)', example='true', position='Query'),
  noType?: string(name='NoType', description='The type of the phone number.

>  This parameter is applicable to the key accounts of Alibaba Cloud. This parameter can be ignored for Alibaba Cloud users.', example='AXB_170', position='Query'),
  outId?: string(name='OutId', description='The extension field for the external business. This parameter is returned in a call record receipt.', example='abcdef', position='Query'),
  outOrderId?: string(name='OutOrderId', description='The ID of the external business.', example='34553330****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoA: string(name='PhoneNoA', description='Phone number A in the AXN binding. Phone number A can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoB?: string(name='PhoneNoB', description='Phone number B in the AXN binding. If phone number A is used to call phone number X, the call is forwarded to phone number B. Phone number B can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.

>  If phone number B is not specified in the AXN binding, the system automatically generates a nonexistent number. If phone number A is used to call phone number X, the nonexistent number is returned. If you need to update phone number B, call the [UpdateSubscription](~~110253~~) operation.', example='138****0000', position='Query'),
  phoneNoX?: string(name='PhoneNoX', description='Phone number X in the AXN binding. Phone number X is the phone number that you purchased in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) or by using the [BuySecretNo](~~110266~~) operation before you bind a phone number. Phone number X is used to forward calls.

>  If you do not specify this parameter, a random phone number is selected from the phone number pool based on the value of the ExpectCity parameter and is used as phone number X.', example='139****0000', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console ](https://dypls.console.aliyun.com/dypls.htm#/account)and view the key of the phone number pool on the **Number Pool Management** page.', example='FC2256****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  ringConfig?: string(name='RingConfig', description='Sets the ringtone code for enterprise Color Ring Back Tone (CRBT) in the AXN extension binding.

*   Ringtone setting (with a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_AB
*   Ringtone setting (without a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_A
*   Ringtone setting when an N-side number is used to call phone number X in the AXN extension binding: AXNRing_N

Enterprise CRBT codes: Enterprise CRBT codes can be queried in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). You can choose **Number Pool Management > Enterprise CRBT Management** to view enterprise CRBT codes. You can also upload, delete, or perform other operations on enterprise CRBT codes.

>  The bound enterprise CRBTs are preferentially used. If no enterprise CRBT is set or the setting does not take effect, the enterprise CRBTs at the phone number pool level are used.', example='{"AXNRing_N":"100000001","AXNRing_A":"100000001"}', position='Query'),
}

model BindAxnResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
  secretBindDTO?: {
    extension?: string(name='Extension', description='The extension of the phone number.

>  The BindAxn operation does not involve an extension. Ignore this parameter.', example='130'),
    secretNo?: string(name='SecretNo', description='The private number, that is, phone number X.', example='139****0000'),
    subsId?: string(name='SubsId', description='The binding ID.', example='1***************3'),
  }(name='SecretBindDTO', description='The information returned after the phone numbers were bound.'),
}

model BindAxnResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BindAxnResponseBody(name='body'),
}

/**
  * >  An AXN private number is a dedicated private number assigned to phone number A. When an N-side number is used to call phone number X, the call is forwarded to phone number A.
  *
 */
async function bindAxn(request: BindAxnRequest): BindAxnResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BindAxn', 'POST', '/', 'json', false, 'json', request);
}

model BindAxnExtensionRequest {
  ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model. On the [Automatic Speech Recognition (ASR) Model Management](https://dyplsnext.console.aliyun.com/?spm=5176.12818093.categories-n-products.ddypls.22e616d0a0tEFC#/asr) page, you can view the ID of the ASR model.', example='980abddb908f48e8b987cb2cd303****', position='Query'),
  ASRStatus?: boolean(name='ASRStatus', description='Specifies whether to enable automatic speech recognition (ASR). Valid values:

*   **false** (default): disables ASR.
*   **true**: enables ASR.', example='True', position='Query'),
  callDisplayType?: int32(name='CallDisplayType', description='Re-sets the phone number display logic in the AXN extension binding. Fixed value: **1**, indicating that phone number X is displayed on both the calling phone and the called phone.

>  Due to the regulatory restrictions imposed by carriers, the setting to display real phone numbers during calls does not take effect.', example='1', position='Query'),
  callRestrict?: string(name='CallRestrict', description='The status of call restrictions. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.', example='CONTROL_AX_DISABLE', position='Query'),
  expectCity?: string(name='ExpectCity', description='Specifies the city to which phone number X to be selected belongs.

*   If no phone number for the specified city is available in the current phone number pool or this parameter is not specified, a phone number that belongs to another city is randomly selected from the current phone number pool and assigned as phone number X.
*   If Number X Assignment Mode is set to Strict Matching Mode and no phone number meets the requirement, the system displays an allocation error.', example='hangzhou', position='Query'),
  expiration: string(name='Expiration', description='The expiration time of the AXN extension binding. The value is accurate to seconds.

>  The expiration time must be more than 1 minute later than the time when you call this API operation.', example='2019-09-05 12:00:00', position='Query'),
  extend?: string(name='Extend', position='Query'),
  extension?: string(name='Extension', description='The extension of phone number X. The extension is 1 to 3 digits in length.

>  If you specify Extension, you must also specify PhoneNoX.', example='130', position='Query'),
  isRecordingEnabled?: boolean(name='IsRecordingEnabled', description='Specifies whether to record all calls made by the bound phone numbers. Valid values:

*   **true**
*   **false** (default)', example='true', position='Query'),
  outId?: string(name='OutId', description='The extension field for the external business. This parameter is returned in a call record receipt.', example='abcdef', position='Query'),
  outOrderId?: string(name='OutOrderId', description='The ID of the external business.', example='abcdef', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoA: string(name='PhoneNoA', description='Phone number A in the AXN extension binding. Phone number A can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoB?: string(name='PhoneNoB', description='Phone number B in the AXN extension binding. When phone number A is used to call phone number X, the call is forwarded to phone number B. If you need to update phone number B, call the [UpdateSubscription](~~110253~~) operation.

Phone number B can be set to a mobile phone number or a landline phone number. The landline phone number must be added with an area code, and no hyphen is required between the area code and the landline phone number.', example='139****0000', position='Query'),
  phoneNoX?: string(name='PhoneNoX', description='Phone number X in the AXN extension binding. If you do not specify this parameter, a random phone number is selected from the phone number pool based on the value of the **ExpectCity** parameter and is used as phone number X.

>  Phone number X is the phone number that you purchased in the Phone Number Protection console or by using the [BuySecretNo](~~110266~~) operation before you bind a phone number. Phone number X is used to forward calls.', example='139****0000', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  ringConfig?: string(name='RingConfig', description='Sets the ringtone for enterprise Color Ring Back Tone (CRBT) in the AXN extension binding.

*   Ringtone setting (with a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_AB
*   Ringtone setting (without a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_A
*   Ringtone setting when an N-side number is used to call phone number X in the AXN extension binding: AXNRing_N

Enterprise CRBT codes: Enterprise CRBT codes can be queried in the Phone Number Protection console. You can choose **Number Pool Management > Enterprise CRBT Management** to view and manage enterprise CRBT codes. You can also upload, delete, or perform other operations on enterprise CRBT codes.

>  The bound enterprise CRBTs are preferentially used. If no enterprise CRBT is set or the setting does not take effect, the enterprise CRBTs at the phone number pool level are used.', example='{"AXNRing_N":"100000001","AXNRing_A":"100000001"}', position='Query'),
}

model BindAxnExtensionResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9297B722-A016-43FB-B51A-E54050D9369D'),
  secretBindDTO?: {
    extension?: string(name='Extension', description='The extension of the phone number.', example='130'),
    secretNo?: string(name='SecretNo', description='The private number, that is, phone number X.', example='139*****0000'),
    subsId?: string(name='SubsId', description='The binding ID.', example='1***************3'),
  }(name='SecretBindDTO', description='The information returned after the phone numbers were bound.'),
}

model BindAxnExtensionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BindAxnExtensionResponseBody(name='body'),
}

/**
  * Before you add an AXN extension binding, confirm phone number A and phone number N in the business scenario. Phone number A belongs to a customer, and phone number X is the private number assigned to the customer. When any other phone number is used to call phone number X and the extension, the call is transferred to phone number A. When phone number A is used to call phone number X, the call is transferred to the default phone number B that is specified during the phone number binding.
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function bindAxnExtension(request: BindAxnExtensionRequest): BindAxnExtensionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BindAxnExtension', 'POST', '/', 'json', false, 'json', request);
}

model BindBatchAxgRequest {
  axgBindList: [ 
    {
      ASRModelId?: string(name='ASRModelId', example='7ee372834d2f4cc7ac0d0ab2d0ae1aac'),
      ASRStatus?: boolean(name='ASRStatus', example='true'),
      callDisplayType?: int32(name='CallDisplayType', example='1'),
      callRestrict?: string(name='CallRestrict', example='CONTROL_AX_DISABLE'),
      expectCity?: string(name='ExpectCity'),
      expiration?: string(name='Expiration', example='2022-07-11 01:05:15'),
      groupId: string(name='GroupId', example='1234'),
      isRecordingEnabled?: boolean(name='IsRecordingEnabled', example='False'),
      outId?: string(name='OutId', example='18223ad447910fd'),
      outOrderId?: string(name='OutOrderId', example='20220824021816883677'),
      phoneNoA: string(name='PhoneNoA', example='13333333333'),
      phoneNoB?: string(name='PhoneNoB', example='13333333333'),
      phoneNoX?: string(name='PhoneNoX', example='13333333333'),
      ringConfig?: string(name='RingConfig', example='{\\"AXBRing_B\\":\\"100000002\\",\\"AXBRing_A\\":\\"100000001\\"}'),
    }
  ](name='AxgBindList', shrink='json', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey?: string(name='PoolKey', example='FC2235****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model BindBatchAxgResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='OK'),
  requestId?: string(name='RequestId', example='5DCCA8CD-6C0A-50B4-A496-B1D2AB48A1C3'),
  secretBindList?: {
    secretBind?: [ 
    {
      code?: string(name='Code', example='isv.INVALID_PARAMETERS'),
      extension?: string(name='Extension', example='257'),
      groupId?: string(name='GroupId', example='1234'),
      message?: string(name='Message', example='ringConfig invalid'),
      phoneNoA?: string(name='PhoneNoA', example='13333333333'),
      secretNo?: string(name='SecretNo', example='13333333333'),
      subsId?: string(name='SubsId', example='1000085060515673'),
    }
  ](name='SecretBind')
  }(name='SecretBindList'),
}

model BindBatchAxgResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BindBatchAxgResponseBody(name='body'),
}

async function bindBatchAxg(request: BindBatchAxgRequest): BindBatchAxgResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BindBatchAxg', 'POST', '/', 'json', false, 'json', request);
}

model BuySecretNoRequest {
  city: string(name='City', description='Specifies the home location of the phone number.

> 

*   The home location can be set only to a location in the Chinese mainland.

*   A phone number that starts with 95 does not have a home location. If you purchase a phone number that starts with 95, set this parameter to **Nationwide**.', example='hangzhou', position='Query'),
  displayPool?: boolean(name='DisplayPool', description='Specifies whether to add the phone number to the pool of numbers that will be displayed during calls.

>  This parameter takes effect only for customers who have enabled the number display feature.', example='true', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo?: string(name='SecretNo', description='The prefix of the phone number. If you specify the value of **SecretNo** when you purchase a phone number, a phone number starting with the specified prefix is selected.

>  You can specify up to 18 digits of the phone number prefix.', example='130', position='Query'),
  specId: long(name='SpecId', description='The type of the phone number. Valid values:

*   **1**: a phone number assigned by a virtual network operator, that is, a phone number that belongs to the 170 or 171 number segment.
*   **2**: a phone number provided by a carrier.
*   **3**: a phone number that starts with 95.', example='1', position='Query'),
}

model BuySecretNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='2D1AEB96-96D0-454E-B0DC-AE2A8DF08020'),
  secretBuyInfoDTO?: {
    secretNo?: string(name='SecretNo', description='The private number, that is, phone number X.', example='1390000****'),
  }(name='SecretBuyInfoDTO', description='The information returned after the operation was called.'),
}

model BuySecretNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: BuySecretNoResponseBody(name='body'),
}

/**
  * *   After you create a phone number pool in the Phone Number Protection console, the phone number pool is empty by default. You must purchase phone numbers and add them to the phone number pool.
  * *   Before you call this operation, make sure that you are familiar with the [pricing](~~59825~~) of Phone Number Protection.
  * *   When purchasing a phone number, specify the home location. If no sufficient phone numbers are available for purchase in the home location, the purchase of the phone number fails. Before you call this operation to purchase a phone number, check the quantity of phone numbers available for purchase by using the [QuerySecretNoRemain](~~111699~~) operation.
  * *   The account used to purchase a phone number must be an enterprise account that has passed real-name verification. For more information about how to perform real-name verification, see [Enterprise verification FAQs](~~37172~~).
  *
 */
async function buySecretNo(request: BuySecretNoRequest): BuySecretNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'BuySecretNo', 'POST', '/', 'json', false, 'json', request);
}

model CancelPickUpWaybillRequest {
  cancelDesc: string(name='CancelDesc', description='The cancellation reason.', example='{\\"action\\":\\"UPDATE_DESC\\",\\"value\\":\\"The courier is unable to pick up the package.\\"}', position='Query'),
  contentType?: string(name='Content-Type', description='The content type of the HTTP request. This parameter is optional. If you specify this parameter, enter application/json;chatset=UTF-8.', example='application/json;chatset=UTF-8', position='Header'),
  outerOrderCode: string(name='OuterOrderCode', description='The ID of the external order.', example='1145678823****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CancelPickUpWaybillResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  data?: {
    errorCode?: string(name='ErrorCode', description='The error code.', example='none'),
    errorMsg?: string(name='ErrorMsg', description='The error message.', example='none'),
    message?: string(name='Message', description='The cancellation result.', example='OK'),
    success?: boolean(name='Success', description='Indicates whether the cancellation was successful.', example='true'),
  }(name='Data', description='The returned data.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9FC30594-3841-43AD-9008-03393BCB5CD2'),
}

model CancelPickUpWaybillResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelPickUpWaybillResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function cancelPickUpWaybill(request: CancelPickUpWaybillRequest): CancelPickUpWaybillResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelPickUpWaybill', 'POST', '/', 'json', false, 'json', request);
}

model CreateAxgGroupRequest {
  name?: string(name='Name', description='The name of number group G. If the name of number group G is not specified, the ID of number group G is used as the name of number group G.

>  The value must be 1 to 128 characters in length.', example='Aliyun', position='Query'),
  numbers?: string(name='Numbers', description='The phone numbers that you add to number group G. Separate multiple phone numbers with commas (,). A maximum of 200 phone numbers can be added to number group G.', example='1390000****,1380000****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  remark?: string(name='Remark', description='The remarks of number group G. The value must be 0 to 256 characters in length.', example='test', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CreateAxgGroupResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  groupId?: long(name='GroupId', description='The ID of number group G. The value of this parameter is required when the [BindAxg](~~110249~~) operation is called to add an AXG binding.', example='2000000000001'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='635C0FDA-9EBC-43D7-B368-9F583C08A126'),
}

model CreateAxgGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAxgGroupResponseBody(name='body'),
}

/**
  * Before you add an AXG binding, you must purchase phone number X, create number group G, and then add phone numbers to number group G. If you do not add phone numbers to number group G after you create number group G, you can call the [OperateAxgGroup](https://help.aliyun.com/document_detail/110252.htm) operation to add phone numbers to number group G.
  * >  Up to 2,000 number groups G can be added for a single phone number pool.
  *
 */
async function createAxgGroup(request: CreateAxgGroupRequest): CreateAxgGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateAxgGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreatePickUpWaybillRequest {
  appointGotEndTime?: string(name='AppointGotEndTime', description='The end time of the door-to-door pickup in the appointment. The value of **AppointGotEndTime** is the value of **EndTime** of **AppointTimes** in **CpTimeSelectList** returned by the [CreatePickUpWaybillPreQuery](~~CreatePickUpWaybillPreQuery~~#resultMapping) operation.

>  This parameter is required when **BizType** is set to **1**.', example='2021-01-01 12:00:00', position='Query'),
  appointGotStartTime?: string(name='AppointGotStartTime', description='The start time of the door-to-door pickup in the appointment. The value of **AppointGotStartTime** is the value of **StartTime** of **AppointTimes** in **CpTimeSelectList** returned by the [CreatePickUpWaybillPreQuery](~~CreatePickUpWaybillPreQuery~~#resultMapping) operation.

>  This parameter is required when **BizType** is set to **1**.', example='2021-01-01 10:00:00', position='Query'),
  bizType?: int32(name='BizType', description='The pickup mode. Valid values:

*   **0** (default): real-time order.
*   **1**: appointment order.', example='0', position='Query'),
  consigneeAddress: {
    addressDetail: string(name='AddressDetail', description='The detailed address of the consignee.', example='XX community'),
    areaName: string(name='AreaName', description='The district where the consignee is located.', example='xihu'),
    cityName: string(name='CityName', description='The city where the consignee is located.', example='hangzhou'),
    provinceName: string(name='ProvinceName', description='The province where the consignee is located.', example='zhejiang'),
    townName?: string(name='TownName', description='The street where the consignee is located.', example='XX Street'),
  }(name='ConsigneeAddress', description='The address of the consignee.', shrink='json', position='Query'),
  consigneeMobile?: string(name='ConsigneeMobile', description='The mobile phone number of the consignee.

>  Either ConsigneeMobile or ConsigneePhone must be set.', example='1580000****', position='Query'),
  consigneeName: string(name='ConsigneeName', description='The name of the consignee.', example='Li', position='Query'),
  consigneePhone?: string(name='ConsigneePhone', description='The landline phone number of the consignee.

>  Either ConsigneeMobile or ConsigneePhone must be set.', example='0570000****', position='Query'),
  contentType?: string(name='Content-Type', description='The content type of the HTTP request. This parameter is optional. If you specify this parameter, enter application/json;chatset=UTF-8.', example='application/json;chatset=UTF-8', position='Header'),
  cpCode?: string(name='CpCode', description='The code of the courier company.', example='YTO', position='Query'),
  goodsInfos?: [ 
    {
      name?: string(name='Name', description='The item name.', example='zhang'),
      quantity?: string(name='Quantity', description='The item quantity.', example='1'),
      weight?: string(name='Weight', description='The item weight. Unit: gram.', example='1000'),
    }
  ](name='GoodsInfos', description='The items.', shrink='json', position='Query'),
  orderChannels: string(name='OrderChannels', description='The external channel sources.', example='YUN_DIAN_SHANG', position='Query'),
  outerOrderCode: string(name='OuterOrderCode', description='The ID of the external order.', example='143234234266****', position='Query'),
  remark?: string(name='Remark', description='The additional information about the order. The additional information will be printed on the order.', example='fragile', position='Query'),
  sendAddress: {
    addressDetail: string(name='AddressDetail', description='The detailed address of the sender.', example='XX community'),
    areaName: string(name='AreaName', description='The district where the sender is located.', example='wenjiang'),
    cityName: string(name='CityName', description='The city where the sender is located.', example='chengdu'),
    provinceName: string(name='ProvinceName', description='The province where the sender is located.', example='Sichuan'),
    townName?: string(name='TownName', description='The street where the sender is located.', example='XX Street'),
  }(name='SendAddress', description='The address of the sender.', shrink='json', position='Query'),
  sendMobile?: string(name='SendMobile', description='The mobile phone number of the sender.

>  Either SendMobile or SendPhone must be set.', example='1596714****', position='Query'),
  sendName: string(name='SendName', description='The name of the sender.', example='Wang', position='Query'),
  sendPhone?: string(name='SendPhone', description='The landline phone number of the sender.

>  Either SendMobile or SendPhone must be set.', example='05718845****', position='Query'),
}

model CreatePickUpWaybillResponseBody = {
  data?: {
    cpCode?: string(name='CpCode', description='The code of the courier company.', example='YTO'),
    errorCode?: string(name='ErrorCode', description='The error code.', example='200'),
    errorMsg?: string(name='ErrorMsg', description='The error message.', example='none'),
    gotCode?: string(name='GotCode', description='The pickup code.', example='3524'),
    mailNo?: string(name='MailNo', description='The order ID.', example='77312345629****'),
    success?: string(name='Success', description='Indicates whether the request was successful.', example='true'),
  }(name='Data', description='The returned data.'),
  httpStatusCode?: int32(name='HttpStatusCode', description='The HTTP status code.', example='200'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9FC30594-3841-43AD-9008-03393BCB5CD2'),
}

model CreatePickUpWaybillResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreatePickUpWaybillResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function createPickUpWaybill(request: CreatePickUpWaybillRequest): CreatePickUpWaybillResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreatePickUpWaybill', 'POST', '/', 'json', false, 'json', request);
}

model CreatePickUpWaybillPreQueryRequest {
  consigneeInfo: {
    addressInfo?: {
      addressDetail?: string(name='AddressDetail', description='The detailed address of the consignee.', example='XX community'),
      areaName?: string(name='AreaName', description='The district where the consignee is located.', example='chang,an'),
      cityName?: string(name='CityName', description='The city where the consignee is located.', example='Xi,an'),
      provinceName?: string(name='ProvinceName', description='The province where the consignee is located.', example='Shanxi'),
      townName?: string(name='TownName', description='The street where the consignee is located.', example='XX Street'),
    }(name='AddressInfo', description='The address of the consignee.'),
    mobile: string(name='Mobile', description='The mobile phone number of the consignee.', example='1390000****'),
    name: string(name='Name', description='The name of the consignee.', example='Li'),
  }(name='ConsigneeInfo', description='The consignee information.', shrink='json', position='Query'),
  contentType?: string(name='Content-Type', description='The content type of the HTTP request. This parameter is optional. If you specify this parameter, enter application/json;chatset=UTF-8.', example='application/json;chatset=UTF-8', position='Header'),
  cpCode?: string(name='CpCode', description='The code of the courier company. If no courier company is specified, the system allocates a courier company.', example='YTO', position='Query'),
  orderChannels: string(name='OrderChannels', description='The identifier of the external channel source. It cannot contain underscores.', example='Test', position='Query'),
  outerOrderCode?: string(name='OuterOrderCode', description='The order number of the access system.', example='787DFHHDS989****', position='Query'),
  preWeight?: string(name='PreWeight', description='The estimated weight. Unit: gram.

>  If you need to query the estimated price, this parameter is required.', example='2000', position='Query'),
  senderInfo: {
    addressInfo?: {
      addressDetail?: string(name='AddressDetail', description='The detailed address of the sender.', example='XX community'),
      areaName?: string(name='AreaName', description='The district where the sender is located.', example='xihu'),
      cityName?: string(name='CityName', description='The city where the sender is located.', example='hangzhou'),
      provinceName?: string(name='ProvinceName', description='The province where the sender is located.', example='zhejiang'),
      townName?: string(name='TownName', description='The street where the sender is located.', example='XX Street'),
    }(name='AddressInfo', description='The address of the sender.'),
    mobile: string(name='Mobile', description='The mobile phone number of the sender.', example='1390000****'),
    name: string(name='Name', description='The name of the sender.', example='Wang'),
  }(name='SenderInfo', description='The sender information.', shrink='json', position='Query'),
}

model CreatePickUpWaybillPreQueryResponseBody = {
  data?: {
    code?: string(name='Code', description='The response code.', example='0'),
    cpTimeSelectList?: [ 
      {
        appointTimes?: [ 
          {
            date?: string(name='Date', description='The date in the YYYY-MM-DD format.', example='2022-04-28'),
            dateSelectable?: boolean(name='DateSelectable', description='Indicates whether the date is selectable.', example='true'),
            timeList?: [ 
              {
                endTime?: string(name='EndTime', description='The end of the time range.', example='12:00:00'),
                selectDisableTip?: string(name='SelectDisableTip', description='The tip displayed when the scheduled pickup is not available.', example='Appointment Full'),
                selectable?: boolean(name='Selectable', description='Indicates whether the time range can be selected for the scheduled pickup.', example='true'),
                startTime?: string(name='StartTime', description='The beginning of the time range.', example='10:00:00'),
              }
            ](name='TimeList', description='The time range for the scheduled pickup for this date.'),
          }
        ](name='AppointTimes', description='The available time for the scheduled pickup. If the current courier company cannot accept the scheduled pickup, this field is left empty.'),
        prePrice?: string(name='PrePrice', description='The estimated price. Unit: CNY. The value is accurate to two decimal places. The value of this parameter is displayed if an estimated weight is specified.', example='12.50'),
        realTime?: {
          name?: string(name='Name', description='The name of the real-time order type.', example='Aliyun'),
          selectDisableTip?: string(name='SelectDisableTip', description='The tip displayed when the real-time order cannot be placed.', example='Exceeding the real-time ordering time range.'),
          selectable?: boolean(name='Selectable', description='Indicates whether the real-time order can be placed after the deadline for placing a real-time order is reached.', example='false'),
        }(name='RealTime', description='The information about whether the real-time order can be selected.'),
      }
    ](name='CpTimeSelectList', description='The information about whether the courier company can accept the order.'),
    errorCode?: string(name='ErrorCode', description='The error code.', example='Success'),
    errorMsg?: string(name='ErrorMsg', description='The error message.', example='none'),
    message?: string(name='Message', description='The response content.', example='Success'),
    success?: boolean(name='Success', description='Indicates whether the request was successful.', example='true'),
  }(name='Data', description='The result set.'),
  httpStatusCode?: int32(name='HttpStatusCode', description='The HTTP status code.', example='200'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9FC30594-3841-43AD-9008-03393BCB5CD2'),
}

model CreatePickUpWaybillPreQueryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreatePickUpWaybillPreQueryResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function createPickUpWaybillPreQuery(request: CreatePickUpWaybillPreQueryRequest): CreatePickUpWaybillPreQueryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreatePickUpWaybillPreQuery', 'POST', '/', 'json', false, 'json', request);
}

model DeleteAxgGroupRequest {
  groupId: long(name='GroupId', example='1234', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', example='FC2235****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteAxgGroupResponseBody = {
  code?: string(name='Code', example='OK'),
  message?: string(name='Message', example='SUCCESS'),
  requestId?: string(name='RequestId', example='9297B722-A016-43FB-B51A-E54050D9369D'),
}

model DeleteAxgGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAxgGroupResponseBody(name='body'),
}

async function deleteAxgGroup(request: DeleteAxgGroupRequest): DeleteAxgGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteAxgGroup', 'POST', '/', 'json', false, 'json', request);
}

model DeleteSecretBlacklistRequest {
  blackNo: string(name='BlackNo', description='The phone numbers in the blacklist. A point-to-point blacklist has a pair of numbers separated by a colon (":"). A number pool blacklist or a platform blacklist has only one single number.', example='18252***383:18252***483', position='Query'),
  blackType: string(name='BlackType', description='The blacklist type. Valid values:

*   **POINT_TO_POINT_BLACK**: point-to-point blacklist
*   **PARTNER_GLOBAL_NUMBER_BLACK**: number pool blacklist', example='POINT_TO_POINT_BLACK', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC1232****', position='Query'),
  remark?: string(name='Remark', description='The remarks for the blacklist.', example='fragile', position='Query'),
  wayControl?: string(name='WayControl', description='The control on the call direction.

*   **PHONEA_REJECT**: The first phone number in the blacklist can be used to call the second phone number, but the second phone number in the blacklist cannot be used to call the first phone number.
*   **PHONEB_REJECT**: The first phone number in the blacklist cannot be used to call the second phone number, but the second phone number in the blacklist can be used to call the first phone number.
*   If this parameter is not specified, the two phone numbers in the blacklist cannot be used to call each other.

Valid values:

*   DUPLEX_REJECT
*   PHONEA_REJECT
*   PHONEB_REJECT', example='PHONEA_REJECT', position='Query'),
}

model DeleteSecretBlacklistResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
}

model DeleteSecretBlacklistResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSecretBlacklistResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function deleteSecretBlacklist(request: DeleteSecretBlacklistRequest): DeleteSecretBlacklistResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSecretBlacklist', 'POST', '/', 'json', false, 'json', request);
}

model GetSecretAsrDetailRequest {
  callId: string(name='CallId', description='The ID of the call record.

You can log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view **Call Record ID** on the **Call Record Query** page.', example='225625****', position='Query'),
  callTime: string(name='CallTime', description='The call initiation time in the call record.

You can log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). View **Call Initiated At** on the **Call Record Query** page, or view the call_time field in the Call Detail Record (CDR) receipt.', example='2019-03-05 12:00:00', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool.

You can log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC2267****', position='Query'),
}

model GetSecretAsrDetailResponseBody = {
  code?: string(name='Code', description='The response code.', example='OK'),
  data?: {
    bizDuration?: long(name='BizDuration', description='The total duration of the audio file that was recognized. Unit: milliseconds.', example='10944'),
    businessId?: string(name='BusinessId', description='The ID of the business process.', example='435ee78c7a019650@!FC100000074672458@!2020061522****'),
    businessKey?: string(name='BusinessKey', description='The business keyword.', example='JCGTncltuNao****'),
    code?: string(name='Code', description='The status code. The status code 21050000 indicates that the request was successful.', example='21050000'),
    msg?: string(name='Msg', description='The description.', example='SUCCESS'),
    requestId?: string(name='RequestId', description='The request ID.', example='8d2329d407a83447a83be441681f4872ac74nE'),
    sentences?: [ 
      {
        beginTime?: long(name='BeginTime', description='The start time offset of the sentence. Unit: milliseconds.', example='1020'),
        channelId?: int32(name='ChannelId', description='The ID of the audio track to which the sentence belongs.', example='0'),
        emotionValue?: string(name='EmotionValue', description='The emotion value. Value range: 1 to 10. The higher the value, the stronger the emotion.', example='5.7'),
        endTime?: long(name='EndTime', description='The end time offset of the sentence. Unit: milliseconds.', example='1770'),
        silenceDuration?: long(name='SilenceDuration', description='The silence duration between the current sentence and the previous sentence. Unit: seconds.', example='0'),
        speechRate?: int32(name='SpeechRate', description='The average speech rate of the sentence. Unit: number of words per minute.', example='80'),
        text?: string(name='Text', description='The recognition result of the sentence.', example='Hello'),
      }
    ](name='Sentences', description='The ASR result.'),
    type?: string(name='Type', description='The type.', example='asrResult'),
  }(name='Data', description='The ASR details.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='F655A8D5-B967-440B-8683-DAD6FF8DE990'),
}

model GetSecretAsrDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetSecretAsrDetailResponseBody(name='body'),
}

/**
  * Before you call the GetSecretAsrDetail operation, set the ASRStatus parameter to true in the [BindAxn operation](~~400483~~). This ensures that you can obtain the ASR result properly.
  * ### [](#qps)QPS limits
  * You can call this operation up to 100 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function getSecretAsrDetail(request: GetSecretAsrDetailRequest): GetSecretAsrDetailResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetSecretAsrDetail', 'POST', '/', 'json', false, 'json', request);
}

model GetTotalPublicUrlRequest {
  callId: string(name='CallId', description='The ID of the call record.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view **Call Record ID** on the **Call Record Query** page.', example='2568900****', position='Query'),
  callTime: string(name='CallTime', description='The call initiation time in the call record.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). View **Call Initiated At** on the **Call Record Query** page, or view the call_time field in the Call Detail Record (CDR) receipt.', example='2019-03-05 12:00:00', position='Query'),
  checkSubs: boolean(name='CheckSubs', description='Specifies whether the verification on the binding ID is required.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  partnerKey: string(name='PartnerKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC12256****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model GetTotalPublicUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  data?: {
    phonePublicUrl?: string(name='PhonePublicUrl', description='The download URL of the recorded call.

>  The download URL of the recorded call is valid for 30 days.', example='http://secret-axb-reco****cn-shanghai.aliyuncs.com/1000000820257625_66647243838006067251551752068865.mp3?Expires=1551****07&OSSAccessKeyId=LTAIP00vvvv****v&Signature=tK6Yq9KusU4n%2BZQWX****4/WmEA%3D'),
    ringPublicUrl?: string(name='RingPublicUrl', description='The download URL of the recorded ringing tone.

>  The download URL of the recorded ringing tone is valid for 30 days.', example='http://secret-ab-reco****cn-shanghai.aliyuncs.com/1000000820257625_66647243838006067251551752068865.mp3?Expires=155175****&OSSAccessKeyId=LTAIP00vvv****vv&Signature=tK6Yq9KusU4n%2BZQW****g4/WmEA%3D'),
  }(name='Data', description='The download URLs of the recording files.'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='1AB3CEF7-DCBE-488C-9C33-D180982CE031'),
}

model GetTotalPublicUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetTotalPublicUrlResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function getTotalPublicUrl(request: GetTotalPublicUrlRequest): GetTotalPublicUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetTotalPublicUrl', 'POST', '/', 'json', false, 'json', request);
}

model LockSecretNoRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo: string(name='SecretNo', description='The private number that you want to lock. You must enter a complete mobile phone number.', example='1300000****', position='Query'),
}

model LockSecretNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='2D1AEB96-96D0-454E-B0DC-AE2A8DF08020'),
}

model LockSecretNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: LockSecretNoResponseBody(name='body'),
}

/**
  * After a phone number is locked, the locked phone number cannot be selected when you call an operation to create a binding.
  * ### [](#qps)QPS limits
  * You can call this operation up to 500 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function lockSecretNo(request: LockSecretNoRequest): LockSecretNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'LockSecretNo', 'POST', '/', 'json', false, 'json', request);
}

model OperateAxgGroupRequest {
  groupId: long(name='GroupId', description='The group ID in the AXG binding.

You can view the group ID by using either of the following methods:

*   On the **Number Pool Management** page in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account), filter AXG private numbers and click **Number Group G Management** to view the group IDs of number groups G.****
*   If the [CreateAxgGroup](~~110250~~) operation is called to create number group G, the value of **GroupId** in the response of the CreateAxgGroup operation is specified as the value of the request parameter **GroupId** of the OperateAxgGroup operation.

>  Number group G must have one or more phone numbers.', example='1234', position='Query'),
  numbers: string(name='Numbers', description='The phone numbers that you add to number group G. Separate the phone numbers with commas (,). You can add up to 200 phone numbers at a time.', example='1390000****,1380000****', position='Query'),
  operateType: string(name='OperateType', description='The type of the operation on number group G. Valid values:

*   **addNumbers**: adds phone numbers to number group G.
*   **deleteNumbers**: deletes phone numbers from number group G.
*   **overwriteNumbers**: replaces all phone numbers in number group G. All the original phone numbers are deleted from number group G, and new phone numbers are added to number group G.

> 

*   When you replace all phone numbers in number group G, the quantity of original phone numbers in number group G cannot exceed 200.

*   You can add up to 200 phone numbers to number group G at a time.', example='addNumbers', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model OperateAxgGroupResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='986BCB6D-C9BF-42F9-91CE-3A9901233D36'),
}

model OperateAxgGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: OperateAxgGroupResponseBody(name='body'),
}

/**
  * After you create number group G, you can call the OperateAxgGroup operation to modify number group G. For example, you can add phone numbers to number group G, delete phone numbers from number group G, and replace all phone numbers in number group G.
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function operateAxgGroup(request: OperateAxgGroupRequest): OperateAxgGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'OperateAxgGroup', 'POST', '/', 'json', false, 'json', request);
}

model OperateBlackNoRequest {
  blackNo: string(name='BlackNo', description='The phone number to be added to or deleted from the blacklist.', example='150****0000', position='Query'),
  operateType: string(name='OperateType', description='The type of the operation on the phone number. Valid values:

*   **AddBlack**: adds the phone number to the blacklist.
*   **DeleteBlack**: deletes the phone number from the blacklist.', example='AddBlack', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tips?: string(name='Tips', description='The description.', example='abcdef', position='Query'),
}

model OperateBlackNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='2D1AEB96-96D0-454E-B0DC-AE2A8DF08020'),
}

model OperateBlackNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: OperateBlackNoResponseBody(name='body'),
}

/**
  * The OperateBlackNo operation supports the following number pool types: AXN, AXN extension, and 95AXN.
  * ### [](#qps)QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function operateBlackNo(request: OperateBlackNoRequest): OperateBlackNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'OperateBlackNo', 'POST', '/', 'json', false, 'json', request);
}

model QueryPhoneNoAByTrackNoRequest {
  cabinetNo?: string(name='CabinetNo', description='The cabinet number.', example='25689****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoX?: string(name='PhoneNoX', description='Phone number X returned by the API operation for creating a binding.', example='1710000****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  trackNo: string(name='trackNo', description='The tracking number.', example='22573****', position='Query'),
}

model QueryPhoneNoAByTrackNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  module?: [ 
    {
      extension?: string(name='Extension', description='The extension of phone number X.', example='130'),
      phoneNoA?: string(name='PhoneNoA', description='Phone number A.', example='1310000****'),
      phoneNoX?: string(name='PhoneNoX', description='The private number, that is, phone number X.', example='1710000****'),
    }
  ](name='Module', description='The information returned after the phone numbers were bound.'),
  requestId?: string(name='RequestId', description='The request ID.', example='8906582E-6722'),
}

model QueryPhoneNoAByTrackNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryPhoneNoAByTrackNoResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function queryPhoneNoAByTrackNo(request: QueryPhoneNoAByTrackNoRequest): QueryPhoneNoAByTrackNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryPhoneNoAByTrackNo', 'POST', '/', 'json', false, 'json', request);
}

model QueryRecordFileDownloadUrlRequest {
  callId: string(name='CallId', description='The ID of the call record. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view **Call Record ID** on the **Call Record Query** page.', example='abcedf1234', position='Query'),
  callTime?: string(name='CallTime', description='The call initiation time in the call record. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). View **Call Initiated At** on the **Call Record Query** page, or view the call_time field in the Call Detail Record (CDR) receipt.', example='2019-03-05 12:00:00', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.

>  This parameter is required when **ProductType** is left empty.', example='FC123456', position='Query'),
  productType?: string(name='ProductType', description='The product type. Valid values:

*   **AXB\\_170**.
*   **AXN\\_170**.
*   **AXN\\_95**.
*   **AXN_EXTENSION_REUSE**

> 

*   This parameter is applicable to the original key accounts of Alibaba Cloud. This parameter can be ignored for Alibaba Cloud users.

*   This parameter is required when **PoolKey** is left empty.', example='AXB_170', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model QueryRecordFileDownloadUrlResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  downloadUrl?: string(name='DownloadUrl', description='The download URL of the recording file. The download URL is valid for 2 hours.', example='http://secret-axb-reco****cn-shanghai.aliyuncs.com/1000000820257625_66647243838006067251551752068865.mp3?Expires=155175****&OSSAccessKeyId=LTAIP00vvvv****v&Signature=tK6Yq9KusU4n%2BZ****7lg4/WmEA%3D'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='1AB3CEF7-DCBE-488C-9C33-D180982CE031'),
}

model QueryRecordFileDownloadUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryRecordFileDownloadUrlResponseBody(name='body'),
}

/**
  * If the recording feature is enabled for a binding, all calls made by the bound phone numbers are recorded. You can obtain the download URL of a recording file by calling the QueryRecordFileDownloadUrl operation and download the recording file.
  * >  We recommend that you subscribe to [the recording status report SecretRecording](~~109198~~). The values of the response parameters in SecretRecording can be used as the values of the request parameters for downloading a recording file.
  * ### [](#)Procedure for obtaining a recording file
  * 1.  Specify the request parameter in an update or binding operation to enable the recording feature.
  * 2.  Subscribe to recording message receipts in the Phone Number Protection console.
  * 3.  After a recording message receipt is returned, call the QueryRecordFileDownloadUrl operation to obtain the download URL of the recording file, and download the recording file.
  * > 
  * *   A download URL is valid for 2 hours. Download the recording file as soon as possible after obtaining a download URL.
  * *   The storage period of recording files is 30 days. You can download only the recording files of calls recorded in the last 30 days.
  *
 */
async function queryRecordFileDownloadUrl(request: QueryRecordFileDownloadUrlRequest): QueryRecordFileDownloadUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryRecordFileDownloadUrl', 'POST', '/', 'json', false, 'json', request);
}

model QuerySecretNoDetailRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC2258****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo: string(name='SecretNo', description='The private number.', example='1390000****', position='Query'),
}

model QuerySecretNoDetailResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='066E6E47-04CB-4774-A976-4F73CB76D4A3'),
  secretNoInfoDTO?: {
    certifyStatus?: int32(name='CertifyStatus', description='The verification status of the phone number. Valid values:

*   **0**: The phone number is not verified.
*   **1**: The phone number is verified.', example='0'),
    city?: string(name='City', description='The city.', example='chengdu'),
    province?: string(name='Province', description='The province.', example='sichuan'),
    purchaseTime?: string(name='PurchaseTime', description='The time when the phone number was purchased.', example='2021-12-03 15:19:27'),
    secretStatus?: long(name='SecretStatus', description='The status of the phone number. Valid values:

*   **0**: The phone number is not bound to other phone numbers.
*   **1**: The phone number is bound to other phone numbers.
*   **2**: The phone number is locked.
*   **3**: The phone number is frozen.', example='0'),
    vendor?: long(name='Vendor', description='The carrier to which the phone number belongs. Valid values:

*   **1**: China Mobile
*   **2**: China Unicom
*   **3**: China Telecom', example='1'),
  }(name='SecretNoInfoDTO', description='The attributes of the phone number.'),
}

model QuerySecretNoDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySecretNoDetailResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 1,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. We recommend that you take note of the limit when you call this operation.
  *
 */
async function querySecretNoDetail(request: QuerySecretNoDetailRequest): QuerySecretNoDetailResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySecretNoDetail', 'POST', '/', 'json', false, 'json', request);
}

model QuerySecretNoRemainRequest {
  city: string(name='City', description='The home location of the phone number.

*   If **SpecId** is set to 1 or 2, you can specify the **City** parameter to query the quantity of available phone numbers.

1.  You can enter a single city name to perform a query.
2.  You can enter National to query the quantity of remaining phone numbers available in the Chinese mainland for online purchase.
3.  You can enter National List to query the cities with available phone numbers and the quantities of remaining phone numbers in the Chinese mainland. Cities without available phone numbers will not be returned.

*   If **SpecId** is set to 3, home locations are not distinguished for phone numbers that start with 95 and only the quantity of all the remaining phone numbers that start with 95 and are available for online purchase can be queried. If SpecId is set to 3, **City** must be set to **Nationwide**.

>  Home locations can be set to only locations in the Chinese mainland.', example='hangzhou', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo?: string(name='SecretNo', description='The prefix of the phone number. When you call the QuerySecretNoRemain operation with **SecretNo** specified, the quantity of remaining phone numbers with the specified prefix that are available for online purchase is queried.

Up to 18 digits of a phone number prefix can be specified.', example='130', position='Query'),
  specId: long(name='SpecId', description='The type of the phone number. Valid values:

*   **1**: a phone number assigned by a virtual network operator, that is, a phone number that belongs to the 170 or 171 number segment.
*   **2**: a phone number provided by a carrier.
*   **3**: a phone number that starts with 95.', example='1', position='Query'),
}

model QuerySecretNoRemainResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='9FC30594-3841-43AD-9008-03393BCB5CD2'),
  secretRemainDTO?: {
    amount?: long(name='Amount', description='The quantity of remaining phone numbers available for online purchase.', example='0'),
    city?: string(name='City', description='The home location of the phone numbers.', example='hangzhou'),
    remainDTOList?: {
      remainDTO?: [ 
      {
        amount?: long(name='Amount', description='The quantity of remaining phone numbers available for online purchase for the city.', example='120'),
        city?: string(name='City', description='The home location of the phone numbers.', example='Wuhan'),
      }
    ](name='remainDTO')
    }(name='RemainDTOList', description='The information about remaining phone numbers available for online purchase.'),
  }(name='SecretRemainDTO', description='The information returned after the operation was called.'),
}

model QuerySecretNoRemainResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySecretNoRemainResponseBody(name='body'),
}

/**
  * When purchasing a phone number, specify the home location. If no sufficient phone numbers are available for purchase in the home location, the purchase of the phone number fails. Before calling the [BuySecretNo](~~BuySecretNo~~) operation to purchase a phone number, call the [QuerySecretNoRemain](~~QuerySecretNoRemain~~) operation to query the quantity of remaining phone numbers available for online purchase.
  *
 */
async function querySecretNoRemain(request: QuerySecretNoRemainRequest): QuerySecretNoRemainResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySecretNoRemain', 'POST', '/', 'json', false, 'json', request);
}

model QuerySubsIdRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoX: string(name='PhoneNoX', description='The private number in the binding, that is, phone number X.', example='1390000****', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dyplsnext.console.aliyun.com/overview) and view the key of the phone number pool on the Number Pool Management page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model QuerySubsIdResponseBody = {
  code?: string(name='Code', description='The response code. The value OK indicates that the request was successful.', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='E7F99446-8191-43C0-99B5-F58A6AEAD779'),
  subsId?: string(name='SubsId', description='The binding ID.', example='11111111****'),
}

model QuerySubsIdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySubsIdResponseBody(name='body'),
}

/**
  * You can query binding IDs by phone number X. In the AXB product, multiple bindings may exist for the same phone number X. In this case, multiple binding IDs may be obtained for the same phone number X.
  *
 */
async function querySubsId(request: QuerySubsIdRequest): QuerySubsIdResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySubsId', 'POST', '/', 'json', false, 'json', request);
}

model QuerySubscriptionDetailRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoX: string(name='PhoneNoX', description='The private number in the binding, that is, phone number X.', example='13900001234', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.

>  This parameter is required when **ProductType** is left empty.', example='FC123456', position='Query'),
  productType?: string(name='ProductType', description='The product type. Valid values:

*   **AXB\\_170**
*   **AXN\\_170**
*   **AXN\\_95**
*   **AXN_EXTENSION_REUSE**

> 

*   This parameter is applicable to the original key accounts of Alibaba Cloud. This parameter can be ignored for Alibaba Cloud users.

*   This parameter is required when **PoolKey** is left empty.', example='AXB_170', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  subsId: string(name='SubsId', description='The binding ID.

Log on to the Phone Number Protection console, choose **Number and Number Pool** > **Number Management**. On the Number Management page, select the desired record and click Details to view the binding ID. Alternatively, you can view the value of the **SubsId** parameter returned by an API operation for a phone number binding such as [BindAxb](~~110248~~). The value of this parameter indicates a binding ID.', example='100000076879****', position='Query'),
}

model QuerySubscriptionDetailResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='066E6E47-04CB-4774-A976-4F73CB76D4A3'),
  secretBindDetailDTO?: {
    ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model.', example='123456'),
    ASRStatus?: boolean(name='ASRStatus', description='Indicates whether automatic speech recognition (ASR) is enabled. Valid values:

*   **false**: ASR is disabled.
*   **true**: ASR is enabled.', example='true'),
    callRestrict?: string(name='CallRestrict', description='The status of one-way call restrictions. No value is returned for this parameter if one-way call restrictions are not set. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.', example='CONTROL_BX_DISABLE'),
    expireDate?: string(name='ExpireDate', description='The expiration time of the binding.', example='2019-09-05 12:00:00'),
    extension?: string(name='Extension', description='The extension in the AXG extension binding.', example='130'),
    gmtCreate?: string(name='GmtCreate', description='The creation time of the binding.', example='2019-03-05 12:00:00'),
    groupId?: long(name='GroupId', description='The ID of number group G in the binding.', example='2000000130001'),
    needRecord?: boolean(name='NeedRecord', description='Indicates whether all calls made by the bound phone numbers are recorded. Valid values:

*   **false**
*   **true**', example='true'),
    phoneNoA?: string(name='PhoneNoA', description='Phone number A in the binding.', example='13900001111'),
    phoneNoB?: string(name='PhoneNoB', description='Phone number B in the binding.', example='13900002222'),
    phoneNoX?: string(name='PhoneNoX', description='The private number in the binding, that is, phone number X.', example='13900001234'),
    status?: long(name='Status', description='The binding status. Valid values:

*   **0**: The binding expired.
*   **1**: The binding is in effect.', example='1'),
    subsId?: string(name='SubsId', description='The binding ID.', example='100000076879****'),
  }(name='SecretBindDetailDTO', description='The information returned after the QuerySubscriptionDetail operation was called.'),
}

model QuerySubscriptionDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QuerySubscriptionDetailResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 5,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  * ### [](#poolkeyproducttype)Limits on PoolKey and ProductType
  * You must specify either PoolKey or ProductType. If both parameters are not specified, an error is reported when you call the QuerySubscriptionDetail operation. We recommend that you specify the ProductType parameter for the original key accounts of Alibaba Cloud and the PoolKey parameter for Alibaba Cloud users.
  *
 */
async function querySubscriptionDetail(request: QuerySubscriptionDetailRequest): QuerySubscriptionDetailResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QuerySubscriptionDetail', 'POST', '/', 'json', false, 'json', request);
}

model ReleaseSecretNoRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC123456', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo: string(name='SecretNo', description='The prefix of phone numbers. When you call the ReleaseSecretNo operation with **SecretNo** specified, the system performs fuzzy matching against phone numbers based on the prefix.

>  Up to 18 digits of a phone number prefix can be specified.', example='130', position='Query'),
}

model ReleaseSecretNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='986BCB6D-C9BF-42F9-91CE-3A990121232'),
}

model ReleaseSecretNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReleaseSecretNoResponseBody(name='body'),
}

/**
  * *   After a phone number is released, it will no longer be charged from the following month.
  * *   Before you release a phone number, log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) to check whether the phone number is bound to other phone numbers. The phone number can be released only if it is not bound to other phone numbers.
  *
 */
async function releaseSecretNo(request: ReleaseSecretNoRequest): ReleaseSecretNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReleaseSecretNo', 'POST', '/', 'json', false, 'json', request);
}

model UnbindSubscriptionRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool. Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.

>  This parameter is required when **ProductType** is left empty.', example='FC123456', position='Query'),
  productType?: string(name='ProductType', description='The product type. Fixed value: **AXB\\_170**.

> 

*   This parameter is applicable to the original key accounts of Alibaba Cloud. This parameter can be ignored for Alibaba Cloud users.

*   This parameter is required when **PoolKey** is left empty.', example='AXB_170', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo: string(name='SecretNo', description='The private number, that is, phone number X specified in an API operation for a phone number binding such as [BindAXG](~~110249~~) or automatically assigned after such an operation is called.', example='1390000****', position='Query'),
  subsId: string(name='SubsId', description='The binding ID.

Log on to the Phone Number Protection console, choose **Number and Number Pool** > **Number Management**. On the Number Management page, select the desired record and click Details to view the binding ID. Alternatively, you can view the value of the **SubsId** parameter returned by an API operation for a phone number binding such as BindAxb. The value of this parameter indicates a binding ID.', example='1************2', position='Query'),
}

model UnbindSubscriptionResponseBody = {
  chargeId?: string(name='ChargeId', description='A deprecated parameter.', example='true'),
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='986BCB6D-C9BF-42F9-91CE-3A9901233D36'),
}

model UnbindSubscriptionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnbindSubscriptionResponseBody(name='body'),
}

/**
  * Before releasing a phone number, you must call the UnbindSubscription operation to unbind the phone number.
  *
 */
async function unbindSubscription(request: UnbindSubscriptionRequest): UnbindSubscriptionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnbindSubscription', 'POST', '/', 'json', false, 'json', request);
}

model UnlockSecretNoRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  poolKey: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.', example='FC2256****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secretNo: string(name='SecretNo', description='The private number that you want to unlock. You must enter a complete mobile phone number.', example='1300000****', position='Query'),
}

model UnlockSecretNoResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other status codes indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='2D1AEB96-96D0-454E-B0DC-AE2A8DF08020'),
}

model UnlockSecretNoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnlockSecretNoResponseBody(name='body'),
}

/**
  * After a phone number is unlocked, you can reselect the unlocked phone number when you call an operation to create a binding.
  * ### [](#qps)QPS limits
  * You can call this operation up to 500 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function unlockSecretNo(request: UnlockSecretNoRequest): UnlockSecretNoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnlockSecretNo', 'POST', '/', 'json', false, 'json', request);
}

model UpdateSubscriptionRequest {
  ASRModelId?: string(name='ASRModelId', description='The ID of the ASR model.', example='980abddb908f48e8b987cb2cd303****', position='Query'),
  ASRStatus?: boolean(name='ASRStatus', description='Specifies whether to enable automatic speech recognition (ASR). Valid values:

*   **false** (default): disables ASR.
*   **true**: enables ASR.', example='false', position='Query'),
  callDisplayType?: int32(name='CallDisplayType', description='Re-sets the phone number display logic in the phone number binding. Fixed value: **1**, indicating that phone number X is displayed on both the calling phone and the called phone.

>  Due to the regulatory restrictions imposed by carriers, the setting to display real phone numbers during calls does not take effect.', example='1', position='Query'),
  callRestrict?: string(name='CallRestrict', description='One-way call restrictions. Valid values:

*   **CONTROL_AX_DISABLE**: Phone number A cannot be used to call phone number X.
*   **CONTROL_BX_DISABLE**: Phone number B cannot be used to call phone number X.
*   **CONTROL_CLEAR_DISABLE**: The call restrictions are cleared.

>  This parameter is required when **OperateType** is set to **updateCallRestrict**.', example='CONTROL_BX_DISABLE', position='Query'),
  expiration?: string(name='Expiration', description='Re-sets the expiration time of the phone number binding.

> 

*   This parameter is required when **OperateType** is set to **updateExpire**.

*   The expiration time must be more than 1 minute later than the time when you call this API operation.', example='2019-09-05 12:00:00', position='Query'),
  groupId?: string(name='GroupId', description='The ID of number group G in the phone number binding.

>  This parameter is required when **OperateType** is set to **updateAxgGroup**.', example='1234', position='Query'),
  isRecordingEnabled?: boolean(name='IsRecordingEnabled', description='Re-sets the recording status in the phone number binding.

>  This parameter does not have a default value. If you do not specify this parameter, the value of the corresponding field is not updated.', example='true', position='Query'),
  operateType: string(name='OperateType', description='The operation to modify the phone number binding. Valid values:

*   **updateNoA**: modifies phone number A.
*   **updateNoB**: modifies phone number B.
*   **updateExpire**: modifies the validity period of the binding.
*   **updateAxgGroup**: modifies number group G.
*   **updateCallRestrict**: modifies one-way call restrictions.
*   **updateCallDisplayType**: updates the number display logic for calls.
*   **updateOutId**: updates the value of the OutId parameter.
*   **updateIsRecordingEnabled**: updates the status of the recording feature in the binding.', example='updateNoA', position='Query'),
  outId?: string(name='OutId', description='Re-sets the value of the OutId parameter in the phone number binding.', example='abcdef', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  phoneNoA?: string(name='PhoneNoA', description='Phone number A in the phone number binding.

>  This parameter is required when **OperateType** is set to **updateNoA**.', example='1390000****', position='Query'),
  phoneNoB?: string(name='PhoneNoB', description='Phone number B in the phone number binding.

>  This parameter is required when **OperateType** is set to **updateNoB**.', example='1390000****', position='Query'),
  phoneNoX: string(name='PhoneNoX', description='Phone number X in the phone number binding.', example='1390000****', position='Query'),
  poolKey?: string(name='PoolKey', description='The key of the phone number pool.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account) and view the key of the phone number pool on the **Number Pool Management** page.

>  This parameter is required when **ProductType** is left empty.', example='FC122356****', position='Query'),
  productType?: string(name='ProductType', description='The product type. Valid values:

*   **AXB\\_170**
*   **AXN\\_170**
*   **AXN\\_95**
*   **AXN_EXTENSION_REUSE**

> 

*   This parameter is applicable to the original key accounts of Alibaba Cloud. This parameter can be ignored for Alibaba Cloud users.

*   This parameter is required when **PoolKey** is left empty.', example='AXB_170', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  ringConfig?: string(name='RingConfig', description='Updates the ringtone code for enterprise Color Ring Back Tone (CRBT) in the phone number binding.

AXB product:

*   Ringtone setting when phone number A is used to call phone number X in the AXB binding: AXBRing_A
*   Ringtone setting when phone number B is used to call phone number X in the AXB binding: AXBRing_B

AXN product:

*   Ringtone setting (with a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_AB
*   Ringtone setting (without a callback number) when phone number A is used to call phone number X in the AXN extension binding: AXNRing_A
*   Ringtone setting when phone number N is used to call phone number X in the AXN extension binding: AXNRing_N

AXG product:

*   Ringtone setting (with a callback number) when phone number A is used to call phone number X in the AXG binding: AXGRing_AB
*   Ringtone setting (without a callback number) when phone number A is used to call phone number X in the AXG binding: AXGRing_A
*   Ringtone setting when a phone number in number group G is used to call phone number X in the AXG binding: AXGRing_G

Enterprise CRBT codes: Enterprise CRBT codes can be queried in the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account). You can choose **Number Pool Management** > **Enterprise CRBT Management** to view and manage enterprise CRBT codes. You can also upload, delete, or perform other operations on enterprise CRBT codes.

>  The bound enterprise CRBTs are preferentially used. If no enterprise CRBT is set or the setting does not take effect, the enterprise CRBTs at the phone number pool level are used.', example='{"AXBRing_B":"100000001","AXBRing_A":"100000001"}', position='Query'),
  subsId: string(name='SubsId', description='The binding ID.

Log on to the [Phone Number Protection console](https://dypls.console.aliyun.com/dypls.htm#/account), choose **Number and Number Pool** > **Number Management**. On the Number Management page, select the desired record and click Details to view the binding ID. Alternatively, you can view the value of the **SubsId** parameter returned by an API operation for a phone number binding such as BindAxb. The value of this parameter indicates a binding ID.', example='100000076879****', position='Query'),
}

model UpdateSubscriptionResponseBody = {
  code?: string(name='Code', description='The response code.

*   The value OK indicates that the request was successful.
*   Other values indicate that the request failed. For more information, see [Error codes](~~109196~~).', example='OK'),
  message?: string(name='Message', description='The returned message.', example='OK'),
  requestId?: string(name='RequestId', description='The request ID.', example='986BCB6D-C9BF-42F9-91CE-3A9901233D36'),
}

model UpdateSubscriptionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateSubscriptionResponseBody(name='body'),
}

/**
  * ### [](#qps)QPS limits
  * You can call this operation up to 10,000 times per second per account. If the number of calls per second exceeds the limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limit when you call this operation.
  *
 */
async function updateSubscription(request: UpdateSubscriptionRequest): UpdateSubscriptionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateSubscription', 'POST', '/', 'json', false, 'json', request);
}

