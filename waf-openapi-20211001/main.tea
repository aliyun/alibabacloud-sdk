/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'regional';
  @endpointMap = {
    cn-qingdao = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-beijing = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-chengdu = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-zhangjiakou = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-huhehaote = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-hangzhou = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-shanghai = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-shenzhen = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-heyuan = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-wulanchabu = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-hongkong = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    ap-southeast-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    ap-southeast-2 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    ap-southeast-3 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    ap-southeast-5 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    eu-west-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    us-west-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    us-east-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    eu-central-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    me-east-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    ap-south-1 = 'wafopenapi.ap-southeast-1.aliyuncs.com',
    cn-shanghai-finance-1 = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-shenzhen-finance-1 = 'wafopenapi.cn-hangzhou.aliyuncs.com',
    cn-north-2-gov-1 = 'wafopenapi.cn-hangzhou.aliyuncs.com',
  };

  checkConfig(config);
  @endpoint = getEndpoint('waf-openapi', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model ClearMajorProtectionBlackIpRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.

This parameter is required.', example='20012033'),
  templateId?: long(name='TemplateId', description='The ID of the IP address blacklist rule template for major event protection.

This parameter is required.', example='5132'),
}

model ClearMajorProtectionBlackIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='66A98669-CC6E-4F3E-80A6-3014697B11AE'),
}

model ClearMajorProtectionBlackIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ClearMajorProtectionBlackIpResponseBody(name='body'),
}

/**
 * @summary Clears an IP address blacklist for major event protection.
 *
 * @param request ClearMajorProtectionBlackIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ClearMajorProtectionBlackIpResponse
 */
async function clearMajorProtectionBlackIpWithOptions(request: ClearMajorProtectionBlackIpRequest, runtime: Util.RuntimeOptions): ClearMajorProtectionBlackIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ClearMajorProtectionBlackIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Clears an IP address blacklist for major event protection.
 *
 * @param request ClearMajorProtectionBlackIpRequest
 * @return ClearMajorProtectionBlackIpResponse
 */
async function clearMajorProtectionBlackIp(request: ClearMajorProtectionBlackIpRequest): ClearMajorProtectionBlackIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return clearMajorProtectionBlackIpWithOptions(request, runtime);
}

model CopyDefenseTemplateRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-lbj****x10g'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection template that you want to copy.

This parameter is required.', example='12345'),
}

model CopyDefenseTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
  templateId?: long(name='TemplateId', description='The ID of the new protection template.', example='12346'),
}

model CopyDefenseTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CopyDefenseTemplateResponseBody(name='body'),
}

/**
 * @summary Creates a new protection template from the copy.
 *
 * @param request CopyDefenseTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CopyDefenseTemplateResponse
 */
async function copyDefenseTemplateWithOptions(request: CopyDefenseTemplateRequest, runtime: Util.RuntimeOptions): CopyDefenseTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CopyDefenseTemplate',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a new protection template from the copy.
 *
 * @param request CopyDefenseTemplateRequest
 * @return CopyDefenseTemplateResponse
 */
async function copyDefenseTemplate(request: CopyDefenseTemplateRequest): CopyDefenseTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return copyDefenseTemplateWithOptions(request, runtime);
}

model CreateDefenseResourceGroupRequest {
  addList?: string(name='AddList', description='The protected objects that you want to add to the protected object group. You can add multiple protected objects to a protected object group at the same time. You can specify multiple protected objects. Separate them with commas (,).', example='test1.aliyundoc.com,test2.aliyundoc.com'),
  description?: string(name='Description', description='The description of the protected object group.', example='test_domain'),
  groupName?: string(name='GroupName', description='The name of the protected object group that you want to create.

This parameter is required.', example='group221'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model CreateDefenseResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='5D69B341-4F97-58E7-9E16-1B17FE7A9E98'),
}

model CreateDefenseResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDefenseResourceGroupResponseBody(name='body'),
}

/**
 * @summary Creates a protected object group.
 *
 * @param request CreateDefenseResourceGroupRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateDefenseResourceGroupResponse
 */
async function createDefenseResourceGroupWithOptions(request: CreateDefenseResourceGroupRequest, runtime: Util.RuntimeOptions): CreateDefenseResourceGroupResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.addList)) {
    query['AddList'] = request.addList;
  }
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateDefenseResourceGroup',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a protected object group.
 *
 * @param request CreateDefenseResourceGroupRequest
 * @return CreateDefenseResourceGroupResponse
 */
async function createDefenseResourceGroup(request: CreateDefenseResourceGroupRequest): CreateDefenseResourceGroupResponse {
  var runtime = new Util.RuntimeOptions{};
  return createDefenseResourceGroupWithOptions(request, runtime);
}

model CreateDefenseRuleRequest {
  defenseScene?: string(name='DefenseScene', description='The module to which the protection rule that you want to create belongs.

*   **waf_group:** the basic protection rule module.
*   **antiscan:** the scan protection module.
*   **ip_blacklist:** the IP address blacklist module.
*   **custom_acl:** the custom rule module.
*   **whitelist:** the whitelist module.
*   **region_block:** the region blacklist module.
*   **custom_response:** the custom response module.
*   **cc:** the HTTP flood protection module.
*   **tamperproof:** the website tamper-proofing module.
*   **dlp:** the data leakage prevention module.

This parameter is required.', example='waf_group'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  rules?: string(name='Rules', description='The configurations of the protection rule. Specify a string that contains multiple parameters in the JSON format.

>  The parameters vary based on the value of the **DefenseScene** parameter. For more information, see the "**Protection rule parameters**" section in this topic.

This parameter is required.', example='For more information, see the following section.'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template for which you want to create a protection rule.

This parameter is required.', example='1122'),
}

model CreateDefenseRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='26E46541-7AAB-5565-801D-F14DBDC5F186'),
}

model CreateDefenseRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDefenseRuleResponseBody(name='body'),
}

/**
 * @summary Creates a protection rule.
 *
 * @param request CreateDefenseRuleRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateDefenseRuleResponse
 */
async function createDefenseRuleWithOptions(request: CreateDefenseRuleRequest, runtime: Util.RuntimeOptions): CreateDefenseRuleResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.defenseScene)) {
    query['DefenseScene'] = request.defenseScene;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.rules)) {
    query['Rules'] = request.rules;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateDefenseRule',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a protection rule.
 *
 * @param request CreateDefenseRuleRequest
 * @return CreateDefenseRuleResponse
 */
async function createDefenseRule(request: CreateDefenseRuleRequest): CreateDefenseRuleResponse {
  var runtime = new Util.RuntimeOptions{};
  return createDefenseRuleWithOptions(request, runtime);
}

model CreateDefenseTemplateRequest {
  defenseScene?: string(name='DefenseScene', description='The scenario in which you want to use the protection rule template. For more information, see the description of the **DefenseScene** parameter in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.

This parameter is required.', example='waf_group'),
  description?: string(name='Description', description='The description of the protection rule template.', example='Test'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  templateName?: string(name='TemplateName', description='The name of the protection rule template.

This parameter is required.', example='test221'),
  templateOrigin?: string(name='TemplateOrigin', description='The origin of the protection rule template that you want to create. Set the value to **custom**. The value specifies that the protection rule template is a custom template.

This parameter is required.', example='custom'),
  templateStatus?: int32(name='TemplateStatus', description='The status of the protection rule template. Valid values:

*   **0:** disabled.
*   **1:** enabled.

This parameter is required.', example='1'),
  templateType?: string(name='TemplateType', description='The type of the protection rule template. Valid values:

*   **user_default:** default template.
*   **user_custom:** custom template.

This parameter is required.', example='user_default'),
}

model CreateDefenseTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='F48ABDF7-D777-5F26-892A-57349765D7A9'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template.', example='2212'),
}

model CreateDefenseTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDefenseTemplateResponseBody(name='body'),
}

/**
 * @summary Creates a protection rule template.
 *
 * @param request CreateDefenseTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateDefenseTemplateResponse
 */
async function createDefenseTemplateWithOptions(request: CreateDefenseTemplateRequest, runtime: Util.RuntimeOptions): CreateDefenseTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.defenseScene)) {
    query['DefenseScene'] = request.defenseScene;
  }
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!Util.isUnset(request.templateOrigin)) {
    query['TemplateOrigin'] = request.templateOrigin;
  }
  if (!Util.isUnset(request.templateStatus)) {
    query['TemplateStatus'] = request.templateStatus;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateDefenseTemplate',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a protection rule template.
 *
 * @param request CreateDefenseTemplateRequest
 * @return CreateDefenseTemplateResponse
 */
async function createDefenseTemplate(request: CreateDefenseTemplateRequest): CreateDefenseTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return createDefenseTemplateWithOptions(request, runtime);
}

model CreateDomainRequest {
  accessType?: string(name='AccessType', description='The mode in which you want to add the domain name to WAF. Valid values:

*   **share:** adds the domain name to WAF in CNAME record mode. This is the default value.
*   **hybrid_cloud_cname:** adds the domain name to WAF in hybrid cloud reverse proxy mode.', example='share'),
  domain?: string(name='Domain', description='The domain name that you want to add to WAF.

This parameter is required.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  listen?: {
    certId?: string(name='CertId', description='The ID of the certificate that you want to add. This parameter is available only if you specify **HttpsPorts**.', example='123', nullable=true),
    cipherSuite?: int32(name='CipherSuite', description='The type of cipher suite that you want to add. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **1:** all cipher suites.
*   **2:** strong cipher suites. You can select this value only if you set **TLSVersion** to **tlsv1.2**.
*   **99:** custom cipher suites.', example='2'),
    customCiphers?: [ string ](name='CustomCiphers', description='The custom cipher suite that you want to add.'),
    enableTLSv3?: boolean(name='EnableTLSv3', description='Specifies whether to support TLS 1.3. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false**', example='true', nullable=true),
    exclusiveIp?: boolean(name='ExclusiveIp', description='Specifies whether to enable an exclusive IP address. This parameter is available only if you set **IPv6Enabled** to **false** and **ProtectionResource** to **share**. Valid values:

*   **true**
*   **false** (default)', example='true'),
    focusHttps?: boolean(name='FocusHttps', description='Specifies whether to enable HTTP to HTTPS redirection. This parameter is available only if you specify HttpsPorts and leave HttpPorts empty. Valid values:

*   **true**
*   **false**', example='true'),
    http2Enabled?: boolean(name='Http2Enabled', description='Specifies whether to enable HTTP/2. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false** (default)', example='true'),
    httpPorts?: [ int32 ](name='HttpPorts', description='The HTTP listener port.'),
    httpsPorts?: [ int32 ](name='HttpsPorts', description='The HTTPS listener port.'),
    IPv6Enabled?: boolean(name='IPv6Enabled', description='Specifies whether to enable IPv6. Valid values:

*   **true**
*   **false** (default)', example='true'),
    protectionResource?: string(name='ProtectionResource', description='The type of the protection resource. Valid values:

*   **share:** a shared cluster. This is the default value.
*   **gslb:** shared cluster-based intelligent load balancing.', example='share'),
    SM2AccessOnly?: boolean(name='SM2AccessOnly', description='Specifies whether to allow access only from SM certificate-based clients. This parameter is available only if you set SM2Enabled to true.

*   true
*   false', example='true', nullable=true),
    SM2CertId?: string(name='SM2CertId', description='The ID of the SM certificate that you want to add. This parameter is available only if you set SM2Enabled to true.', example='123-cn-hangzhou', nullable=true),
    SM2Enabled?: boolean(name='SM2Enabled', description='Specifies whether to enable the ShangMi (SM) certificate.', example='true', nullable=true),
    TLSVersion?: string(name='TLSVersion', description='The version of the Transport Layer Security (TLS) protocol. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **tlsv1**
*   **tlsv1.1**
*   **tlsv1.2**', example='tlsv1'),
    xffHeaderMode?: int32(name='XffHeaderMode', description='The method that you want WAF to use to obtain the actual IP address of a client. Valid values:

*   **0:** No Layer 7 proxies are deployed in front of WAF. This is the default value.
*   **1:** WAF reads the first value of the X-Forwarded-For (XFF) header field as the IP address of the client.
*   **2:** WAF reads the value of a custom header field as the IP address of the client.', example='1'),
    xffHeaders?: [ string ](name='XffHeaders', description='The custom header field that you want WAF to use to obtain the actual IP address of a client.'),
  }(name='Listen', description='The configurations of the listeners.

This parameter is required.'),
  redirect?: {
    backends?: [ string ](name='Backends', description='The IP addresses or domain names of the origin server.'),
    cnameEnabled?: boolean(name='CnameEnabled', description='Specifies whether to enable the public cloud disaster recovery feature. Valid values:

*   **true**
*   **false** (default)', example='true'),
    connectTimeout?: int32(name='ConnectTimeout', description='The timeout period for connections. Unit: seconds. Valid values: 1 to 3600.', example='120'),
    focusHttpBackend?: boolean(name='FocusHttpBackend', description='Specifies whether to enable HTTPS to HTTP redirection for back-to-origin requests. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false**', example='true'),
    keepalive?: boolean(name='Keepalive', description='Specifies whether to enable the persistent connection feature. Valid values:

*   **true** (default)
*   **false**', example='true'),
    keepaliveRequests?: int32(name='KeepaliveRequests', description='The number of reused persistent connections. Valid values: 60 to 1000.

>  This parameter specifies the number of reused persistent connections after you enable the persistent connection feature.', example='1000'),
    keepaliveTimeout?: int32(name='KeepaliveTimeout', description='The timeout period for idle persistent connections. Valid values: 1 to 60. Default value: 15. Unit: seconds.

>  This parameter specifies the time for which a reused persistent connection can remain in the Idle state before the persistent connection is closed.', example='15'),
    loadbalance?: string(name='Loadbalance', description='The load balancing algorithm that you want to use to forward requests to the origin server. Valid values:

*   **iphash**
*   **roundRobin**
*   **leastTime** You can set the parameter to this value only if you set **ProtectionResource** to **gslb**.

This parameter is required.', example='roundRobin'),
    readTimeout?: int32(name='ReadTimeout', description='The timeout period for read connections. Unit: seconds. Valid values: 1 to 3600.', example='200'),
    requestHeaders?: [ 
      {
        key?: string(name='Key', description='The custom header field.', example='aaa'),
        value?: string(name='Value', description='The value of the custom header field.', example='bbb'),
      }
    ](name='RequestHeaders', description='The custom header field that you want to use to label requests that are processed by WAF.

When a request passes through WAF, the custom header field is automatically used to label the request. This way, the backend service can identify requests that are processed by WAF.'),
    retry?: boolean(name='Retry', description='Specifies whether WAF retries forwarding requests to the origin server when the requests fail to be forwarded to the origin server. Valid values:

*   **true** (default)
*   **false**', example='true'),
    routingRules?: string(name='RoutingRules', description='The forwarding rules that you want to configure for the domain name that you want to add to WAF in hybrid cloud mode. This parameter is a string that consists of JSON arrays. Each element in a JSON array is a JSON struct that contains the following fields:

*   **rs**: the back-to-origin IP addresses or CNAMEs. The value must be of the ARRAY type.
*   **location**: the name of the protection node. The value must be of the STRING type.
*   **locationId**: the ID of the protection node. The value must be of the LONG type.', example='[
      {
            "rs": [
                  "1.1.XX.XX"
            ],
            "locationId": 535,
            "location": "test1111"
      }
]'),
    sniEnabled?: boolean(name='SniEnabled', description='Specifies whether to enable origin Server Name Indication (SNI). This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false** (default)', example='true'),
    sniHost?: string(name='SniHost', description='The value of the SNI field. If you do not specify this parameter, the value of the **Host** field is automatically used. This parameter is optional. If you want WAF to use an SNI field value that is different from the Host field value in back-to-origin requests, you can specify a custom value for the SNI field.

>  This parameter is required only if you set **SniEnabled** to **true**.', example='www.aliyundoc.com'),
    writeTimeout?: int32(name='WriteTimeout', description='The timeout period for write connections. Unit: seconds. Valid values: 1 to 3600.', example='200'),
    xffProto?: boolean(name='XffProto', description='Specifies whether to use X-Forward-For-Proto to pass the protocol used by WAF to forward requests to the origin server. Valid values:

*   **true** (default)
*   **false**', example='true'),
  }(name='Redirect', description='The configurations of the forwarding rule.

This parameter is required.'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou**: the Chinese mainland
*   **ap-southeast-1**: outside the Chinese mainland

This parameter is required.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model CreateDomainShrinkRequest {
  accessType?: string(name='AccessType', description='The mode in which you want to add the domain name to WAF. Valid values:

*   **share:** adds the domain name to WAF in CNAME record mode. This is the default value.
*   **hybrid_cloud_cname:** adds the domain name to WAF in hybrid cloud reverse proxy mode.', example='share'),
  domain?: string(name='Domain', description='The domain name that you want to add to WAF.

This parameter is required.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  listenShrink?: string(name='Listen', description='The configurations of the listeners.

This parameter is required.'),
  redirectShrink?: string(name='Redirect', description='The configurations of the forwarding rule.

This parameter is required.'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou**: the Chinese mainland
*   **ap-southeast-1**: outside the Chinese mainland

This parameter is required.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model CreateDomainResponseBody = {
  domainInfo?: {
    cname?: string(name='Cname', description='The CNAME that is assigned by WAF to the domain name.', example='xxxxxwww.****.com'),
    domain?: string(name='Domain', description='The domain name that you added to WAF.', example='www.aliyundoc.com'),
  }(name='DomainInfo', description='The information about the domain name.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D****'),
}

model CreateDomainResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDomainResponseBody(name='body'),
}

/**
 * @summary Adds a domain name to Web Application Firewall (WAF).
 *
 * @param tmpReq CreateDomainRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateDomainResponse
 */
async function createDomainWithOptions(tmpReq: CreateDomainRequest, runtime: Util.RuntimeOptions): CreateDomainResponse {
  Util.validateModel(tmpReq);
  var request = new CreateDomainShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.listen)) {
    request.listenShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.listen, 'Listen', 'json');
  }
  if (!Util.isUnset(tmpReq.redirect)) {
    request.redirectShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.redirect, 'Redirect', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.accessType)) {
    query['AccessType'] = request.accessType;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.listenShrink)) {
    query['Listen'] = request.listenShrink;
  }
  if (!Util.isUnset(request.redirectShrink)) {
    query['Redirect'] = request.redirectShrink;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateDomain',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Adds a domain name to Web Application Firewall (WAF).
 *
 * @param request CreateDomainRequest
 * @return CreateDomainResponse
 */
async function createDomain(request: CreateDomainRequest): CreateDomainResponse {
  var runtime = new Util.RuntimeOptions{};
  return createDomainWithOptions(request, runtime);
}

model CreateMajorProtectionBlackIpRequest {
  description?: string(name='Description', description='The description of the IP address blacklist.', example='Protection for major events'),
  expiredTime?: long(name='ExpiredTime', description='The time after which the IP address blacklist becomes invalid. Unit: seconds.

>  If you set the value to **0**, the blacklist is permanently valid.

This parameter is required.', example='1716528465'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

This parameter is required.', example='waf_v3prepaid_public_cn-2r42s6y****'),
  ipList?: string(name='IpList', description='The IP addresses that you want to add to the IP address blacklist. CIDR blocks and IP addresses are supported. IPv4 and IPv6 addresses are supported. Separate the CIDR blocks or IP addresses with commas (,). For more information, see [Protection for major events](https://help.aliyun.com/document_detail/425591.html).

This parameter is required.', example='192.0.XX.XX,192.0.XX.XX/24'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.

This parameter is required.', example='232324'),
  templateId?: long(name='TemplateId', description='The ID of the IP address blacklist rule template for major event protection.

This parameter is required.', example='2221'),
}

model CreateMajorProtectionBlackIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D****'),
}

model CreateMajorProtectionBlackIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateMajorProtectionBlackIpResponseBody(name='body'),
}

/**
 * @summary Creates an IP address blacklist for major event protection.
 *
 * @description This operation is available only on the China site (aliyun.com).
 *
 * @param request CreateMajorProtectionBlackIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateMajorProtectionBlackIpResponse
 */
async function createMajorProtectionBlackIpWithOptions(request: CreateMajorProtectionBlackIpRequest, runtime: Util.RuntimeOptions): CreateMajorProtectionBlackIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.expiredTime)) {
    query['ExpiredTime'] = request.expiredTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipList)) {
    query['IpList'] = request.ipList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateMajorProtectionBlackIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates an IP address blacklist for major event protection.
 *
 * @description This operation is available only on the China site (aliyun.com).
 *
 * @param request CreateMajorProtectionBlackIpRequest
 * @return CreateMajorProtectionBlackIpResponse
 */
async function createMajorProtectionBlackIp(request: CreateMajorProtectionBlackIpRequest): CreateMajorProtectionBlackIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return createMajorProtectionBlackIpWithOptions(request, runtime);
}

model CreateMemberAccountsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  memberAccountIds?: [ string ](name='MemberAccountIds', description='The Alibaba Cloud account IDs of the members that you want to add. You can add up to 10 members at the same time.

This parameter is required.'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  sourceIp?: string(name='SourceIp', description='The source IP address of the request. The system automatically obtains the value of this parameter.', example='1.1.X.X'),
}

model CreateMemberAccountsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='66A98669-ER12-WE34-23PO-301469*****E'),
}

model CreateMemberAccountsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateMemberAccountsResponseBody(name='body'),
}

/**
 * @summary Adds members to use the multi-account management feature of Web Application Firewall (WAF).
 *
 * @param request CreateMemberAccountsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateMemberAccountsResponse
 */
async function createMemberAccountsWithOptions(request: CreateMemberAccountsRequest, runtime: Util.RuntimeOptions): CreateMemberAccountsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.memberAccountIds)) {
    query['MemberAccountIds'] = request.memberAccountIds;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.sourceIp)) {
    query['SourceIp'] = request.sourceIp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateMemberAccounts',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Adds members to use the multi-account management feature of Web Application Firewall (WAF).
 *
 * @param request CreateMemberAccountsRequest
 * @return CreateMemberAccountsResponse
 */
async function createMemberAccounts(request: CreateMemberAccountsRequest): CreateMemberAccountsResponse {
  var runtime = new Util.RuntimeOptions{};
  return createMemberAccountsWithOptions(request, runtime);
}

model CreatePostpaidInstanceRequest {
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm4gh****wela'),
}

model CreatePostpaidInstanceResponseBody = {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.', example='waf_v2_public_cn-x0r****gr1i'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='73A4E786-8235-50C0-9631-87C8****4A36'),
}

model CreatePostpaidInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreatePostpaidInstanceResponseBody(name='body'),
}

/**
 * @summary Creates a pay-as-you-go Web Application Firewall (WAF) 3.0 instance.
 *
 * @param request CreatePostpaidInstanceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreatePostpaidInstanceResponse
 */
async function createPostpaidInstanceWithOptions(request: CreatePostpaidInstanceRequest, runtime: Util.RuntimeOptions): CreatePostpaidInstanceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreatePostpaidInstance',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a pay-as-you-go Web Application Firewall (WAF) 3.0 instance.
 *
 * @param request CreatePostpaidInstanceRequest
 * @return CreatePostpaidInstanceResponse
 */
async function createPostpaidInstance(request: CreatePostpaidInstanceRequest): CreatePostpaidInstanceResponse {
  var runtime = new Util.RuntimeOptions{};
  return createPostpaidInstanceWithOptions(request, runtime);
}

model DeleteApisecAbnormalRequest {
  abnormalId?: string(name='AbnormalId', example='c0a96***4b9cd303467402a63dcc'),
  clusterId?: string(name='ClusterId', example='428'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf-cn-n6w***x52m'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm2th****v6ay'),
}

model DeleteApisecAbnormalResponseBody = {
  requestId?: string(name='RequestId', description='Id of the request', example='66A98669-CC6E-4F3E-80A6-7B***11AE'),
  result?: boolean(name='Result', example='true'),
}

model DeleteApisecAbnormalResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteApisecAbnormalResponseBody(name='body'),
}

/**
 * @summary 删除API安全风险
 *
 * @param request DeleteApisecAbnormalRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteApisecAbnormalResponse
 */
async function deleteApisecAbnormalWithOptions(request: DeleteApisecAbnormalRequest, runtime: Util.RuntimeOptions): DeleteApisecAbnormalResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.abnormalId)) {
    query['AbnormalId'] = request.abnormalId;
  }
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteApisecAbnormal',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 删除API安全风险
 *
 * @param request DeleteApisecAbnormalRequest
 * @return DeleteApisecAbnormalResponse
 */
async function deleteApisecAbnormal(request: DeleteApisecAbnormalRequest): DeleteApisecAbnormalResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteApisecAbnormalWithOptions(request, runtime);
}

model DeleteApisecEventRequest {
  clusterId?: string(name='ClusterId', example='433'),
  eventId?: string(name='EventId', example='0b7ab137a065aab7656986***11db'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf-cn-zz11sr5****'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model DeleteApisecEventResponseBody = {
  requestId?: string(name='RequestId', description='Id of the request', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
  result?: boolean(name='Result', example='true'),
}

model DeleteApisecEventResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteApisecEventResponseBody(name='body'),
}

/**
 * @summary 删除API安全事件
 *
 * @param request DeleteApisecEventRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteApisecEventResponse
 */
async function deleteApisecEventWithOptions(request: DeleteApisecEventRequest, runtime: Util.RuntimeOptions): DeleteApisecEventResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.eventId)) {
    query['EventId'] = request.eventId;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteApisecEvent',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 删除API安全事件
 *
 * @param request DeleteApisecEventRequest
 * @return DeleteApisecEventResponse
 */
async function deleteApisecEvent(request: DeleteApisecEventRequest): DeleteApisecEventResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteApisecEventWithOptions(request, runtime);
}

model DeleteDefenseResourceGroupRequest {
  groupName?: string(name='GroupName', description='The name of the protected object group that you want to delete.

This parameter is required.', example='group221'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model DeleteDefenseResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='25BE1169-9AE4-5D7D-8293-C33242ABB549'),
}

model DeleteDefenseResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDefenseResourceGroupResponseBody(name='body'),
}

/**
 * @summary Deletes a protected object group.
 *
 * @param request DeleteDefenseResourceGroupRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteDefenseResourceGroupResponse
 */
async function deleteDefenseResourceGroupWithOptions(request: DeleteDefenseResourceGroupRequest, runtime: Util.RuntimeOptions): DeleteDefenseResourceGroupResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteDefenseResourceGroup',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a protected object group.
 *
 * @param request DeleteDefenseResourceGroupRequest
 * @return DeleteDefenseResourceGroupResponse
 */
async function deleteDefenseResourceGroup(request: DeleteDefenseResourceGroupRequest): DeleteDefenseResourceGroupResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteDefenseResourceGroupWithOptions(request, runtime);
}

model DeleteDefenseRuleRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleIds?: string(name='RuleIds', description='The IDs of the protection rules that you want to delete. Separate the IDs with commas (,).

This parameter is required.', example='2223455,23354,465565'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template to which the protection rule that you want to delete belongs.

This parameter is required.', example='2221'),
}

model DeleteDefenseRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2EC856FE-6D31-5861-8275-E5DEDB539089'),
}

model DeleteDefenseRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDefenseRuleResponseBody(name='body'),
}

/**
 * @summary Deletes a protection rule.
 *
 * @param request DeleteDefenseRuleRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteDefenseRuleResponse
 */
async function deleteDefenseRuleWithOptions(request: DeleteDefenseRuleRequest, runtime: Util.RuntimeOptions): DeleteDefenseRuleResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleIds)) {
    query['RuleIds'] = request.ruleIds;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteDefenseRule',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a protection rule.
 *
 * @param request DeleteDefenseRuleRequest
 * @return DeleteDefenseRuleResponse
 */
async function deleteDefenseRule(request: DeleteDefenseRuleRequest): DeleteDefenseRuleResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteDefenseRuleWithOptions(request, runtime);
}

model DeleteDefenseTemplateRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template that you want to delete.

This parameter is required.', example='3155'),
}

model DeleteDefenseTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='E2DE6F11-6FED-5909-95F2-2520B58C5BC7'),
}

model DeleteDefenseTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDefenseTemplateResponseBody(name='body'),
}

/**
 * @summary Deletes a protection rule template.
 *
 * @param request DeleteDefenseTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteDefenseTemplateResponse
 */
async function deleteDefenseTemplateWithOptions(request: DeleteDefenseTemplateRequest, runtime: Util.RuntimeOptions): DeleteDefenseTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteDefenseTemplate',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a protection rule template.
 *
 * @param request DeleteDefenseTemplateRequest
 * @return DeleteDefenseTemplateResponse
 */
async function deleteDefenseTemplate(request: DeleteDefenseTemplateRequest): DeleteDefenseTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteDefenseTemplateWithOptions(request, runtime);
}

model DeleteDomainRequest {
  accessType?: string(name='AccessType', description='The mode in which the domain name is added to WAF. Valid values:

*   **share:** CNAME record mode. This is the default value.
*   **hybrid_cloud_cname:** hybrid cloud reverse proxy mode.', example='share'),
  domain?: string(name='Domain', description='The domain name that you want to delete.

This parameter is required.', example='www.aliyundoc.com'),
  domainId?: string(name='DomainId', description='The ID of the domain name.', example='www.aliyundoc.com-waf'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
}

model DeleteDomainResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D5EB0'),
}

model DeleteDomainResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDomainResponseBody(name='body'),
}

/**
 * @summary Deletes a domain name that is added to Web Application Firewall (WAF).
 *
 * @param request DeleteDomainRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteDomainResponse
 */
async function deleteDomainWithOptions(request: DeleteDomainRequest, runtime: Util.RuntimeOptions): DeleteDomainResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.accessType)) {
    query['AccessType'] = request.accessType;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.domainId)) {
    query['DomainId'] = request.domainId;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteDomain',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a domain name that is added to Web Application Firewall (WAF).
 *
 * @param request DeleteDomainRequest
 * @return DeleteDomainResponse
 */
async function deleteDomain(request: DeleteDomainRequest): DeleteDomainResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteDomainWithOptions(request, runtime);
}

model DeleteMajorProtectionBlackIpRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  ipList?: string(name='IpList', description='The IP address blacklist for major event protection that you want to delete. You can specify multiple CIDR blocks or IP addresses. IPv4 and IPv6 addresses are supported. Separate the CIDR blocks or IP addresses with commas (,). For more information, see [Protection for major events](https://help.aliyun.com/document_detail/425591.html).

This parameter is required.', example='192.0.XX.XX,192.0.XX.XX/24'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.

This parameter is required.', example='20013135'),
  templateId?: long(name='TemplateId', description='The ID of the IP address blacklist rule template for major event protection.

This parameter is required.', example='5332'),
}

model DeleteMajorProtectionBlackIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='66A98669-CC6E-4F3E-80A6-3014697B11AE'),
}

model DeleteMajorProtectionBlackIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteMajorProtectionBlackIpResponseBody(name='body'),
}

/**
 * @summary Deletes an IP address blacklist for major event protection.
 *
 * @param request DeleteMajorProtectionBlackIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteMajorProtectionBlackIpResponse
 */
async function deleteMajorProtectionBlackIpWithOptions(request: DeleteMajorProtectionBlackIpRequest, runtime: Util.RuntimeOptions): DeleteMajorProtectionBlackIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipList)) {
    query['IpList'] = request.ipList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteMajorProtectionBlackIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes an IP address blacklist for major event protection.
 *
 * @param request DeleteMajorProtectionBlackIpRequest
 * @return DeleteMajorProtectionBlackIpResponse
 */
async function deleteMajorProtectionBlackIp(request: DeleteMajorProtectionBlackIpRequest): DeleteMajorProtectionBlackIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteMajorProtectionBlackIpWithOptions(request, runtime);
}

model DeleteMemberAccountRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_esasdf3****'),
  memberAccountId?: string(name='MemberAccountId', description='The Alibaba Cloud account ID of the managed member.

This parameter is required.', example='131***********39'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  sourceIp?: string(name='SourceIp', description='The source IP address of the request. The system automatically obtains the value of this parameter.', example='0.0.XX.XX'),
}

model DeleteMemberAccountResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='5ABE714C-8890-5D7E-A08B-45CB****5473'),
}

model DeleteMemberAccountResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteMemberAccountResponseBody(name='body'),
}

/**
 * @summary Removes the members that are added for multi-account management in Web Application Firewall (WAF).
 *
 * @param request DeleteMemberAccountRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteMemberAccountResponse
 */
async function deleteMemberAccountWithOptions(request: DeleteMemberAccountRequest, runtime: Util.RuntimeOptions): DeleteMemberAccountResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.memberAccountId)) {
    query['MemberAccountId'] = request.memberAccountId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.sourceIp)) {
    query['SourceIp'] = request.sourceIp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteMemberAccount',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Removes the members that are added for multi-account management in Web Application Firewall (WAF).
 *
 * @param request DeleteMemberAccountRequest
 * @return DeleteMemberAccountResponse
 */
async function deleteMemberAccount(request: DeleteMemberAccountRequest): DeleteMemberAccountResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteMemberAccountWithOptions(request, runtime);
}

model DescribeAccountDelegatedStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeAccountDelegatedStatusResponseBody = {
  accountId?: string(name='AccountId', description='The ID of the Alibaba Cloud account.', example='10***********34'),
  accountName?: string(name='AccountName', description='The name of the Alibaba Cloud account. This parameter is returned only if the account is the delegated administrator account.', example='account_test'),
  delegatedStatus?: boolean(name='DelegatedStatus', description='Indicates whether the Alibaba Cloud account is the delegated administrator account of the WAF instance.

*   **true**
*   **false**', example='true'),
  requestId?: string(name='RequestId', description='The request ID.', example='8161375D-5958-5627-BFDE-DF14****3E87'),
}

model DescribeAccountDelegatedStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAccountDelegatedStatusResponseBody(name='body'),
}

/**
 * @summary Queries whether an Alibaba Cloud account is the delegated administrator account of a Web Application Firewall (WAF) instance.
 *
 * @param request DescribeAccountDelegatedStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeAccountDelegatedStatusResponse
 */
async function describeAccountDelegatedStatusWithOptions(request: DescribeAccountDelegatedStatusRequest, runtime: Util.RuntimeOptions): DescribeAccountDelegatedStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeAccountDelegatedStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries whether an Alibaba Cloud account is the delegated administrator account of a Web Application Firewall (WAF) instance.
 *
 * @param request DescribeAccountDelegatedStatusRequest
 * @return DescribeAccountDelegatedStatusResponse
 */
async function describeAccountDelegatedStatus(request: DescribeAccountDelegatedStatusRequest): DescribeAccountDelegatedStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeAccountDelegatedStatusWithOptions(request, runtime);
}

model DescribeApisecAbnormalDomainStatisticRequest {
  clusterId?: string(name='ClusterId', example='428'),
  endTime?: long(name='EndTime', example='1687313820'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf-cn-45919n***'),
  orderWay?: string(name='OrderWay', example='desc'),
  pageNumber?: long(name='PageNumber', example='1'),
  pageSize?: long(name='PageSize', example='10'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
  startTime?: long(name='StartTime', example='1682571600'),
}

model DescribeApisecAbnormalDomainStatisticResponseBody = {
  data?: [ 
    {
      apiCount?: long(name='ApiCount', example='10'),
      domain?: string(name='Domain', example='ba.aliyun.com'),
      high?: long(name='High', example='12'),
      low?: long(name='Low', example='4'),
      medium?: long(name='Medium', example='9'),
    }
  ](name='Data'),
  requestId?: string(name='RequestId', description='Id of the request', example='66A98669-CC6E-4F3E-80A6-3014***B11AE'),
  totalCount?: long(name='TotalCount', example='1'),
}

model DescribeApisecAbnormalDomainStatisticResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecAbnormalDomainStatisticResponseBody(name='body'),
}

/**
 * @summary 查询API安全风险站点统计
 *
 * @param request DescribeApisecAbnormalDomainStatisticRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecAbnormalDomainStatisticResponse
 */
async function describeApisecAbnormalDomainStatisticWithOptions(request: DescribeApisecAbnormalDomainStatisticRequest, runtime: Util.RuntimeOptions): DescribeApisecAbnormalDomainStatisticResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.orderWay)) {
    query['OrderWay'] = request.orderWay;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecAbnormalDomainStatistic',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询API安全风险站点统计
 *
 * @param request DescribeApisecAbnormalDomainStatisticRequest
 * @return DescribeApisecAbnormalDomainStatisticResponse
 */
async function describeApisecAbnormalDomainStatistic(request: DescribeApisecAbnormalDomainStatisticRequest): DescribeApisecAbnormalDomainStatisticResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecAbnormalDomainStatisticWithOptions(request, runtime);
}

model DescribeApisecAssetTrendRequest {
  clusterId?: string(name='ClusterId', example='590'),
  endTime?: long(name='EndTime', example='1683183599'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v2_public_cn-ww**b06'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-aek**7uq'),
  startTime?: long(name='StartTime', example='1668496310'),
}

model DescribeApisecAssetTrendResponseBody = {
  data?: [ 
    {
      assetActive?: long(name='AssetActive', example='60'),
      assetCount?: long(name='AssetCount', example='80'),
      assetOffline?: long(name='AssetOffline', example='20'),
      timestamp?: long(name='Timestamp', example='1683600042'),
    }
  ](name='Data'),
  requestId?: string(name='RequestId', description='Id of the request', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
}

model DescribeApisecAssetTrendResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecAssetTrendResponseBody(name='body'),
}

/**
 * @summary 查询API安全资产趋势图
 *
 * @param request DescribeApisecAssetTrendRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecAssetTrendResponse
 */
async function describeApisecAssetTrendWithOptions(request: DescribeApisecAssetTrendRequest, runtime: Util.RuntimeOptions): DescribeApisecAssetTrendResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecAssetTrend',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询API安全资产趋势图
 *
 * @param request DescribeApisecAssetTrendRequest
 * @return DescribeApisecAssetTrendResponse
 */
async function describeApisecAssetTrend(request: DescribeApisecAssetTrendRequest): DescribeApisecAssetTrendResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecAssetTrendWithOptions(request, runtime);
}

model DescribeApisecEventDomainStatisticRequest {
  clusterId?: string(name='ClusterId', example='428'),
  endTime?: long(name='EndTime', example='1686895256'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_elasticity-cn-0xldbqt****'),
  orderWay?: string(name='OrderWay', example='desc'),
  pageNumber?: long(name='PageNumber', example='1'),
  pageSize?: long(name='PageSize', example='10'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfmvyknl****fa'),
  startTime?: long(name='StartTime', example='1668496310'),
}

model DescribeApisecEventDomainStatisticResponseBody = {
  data?: [ 
    {
      apiCount?: long(name='ApiCount', example='10'),
      domain?: string(name='Domain', example='a.aliyun.com'),
      high?: long(name='High', example='10'),
      low?: long(name='Low', example='2'),
      medium?: long(name='Medium', example='6'),
    }
  ](name='Data'),
  requestId?: string(name='RequestId', description='Id of the request', example='66A98669-*******-80A6-3014697B11AE'),
  totalCount?: long(name='TotalCount', example='10'),
}

model DescribeApisecEventDomainStatisticResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecEventDomainStatisticResponseBody(name='body'),
}

/**
 * @summary 查询API安全事件站点统计
 *
 * @param request DescribeApisecEventDomainStatisticRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecEventDomainStatisticResponse
 */
async function describeApisecEventDomainStatisticWithOptions(request: DescribeApisecEventDomainStatisticRequest, runtime: Util.RuntimeOptions): DescribeApisecEventDomainStatisticResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.orderWay)) {
    query['OrderWay'] = request.orderWay;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecEventDomainStatistic',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询API安全事件站点统计
 *
 * @param request DescribeApisecEventDomainStatisticRequest
 * @return DescribeApisecEventDomainStatisticResponse
 */
async function describeApisecEventDomainStatistic(request: DescribeApisecEventDomainStatisticRequest): DescribeApisecEventDomainStatisticResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecEventDomainStatisticWithOptions(request, runtime);
}

model DescribeApisecLogDeliveriesRequest {
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v3_public_cn-uqm2z****0a'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model DescribeApisecLogDeliveriesResponseBody = {
  deliveryConfigs?: [ 
    {
      assertKey?: string(name='AssertKey', example='risk'),
      logRegionId?: string(name='LogRegionId', example='cn-hangzhou'),
      logStoreName?: string(name='LogStoreName', example='apisec-logstore***'),
      projectName?: string(name='ProjectName', example='apisec-project-14316572********'),
      status?: boolean(name='Status', example='true'),
    }
  ](name='DeliveryConfigs'),
  requestId?: string(name='RequestId', example='2EFCFE18-78F8-5079-B312-07***48B'),
}

model DescribeApisecLogDeliveriesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecLogDeliveriesResponseBody(name='body'),
}

/**
 * @summary 获取API安全日志订阅列表
 *
 * @param request DescribeApisecLogDeliveriesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecLogDeliveriesResponse
 */
async function describeApisecLogDeliveriesWithOptions(request: DescribeApisecLogDeliveriesRequest, runtime: Util.RuntimeOptions): DescribeApisecLogDeliveriesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecLogDeliveries',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 获取API安全日志订阅列表
 *
 * @param request DescribeApisecLogDeliveriesRequest
 * @return DescribeApisecLogDeliveriesResponse
 */
async function describeApisecLogDeliveries(request: DescribeApisecLogDeliveriesRequest): DescribeApisecLogDeliveriesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecLogDeliveriesWithOptions(request, runtime);
}

model DescribeApisecSensitiveDomainStatisticRequest {
  clusterId?: string(name='ClusterId', example='428'),
  endTime?: long(name='EndTime', example='1686895256'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_cdnsdf3****'),
  orderWay?: string(name='OrderWay', example='desc'),
  pageNumber?: long(name='PageNumber', example='1'),
  pageSize?: long(name='PageSize', example='10'),
  region?: string(name='Region', example='cn'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
  startTime?: long(name='StartTime', example='1668496310'),
  type?: string(name='Type', example='request'),
}

model DescribeApisecSensitiveDomainStatisticResponseBody = {
  data?: [ 
    {
      apiCount?: long(name='ApiCount', example='10'),
      domainCount?: long(name='DomainCount', example='10'),
      sensitiveCode?: string(name='SensitiveCode', example='10'),
      sensitiveLevel?: string(name='SensitiveLevel', example='L3'),
      sensitiveName?: string(name='SensitiveName'),
    }
  ](name='Data'),
  requestId?: string(name='RequestId', description='Id of the request', example='56B40D30-4960-4F19-B7D5-2B1F***6CB70'),
  totalCount?: long(name='TotalCount', example='27'),
}

model DescribeApisecSensitiveDomainStatisticResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecSensitiveDomainStatisticResponseBody(name='body'),
}

/**
 * @summary 查询API安全敏感数据类型统计
 *
 * @param request DescribeApisecSensitiveDomainStatisticRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecSensitiveDomainStatisticResponse
 */
async function describeApisecSensitiveDomainStatisticWithOptions(request: DescribeApisecSensitiveDomainStatisticRequest, runtime: Util.RuntimeOptions): DescribeApisecSensitiveDomainStatisticResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.orderWay)) {
    query['OrderWay'] = request.orderWay;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.region)) {
    query['Region'] = request.region;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  if (!Util.isUnset(request.type)) {
    query['Type'] = request.type;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecSensitiveDomainStatistic',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询API安全敏感数据类型统计
 *
 * @param request DescribeApisecSensitiveDomainStatisticRequest
 * @return DescribeApisecSensitiveDomainStatisticResponse
 */
async function describeApisecSensitiveDomainStatistic(request: DescribeApisecSensitiveDomainStatisticRequest): DescribeApisecSensitiveDomainStatisticResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecSensitiveDomainStatisticWithOptions(request, runtime);
}

model DescribeApisecSlsLogStoresRequest {
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v3_public_cn-uqm2z****0a'),
  logRegionId?: string(name='LogRegionId', description='This parameter is required.', example='cn-hangzhou'),
  projectName?: string(name='ProjectName', description='This parameter is required.', example='apisec-project-14316572********'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model DescribeApisecSlsLogStoresResponseBody = {
  logStores?: [ string ](name='LogStores'),
  requestId?: string(name='RequestId', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
}

model DescribeApisecSlsLogStoresResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecSlsLogStoresResponseBody(name='body'),
}

/**
 * @summary 查询日志服务SLS的LogStore列表
 *
 * @param request DescribeApisecSlsLogStoresRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecSlsLogStoresResponse
 */
async function describeApisecSlsLogStoresWithOptions(request: DescribeApisecSlsLogStoresRequest, runtime: Util.RuntimeOptions): DescribeApisecSlsLogStoresResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.logRegionId)) {
    query['LogRegionId'] = request.logRegionId;
  }
  if (!Util.isUnset(request.projectName)) {
    query['ProjectName'] = request.projectName;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecSlsLogStores',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询日志服务SLS的LogStore列表
 *
 * @param request DescribeApisecSlsLogStoresRequest
 * @return DescribeApisecSlsLogStoresResponse
 */
async function describeApisecSlsLogStores(request: DescribeApisecSlsLogStoresRequest): DescribeApisecSlsLogStoresResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecSlsLogStoresWithOptions(request, runtime);
}

model DescribeApisecSlsProjectsRequest {
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v3_public_cn-uqm2z****0a'),
  logRegionId?: string(name='LogRegionId', description='This parameter is required.', example='cn-hangzhou'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model DescribeApisecSlsProjectsResponseBody = {
  projects?: [ string ](name='Projects'),
  requestId?: string(name='RequestId', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
}

model DescribeApisecSlsProjectsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeApisecSlsProjectsResponseBody(name='body'),
}

/**
 * @summary 查询日志服务SLS的Project列表
 *
 * @param request DescribeApisecSlsProjectsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeApisecSlsProjectsResponse
 */
async function describeApisecSlsProjectsWithOptions(request: DescribeApisecSlsProjectsRequest, runtime: Util.RuntimeOptions): DescribeApisecSlsProjectsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.logRegionId)) {
    query['LogRegionId'] = request.logRegionId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeApisecSlsProjects',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询日志服务SLS的Project列表
 *
 * @param request DescribeApisecSlsProjectsRequest
 * @return DescribeApisecSlsProjectsResponse
 */
async function describeApisecSlsProjects(request: DescribeApisecSlsProjectsRequest): DescribeApisecSlsProjectsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeApisecSlsProjectsWithOptions(request, runtime);
}

model DescribeCertDetailRequest {
  certIdentifier?: string(name='CertIdentifier', description='The ID of the certificate.

This parameter is required.', example='123-cn-hangzhou'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-uax****3k0e'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeCertDetailResponseBody = {
  certDetail?: {
    afterDate?: long(name='AfterDate', description='The time when the certificate expires. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1976256736582'),
    beforeDate?: long(name='BeforeDate', description='The time when the certificate was issued. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1976256736582'),
    certIdentifier?: string(name='CertIdentifier', description='The ID of the certificate.', example='123-cn-hangzhou'),
    certName?: string(name='CertName', description='The name of the certificate.', example='testCertName'),
    commonName?: string(name='CommonName', description='The primary domain name, which is a common name.', example='*.xxxaliyun.com'),
    domain?: string(name='Domain', description='The domain name that is associated with the certificate.', example='demo.xxxaliyun.com'),
    sans?: [ string ](name='Sans', description='The other domain names that are associated with the certificate.'),
  }(name='CertDetail', description='The details of the certificate.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='3C115DBE-8E53-5A12-9CAF-FD3F****CDF6'),
}

model DescribeCertDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCertDetailResponseBody(name='body'),
}

/**
 * @summary Queries the details of a certificate, such as the certificate name, expiration time, issuance time, and associated domain name.
 *
 * @param request DescribeCertDetailRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeCertDetailResponse
 */
async function describeCertDetailWithOptions(request: DescribeCertDetailRequest, runtime: Util.RuntimeOptions): DescribeCertDetailResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.certIdentifier)) {
    query['CertIdentifier'] = request.certIdentifier;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeCertDetail',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the details of a certificate, such as the certificate name, expiration time, issuance time, and associated domain name.
 *
 * @param request DescribeCertDetailRequest
 * @return DescribeCertDetailResponse
 */
async function describeCertDetail(request: DescribeCertDetailRequest): DescribeCertDetailResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeCertDetailWithOptions(request, runtime);
}

model DescribeCertsRequest {
  algorithm?: string(name='Algorithm', description='The type of the encryption algorithm. Valid values:

*   **NotSM2**: The encryption algorithm is not the SM2 algorithm. This is the default value.
*   **SM2**: The encryption algorithm is the SM2 algorithm.', example='SM2'),
  domain?: string(name='Domain', description='The domain name.', example='example.aliyun.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-5yd****tb02'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Valid values: 1 to 100. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmoiy****p2oq'),
}

model DescribeCertsResponseBody = {
  certs?: [ 
    {
      afterDate?: long(name='AfterDate', description='The time when the certificate becomes valid.', example='1976256736582'),
      beforeDate?: long(name='BeforeDate', description='The time when the certificate expires.', example='1976256836582'),
      certIdentifier?: string(name='CertIdentifier', description='The globally unique ID of the certificate. The value is in the "Certificate ID-cn-hangzhou" format. For example, if the ID of the certificate is 123, the value of CertIdentifier is 123-cn-hangzhou.', example='1234567-cn-hangzhou'),
      certName?: string(name='CertName', description='The name of the certificate.', example='waf1234'),
      commonName?: string(name='CommonName', description='The common name.', example='*.example.com'),
      domain?: string(name='Domain', description='The domain name that is added to WAF.', example='www.example.com'),
      isChainCompleted?: boolean(name='IsChainCompleted', description='Indicates whether the certificate chain is complete. Valid values:

*   **true**
*   **false**', example='true'),
    }
  ](name='Certs', description='The certificates.'),
  requestId?: string(name='RequestId', description='The request ID.', example='19511B0D-5AE0-5600-BB8A-DC2C8345****'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='8'),
}

model DescribeCertsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCertsResponseBody(name='body'),
}

/**
 * @summary Queries the certificates issued for your domain names that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeCertsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeCertsResponse
 */
async function describeCertsWithOptions(request: DescribeCertsRequest, runtime: Util.RuntimeOptions): DescribeCertsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.algorithm)) {
    query['Algorithm'] = request.algorithm;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeCerts',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the certificates issued for your domain names that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeCertsRequest
 * @return DescribeCertsResponse
 */
async function describeCerts(request: DescribeCertsRequest): DescribeCertsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeCertsWithOptions(request, runtime);
}

model DescribeCloudResourcesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-lbj****cn0c'),
  ownerUserId?: string(name='OwnerUserId', description='The ID of the Alibaba Cloud account to which the resource belongs.', example='11769793******'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceDomain?: string(name='ResourceDomain', description='The domain name. You can use this parameter if you set ResourceProduct to fc or sae.', example='fc-domain-test'),
  resourceFunction?: string(name='ResourceFunction', description='The function name. You can use this parameter if you set ResourceProduct to fc.', example='fc-test'),
  resourceInstanceId?: string(name='ResourceInstanceId', description='The ID of the resource.', example='alb-43glijk0fr****gths'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm4gh****wela'),
  resourceName?: string(name='ResourceName', description='The name of the resource.', example='alb-name'),
  resourceProduct?: string(name='ResourceProduct', description='The cloud service to which the resource belongs. Valid values:

*   **alb**: Application Load Balancer (ALB).
*   **mse**: Microservices Engine (MSE).
*   **fc**: Function Compute.
*   **sae**: Serverless App Engine (SAE).

>  Different cloud services are available in different regions. The specified cloud service must be available in the specified region.', example='alb'),
  resourceRegionId?: string(name='ResourceRegionId', description='The region ID of the resource. For information about region IDs, see the following table.

>  Different cloud services are available in different regions. The specified cloud service must be available in the specified region.', example='cn-beijing'),
  resourceRouteName?: string(name='ResourceRouteName', description='The route name. You can use this parameter if you set ResourceProduct to mse.', example='mse-default-traffic'),
}

model DescribeCloudResourcesResponseBody = {
  cloudResources?: [ 
    {
      ownerUserId?: string(name='OwnerUserId', description='The ID of the Alibaba Cloud account to which the resource belongs.', example='11769793******'),
      resourceDomain?: string(name='ResourceDomain', description='The domain name. This parameter has a value only if the value of ResourceProduct is fc or sae.', example='test-resource-domain'),
      resourceFunction?: string(name='ResourceFunction', description='The function name. This parameter has a value only if the value of ResourceProduct is fc.', example='test-resource-function'),
      resourceInstance?: string(name='ResourceInstance', description='The ID of the resource.', example='alb-ffff****'),
      resourceName?: string(name='ResourceName', description='The name of the resource.', example='test-resource-name'),
      resourceProduct?: string(name='ResourceProduct', description='The cloud service to which the resource belongs. Valid values:

*   **alb**: ALB.
*   **mse**: MSE.
*   **fc**: Function Compute.
*   **sae**: SAE.', example='alb'),
      resourceRegionId?: string(name='ResourceRegionId', description='The region ID of the resource.', example='cn-hangzhou'),
      resourceRouteName?: string(name='ResourceRouteName', description='The route name. This parameter has a value only if the value of ResourceProduct is mse.', example='test-route-name'),
      resourceService?: string(name='ResourceService', description='The service name. This parameter has a value only if the value of ResourceProduct is fc.', example='test-resource-service'),
    }
  ](name='CloudResources', description='The cloud service resources that are added to WAF.'),
  requestId?: string(name='RequestId', description='The request ID.', example='C327F81A-CCE2-5B21-817C-F93E29C5****'),
  totalCount?: long(name='TotalCount', description='The total number of cloud service resources returned.', example='121'),
}

model DescribeCloudResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCloudResourcesResponseBody(name='body'),
}

/**
 * @summary Queries cloud service resources that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeCloudResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeCloudResourcesResponse
 */
async function describeCloudResourcesWithOptions(request: DescribeCloudResourcesRequest, runtime: Util.RuntimeOptions): DescribeCloudResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ownerUserId)) {
    query['OwnerUserId'] = request.ownerUserId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceDomain)) {
    query['ResourceDomain'] = request.resourceDomain;
  }
  if (!Util.isUnset(request.resourceFunction)) {
    query['ResourceFunction'] = request.resourceFunction;
  }
  if (!Util.isUnset(request.resourceInstanceId)) {
    query['ResourceInstanceId'] = request.resourceInstanceId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resourceName)) {
    query['ResourceName'] = request.resourceName;
  }
  if (!Util.isUnset(request.resourceProduct)) {
    query['ResourceProduct'] = request.resourceProduct;
  }
  if (!Util.isUnset(request.resourceRegionId)) {
    query['ResourceRegionId'] = request.resourceRegionId;
  }
  if (!Util.isUnset(request.resourceRouteName)) {
    query['ResourceRouteName'] = request.resourceRouteName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeCloudResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries cloud service resources that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeCloudResourcesRequest
 * @return DescribeCloudResourcesResponse
 */
async function describeCloudResources(request: DescribeCloudResourcesRequest): DescribeCloudResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeCloudResourcesWithOptions(request, runtime);
}

model DescribeDefenseResourceRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-4xl****i60i'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The name of the protected object that you want to query. Only exact queries are supported.

This parameter is required.', example='example.aliyundoc.com-waf'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeDefenseResourceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='439AADF2-368C-5E98-B14E-3086****0573'),
  resource?: {
    acwCookieStatus?: int32(name='AcwCookieStatus', description='The status of the tracking cookie.

*   **0**: disabled.
*   **1**: enabled.', example='0'),
    acwSecureStatus?: int32(name='AcwSecureStatus', description='The status of the secure attribute of the tracking cookie.

*   **0**: disabled.
*   **1**: enabled.', example='0'),
    acwV3SecureStatus?: int32(name='AcwV3SecureStatus', description='The status of the secure attribute of the slider CAPTCHA cookie.

*   **0**: disabled.
*   **1**: enabled.', example='0'),
    customHeaders?: [ string ](name='CustomHeaders', description='The custom header fields.

>  If the value of XffStatus is 1, the first IP address in the specified header field is used as the originating IP address of the client to prevent X-Forwarded-For (XFF) forgery. If you specify multiple header fields, WAF reads the values of the header fields in sequence until the originating IP address is obtained. If the originating IP address cannot be obtained, the first IP address in the XFF header field is used as the originating IP address of the client.'),
    description?: string(name='Description', description='The description of the protected object.', example='This is Description'),
    detail?: map[string]any(name='Detail', description='The details of the protected object. Different key-value pairs indicate different attributes of the protected object.', example='{
"product": "waf",
 "domain": "demo.aliyundoc****.com"
}'),
    gmtCreate?: long(name='GmtCreate', description='The time when the protected object was created. Unit: milliseconds.', example='1607493144000'),
    gmtModified?: long(name='GmtModified', description='The time when the protected object was modified. Unit: milliseconds.', example='1691720010000'),
    ownerUserId?: string(name='OwnerUserId', description='The user ID (UID) of the Alibaba Cloud account to which the protected object belongs.', example='170457******9107'),
    pattern?: string(name='Pattern', description='The pattern used for the protected object.', example='domain'),
    product?: string(name='Product', description='The name of the cloud service.', example='alb'),
    resource?: string(name='Resource', description='The name of the protected object.', example='alb-rencs***'),
    resourceGroup?: string(name='ResourceGroup', description='The name of the protected object group to which the protected object belongs.', example='example_resource_group'),
    resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmoiy****p2oq'),
    resourceOrigin?: string(name='ResourceOrigin', description='The origin of the protected object. Valid values:

*   **custom**
*   **access**', example='custom'),
    xffStatus?: int32(name='XffStatus', description='Indicates whether a Layer 7 proxy is deployed in front of WAF, such as Anti-DDoS Proxy and Alibaba Cloud CDN. Valid values:

*   **0**: No Layer 7 proxy is deployed.
*   **1**: A Layer 7 proxy is deployed.', example='0'),
  }(name='Resource', description='The information about the protected object.'),
}

model DescribeDefenseResourceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceResponseBody(name='body'),
}

/**
 * @summary Queries the information about a protected object.
 *
 * @param request DescribeDefenseResourceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceResponse
 */
async function describeDefenseResourceWithOptions(request: DescribeDefenseResourceRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResource',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about a protected object.
 *
 * @param request DescribeDefenseResourceRequest
 * @return DescribeDefenseResourceResponse
 */
async function describeDefenseResource(request: DescribeDefenseResourceRequest): DescribeDefenseResourceResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceWithOptions(request, runtime);
}

model DescribeDefenseResourceGroupRequest {
  groupName?: string(name='GroupName', description='The name of the protected object group whose information you want to query.

This parameter is required.', example='group221'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeDefenseResourceGroupResponseBody = {
  group?: {
    description?: string(name='Description', description='The description of the protected object group.', example='test'),
    gmtCreate?: long(name='GmtCreate', description='The time when the protected object group was created.', example='23242312312'),
    gmtModified?: long(name='GmtModified', description='The most recent time when the protected object group was modified.', example='23242312312'),
    groupName?: string(name='GroupName', description='The name of the protected object group.', example='group1'),
    resourceList?: string(name='ResourceList', description='The protected objects in the protected object group. The protected objects are separated with commas (,).', example='test1.aliyundoc.com,test2.aliyundoc.com'),
  }(name='Group', description='The information about the protected object group.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='E67D21C6-5376-5F94-B745-70E08D03E3CB'),
}

model DescribeDefenseResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceGroupResponseBody(name='body'),
}

/**
 * @summary Queries the information about a protected object group.
 *
 * @param request DescribeDefenseResourceGroupRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceGroupResponse
 */
async function describeDefenseResourceGroupWithOptions(request: DescribeDefenseResourceGroupRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceGroupResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResourceGroup',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about a protected object group.
 *
 * @param request DescribeDefenseResourceGroupRequest
 * @return DescribeDefenseResourceGroupResponse
 */
async function describeDefenseResourceGroup(request: DescribeDefenseResourceGroupRequest): DescribeDefenseResourceGroupResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceGroupWithOptions(request, runtime);
}

model DescribeDefenseResourceGroupNamesRequest {
  groupNameLike?: string(name='GroupNameLike', description='The name of the protected object group. Fuzzy queries are supported.', example='example-group'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-lbj****cc03'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **20**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekzwwk****cv5i'),
}

model DescribeDefenseResourceGroupNamesResponseBody = {
  groupNames?: [ string ](name='GroupNames', description='The names of the protected object groups.'),
  requestId?: string(name='RequestId', description='The request ID.', example='59DA4258-2F32-5095-B283-57AC****70B3'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='8'),
}

model DescribeDefenseResourceGroupNamesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceGroupNamesResponseBody(name='body'),
}

/**
 * @summary Queries the names of protected object groups.
 *
 * @param request DescribeDefenseResourceGroupNamesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceGroupNamesResponse
 */
async function describeDefenseResourceGroupNamesWithOptions(request: DescribeDefenseResourceGroupNamesRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceGroupNamesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.groupNameLike)) {
    query['GroupNameLike'] = request.groupNameLike;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResourceGroupNames',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the names of protected object groups.
 *
 * @param request DescribeDefenseResourceGroupNamesRequest
 * @return DescribeDefenseResourceGroupNamesResponse
 */
async function describeDefenseResourceGroupNames(request: DescribeDefenseResourceGroupNamesRequest): DescribeDefenseResourceGroupNamesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceGroupNamesWithOptions(request, runtime);
}

model DescribeDefenseResourceGroupsRequest {
  groupNameLike?: string(name='GroupNameLike', description='The name of the protected object group that you want to query. Fuzzy queries are supported.', example='demoGroupName'),
  groupNames?: string(name='GroupNames', description='The names of the protected object groups that you want to query. Separate multiple names with commas (,).', example='groupName1,groupName2'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-wwo36****0i'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **20**.', example='20'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmxc7lf****eq'),
}

model DescribeDefenseResourceGroupsResponseBody = {
  groups?: [ 
    {
      description?: string(name='Description', description='The description of the protected object group.', example='This is test description'),
      gmtCreate?: long(name='GmtCreate', description='The time when the protected object group was created. Unit: milliseconds.', example='1624343180000'),
      gmtModified?: long(name='GmtModified', description='The most recent time when the protected object group was modified. Unit: milliseconds.', example='1701656305000'),
      groupName?: string(name='GroupName', description='The name of the protected object group.', example='apptest'),
      resourceList?: string(name='ResourceList', description='The names of the protected objects that are added to the protected object group. Separate multiple protected objects with commas (,).', example='example02.aliyun-waf,example01.aliyun-waf'),
    }
  ](name='Groups', description='The list of protected object groups.'),
  requestId?: string(name='RequestId', description='The request ID.', example='BFEC5C77-049B-5E88-A5B6-CB0C****B66E'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='10'),
}

model DescribeDefenseResourceGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceGroupsResponseBody(name='body'),
}

/**
 * @summary Performs a pagination query to retrieve the information about protected object groups.
 *
 * @param request DescribeDefenseResourceGroupsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceGroupsResponse
 */
async function describeDefenseResourceGroupsWithOptions(request: DescribeDefenseResourceGroupsRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceGroupsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.groupNameLike)) {
    query['GroupNameLike'] = request.groupNameLike;
  }
  if (!Util.isUnset(request.groupNames)) {
    query['GroupNames'] = request.groupNames;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResourceGroups',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Performs a pagination query to retrieve the information about protected object groups.
 *
 * @param request DescribeDefenseResourceGroupsRequest
 * @return DescribeDefenseResourceGroupsResponse
 */
async function describeDefenseResourceGroups(request: DescribeDefenseResourceGroupsRequest): DescribeDefenseResourceGroupsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceGroupsWithOptions(request, runtime);
}

model DescribeDefenseResourceNamesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-9lb****5s03'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **20**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The name of the protected object that you want to query.', example='example.xxxxaliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekzd4c****pdwy'),
}

model DescribeDefenseResourceNamesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='C1823E96-EF4B-5BD2-9E02-1D18****3ED8'),
  resources?: [ string ](name='Resources', description='The names of the protected objects.'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='75'),
}

model DescribeDefenseResourceNamesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceNamesResponseBody(name='body'),
}

/**
 * @summary Performs a pagination query to retrieve the names of protected objects.
 *
 * @param request DescribeDefenseResourceNamesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceNamesResponse
 */
async function describeDefenseResourceNamesWithOptions(request: DescribeDefenseResourceNamesRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceNamesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResourceNames',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Performs a pagination query to retrieve the names of protected objects.
 *
 * @param request DescribeDefenseResourceNamesRequest
 * @return DescribeDefenseResourceNamesResponse
 */
async function describeDefenseResourceNames(request: DescribeDefenseResourceNamesRequest): DescribeDefenseResourceNamesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceNamesWithOptions(request, runtime);
}

model DescribeDefenseResourceTemplatesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-9lb36****0e'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The name of the protected object or protected object group that you want to query.

This parameter is required.', example='xxxxxhemicals.cn-waf'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aek2ax2y5****pi'),
  resourceType?: string(name='ResourceType', description='The type of the protected resource. Valid values:

*   **single**: protected object. This is the default value.
*   **group**: protected object group.', example='single'),
  ruleId?: long(name='RuleId', description='The ID of the protection rule.', example='20111098'),
  ruleType?: string(name='RuleType', description='The type of the protection rule. Valid values:

*   **defense**: defense rule. This is the default value.
*   **whitelist**: whitelist rule.', example='whitelist'),
}

model DescribeDefenseResourceTemplatesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='2305CEB0-BA5A-5543-A1D3-3F1D0891****'),
  templates?: [ 
    {
      defenseScene?: string(name='DefenseScene', description='The scenario in which the protection template is used.

*   **waf_group**: basic protection.
*   **antiscan**: scan protection.
*   **ip_blacklist**: IP address blacklist.
*   **custom_acl**: custom rule.
*   **whitelist**: whitelist.
*   **region_block**: region blacklist.
*   **custom_response**: custom response.
*   **cc**: HTTP flood protection.
*   **tamperproof**: website tamper-proofing.
*   **dlp**: data leakage prevention.', example='whitelist'),
      defenseSubScene?: string(name='DefenseSubScene', description='The sub-scenario in which the template is used. Valid values:

*   **web**: bot management for website protection.
*   **app**: bot management for app protection.
*   **basic**: bot management for basic protection.', example='basic'),
      description?: string(name='Description', description='The description of the protection template.', example='test'),
      gmtModified?: long(name='GmtModified', description='The time when the protection template was created. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1692930539000'),
      templateId?: long(name='TemplateId', description='The ID of the protection template.', example='12345'),
      templateName?: string(name='TemplateName', description='The name of the protection template.', example='TestTemplateName'),
      templateOrigin?: string(name='TemplateOrigin', description='The origin of the protection template. The value custom indicates that the template is a custom template created by the user.', example='custom'),
      templateStatus?: int32(name='TemplateStatus', description='The status of the protection template. Valid values:

*   **0**: disabled.
*   **1**: enabled.', example='1'),
      templateType?: string(name='TemplateType', description='The type of the protection template. Valid values:

*   **user_default**: default template.
*   **user_custom**: custom template.', example='user_custom'),
    }
  ](name='Templates', description='The protection templates.'),
}

model DescribeDefenseResourceTemplatesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourceTemplatesResponseBody(name='body'),
}

/**
 * @summary Queries the protection templates that are associated with a protected object or protected object group.
 *
 * @param request DescribeDefenseResourceTemplatesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourceTemplatesResponse
 */
async function describeDefenseResourceTemplatesWithOptions(request: DescribeDefenseResourceTemplatesRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourceTemplatesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResourceTemplates',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the protection templates that are associated with a protected object or protected object group.
 *
 * @param request DescribeDefenseResourceTemplatesRequest
 * @return DescribeDefenseResourceTemplatesResponse
 */
async function describeDefenseResourceTemplates(request: DescribeDefenseResourceTemplatesRequest): DescribeDefenseResourceTemplatesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourceTemplatesWithOptions(request, runtime);
}

model DescribeDefenseResourcesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Default value: **10**.', example='10'),
  query?: string(name='Query', description='The query conditions. Specify the value of this parameter as a string in the JSON format.

>  The results vary based on the query condition. For more information, see the "**Query parameters**" section in this topic.', example='{\\\\"product\\\\":\\\\"waf\\\\"}'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag.', example='Tagkey1'),
      value?: string(name='Value', description='The value of the tag.', example='TagValue1'),
    }
  ](name='Tag', description='The tags of the resources that you want to query. You can specify up to 20 tags.'),
}

model DescribeDefenseResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='618F2626-DB27-5187-8C6C-4E61A491DF29'),
  resources?: [ 
    {
      acwCookieStatus?: int32(name='AcwCookieStatus', description='The status of the tracking cookie.

*   **0:** disabled.
*   **1:** enabled.', example='1'),
      acwSecureStatus?: int32(name='AcwSecureStatus', description='The status of the secure attribute in the tracking cookie.

*   **0:** disabled.
*   **1:** enabled.', example='0'),
      acwV3SecureStatus?: int32(name='AcwV3SecureStatus', description='The status of the secure attribute in the slider CAPTCHA cookie.

*   **0:** disabled.
*   **1:** enabled.', example='0'),
      customHeaders?: [ string ](name='CustomHeaders', description='The custom XFF headers that are used to identify the originating IP addresses of clients. If the value of XffStatus is 1 and CustomHeaders is left empty, the first IP addresses in the XFF headers are used as the originating IP addresses of clients.'),
      description?: string(name='Description', description='The description of the protected object.', example='test'),
      detail?: map[string]any(name='Detail', description='The details of the protected object. Different key-value pairs indicate different attributes of the protected object.'),
      gmtCreate?: long(name='GmtCreate', description='The time when the protected object was created. Unit: milliseconds.', example='1652149203187'),
      gmtModified?: long(name='GmtModified', description='The time when the protected object was modified. Unit: milliseconds.', example='1665633032000'),
      ownerUserId?: string(name='OwnerUserId', description='The ID of the Alibaba Cloud account to which the resource belongs.', example='135*********46'),
      pattern?: string(name='Pattern', description='The pattern in which the protected object is protected.', example='domain'),
      product?: string(name='Product', description='The name of the cloud service.', example='alb'),
      resource?: string(name='Resource', description='The name of the protected object.', example='alb-rencs***'),
      resourceGroup?: string(name='ResourceGroup', description='The name of the protected object group to which the protected object belongs.', example='test'),
      resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
      resourceOrigin?: string(name='ResourceOrigin', description='The origin of the protected object.', example='custom'),
      xffStatus?: int32(name='XffStatus', description='Indicates whether the X-Forwarded-For (XFF) proxy is enabled.', example='1'),
    }
  ](name='Resources', description='The protected objects.'),
  totalCount?: long(name='TotalCount', description='The total number of entries that are returned.', example='73'),
}

model DescribeDefenseResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseResourcesResponseBody(name='body'),
}

/**
 * @summary Queries protected objects by page.
 *
 * @param request DescribeDefenseResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseResourcesResponse
 */
async function describeDefenseResourcesWithOptions(request: DescribeDefenseResourcesRequest, runtime: Util.RuntimeOptions): DescribeDefenseResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.query)) {
    query['Query'] = request.query;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries protected objects by page.
 *
 * @param request DescribeDefenseResourcesRequest
 * @return DescribeDefenseResourcesResponse
 */
async function describeDefenseResources(request: DescribeDefenseResourcesRequest): DescribeDefenseResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseResourcesWithOptions(request, runtime);
}

model DescribeDefenseRuleRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the protection rule that you want to query.

This parameter is required.', example='20026192'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template to which the protection rule that you want to query belongs.

This parameter is required.', example='10318'),
}

model DescribeDefenseRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D5EB0'),
  rule?: {
    config?: string(name='Config', description='The details of the protection rule. The value is a JSON string that contains multiple parameters. For more information, see the "**Protection rule parameters**" section of the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='{\\\\"status\\\\":1,\\\\"policyId\\\\":1012,\\\\"action\\\\":\\\\"block\\\\"}'),
    defenseOrigin?: string(name='DefenseOrigin', description='The origin of the protection rule. Valid values:

*   **custom:** The protection rule is created by the user.
*   **system:** The protection rule is automatically generated by the system.', example='custom'),
    defenseScene?: string(name='DefenseScene', description='The scenario in which the protection rule is used. For more information, see the description of **DefenseScene** in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='waf_group'),
    gmtModified?: long(name='GmtModified', description='The most recent time when the protection rule was modified.', example='1665196746000'),
    ruleId?: long(name='RuleId', description='The ID of the protection rule.', example='2732975'),
    ruleName?: string(name='RuleName', description='The name of the protection rule.', example='test1'),
    status?: int32(name='Status', description='The status of the protection rule. Valid values:

*   **0:** disabled.
*   **1:** enabled.', example='1'),
    templateId?: long(name='TemplateId', description='The ID of the protection rule template.', example='9114'),
  }(name='Rule', description='The configurations of the protection rule. The value is a JSON string that contains multiple parameters.'),
}

model DescribeDefenseRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseRuleResponseBody(name='body'),
}

/**
 * @summary Queries a protection rule.
 *
 * @param request DescribeDefenseRuleRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseRuleResponse
 */
async function describeDefenseRuleWithOptions(request: DescribeDefenseRuleRequest, runtime: Util.RuntimeOptions): DescribeDefenseRuleResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseRule',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries a protection rule.
 *
 * @param request DescribeDefenseRuleRequest
 * @return DescribeDefenseRuleResponse
 */
async function describeDefenseRule(request: DescribeDefenseRuleRequest): DescribeDefenseRuleResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseRuleWithOptions(request, runtime);
}

model DescribeDefenseRulesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Default value: **10**.', example='10'),
  query?: string(name='Query', description='The query conditions. Specify a string that contains multiple parameters in the JSON format.

>  The results vary based on the query conditions. For more information, see the "**Query parameters**" section in this topic.', example='{\\\\\\\\"name\\\\\\\\":\\\\\\\\"IP address blocking_20220822_10\\\\\\\\",\\\\\\\\"scene\\\\\\\\":\\\\\\\\"custom_acl\\\\\\\\",\\\\\\\\"templateId\\\\\\\\":5327}'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleType?: string(name='RuleType', description='The type of protection rule that you want to query. Valid values:

*   **whitelist:** whitelist rule.
*   **defense:** defense rule. This is the default value.', example='whitelist'),
}

model DescribeDefenseRulesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='80736FA5-FA87-55F6-AA69-C5477C6FE6D0'),
  rules?: [ 
    {
      config?: string(name='Config', description='The details of the protection rule. The value is a string that contains multiple parameters in the JSON format. For more information, see the "**Rule parameters**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='{\\\\"policyId\\\\":1012,\\\\"action\\\\":\\\\"block\\\\"}'),
      defenseOrigin?: string(name='DefenseOrigin', description='The origin of the protection rule. Valid values:

*   **custom:** The protection rule is created by the user.
*   **system:** The protection rule is automatically generated by the system.', example='custom'),
      defenseScene?: string(name='DefenseScene', description='The scenario in which the protection rule is used. For more information, see the description of the **DefenseScene** parameter in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='waf_group'),
      gmtModified?: long(name='GmtModified', description='The most recent time when the protection rule was modified.', example='1665460629000'),
      ruleId?: long(name='RuleId', description='The ID of the protection rule.', example='42755'),
      ruleName?: string(name='RuleName', description='The name of the protection rule.', example='rules_41'),
      status?: int32(name='Status', description='The status of the protection rule. Valid values:

*   **0:** disabled.
*   **1:** enabled.', example='1'),
      templateId?: long(name='TemplateId', description='The ID of the protection rule template.', example='5673'),
    }
  ](name='Rules', description='An array of protection rules.'),
  totalCount?: long(name='TotalCount', description='The total number of returned entries.', example='2'),
}

model DescribeDefenseRulesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseRulesResponseBody(name='body'),
}

/**
 * @summary Queries protection rules by page.
 *
 * @param request DescribeDefenseRulesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseRulesResponse
 */
async function describeDefenseRulesWithOptions(request: DescribeDefenseRulesRequest, runtime: Util.RuntimeOptions): DescribeDefenseRulesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.query)) {
    query['Query'] = request.query;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseRules',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries protection rules by page.
 *
 * @param request DescribeDefenseRulesRequest
 * @return DescribeDefenseRulesResponse
 */
async function describeDefenseRules(request: DescribeDefenseRulesRequest): DescribeDefenseRulesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseRulesWithOptions(request, runtime);
}

model DescribeDefenseTemplateRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template.

This parameter is required.', example='1333'),
}

model DescribeDefenseTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D5EB0'),
  template?: {
    defenseScene?: string(name='DefenseScene', description='The scenario in which the template is used. For more information, see the description of the **DefenseScene** parameter in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='waf_group'),
    defenseSubScene?: string(name='DefenseSubScene', description='The sub-scenario in which the template is used. Valid values:

*   **web**: The template is a bot management template that is used for website protection.
*   **app**: The template is a bot management template that is used for app protection.
*   **basic**: The template is a bot management template that is used for basic protection.', example='app'),
    description?: string(name='Description', description='The description of the protection rule template.', example='test'),
    gmtModified?: long(name='GmtModified', description='The most recent time when the protection rule template was modified.', example='1665283642000'),
    templateId?: long(name='TemplateId', description='The ID of the protection rule template.', example='10097'),
    templateName?: string(name='TemplateName', description='The name of the protection rule template.', example='test0621'),
    templateOrigin?: string(name='TemplateOrigin', description='The origin of the protection rule template. If the value of this parameter is custom, the protection rule template is created by the user.', example='custom'),
    templateStatus?: int32(name='TemplateStatus', description='The status of the protection rule template. Valid values:

*   **0:** disabled.
*   **1:** enabled.', example='1'),
    templateType?: string(name='TemplateType', description='The type of the protection rule template. Valid values:

*   **user_default:** default template.
*   **user_custom:** custom template.', example='user_default'),
  }(name='Template', description='The information about the template.'),
}

model DescribeDefenseTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseTemplateResponseBody(name='body'),
}

/**
 * @summary Queries a protection rule template.
 *
 * @param request DescribeDefenseTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseTemplateResponse
 */
async function describeDefenseTemplateWithOptions(request: DescribeDefenseTemplateRequest, runtime: Util.RuntimeOptions): DescribeDefenseTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseTemplate',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries a protection rule template.
 *
 * @param request DescribeDefenseTemplateRequest
 * @return DescribeDefenseTemplateResponse
 */
async function describeDefenseTemplate(request: DescribeDefenseTemplateRequest): DescribeDefenseTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseTemplateWithOptions(request, runtime);
}

model DescribeDefenseTemplateValidGroupsRequest {
  defenseScene?: string(name='DefenseScene', description='The scenario in which the protection template is used.

*   **waf_group**: basic protection.
*   **antiscan**: scan protection.
*   **ip_blacklist**: IP address blacklist.
*   **custom_acl**: custom rule.
*   **whitelist**: whitelist.
*   **region_block**: region blacklist.
*   **custom_response**: custom response.
*   **cc**: HTTP flood protection.
*   **tamperproof**: website tamper-proofing.
*   **dlp**: data leakage prevention.

This parameter is required.', example='region_block'),
  groupName?: string(name='GroupName', description='The name of the protected object group that you want to query.', example='group221'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-nwy****pf0e'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **20**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm2th****v6ay'),
  templateId?: long(name='TemplateId', description='The ID of the protection template.', example='12345'),
}

model DescribeDefenseTemplateValidGroupsResponseBody = {
  groups?: [ string ](name='Groups', description='The names of the protected object groups.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='6EA4B39A-9C0C-5E57-993E-30B6****3AD0'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='27'),
}

model DescribeDefenseTemplateValidGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseTemplateValidGroupsResponseBody(name='body'),
}

/**
 * @summary Queries the names of protected object groups for which a protection template can take effect.
 *
 * @param request DescribeDefenseTemplateValidGroupsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseTemplateValidGroupsResponse
 */
async function describeDefenseTemplateValidGroupsWithOptions(request: DescribeDefenseTemplateValidGroupsRequest, runtime: Util.RuntimeOptions): DescribeDefenseTemplateValidGroupsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.defenseScene)) {
    query['DefenseScene'] = request.defenseScene;
  }
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseTemplateValidGroups',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the names of protected object groups for which a protection template can take effect.
 *
 * @param request DescribeDefenseTemplateValidGroupsRequest
 * @return DescribeDefenseTemplateValidGroupsResponse
 */
async function describeDefenseTemplateValidGroups(request: DescribeDefenseTemplateValidGroupsRequest): DescribeDefenseTemplateValidGroupsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseTemplateValidGroupsWithOptions(request, runtime);
}

model DescribeDefenseTemplatesRequest {
  defenseScene?: string(name='DefenseScene', description='The scenario in which the protection template is used.

*   **waf_group**: basic protection.
*   **antiscan**: scan protection.
*   **ip_blacklist**: IP address blacklist.
*   **custom_acl**: custom rule.
*   **whitelist**: whitelist.
*   **region_block**: region blacklist.
*   **custom_response**: custom response.
*   **cc**: HTTP flood protection.
*   **tamperproof**: website tamper-proofing.
*   **dlp**: data leakage prevention.', example='region_block'),
  defenseSubScene?: string(name='DefenseSubScene', description='The sub-scenario in which the protection template is used. Valid values:

*   **web**: bot management for website protection.
*   **app**: bot management for app protection.
*   **basic**: bot management for basic protection.', example='basic'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-pe33b****03'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **20**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The name of the protected object or protected object group.

>  If you specify ResourceType, you must specify this parameter.', example='xxxqiu.cc-ecs'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmvyknl****fa'),
  resourceType?: string(name='ResourceType', description='The type of the protected resource. Valid values:

*   **single**: protected object. This is the default value.
*   **group**: protected object group.

>  If you specify Resource, you must specify this parameter.', example='single'),
  templateId?: long(name='TemplateId', description='The ID of the protection template.', example='12345'),
  templateType?: string(name='TemplateType', description='The type of the protection template. Valid values:

*   **user_default**: default template.
*   **user_custom**: custom template.', example='user_default'),
}

model DescribeDefenseTemplatesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='4F26D2F1-E288-5104-8518-05E240E3****'),
  templates?: [ 
    {
      defenseScene?: string(name='DefenseScene', description='The scenario in which the protection template is used.

*   **waf_group**: basic protection.
*   **antiscan**: scan protection.
*   **ip_blacklist**: IP address blacklist.
*   **custom_acl**: custom rule.
*   **whitelist**: whitelist.
*   **region_block**: region blacklist.
*   **custom_response**: custom response.
*   **cc**: HTTP flood protection.
*   **tamperproof**: website tamper-proofing.
*   **dlp**: data leakage prevention.', example='whitelist'),
      defenseSubScene?: string(name='DefenseSubScene', description='The sub-scenario in which the protection template is used. Valid values:

*   **web**: bot management for website protection.
*   **app**: bot management for app protection.
*   **basic**: bot management for basic protection.', example='basic'),
      description?: string(name='Description', description='The description of the protection template.', example='test'),
      gmtModified?: long(name='GmtModified', description='The time when the protection template was created. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1683776070000'),
      templateId?: long(name='TemplateId', description='The ID of the protection template.', example='12345'),
      templateName?: string(name='TemplateName', description='The name of the protection template.', example='testTemplateName'),
      templateOrigin?: string(name='TemplateOrigin', description='The origin of the protection template. The value custom indicates that the protection template is a custom template created by the user.', example='custom'),
      templateStatus?: int32(name='TemplateStatus', description='The status of the protection template. Valid values:

*   **0**: disabled.
*   **1**: enabled.', example='1'),
      templateType?: string(name='TemplateType', description='The type of the protection template. Valid values:

*   **user_default**: default template.
*   **user_custom**: custom template.', example='user_custom'),
    }
  ](name='Templates', description='The protection templates.'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='100'),
}

model DescribeDefenseTemplatesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDefenseTemplatesResponseBody(name='body'),
}

/**
 * @summary Performs a paging query to retrieve protection templates.
 *
 * @param request DescribeDefenseTemplatesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDefenseTemplatesResponse
 */
async function describeDefenseTemplatesWithOptions(request: DescribeDefenseTemplatesRequest, runtime: Util.RuntimeOptions): DescribeDefenseTemplatesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.defenseScene)) {
    query['DefenseScene'] = request.defenseScene;
  }
  if (!Util.isUnset(request.defenseSubScene)) {
    query['DefenseSubScene'] = request.defenseSubScene;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  if (!Util.isUnset(request.templateType)) {
    query['TemplateType'] = request.templateType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDefenseTemplates',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Performs a paging query to retrieve protection templates.
 *
 * @param request DescribeDefenseTemplatesRequest
 * @return DescribeDefenseTemplatesResponse
 */
async function describeDefenseTemplates(request: DescribeDefenseTemplatesRequest): DescribeDefenseTemplatesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDefenseTemplatesWithOptions(request, runtime);
}

model DescribeDomainDNSRecordRequest {
  domain?: string(name='Domain', description='The domain name whose DNS settings you want to check.

This parameter is required.', example='xxx.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-nwy****is02'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeDomainDNSRecordResponseBody = {
  DNSStatus?: string(name='DNSStatus', description='The status of the DNS settings. Valid values:

*   **cnameMatched**: The DNS settings are properly configured.
*   **vipMatched**: An A record maps the domain name to the WAF virtual IP address (VIP).
*   **wafVip**: An A record maps the domain name to another WAF VIP.
*   **unRecord**: The domain name does not have a DNS record.
*   **unUsed**: The domain name is not pointed to WAF.
*   **checkTimeout**: The check times out.', example='cnameMatched'),
  requestId?: string(name='RequestId', description='The request ID.', example='D827FCFE-90A7-4330-9326-D33C8B4C****'),
}

model DescribeDomainDNSRecordResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDomainDNSRecordResponseBody(name='body'),
}

/**
 * @summary Checks whether the Domain Name System (DNS) settings of a domain name are properly configured.
 *
 * @param request DescribeDomainDNSRecordRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDomainDNSRecordResponse
 */
async function describeDomainDNSRecordWithOptions(request: DescribeDomainDNSRecordRequest, runtime: Util.RuntimeOptions): DescribeDomainDNSRecordResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDomainDNSRecord',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Checks whether the Domain Name System (DNS) settings of a domain name are properly configured.
 *
 * @param request DescribeDomainDNSRecordRequest
 * @return DescribeDomainDNSRecordResponse
 */
async function describeDomainDNSRecord(request: DescribeDomainDNSRecordRequest): DescribeDomainDNSRecordResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDomainDNSRecordWithOptions(request, runtime);
}

model DescribeDomainDetailRequest {
  domain?: string(name='Domain', description='The domain name that you want to query.

This parameter is required.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
}

model DescribeDomainDetailResponseBody = {
  certDetail?: {
    commonName?: string(name='CommonName', description='The domain name of your website.', example='test.aliyundoc.com'),
    endTime?: long(name='EndTime', description='The end of the validity period of the SSL certificate. The value is in the UNIX timestamp format. Unit: milliseconds.', example='1685590400000'),
    id?: string(name='Id', description='The ID of the SSL certificate.', example='123-cn-hangzhou'),
    name?: string(name='Name', description='The name of the SSL certificate.', example='test-cert-name'),
    sans?: [ string ](name='Sans', description='All domain names that are bound to the certificate.'),
    startTime?: long(name='StartTime', description='The beginning of the validity period of the SSL certificate. The value is in the UNIX timestamp format. Unit: milliseconds.', example='1677772800000'),
  }(name='CertDetail', description='The details of the SSL certificate.'),
  cname?: string(name='Cname', description='The CNAME that is assigned by WAF to the domain name.', example='xxxxxcvdaf.****.com'),
  domain?: string(name='Domain', description='The domain name.', example='www.aliyundoc.com'),
  listen?: {
    certId?: long(name='CertId', description='The ID of the certificate.', example='123'),
    cipherSuite?: long(name='CipherSuite', description='The type of the cipher suites. Valid values:

*   **1:** all cipher suites.
*   **2:** strong cipher suites.
*   **99:** custom cipher suites.', example='2'),
    customCiphers?: [ string ](name='CustomCiphers', description='An array of custom cipher suites.'),
    enableTLSv3?: boolean(name='EnableTLSv3', description='Indicates whether TLS 1.3 is supported. Valid values:

*   **true:** TLS 1.3 is supported.
*   **false:** TLS 1.3 is not supported.', example='true'),
    exclusiveIp?: boolean(name='ExclusiveIp', description='Indicates whether an exclusive IP address is enabled. Valid values:

*   **true:** An exclusive IP address is enabled for the domain name.
*   **false:** No exclusive IP addresses are enabled for the domain name.', example='true'),
    focusHttps?: boolean(name='FocusHttps', description='Indicates whether HTTP to HTTPS redirection is enabled for the domain name. Valid values:

*   **true:** HTTP to HTTPS redirection is enabled.
*   **false:** HTTP to HTTPS redirection is disabled.', example='true'),
    http2Enabled?: boolean(name='Http2Enabled', description='Indicates whether HTTP/2 is enabled. Valid values:

*   **true:** HTTP/2 is enabled.
*   **false:** HTTP/2 is disabled.', example='true'),
    httpPorts?: [ long ](name='HttpPorts', description='An array of HTTP listener ports.'),
    httpsPorts?: [ long ](name='HttpsPorts', description='An array of HTTPS listener ports.'),
    IPv6Enabled?: boolean(name='IPv6Enabled', description='Indicates whether IPv6 is enabled. Valid values:

*   **true:** IPv6 is enabled.
*   **false:** IPv6 is disabled.', example='true'),
    protectionResource?: string(name='ProtectionResource', description='The type of protection resource that is used. Valid values:

*   **share:** shared cluster.
*   **gslb:** shared cluster-based intelligent load balancing.', example='share'),
    SM2AccessOnly?: boolean(name='SM2AccessOnly', description='Indicates whether only SM certificate-based clients can access the domain name. This parameter is returned only if the value of SM2Enabled is true. Valid values:

*   true
*   false', example='true'),
    SM2CertId?: string(name='SM2CertId', description='The ID of the SM certificate that is added. This parameter is returned only if the value of SM2Enabled is true.', example='123-cn-hangzhou'),
    SM2Enabled?: boolean(name='SM2Enabled', description='Indicates whether SM certificate-based verification is enabled. Valid values:

*   **true**
*   **false**', example='true'),
    TLSVersion?: string(name='TLSVersion', description='The version of the Transport Layer Security (TLS) protocol. Valid values:

*   **tlsv1**
*   **tlsv1.1**
*   **tlsv1.2**', example='tlsv1.2'),
    xffHeaderMode?: long(name='XffHeaderMode', description='The method that WAF uses to obtain the actual IP address of a client. Valid values:

*   **0:** No Layer 7 proxies are deployed in front of WAF.
*   **1:** WAF reads the first value of the X-Forwarded-For (XFF) header field as the actual IP address of the client.
*   **2:** WAF reads the value of a custom header field as the actual IP address of the client.', example='2'),
    xffHeaders?: [ string ](name='XffHeaders', description='An array of custom header fields that are used to obtain the actual IP address of a client.'),
  }(name='Listen', description='The configurations of the listeners.'),
  redirect?: {
    backends?: [ 
      {
        backend?: string(name='Backend', description='The IP address or domain name of the origin server.', example='1.1.XX.XX'),
      }
    ](name='Backends', description='An array of addresses of origin servers.'),
    connectTimeout?: int32(name='ConnectTimeout', description='The timeout period of the connection. Unit: seconds. Valid values: 5 to 120.', example='120'),
    focusHttpBackend?: boolean(name='FocusHttpBackend', description='Indicates whether HTTPS to HTTP redirection is enabled for back-to-origin requests of the domain name. Valid values:

*   **true:** HTTPS to HTTP redirection for back-to-origin requests of the domain name is enabled.
*   **false:** HTTPS to HTTP redirection for back-to-origin requests of the domain name is disabled.', example='true'),
    keepalive?: boolean(name='Keepalive', description='Indicates whether the persistent connection feature is enabled. Valid values:

*   **true:** The persistent connection feature is enabled. This is the default value.
*   **false:** The persistent connection feature is disabled.', example='true'),
    keepaliveRequests?: int32(name='KeepaliveRequests', description='The number of reused persistent connections. Valid values: 60 to 1000.

>  This parameter specifies the number of reused persistent connections when you enable the persistent connection feature.', example='1000'),
    keepaliveTimeout?: int32(name='KeepaliveTimeout', description='The timeout period of persistent connections that are in the Idle state. Valid values: 1 to 60. Default value: 15. Unit: seconds.

>  This parameter specifies the period of time during which a reused persistent connection is allowed to remain in the Idle state before the persistent connection is released.', example='15'),
    loadbalance?: string(name='Loadbalance', description='The load balancing algorithm that is used when WAF forwards requests to the origin server. Valid values:

*   **ip_hash:** the IP hash algorithm.
*   **roundRobin:** the round-robin algorithm.
*   **leastTime:** the least response time algorithm.', example='iphash'),
    readTimeout?: int32(name='ReadTimeout', description='The read timeout period. Unit: seconds. Valid values: 5 to 1800.', example='200'),
    requestHeaders?: [ 
      {
        key?: string(name='Key', description='The custom header field.', example='aaa'),
        value?: string(name='Value', description='The value of the custom header field.', example='bbb'),
      }
    ](name='RequestHeaders', description='An array of key-value pairs that are used to mark the requests that pass through the WAF instance.'),
    retry?: boolean(name='Retry', description='Indicates whether WAF retries when requests fail to be forwarded to the origin server. Valid values:

*   **true:** WAF retries. This is the default value.
*   **false:** WAF does not retry.', example='true'),
    sniEnabled?: boolean(name='SniEnabled', description='Indicates whether origin Server Name Indication (SNI) is enabled. Valid values:

*   **true:** Origin SNI is enabled.
*   **false:** Origin SNI is disabled. This is the default value.', example='true'),
    sniHost?: string(name='SniHost', description='The value of the custom SNI field.', example='www.aliyundoc.com'),
    writeTimeout?: int32(name='WriteTimeout', description='The write timeout period. Unit: seconds. Valid values: 5 to 1800.', example='200'),
    xffProto?: boolean(name='XffProto', description='Indicates whether the X-Forward-For-Proto header is used to identify the protocol used by WAF to forward requests to the origin server. Valid values:

*   **true** (default)
*   **false**', example='true'),
  }(name='Redirect', description='The configurations of the forwarding rule.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='BAEF9CA9-66A0-533E-BD09-5D5D7AA8****'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  SM2CertDetail?: {
    commonName?: string(name='CommonName', description='The domain name of your website.', example='test.aliyundoc.com'),
    endTime?: long(name='EndTime', description='The end of the validity period of the SSL certificate. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1665590400000'),
    id?: string(name='Id', description='The ID of the SSL certificate.', example='123-cn-hangzhou'),
    name?: string(name='Name', description='The name of the SSL certificate.', example='test-sm2-cert-name'),
    sans?: [ string ](name='Sans', description='All domain names that are bound to the certificate.'),
    startTime?: long(name='StartTime', description='The beginning of the validity period of the SSL certificate. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since January 1, 1970, 00:00:00 UTC.', example='1657551525000'),
  }(name='SM2CertDetail', description='The information about the SM certificate.'),
  status?: long(name='Status', description='The status of the domain name. Valid values:

*   **1:** The domain name is in a normal state.
*   **2:** The domain name is being created.
*   **3:** The domain name is being modified.
*   **4:** The domain name is being released.
*   **5:** WAF no longer forwards traffic of the domain name.', example='1'),
}

model DescribeDomainDetailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDomainDetailResponseBody(name='body'),
}

/**
 * @summary Queries the details of a domain name that is added to Web Application Firewall (WAF).
 *
 * @param request DescribeDomainDetailRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDomainDetailResponse
 */
async function describeDomainDetailWithOptions(request: DescribeDomainDetailRequest, runtime: Util.RuntimeOptions): DescribeDomainDetailResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDomainDetail',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the details of a domain name that is added to Web Application Firewall (WAF).
 *
 * @param request DescribeDomainDetailRequest
 * @return DescribeDomainDetailResponse
 */
async function describeDomainDetail(request: DescribeDomainDetailRequest): DescribeDomainDetailResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDomainDetailWithOptions(request, runtime);
}

model DescribeDomainsRequest {
  backend?: string(name='Backend', description='An array of HTTPS listener ports.', example='1.1.XX.XX'),
  domain?: string(name='Domain', description='The ID of the request.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The page number of the page to return. Default value: 1.

This parameter is required.', example='waf_cdnsdf3****'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  tag?: [ 
    {
      key?: string(name='Key', description='The tag key.', example='TagKey1'),
      value?: string(name='Value', description='The tag value.', example='TagValue1'),
    }
  ](name='Tag', description='The tag of the resource. You can specify up to 20 tags.'),
}

model DescribeDomainsResponseBody = {
  domains?: [ 
    {
      backeds?: {
        http?: [ 
          {
            backend?: string(name='Backend', description='The HTTP address of the origin server.', example='1.1.XX.XX'),
          }
        ](name='Http', description='The HTTP addresses of the origin server.'),
        https?: [ 
          {
            backend?: string(name='Backend', description='The HTTPS address of the origin server.', example='1.1.XX.XX'),
          }
        ](name='Https', description='The HTTPS addresses of the origin server.'),
      }(name='Backeds', description='The back-to-origin settings.'),
      cname?: string(name='Cname', description='The CNAME assigned by WAF to the domain name.', example='xxxxxcvdaf.****.com'),
      domain?: string(name='Domain', description='The domain name that is added to WAF in CNAME record mode.', example='www.aliyundoc.com'),
      listenPorts?: {
        http?: [ long ](name='Http', description='The HTTP listener ports.'),
        https?: [ long ](name='Https', description='The HTTPS listener ports.'),
      }(name='ListenPorts', description='The configurations of the listeners.'),
      resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfmvtc5z52****'),
      status?: int32(name='Status', description='The status of the domain name. Valid values:

*   **1:** The domain name is in a normal state.
*   **2:** The domain name is being created.
*   **3:** The domain name is being modified.
*   **4:** The domain name is being released.
*   **5:** WAF no longer forwards traffic that is sent to the domain name.', example='1'),
    }
  ](name='Domains', description='The domain names that are added to WAF in CNAME record mode.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='ABF68BB3-2C48-5FA4-9750-D5FE55700E36'),
  totalCount?: long(name='TotalCount', description='The total number of returned entries.', example='146'),
}

model DescribeDomainsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDomainsResponseBody(name='body'),
}

/**
 * @summary Queries the domain names that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeDomainsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeDomainsResponse
 */
async function describeDomainsWithOptions(request: DescribeDomainsRequest, runtime: Util.RuntimeOptions): DescribeDomainsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.backend)) {
    query['Backend'] = request.backend;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDomains',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the domain names that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeDomainsRequest
 * @return DescribeDomainsResponse
 */
async function describeDomains(request: DescribeDomainsRequest): DescribeDomainsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDomainsWithOptions(request, runtime);
}

model DescribeFlowChartRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  interval?: string(name='Interval', description='The time interval. Unit: seconds. The value must be an integral multiple of 60.

This parameter is required.', example='300'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeFlowChartResponseBody = {
  flowChart?: [ 
    {
      aclCustomBlockSum?: long(name='AclCustomBlockSum', description='The number of requests that are blocked by custom access control list (ACL) rules.', example='0'),
      aclCustomReportsSum?: long(name='AclCustomReportsSum', description='The number of requests that are monitored by custom ACL rules.', example='0'),
      antiScanBlockSum?: long(name='AntiScanBlockSum', description='The number of requests that are blocked by scan protection rules.', example='0'),
      antibotBlockSum?: long(name='AntibotBlockSum', description='The number of requests that are blocked by bot management rules.', example='0'),
      antibotReportSum?: string(name='AntibotReportSum', description='The number of requests that are monitored by bot management rules.', example='0'),
      antiscanReportsSum?: long(name='AntiscanReportsSum', description='The number of requests that are monitored by scan protection rules.', example='0'),
      blacklistBlockSum?: string(name='BlacklistBlockSum', description='The number of requests that are blocked by the IP address blacklist.', example='0'),
      blacklistReportsSum?: long(name='BlacklistReportsSum', description='The number of requests that are monitored by the IP address blacklist.', example='0'),
      ccCustomBlockSum?: long(name='CcCustomBlockSum', description='The number of requests that are blocked by custom HTTP flood protection rules.', example='0'),
      ccCustomReportsSum?: long(name='CcCustomReportsSum', description='The number of requests that are monitored by custom HTTP flood protection rules.', example='0'),
      ccSystemBlocksSum?: long(name='CcSystemBlocksSum', description='The number of requests that are blocked by HTTP flood protection rules created by the system.', example='0'),
      ccSystemReportsSum?: long(name='CcSystemReportsSum', description='The number of requests that are monitored by HTTP flood protection rules created by the system.', example='0'),
      count?: long(name='Count', description='The total number of requests.', example='2932'),
      inBytes?: long(name='InBytes', description='The total number of requests that are redirected to the WAF instance.', example='121645464'),
      index?: long(name='Index', description='The serial number of the time interval. The serial numbers are arranged in chronological order.', example='10'),
      maxPv?: long(name='MaxPv', description='The peak traffic.', example='2932'),
      outBytes?: long(name='OutBytes', description='The total number of requests that are forwarded by the WAF instance.', example='1200540464'),
      ratelimitBlockSum?: long(name='RatelimitBlockSum', description='The number of requests that are blocked by rate limiting rules.', example='0'),
      ratelimitReportSum?: long(name='RatelimitReportSum', description='The number of requests that are monitored by rate limiting rules.', example='0'),
      regionBlockBlocksSum?: long(name='RegionBlockBlocksSum', description='The number of requests that are blocked by region blacklist rules.', example='0'),
      regionBlockReportsSum?: long(name='RegionBlockReportsSum', description='The number of requests that are monitored by region blacklist rules.', example='0'),
      robotCount?: long(name='RobotCount', description='The total number of bot requests.', example='1110'),
      wafBlockSum?: long(name='WafBlockSum', description='The number of requests that are blocked by basic protection rules.', example='0'),
      wafReportSum?: string(name='WafReportSum', description='The number of requests that are monitored by basic protection rules.', example='0'),
    }
  ](name='FlowChart', description='The traffic statistics.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='BFA71416-670E-585D-AAE6-E7BBEE248FAB'),
}

model DescribeFlowChartResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeFlowChartResponseBody(name='body'),
}

/**
 * @summary Queries the traffic statistics of requests that are forwarded to Web Application Firewall (WAF).
 *
 * @param request DescribeFlowChartRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeFlowChartResponse
 */
async function describeFlowChartWithOptions(request: DescribeFlowChartRequest, runtime: Util.RuntimeOptions): DescribeFlowChartResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.interval)) {
    query['Interval'] = request.interval;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeFlowChart',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the traffic statistics of requests that are forwarded to Web Application Firewall (WAF).
 *
 * @param request DescribeFlowChartRequest
 * @return DescribeFlowChartResponse
 */
async function describeFlowChart(request: DescribeFlowChartRequest): DescribeFlowChartResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeFlowChartWithOptions(request, runtime);
}

model DescribeFlowTopResourceRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386340'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeFlowTopResourceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8F0E0B9A-B518-5C6D-BEFC-A373DDE4F652'),
  ruleHitsTopResource?: [ 
    {
      count?: long(name='Count', description='The total number of requests received by the protected object in a specified time range.', example='181174784'),
      resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
    }
  ](name='RuleHitsTopResource', description='The array of the top 10 protected objects that receive requests.'),
}

model DescribeFlowTopResourceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeFlowTopResourceResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 protected objects that receive requests.
 *
 * @param request DescribeFlowTopResourceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeFlowTopResourceResponse
 */
async function describeFlowTopResourceWithOptions(request: DescribeFlowTopResourceRequest, runtime: Util.RuntimeOptions): DescribeFlowTopResourceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeFlowTopResource',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 protected objects that receive requests.
 *
 * @param request DescribeFlowTopResourceRequest
 * @return DescribeFlowTopResourceResponse
 */
async function describeFlowTopResource(request: DescribeFlowTopResourceRequest): DescribeFlowTopResourceResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeFlowTopResourceWithOptions(request, runtime);
}

model DescribeFlowTopUrlRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386340'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeFlowTopUrlResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='520D4E4C-B8EC-5602-ACB6-4D378ACBA28D'),
  ruleHitsTopUrl?: [ 
    {
      count?: long(name='Count', description='The total number of requests that are initiated by using the URL.', example='181174784'),
      url?: string(name='Url', description='The URL that is used to initiate requests.', example='www.aliyundoc.com/path1'),
    }
  ](name='RuleHitsTopUrl', description='The array of the top 10 URLs that are used to initiate requests.'),
}

model DescribeFlowTopUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeFlowTopUrlResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 URLs that are used to initiate requests.
 *
 * @param request DescribeFlowTopUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeFlowTopUrlResponse
 */
async function describeFlowTopUrlWithOptions(request: DescribeFlowTopUrlRequest, runtime: Util.RuntimeOptions): DescribeFlowTopUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeFlowTopUrl',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 URLs that are used to initiate requests.
 *
 * @param request DescribeFlowTopUrlRequest
 * @return DescribeFlowTopUrlResponse
 */
async function describeFlowTopUrl(request: DescribeFlowTopUrlRequest): DescribeFlowTopUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeFlowTopUrlWithOptions(request, runtime);
}

model DescribeHybridCloudGroupsRequest {
  clusterId?: long(name='ClusterId', description='The ID of the hybrid cloud cluster.', example='428'),
  clusterProxyType?: string(name='ClusterProxyType', description='The type of proxy cluster that is used. Valid values:

*   **service**: service-based traffic mirroring.
*   **cname**: reverse proxy.', example='cname'),
  groupName?: int32(name='GroupName', description='The name of the node group that you want to query.', example='groupName1'),
  groupType?: string(name='GroupType', description='The type of the node group. Valid values:

*   **protect**
*   **control**
*   **storage**
*   **controlStorage**', example='protect'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-********w0b'),
  pageNumber?: int32(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region ID of the WAF instance. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model DescribeHybridCloudGroupsResponseBody = {
  groups?: [ 
    {
      backSourceMark?: string(name='BackSourceMark', description='The back-to-origin mark of the protected cluster. The value is in the {ISP name}-{Continent name}-{City name}-{Back-to-origin identifier} format. The back-to-origin identifier is optional.

>  For more information about ISP names, continent names, city names, and back-to-origin identifiers, see the following sections.', example='aliyun-asiapacific-beijing-12345678'),
      continentsValue?: int32(name='ContinentsValue', description='The continent code of the protected cluster.

>  For more information about continent codes, see Continent codes in this topic.', example='410'),
      groupId?: int32(name='GroupId', description='The ID of the node group.', example='123'),
      groupName?: string(name='GroupName', description='The name of the node group.', example='StorageGroup'),
      groupType?: string(name='GroupType', description='The type of the node group. Valid values:

*   **protect**
*   **control**
*   **storage**
*   **controlStorage**', example='protect'),
      loadBalanceIp?: string(name='LoadBalanceIp', description='The IP address of the server used for load balancing.', example='1.1.XX.XX'),
      locationId?: long(name='LocationId', description='The ID of the protection node.', example='1312'),
      operatorValue?: int32(name='OperatorValue', description='The ISP code of the protected cluster.

>  For more information about ISP codes, see ISP codes in this topic.', example='0'),
      ports?: string(name='Ports', description='The port that is used by the hybrid cloud cluster. The value of this parameter is a string. If multiple ports are returned, the value is in the **port1,port2,port3** format.', example='80,9200,20018'),
      regionCodeValue?: int32(name='RegionCodeValue', description='The city code of the protected cluster.

>  For more information about city codes, see City codes in this topic.', example='0'),
      remark?: string(name='Remark', description='The description of the node group.', example='test'),
    }
  ](name='Groups', description='The node groups.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='045660E7-C4C6-5CD7-8182-7B337D95****'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='146'),
}

model DescribeHybridCloudGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeHybridCloudGroupsResponseBody(name='body'),
}

/**
 * @summary Queries the hybrid cloud node groups that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeHybridCloudGroupsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeHybridCloudGroupsResponse
 */
async function describeHybridCloudGroupsWithOptions(request: DescribeHybridCloudGroupsRequest, runtime: Util.RuntimeOptions): DescribeHybridCloudGroupsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterId)) {
    query['ClusterId'] = request.clusterId;
  }
  if (!Util.isUnset(request.clusterProxyType)) {
    query['ClusterProxyType'] = request.clusterProxyType;
  }
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.groupType)) {
    query['GroupType'] = request.groupType;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeHybridCloudGroups',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the hybrid cloud node groups that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeHybridCloudGroupsRequest
 * @return DescribeHybridCloudGroupsResponse
 */
async function describeHybridCloudGroups(request: DescribeHybridCloudGroupsRequest): DescribeHybridCloudGroupsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeHybridCloudGroupsWithOptions(request, runtime);
}

model DescribeHybridCloudResourcesRequest {
  backend?: string(name='Backend', description='The back-to-origin IP address or domain name.', example='1.1.XX.XX'),
  cnameEnabled?: boolean(name='CnameEnabled', description='Specifies whether the public cloud disaster recovery feature is enabled for the domain name. Valid values:

*   **true**
*   **false**', example='true'),
  domain?: string(name='Domain', description='The domain name that you want to query.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-***********'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region ID of the WAF instance. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfmvtc5z52****'),
}

model DescribeHybridCloudResourcesResponseBody = {
  domains?: [ 
    {
      cname?: string(name='Cname', description='The CNAME assigned by WAF.

>  This parameter is returned only if the value of **CnameEnabled** is true.', example='50fqmu1ci7g0xtiyxnrhgx6qdhmn****.yundunwaf5.com'),
      domain?: string(name='Domain', description='The domain name.', example='www.aliyundoc.com'),
      id?: long(name='Id', description='The access ID.', example='1'),
      listen?: {
        certId?: string(name='CertId', description='The ID of the certificate.', example='72***76-cn-hangzhou'),
        cipherSuite?: int32(name='CipherSuite', description='The types of cipher suites that are added. Valid values:

*   **1:** all cipher suites.
*   **2:** strong cipher suites.
*   **99:** custom cipher suites.', example='1'),
        customCiphers?: [ string ](name='CustomCiphers', description='The custom cipher suites.

>  This parameter is returned only if the value of **CipherSuite** is **99**.'),
        enableTLSv3?: boolean(name='EnableTLSv3', description='Indicates whether TLS 1.3 is supported. Valid values:

*   **true**
*   **false**', example='true'),
        exclusiveIp?: boolean(name='ExclusiveIp', description='Indicates whether exclusive IP addresses are supported. Valid values:

*   **true**
*   **false**', example='true'),
        focusHttps?: boolean(name='FocusHttps', description='Indicates whether the HTTP to HTTPS redirection feature is enabled for the domain name. Valid values:

*   **true**
*   **false**', example='false'),
        http2Enabled?: boolean(name='Http2Enabled', description='Indicates whether HTTP/2 is enabled. Valid values:

*   **true**
*   **false**', example='false'),
        httpPorts?: [ long ](name='HttpPorts', description='The HTTP listener ports.'),
        httpsPorts?: [ long ](name='HttpsPorts', description='The HTTPS listener ports.'),
        IPv6Enabled?: boolean(name='IPv6Enabled', description='Specifies whether to enable IPv6. Valid values:

*   **true**
*   **false**', example='false'),
        protectionResource?: string(name='ProtectionResource', description='The type of the protection resource. Valid values:

*   **share:** shared cluster.
*   **gslb:** shared cluster-based intelligent load balancing.', example='share'),
        TLSVersion?: string(name='TLSVersion', description='The version of the Transport Layer Security (TLS) protocol. Valid values:

*   **tlsv1**
*   **tlsv1.1**
*   **tlsv1.2**', example='tlsv1.2'),
        xffHeaderMode?: int32(name='XffHeaderMode', description='The method that is used to obtain the actual IP address of a client. Valid values:

*   **0**: No Layer 7 proxies are deployed in front of WAF.
*   **1**: WAF reads the first value of the X-Forwarded-For (XFF) header field as the actual IP address of the client.
*   **2**: WAF reads the value of a custom header field as the actual IP address of the client.', example='0'),
        xffHeaders?: [ string ](name='XffHeaders', description='The custom header fields that are used to obtain the actual IP addresses of clients. The value is in the ["header1","header2",...] format.

>  This parameter is returned only if the value of **XffHeaderMode** is 2.'),
      }(name='Listen', description='The listeners.'),
      redirect?: {
        backends?: [ string ](name='Backends', description='The IP addresses or domain names of the origin server.'),
        cnameEnabled?: boolean(name='CnameEnabled', description='Indicates whether the public cloud disaster recovery feature is enabled. Valid values:

*   **true**
*   **false**', example='true'),
        connectTimeout?: long(name='ConnectTimeout', description='The timeout period for connections. Unit: seconds. Valid values: 5 to 120.', example='120'),
        focusHttpBackend?: boolean(name='FocusHttpBackend', description='Indicates whether the HTTPS to HTTP redirection feature is enabled for back-to-origin requests. Valid values:

*   **true**
*   **false**', example='true'),
        keepalive?: boolean(name='Keepalive', description='Indicates whether the persistent connection feature is enabled. Valid values:

*   **true**
*   **false**', example='true'),
        keepaliveRequests?: long(name='KeepaliveRequests', description='The number of reused persistent connections. Valid values: 60 to 1000.

>  This parameter indicates the number of reused persistent connections after the persistent connection feature is enabled.', example='1000'),
        keepaliveTimeout?: long(name='KeepaliveTimeout', description='The timeout period for persistent connections that are in the Idle state. Unit: seconds. Valid values: 1 to 60. Default value: 15.

>  This parameter indicates the period of time during which a reused persistent connection can remain in the Idle state before the persistent connection is released.', example='15'),
        loadbalance?: string(name='Loadbalance', description='The load balancing algorithm that is used to forward requests to the origin server. Valid values:

*   **iphash**
*   **roundRobin**
*   **leastTime**', example='iphash'),
        readTimeout?: long(name='ReadTimeout', description='The timeout period for read connections. Unit: seconds. Valid values: 5 to 1800.', example='200'),
        requestHeaders?: [ 
          {
            key?: string(name='Key', description='The key of the custom header field.', example='aaa'),
            value?: string(name='Value', description='The value of the custom header field.', example='bbb'),
          }
        ](name='RequestHeaders', description='The key-value pair that is used to label requests that pass through WAF.'),
        retry?: boolean(name='Retry', description='Indicates whether WAF retries forwarding requests if requests fail to be forwarded to the origin server. Valid values:

*   **true**
*   **false**', example='true'),
        routingRules?: string(name='RoutingRules', description='The forwarding rules that are configured for the domain name. This parameter is a string that consists of JSON arrays. Each element in a JSON array is a JSON struct that contains the following fields:

*   **rs**: the back-to-origin IP addresses or CNAMEs. The value is of the ARRAY type.
*   **location**: the name of the protection node. The value is of the STRING type.
*   **locationId**: the ID of the protection node. The value is of the LONG type.', example='[
      {
            "rs": [
                  "1.1.XX.XX"
            ],
            "locationId": 535,
            "location": "test1111"
      }
]'),
        sniEnabled?: boolean(name='SniEnabled', description='Indicates whether the origin Server Name Indication (SNI) feature is enabled. Valid values:

*   **true**
*   **false**', example='true'),
        sniHost?: string(name='SniHost', description='The value of the custom SNI field. If the parameter is left empty, the value of the **Host** field in the request header is automatically used as the value of the SNI field.

>  This parameter is returned only if the value of **SniEnabled** is **true**.', example='www.aliyundoc.com'),
        writeTimeout?: long(name='WriteTimeout', description='The timeout period for write connections. Unit: seconds. Valid values: 5 to 1800.', example='200'),
      }(name='Redirect', description='The configurations of the forwarding rule.'),
      resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmvtc5z52****'),
      status?: int32(name='Status', description='The status of the domain name. Valid values:

*   **1:** The domain name is in a normal state.
*   **2:** The domain name is being created.
*   **3:** The domain name is being modified.
*   **4:** The domain name is being released.
*   **5:** WAF no longer forwards the traffic of the domain name.', example='1'),
      uid?: string(name='Uid', description='The user ID.', example='130715431409****'),
    }
  ](name='Domains', description='The domain names.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='98D2AA9A-5959-5CCD-83E3-B6606232A2BE'),
  totalCount?: long(name='TotalCount', description='The total number of entries that are returned.', example='24'),
}

model DescribeHybridCloudResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeHybridCloudResourcesResponseBody(name='body'),
}

/**
 * @summary Queries the domain names that are added to a Web Application Firewall (WAF) instance in hybrid cloud mode.
 *
 * @param request DescribeHybridCloudResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeHybridCloudResourcesResponse
 */
async function describeHybridCloudResourcesWithOptions(request: DescribeHybridCloudResourcesRequest, runtime: Util.RuntimeOptions): DescribeHybridCloudResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.backend)) {
    query['Backend'] = request.backend;
  }
  if (!Util.isUnset(request.cnameEnabled)) {
    query['CnameEnabled'] = request.cnameEnabled;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeHybridCloudResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the domain names that are added to a Web Application Firewall (WAF) instance in hybrid cloud mode.
 *
 * @param request DescribeHybridCloudResourcesRequest
 * @return DescribeHybridCloudResourcesResponse
 */
async function describeHybridCloudResources(request: DescribeHybridCloudResourcesRequest): DescribeHybridCloudResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeHybridCloudResourcesWithOptions(request, runtime);
}

model DescribeHybridCloudUserRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-***********'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model DescribeHybridCloudUserResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='9178CB86-285F-5679-A30A-3B3F007E4206'),
  userInfo?: {
    httpPorts?: string(name='HttpPorts', description='The HTTP ports. The value is a string. If multiple ports are returned, the value is in the **port1,port2,port3** format.', example='80,8080'),
    httpsPorts?: string(name='HttpsPorts', description='The HTTPS ports. The value is a string. If multiple ports are returned, the value is in the **port1,port2,port3** format.', example='8443,443'),
  }(name='UserInfo', description='The information about the ports that can be used by a hybrid cloud cluster.'),
}

model DescribeHybridCloudUserResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeHybridCloudUserResponseBody(name='body'),
}

/**
 * @summary Queries the HTTP and HTTPS ports that you can use when you add a domain name to Web Application Firewall (WAF) in hybrid cloud mode.
 *
 * @param request DescribeHybridCloudUserRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeHybridCloudUserResponse
 */
async function describeHybridCloudUserWithOptions(request: DescribeHybridCloudUserRequest, runtime: Util.RuntimeOptions): DescribeHybridCloudUserResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeHybridCloudUser',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the HTTP and HTTPS ports that you can use when you add a domain name to Web Application Firewall (WAF) in hybrid cloud mode.
 *
 * @param request DescribeHybridCloudUserRequest
 * @return DescribeHybridCloudUserResponse
 */
async function describeHybridCloudUser(request: DescribeHybridCloudUserRequest): DescribeHybridCloudUserResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeHybridCloudUserWithOptions(request, runtime);
}

model DescribeInstanceRequest {
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model DescribeInstanceResponseBody = {
  details?: {
    aclRuleMaxIpCount?: long(name='AclRuleMaxIpCount', description='The maximum number of IP addresses that can be added to the match content of a match condition. For more information, see [Match conditions](https://help.aliyun.com/document_detail/374354.html).', example='100'),
    antiScan?: boolean(name='AntiScan', description='Indicates whether the scan protection module is supported. Valid values:

*   **true:** The scan protection module is supported.
*   **false:** The scan protection module is not supported.', example='true'),
    antiScanTemplateMaxCount?: long(name='AntiScanTemplateMaxCount', description='The maximum number of scan protection rule templates that can be configured.', example='20'),
    backendMaxCount?: long(name='BackendMaxCount', description='The maximum number of back-to-origin IP addresses that can be configured.', example='20'),
    baseWafGroup?: boolean(name='BaseWafGroup', description='Indicates whether the basic protection rule module is supported. Valid values:

*   **true:** The basic protection rule module is supported.
*   **false:** The basic protection rule module is not supported.', example='true'),
    baseWafGroupRuleInTemplateMaxCount?: long(name='BaseWafGroupRuleInTemplateMaxCount', description='The maximum number of protection rules that can be included in a basic protection rule template.', example='100'),
    baseWafGroupRuleTemplateMaxCount?: long(name='BaseWafGroupRuleTemplateMaxCount', description='The maximum number of basic protection rule templates that can be configured.', example='20'),
    bot?: boolean(name='Bot', description='Indicates whether the bot management module is supported. Valid values:

*   **true:** The bot management module is supported.
*   **false:** The bot management module is not supported.', example='true'),
    botApp?: string(name='BotApp', description='Indicates whether bot management for app protection is supported. Valid values:

*   **true:** Bot management for app protection is supported.
*   **false:** Bot management for app protection is not supported.', example='true'),
    botTemplateMaxCount?: long(name='BotTemplateMaxCount', description='The maximum number of bot management rule templates that can be configured.', example='50'),
    botWeb?: string(name='BotWeb', description='Indicates whether bot management for website protection is supported. Valid values:

*   **true:** Bot management for website protection is supported.
*   **false:** Bot management for website protection is not supported.', example='true'),
    cnameResourceMaxCount?: long(name='CnameResourceMaxCount', description='The maximum number of CNAMEs that can be added.', example='1000'),
    customResponse?: boolean(name='CustomResponse', description='Indicates whether the custom response module is supported. Valid values:

*   **true:** The custom response module is supported.
*   **false:** The custom response module is not supported.', example='true'),
    customResponseRuleInTemplateMaxCount?: long(name='CustomResponseRuleInTemplateMaxCount', description='The maximum number of rules that can be included in a custom response rule template.', example='100'),
    customResponseTemplateMaxCount?: long(name='CustomResponseTemplateMaxCount', description='The maximum number of custom response rule templates that can be configured.', example='20'),
    customRule?: boolean(name='CustomRule', description='Indicates whether the custom rule module is supported. Valid values:

*   **true:** The custom rule module is supported.
*   **false:** The custom rule module is not supported.', example='true'),
    customRuleAction?: string(name='CustomRuleAction', description='The action that can be included in a custom rule.', example='block'),
    customRuleCondition?: string(name='CustomRuleCondition', description='The match conditions that can be used in a custom rule. For more information, see **Match condition parameters** in the "**Parameters of custom rules (custom_acl)**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='URL'),
    customRuleInTemplateMaxCount?: long(name='CustomRuleInTemplateMaxCount', description='The maximum number of rules that can be included in a custom rule template.', example='100'),
    customRuleRatelimitor?: string(name='CustomRuleRatelimitor', description='The statistical object for rate limiting in a custom rule.', example='header'),
    customRuleTemplateMaxCount?: long(name='CustomRuleTemplateMaxCount', description='The maximum number of custom rule templates that can be configured.', example='20'),
    defenseGroupMaxCount?: long(name='DefenseGroupMaxCount', description='The maximum number of protected object groups that can be configured.', example='100'),
    defenseObjectInGroupMaxCount?: long(name='DefenseObjectInGroupMaxCount', description='The maximum number of protected objects that can be included in a protected object group.', example='100'),
    defenseObjectInTemplateMaxCount?: long(name='DefenseObjectInTemplateMaxCount', description='The maximum number of protected objects to which a protection rule template can be applied.', example='100'),
    defenseObjectMaxCount?: long(name='DefenseObjectMaxCount', description='The maximum number of protected objects that can be configured.', example='20,000'),
    dlp?: boolean(name='Dlp', description='Indicates whether the data leakage prevention module is supported. Valid values:

*   **true:** The data leakage prevention module is supported.
*   **false:** The data leakage prevention module is not supported.', example='true'),
    dlpRuleInTemplateMaxCount?: long(name='DlpRuleInTemplateMaxCount', description='The maximum number of rules that can be included in a data leakage prevention rule template.', example='50'),
    dlpTemplateMaxCount?: long(name='DlpTemplateMaxCount', description='The maximum number of data leakage prevention rule templates that can be configured.', example='50'),
    exclusiveIp?: boolean(name='ExclusiveIp', description='Indicates whether exclusive IP addresses are supported. Valid values:

*   **true:** Exclusive IP addresses are supported.
*   **false:** Exclusive IP addresses are not supported.', example='true'),
    gslb?: boolean(name='Gslb', description='Indicates whether global server load balancing (GSLB) is supported. Valid values:

*   **true:** GSLB is supported.
*   **false:** GSLB is not supported.', example='true'),
    httpPorts?: string(name='HttpPorts', description='The HTTP port range that is supported. For more information, see [View supported ports](https://help.aliyun.com/document_detail/385578.html).', example='80'),
    httpsPorts?: string(name='HttpsPorts', description='The HTTPS port range that is supported. For more information, see [View supported ports](https://help.aliyun.com/document_detail/385578.html).', example='443'),
    ipBlacklist?: boolean(name='IpBlacklist', description='Indicates whether the IP address blacklist module is supported. Valid values:

*   **true:** The IP address blacklist module is supported.
*   **false:** The IP address blacklist module is not supported.', example='true'),
    ipBlacklistIpInRuleMaxCount?: long(name='IpBlacklistIpInRuleMaxCount', description='The maximum number of IP addresses that can be added to an IP address blacklist rule.', example='200'),
    ipBlacklistRuleInTemplateMaxCount?: long(name='IpBlacklistRuleInTemplateMaxCount', description='The maximum number of rules that can be included in an IP address blacklist rule template.', example='100'),
    ipBlacklistTemplateMaxCount?: long(name='IpBlacklistTemplateMaxCount', description='The maximum number of IP address blacklist rule templates that can be configured.', example='20'),
    ipv6?: boolean(name='Ipv6', description='Indicates whether IPv6 is supported. Valid values:

*   **true:** IPv6 is supported.
*   **false:** IPv6 is not supported.', example='true'),
    logService?: boolean(name='LogService', description='Indicates whether the log collection feature is supported. Valid values:

*   **true:** The log collection feature is supported.
*   **false:** The log collection feature is not supported.', example='true'),
    majorProtection?: boolean(name='MajorProtection', description='Indicates whether major event protection is supported. Valid values:

*   **true:** Major event protection is supported.
*   **false:** Major event protection is not supported.', example='true'),
    majorProtectionTemplateMaxCount?: long(name='MajorProtectionTemplateMaxCount', description='The maximum number of major event protection rule templates that can be configured.', example='20'),
    tamperproof?: boolean(name='Tamperproof', description='Indicates whether the website tamper-proofing module is supported. Valid values:

*   **true:** The website tamper-proofing module is supported.
*   **false:** The website tamper-proofing module is not supported.', example='true'),
    tamperproofRuleInTemplateMaxCount?: long(name='TamperproofRuleInTemplateMaxCount', description='The maximum number of rules that can be included in a website tamper-proofing rule template.', example='50'),
    tamperproofTemplateMaxCount?: long(name='TamperproofTemplateMaxCount', description='The maximum number of website tamper-proofing rule templates that can be configured.', example='50'),
    vastIpBlacklistInFileMaxCount?: long(name='VastIpBlacklistInFileMaxCount', description='The maximum number of IP addresses or CIDR blocks that can be added to an IP address blacklist in a batch.', example='2,000'),
    vastIpBlacklistInOperationMaxCount?: long(name='VastIpBlacklistInOperationMaxCount', description='The maximum number of IP addresses or CIDR blocks that can be added to an IP address blacklist on a page.', example='500'),
    vastIpBlacklistMaxCount?: long(name='VastIpBlacklistMaxCount', description='The maximum number of IP addresses or CIDR blocks that can be added to an IP address blacklist per Alibaba Cloud account.', example='50,000'),
    whitelist?: boolean(name='Whitelist', description='Indicates whether the whitelist module is supported. Valid values:

*   **true:** The whitelist module is supported.
*   **false:** The whitelist module is not supported.', example='true'),
    whitelistLogical?: string(name='WhitelistLogical', description='The logical operators that can be used in a whitelist rule. For more information, see **Match condition parameters** in the "**Parameters of whitelist rules (whitelist)**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='contain'),
    whitelistRuleCondition?: string(name='WhitelistRuleCondition', description='The match fields that can be used in a whitelist rule. For more information, see **Match condition parameters** in the "**Parameters of whitelist rules (whitelist)**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.', example='URL'),
    whitelistRuleInTemplateMaxCount?: long(name='WhitelistRuleInTemplateMaxCount', description='The maximum number of rules that can be included in a whitelist rule template.', example='100'),
    whitelistTemplateMaxCount?: long(name='WhitelistTemplateMaxCount', description='The maximum number of whitelist rule templates that can be configured.', example='20'),
  }(name='Details', description='The details of the WAF instance.'),
  edition?: string(name='Edition', description='The edition of the WAF instance.', example='default_version'),
  endTime?: long(name='EndTime', description='The expiration time of the WAF instance.', example='4809859200000'),
  inDebt?: string(name='InDebt', description='Indicates whether the WAF instance has overdue payments. Valid values:

*   **0**: The WAF instance does not have overdue payments.
*   **1**: The WAF instance has overdue payments.', example='1'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.', example='waf-cn-xxx'),
  payType?: string(name='PayType', description='The billing method of the WAF instance. Valid values:

*   **POSTPAY:** The WAF instance uses the pay-as-you-go billing method.
*   **PREPAY:** The WAF instance uses the subscription billing method.', example='POSTPAY'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='66A98669-CC6E-4F3E-80A6-3014697B11AE'),
  startTime?: long(name='StartTime', description='The purchase time of the WAF instance. The time is in the UNIX timestamp format. The time is displayed in UTC. Unit: milliseconds.', example='1668496310000'),
  status?: int32(name='Status', description='The status of the WAF instance. Valid values:

*   **1:** The WAF instance is in a normal state.
*   **2:** The WAF instance has expired.
*   **3:** The WAF instance has been released.', example='1'),
}

model DescribeInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceResponseBody(name='body'),
}

/**
 * @summary Queries the details of a Web Application Firewall (WAF) instance within the current Alibaba Cloud account.
 *
 * @param request DescribeInstanceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeInstanceResponse
 */
async function describeInstanceWithOptions(request: DescribeInstanceRequest, runtime: Util.RuntimeOptions): DescribeInstanceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeInstance',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the details of a Web Application Firewall (WAF) instance within the current Alibaba Cloud account.
 *
 * @param request DescribeInstanceRequest
 * @return DescribeInstanceResponse
 */
async function describeInstance(request: DescribeInstanceRequest): DescribeInstanceResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeInstanceWithOptions(request, runtime);
}

model DescribeMajorProtectionBlackIpsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  ipLike?: string(name='IpLike', description='The IP address that you want to query. You can specify this parameter to query an IP address in the IP address blacklist for major event protection by using fuzzy matching.', example='192.0.XX.XX'),
  orderBy?: string(name='OrderBy', description='The method that you want to use to sort the IP addresses **in descending order**. Valid values:

*   **gmtModified:** sorts the IP addresses by most recent modification time.
*   **ip:** sorts the IP addresses by IP address.
*   **templateId:** sorts the IP addresses by template ID.
*   **id:** sorts the IP addresses by primary key.', example='gmtModified'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.', example='20013199'),
  templateId?: long(name='TemplateId', description='The ID of the rule template for major event protection.', example='5673'),
}

model DescribeMajorProtectionBlackIpsResponseBody = {
  ipList?: [ 
    {
      description?: string(name='Description', description='The description of the IP address in the blacklist.', example='test0003asdffas'),
      expiredTime?: long(name='ExpiredTime', description='The time after which the IP address blacklist becomes invalid. Unit: seconds.

>  If the value of this parameter is **0**, the blacklist is permanently valid.', example='1662603328'),
      gmtModified?: long(name='GmtModified', description='The most recent time when the IP address blacklist was modified.', example='1665456202000'),
      ip?: string(name='Ip', description='The IP address in the IP address blacklist.', example='192.0.XX.XX'),
      ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.', example='8508970'),
      templateId?: long(name='TemplateId', description='The ID of the rule template for major event protection.', example='9684'),
    }
  ](name='IpList', description='An array of IP addresses in the IP address blacklist.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='41631674-EEB0-5B02-BEB4-40A758E9B841'),
  totalCount?: long(name='TotalCount', description='The total number of IP addresses in the blacklist.', example='63'),
}

model DescribeMajorProtectionBlackIpsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeMajorProtectionBlackIpsResponseBody(name='body'),
}

/**
 * @summary Queries IP addresses in an IP address blacklist for major event protection by page.
 *
 * @param request DescribeMajorProtectionBlackIpsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeMajorProtectionBlackIpsResponse
 */
async function describeMajorProtectionBlackIpsWithOptions(request: DescribeMajorProtectionBlackIpsRequest, runtime: Util.RuntimeOptions): DescribeMajorProtectionBlackIpsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipLike)) {
    query['IpLike'] = request.ipLike;
  }
  if (!Util.isUnset(request.orderBy)) {
    query['OrderBy'] = request.orderBy;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeMajorProtectionBlackIps',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries IP addresses in an IP address blacklist for major event protection by page.
 *
 * @param request DescribeMajorProtectionBlackIpsRequest
 * @return DescribeMajorProtectionBlackIpsResponse
 */
async function describeMajorProtectionBlackIps(request: DescribeMajorProtectionBlackIpsRequest): DescribeMajorProtectionBlackIpsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeMajorProtectionBlackIpsWithOptions(request, runtime);
}

model DescribeMemberAccountsRequest {
  accountStatus?: string(name='AccountStatus', description='The status of the member that you want to query.

*   **enabled**: managed.
*   **disabled**: not managed.
*   **disabling**: being deleted.', example='enabled'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  sourceIp?: string(name='SourceIp', description='The source IP address of the request. The system specifies this parameter.', example='0.0.XX.XX'),
}

model DescribeMemberAccountsResponseBody = {
  accountInfos?: [ 
    {
      accountId?: string(name='AccountId', description='The ID of the member.', example='169************21'),
      accountName?: string(name='AccountName', description='The name of the member.', example='ipflgmqqnbjg'),
      accountStatus?: string(name='AccountStatus', description='The status of the member.

*   **enabled**: managed.
*   **disabled**: not managed.
*   **disabling**: being deleted.', example='enabled'),
      description?: string(name='Description', description='The description of the member.', example='test'),
      gmtCreate?: long(name='GmtCreate', description='The time when the member was added.', example='1683367751000'),
    }
  ](name='AccountInfos', description='The information about the member.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='50C4A80D-D46C-57E0-9A7D-03C0****4852'),
}

model DescribeMemberAccountsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeMemberAccountsResponseBody(name='body'),
}

/**
 * @summary Queries information about members.
 *
 * @param request DescribeMemberAccountsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeMemberAccountsResponse
 */
async function describeMemberAccountsWithOptions(request: DescribeMemberAccountsRequest, runtime: Util.RuntimeOptions): DescribeMemberAccountsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.accountStatus)) {
    query['AccountStatus'] = request.accountStatus;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.sourceIp)) {
    query['SourceIp'] = request.sourceIp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeMemberAccounts',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries information about members.
 *
 * @param request DescribeMemberAccountsRequest
 * @return DescribeMemberAccountsResponse
 */
async function describeMemberAccounts(request: DescribeMemberAccountsRequest): DescribeMemberAccountsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeMemberAccountsWithOptions(request, runtime);
}

model DescribePauseProtectionStatusRequest {
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf-cn-tl32ast****'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model DescribePauseProtectionStatusResponseBody = {
  pauseStatus?: int32(name='PauseStatus', example='0'),
  requestId?: string(name='RequestId', example='D7861F61-****-46CE-A47C-6B19****5EB0'),
}

model DescribePauseProtectionStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePauseProtectionStatusResponseBody(name='body'),
}

/**
 * @summary 获取用户暂停防护状态
 *
 * @param request DescribePauseProtectionStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribePauseProtectionStatusResponse
 */
async function describePauseProtectionStatusWithOptions(request: DescribePauseProtectionStatusRequest, runtime: Util.RuntimeOptions): DescribePauseProtectionStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribePauseProtectionStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 获取用户暂停防护状态
 *
 * @param request DescribePauseProtectionStatusRequest
 * @return DescribePauseProtectionStatusResponse
 */
async function describePauseProtectionStatus(request: DescribePauseProtectionStatusRequest): DescribePauseProtectionStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePauseProtectionStatusWithOptions(request, runtime);
}

model DescribePeakTrendRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386340'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  interval?: string(name='Interval', description='The time interval. Unit: seconds. The value must be an integral multiple of 60.

This parameter is required.', example='300'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribePeakTrendResponseBody = {
  flowChart?: [ 
    {
      aclSum?: long(name='AclSum', description='The number of requests that are monitored or blocked by the custom rule (access control) module.', example='0'),
      antiScanSum?: long(name='AntiScanSum', description='The number of requests that are monitored or blocked by the scan protection module.', example='0'),
      ccSum?: long(name='CcSum', description='The number of requests that are monitored or blocked by the HTTP flood protection module.', example='0'),
      count?: long(name='Count', description='The total number of requests.', example='2622'),
      index?: long(name='Index', description='The serial number of the time interval. The serial numbers are arranged in chronological order.', example='10'),
      wafSum?: long(name='WafSum', description='The number of requests that are monitored or blocked by the regular expression protection engine.', example='0'),
    }
  ](name='FlowChart', description='An array of the QPS statistics of the WAF instance.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='9D11AC3A-A10C-56E7-A342-E87EC892BAE2'),
}

model DescribePeakTrendResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePeakTrendResponseBody(name='body'),
}

/**
 * @summary Queries the queries per second (QPS) statistics of a WAF instance.
 *
 * @param request DescribePeakTrendRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribePeakTrendResponse
 */
async function describePeakTrendWithOptions(request: DescribePeakTrendRequest, runtime: Util.RuntimeOptions): DescribePeakTrendResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.interval)) {
    query['Interval'] = request.interval;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribePeakTrend',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the queries per second (QPS) statistics of a WAF instance.
 *
 * @param request DescribePeakTrendRequest
 * @return DescribePeakTrendResponse
 */
async function describePeakTrend(request: DescribePeakTrendRequest): DescribePeakTrendResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePeakTrendWithOptions(request, runtime);
}

model DescribeProductInstancesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-zxu****9d02'),
  ownerUserId?: string(name='OwnerUserId', description='The ID of the Alibaba Cloud account to which the resource belongs.', example='1704********9107'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceInstanceId?: string(name='ResourceInstanceId', description='The ID of the instance.', example='lb-2zeugkfj81jvo****4tqm'),
  resourceIp?: string(name='ResourceIp', description='The public IP address of the instance.', example='1.X.X.1'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekz6ql****5uzi'),
  resourceName?: string(name='ResourceName', description='The name of the instance.', example='exampleResourceName'),
  resourceProduct?: string(name='ResourceProduct', description='The cloud service to which the instance belongs. Valid values:

*   **clb4**: Layer 4 Classic Load Balancer (CLB).
*   **clb7**: Layer 7 CLB.
*   **ecs**: Elastic Compute Service (ECS).', example='clb7'),
  resourceRegionId?: string(name='ResourceRegionId', description='The region ID of the instance. Valid values:

*   **cn-chengdu**: China (Chengdu).
*   **cn-beijing**: China (Beijing).
*   **cn-zhangjiakou**: China (Zhangjiakou).
*   **cn-hangzhou**: China (Hangzhou).
*   **cn-shanghai**: China (Shanghai).
*   **cn-shenzhen**: China (Shenzhen).
*   **cn-qingdao**: China (Qingdao).
*   **cn-hongkong**: China (Hong Kong).
*   **ap-southeast-3**: Malaysia (Kuala Lumpur).
*   **ap-southeast-5**: Indonesia (Jakarta).', example='cn-hangzhou'),
}

model DescribeProductInstancesResponseBody = {
  productInstances?: [ 
    {
      ownerUserId?: string(name='OwnerUserId', description='The ID of the Alibaba Cloud account to which the resource belongs.', example='1704********9107'),
      resourceInstanceId?: string(name='ResourceInstanceId', description='The ID of the instance.', example='i-2ze1tm4pvghp****cluv'),
      resourceIp?: string(name='ResourceIp', description='The public IP address of the instance.', example='1.X.X.1'),
      resourceName?: string(name='ResourceName', description='The name of the instance.', example='ecs-test'),
      resourcePorts?: [ 
        {
          certificates?: [ 
            {
              certificateId?: string(name='CertificateId', description='The ID of the certificate.', example='10106183'),
              certificateName?: string(name='CertificateName', description='The name of the certificate.', example='trafficxxxx.cn'),
            }
          ](name='Certificates', description='The information about the certificates.'),
          port?: int32(name='Port', description='The port number.', example='443'),
          protocol?: string(name='Protocol', description='The protocol type. Valid values:

*   **http**
*   **https**', example='https'),
        }
      ](name='ResourcePorts', description='The information about the ports.'),
      resourceProduct?: string(name='ResourceProduct', description='The cloud service to which the instance belongs. Valid values:

*   **clb4**: Layer 4 CLB.
*   **clb7**: Layer 7 CLB.
*   **ecs**: ECS.', example='clb4'),
      resourceRegionId?: string(name='ResourceRegionId', description='The region ID of the instance. Valid values:

*   **cn-chengdu**: China (Chengdu).
*   **cn-beijing**: China (Beijing).
*   **cn-zhangjiakou**: China (Zhangjiakou).
*   **cn-hangzhou**: China (Hangzhou).
*   **cn-shanghai**: China (Shanghai).
*   **cn-shenzhen**: China (Shenzhen).
*   **cn-qingdao**: China (Qingdao).
*   **cn-hongkong**: China (Hong Kong).
*   **ap-southeast-3**: Malaysia (Kuala Lumpur).
*   **ap-southeast-5**: Indonesia (Jakarta).', example='cn-beijing'),
    }
  ](name='ProductInstances', description='The information about the instances.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='FDCBAE1E-2B3F-5C13-AD20-844B9473****'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='100'),
}

model DescribeProductInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeProductInstancesResponseBody(name='body'),
}

/**
 * @summary Queries the cloud service instances to be added to Web Application Firewall (WAF) in transparent proxy mode.
 *
 * @param request DescribeProductInstancesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeProductInstancesResponse
 */
async function describeProductInstancesWithOptions(request: DescribeProductInstancesRequest, runtime: Util.RuntimeOptions): DescribeProductInstancesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ownerUserId)) {
    query['OwnerUserId'] = request.ownerUserId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceInstanceId)) {
    query['ResourceInstanceId'] = request.resourceInstanceId;
  }
  if (!Util.isUnset(request.resourceIp)) {
    query['ResourceIp'] = request.resourceIp;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resourceName)) {
    query['ResourceName'] = request.resourceName;
  }
  if (!Util.isUnset(request.resourceProduct)) {
    query['ResourceProduct'] = request.resourceProduct;
  }
  if (!Util.isUnset(request.resourceRegionId)) {
    query['ResourceRegionId'] = request.resourceRegionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeProductInstances',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the cloud service instances to be added to Web Application Firewall (WAF) in transparent proxy mode.
 *
 * @param request DescribeProductInstancesRequest
 * @return DescribeProductInstancesResponse
 */
async function describeProductInstances(request: DescribeProductInstancesRequest): DescribeProductInstancesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeProductInstancesWithOptions(request, runtime);
}

model DescribePunishedDomainsRequest {
  domains?: [ string ](name='Domains', description='The domain names.'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-uqm****qa07'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekz7nc****aata'),
}

model DescribePunishedDomainsResponseBody = {
  punishedDomains?: [ string ](name='PunishedDomains', description='The domain names that are penalized for failing to obtain an ICP filing.'),
  requestId?: string(name='RequestId', description='The request ID.', example='B1F4D802-55A1-5D53-A247-7E79****85E7'),
}

model DescribePunishedDomainsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePunishedDomainsResponseBody(name='body'),
}

/**
 * @summary Queries a list of domain names that are added to Web Application Firewall (WAF) and penalized for failing to obtain an Internet Content Provider (ICP) filing.
 *
 * @param request DescribePunishedDomainsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribePunishedDomainsResponse
 */
async function describePunishedDomainsWithOptions(request: DescribePunishedDomainsRequest, runtime: Util.RuntimeOptions): DescribePunishedDomainsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.domains)) {
    query['Domains'] = request.domains;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribePunishedDomains',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries a list of domain names that are added to Web Application Firewall (WAF) and penalized for failing to obtain an Internet Content Provider (ICP) filing.
 *
 * @param request DescribePunishedDomainsRequest
 * @return DescribePunishedDomainsResponse
 */
async function describePunishedDomains(request: DescribePunishedDomainsRequest): DescribePunishedDomainsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePunishedDomainsWithOptions(request, runtime);
}

model DescribeResourceInstanceCertsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-*'),
  pageNumber?: long(name='PageNumber', description='The page number. Default value: **1**.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceInstanceId?: string(name='ResourceInstanceId', description='The ID of the instance.', example='lb-bp1*****jqnnqk5uj2p'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeResourceInstanceCertsResponseBody = {
  certs?: [ 
    {
      afterDate?: long(name='AfterDate', description='The time when the certificate expires.', example='1708415521211'),
      beforeDate?: long(name='BeforeDate', description='The time when the certificate was issued.', example='1708415521211'),
      certIdentifier?: string(name='CertIdentifier', description='The globally unique ID of the certificate. The value is in the "Certificate ID-cn-hangzhou" format. For example, if the ID of the certificate is 123, the value of CertIdentifier is 123-cn-hangzhou.', example='123-cn-hangzhou'),
      certName?: string(name='CertName', description='The name of the certificate.', example='demoCertName'),
      commonName?: string(name='CommonName', description='The common name.', example='*.aliyundemo.com'),
      domain?: string(name='Domain', description='The domain name for which the certificate is issued.', example='waf.aliyundemo.com'),
      isChainCompleted?: boolean(name='IsChainCompleted', description='Indicates whether the certificate chain is complete.', example='true'),
    }
  ](name='Certs', description='The certificates.'),
  requestId?: string(name='RequestId', description='The request ID.', example='D7861F61-***-6B19160D5EB0'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeResourceInstanceCertsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceInstanceCertsResponseBody(name='body'),
}

/**
 * @summary Queries the certificates that are used in cloud service instances. The certificates returned include the certificates within the delegated administrator account and the certificates within members to which specific instances belong. For example, the delegated administrator account has certificate 1, instance lb-xx-1 belongs to member B, and member B has certificate 2. If you specify instance lb-xx-1 in the request, certificate 1 and certificate 2 are returned.
 *
 * @param request DescribeResourceInstanceCertsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourceInstanceCertsResponse
 */
async function describeResourceInstanceCertsWithOptions(request: DescribeResourceInstanceCertsRequest, runtime: Util.RuntimeOptions): DescribeResourceInstanceCertsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceInstanceId)) {
    query['ResourceInstanceId'] = request.resourceInstanceId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResourceInstanceCerts',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the certificates that are used in cloud service instances. The certificates returned include the certificates within the delegated administrator account and the certificates within members to which specific instances belong. For example, the delegated administrator account has certificate 1, instance lb-xx-1 belongs to member B, and member B has certificate 2. If you specify instance lb-xx-1 in the request, certificate 1 and certificate 2 are returned.
 *
 * @param request DescribeResourceInstanceCertsRequest
 * @return DescribeResourceInstanceCertsResponse
 */
async function describeResourceInstanceCerts(request: DescribeResourceInstanceCertsRequest): DescribeResourceInstanceCertsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResourceInstanceCertsWithOptions(request, runtime);
}

model DescribeResourceLogStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf-cn-zz11zcl****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  resources?: string(name='Resources', description='The protected object that you want to query. You can specify multiple protected objects. Separate the protected objects with commas (,).

This parameter is required.', example='alb-wewbb23dfsetetcic1242-0****,alb-wewbb23dfsetetcic1242-1****'),
}

model DescribeResourceLogStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='0DABF8AB-2321-5F8D-A8D7-922D757FBFFE'),
  result?: [ 
    {
      resource?: string(name='Resource', description='The protected object.', example='alb-wewbb23dfsetetcic****'),
      status?: boolean(name='Status', description='Indicates whether the log collection feature is enabled for the protected object. Valid values:

*   **true:** The log collection feature is enabled.
*   **false:** The log collection feature is disabled.', example='true'),
    }
  ](name='Result', description='The returned result.'),
}

model DescribeResourceLogStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceLogStatusResponseBody(name='body'),
}

/**
 * @summary Queries whether the log collection feature is enabled for a protected object.
 *
 * @param request DescribeResourceLogStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourceLogStatusResponse
 */
async function describeResourceLogStatusWithOptions(request: DescribeResourceLogStatusRequest, runtime: Util.RuntimeOptions): DescribeResourceLogStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resources)) {
    query['Resources'] = request.resources;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResourceLogStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries whether the log collection feature is enabled for a protected object.
 *
 * @param request DescribeResourceLogStatusRequest
 * @return DescribeResourceLogStatusResponse
 */
async function describeResourceLogStatus(request: DescribeResourceLogStatusRequest): DescribeResourceLogStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResourceLogStatusWithOptions(request, runtime);
}

model DescribeResourcePortRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceInstanceId?: string(name='ResourceInstanceId', description='The ID of the cloud service instance.

This parameter is required.', example='8vb40vj87znu3ai7l5lv4-80****'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeResourcePortResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='66A98669-CC6E-4F3E-80A6-3014697B11AE'),
  resourcePorts?: [ string ](name='ResourcePorts', description='An array of HTTP and HTTPS listener ports that are added to the WAF instance.'),
}

model DescribeResourcePortResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourcePortResponseBody(name='body'),
}

/**
 * @summary Queries the ports of a cloud service instance that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeResourcePortRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourcePortResponse
 */
async function describeResourcePortWithOptions(request: DescribeResourcePortRequest, runtime: Util.RuntimeOptions): DescribeResourcePortResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceInstanceId)) {
    query['ResourceInstanceId'] = request.resourceInstanceId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResourcePort',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the ports of a cloud service instance that are added to Web Application Firewall (WAF).
 *
 * @param request DescribeResourcePortRequest
 * @return DescribeResourcePortResponse
 */
async function describeResourcePort(request: DescribeResourcePortRequest): DescribeResourcePortResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResourcePortWithOptions(request, runtime);
}

model DescribeResourceRegionIdRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aek2lrm****6pnq'),
}

model DescribeResourceRegionIdResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='F5905D3F-F674-5177-9E48-466DD3B8****'),
  resourceRegionIds?: [ string ](name='ResourceRegionIds', description='The region IDs.'),
}

model DescribeResourceRegionIdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceRegionIdResponseBody(name='body'),
}

/**
 * @summary Queries the region IDs of the resources that are added to Web Application Firewall (WAF) in cloud native mode. The resources include Application Load Balancer (ALB) instances, Microservices Engine (MSE) instances, and custom domain names bound to web applications in Function Compute.
 *
 * @param request DescribeResourceRegionIdRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourceRegionIdResponse
 */
async function describeResourceRegionIdWithOptions(request: DescribeResourceRegionIdRequest, runtime: Util.RuntimeOptions): DescribeResourceRegionIdResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResourceRegionId',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the region IDs of the resources that are added to Web Application Firewall (WAF) in cloud native mode. The resources include Application Load Balancer (ALB) instances, Microservices Engine (MSE) instances, and custom domain names bound to web applications in Function Compute.
 *
 * @param request DescribeResourceRegionIdRequest
 * @return DescribeResourceRegionIdResponse
 */
async function describeResourceRegionId(request: DescribeResourceRegionIdRequest): DescribeResourceRegionIdResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResourceRegionIdWithOptions(request, runtime);
}

model DescribeResourceSupportRegionsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekzpks****kdjq'),
}

model DescribeResourceSupportRegionsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='58FDF266-3D56-5DE8-91E0-96A26B****DD'),
  supportRegions?: [ string ](name='SupportRegions', description='The region IDs.'),
}

model DescribeResourceSupportRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceSupportRegionsResponseBody(name='body'),
}

/**
 * @summary Queries the region IDs of Classic Load Balancer (CLB) and Elastic Compute Service (ECS) instances that can be added to Web Application Firewall (WAF) in transparent proxy mode.
 *
 * @param request DescribeResourceSupportRegionsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourceSupportRegionsResponse
 */
async function describeResourceSupportRegionsWithOptions(request: DescribeResourceSupportRegionsRequest, runtime: Util.RuntimeOptions): DescribeResourceSupportRegionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResourceSupportRegions',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the region IDs of Classic Load Balancer (CLB) and Elastic Compute Service (ECS) instances that can be added to Web Application Firewall (WAF) in transparent proxy mode.
 *
 * @param request DescribeResourceSupportRegionsRequest
 * @return DescribeResourceSupportRegionsResponse
 */
async function describeResourceSupportRegions(request: DescribeResourceSupportRegionsRequest): DescribeResourceSupportRegionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResourceSupportRegionsWithOptions(request, runtime);
}

model DescribeResponseCodeTrendGraphRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  interval?: string(name='Interval', description='The time interval. Unit: seconds. The value must be an integral multiple of 60.

This parameter is required.', example='300'),
  regionId?: string(name='RegionId', description='The ID of the region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
  type?: string(name='Type', description='The type of the error codes. Valid values:

*   **waf:** error codes that are returned to clients from WAF.
*   **upstream:** error codes that are returned to WAF from the origin server.

This parameter is required.', example='waf'),
}

model DescribeResponseCodeTrendGraphResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='7D46493E-84DD-58CE-80A7-8643****9ECC'),
  responseCodes?: [ 
    {
      code302Pv?: long(name='302Pv', description='The number of 302 error codes that are returned.', example='0'),
      code405Pv?: long(name='405Pv', description='The number of 405 error codes that are returned.', example='121645464'),
      code444Pv?: long(name='444Pv', description='The number of 444 error codes that are returned.', example='0'),
      code499Pv?: long(name='499Pv', description='The number of 499 error codes that are returned.', example='0'),
      code5xxPv?: long(name='5xxPv', description='The number of 5xx error codes that are returned.', example='2932'),
      index?: long(name='Index', description='The serial number of the time interval. The serial numbers are arranged in chronological order.', example='10'),
    }
  ](name='ResponseCodes', description='The array of the statistics of the error codes.'),
}

model DescribeResponseCodeTrendGraphResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResponseCodeTrendGraphResponseBody(name='body'),
}

/**
 * @summary Queries the trend of the number of error codes that are returned to clients or Web Application Firewall (WAF). The error codes include 302, 405, 444, 499, and 5XX.
 *
 * @param request DescribeResponseCodeTrendGraphRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResponseCodeTrendGraphResponse
 */
async function describeResponseCodeTrendGraphWithOptions(request: DescribeResponseCodeTrendGraphRequest, runtime: Util.RuntimeOptions): DescribeResponseCodeTrendGraphResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.interval)) {
    query['Interval'] = request.interval;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  if (!Util.isUnset(request.type)) {
    query['Type'] = request.type;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeResponseCodeTrendGraph',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the trend of the number of error codes that are returned to clients or Web Application Firewall (WAF). The error codes include 302, 405, 444, 499, and 5XX.
 *
 * @param request DescribeResponseCodeTrendGraphRequest
 * @return DescribeResponseCodeTrendGraphResponse
 */
async function describeResponseCodeTrendGraph(request: DescribeResponseCodeTrendGraphRequest): DescribeResponseCodeTrendGraphResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeResponseCodeTrendGraphWithOptions(request, runtime);
}

model DescribeRuleGroupsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Default value: **1**.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Default value: **10**.', example='10'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  searchType?: string(name='SearchType', description='The type of the query condition. Valid values:

*   **id:** queries regular expression rule groups by ID.
*   **name:** queries regular expression rule groups by name.', example='name'),
  searchValue?: string(name='SearchValue', description='The query condition.', example='test'),
}

model DescribeRuleGroupsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='02E9A4B8-90FB-5F41-A049-C82277EB82FB'),
  ruleGroups?: [ 
    {
      gmtModified?: long(name='GmtModified', description='The most recent time when the rule group was modified.', example='1664336364000'),
      isSubscribe?: int32(name='IsSubscribe', description='Indicates whether the automatic update feature is enabled for the rule group.

*   1: The automatic update feature is enabled for the rule group.
*   2: The automatic update feature is disabled for the rule group.', example='1'),
      parentRuleGroupId?: long(name='ParentRuleGroupId', description='The ID of the rule group.

*   0: The rule group is created from scratch.
*   1011: The rule group is a strict rule group.
*   1012: The rule group is a medium rule group.
*   1013: The rue group is a loose rule group.', example='1012'),
      ruleGroupId?: long(name='RuleGroupId', description='The ID of the regular expression rule group.', example='115361'),
      ruleGroupName?: string(name='RuleGroupName', description='The name of the rule group.', example='ssssss'),
      ruleTotalCount?: int32(name='RuleTotalCount', description='The number of built-in rules in the rule group.', example='4444'),
    }
  ](name='RuleGroups', description='An array of regular expression rule groups.'),
  totalCount?: long(name='TotalCount', description='The total number of entries that are returned.', example='24'),
}

model DescribeRuleGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleGroupsResponseBody(name='body'),
}

/**
 * @summary Queries regular expression rule groups by page.
 *
 * @param request DescribeRuleGroupsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleGroupsResponse
 */
async function describeRuleGroupsWithOptions(request: DescribeRuleGroupsRequest, runtime: Util.RuntimeOptions): DescribeRuleGroupsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.searchType)) {
    query['SearchType'] = request.searchType;
  }
  if (!Util.isUnset(request.searchValue)) {
    query['SearchValue'] = request.searchValue;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleGroups',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries regular expression rule groups by page.
 *
 * @param request DescribeRuleGroupsRequest
 * @return DescribeRuleGroupsResponse
 */
async function describeRuleGroups(request: DescribeRuleGroupsRequest): DescribeRuleGroupsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleGroupsWithOptions(request, runtime);
}

model DescribeRuleHitsTopClientIpRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleType?: string(name='RuleType', description='The type of rules that are triggered by the protected object. By default, this parameter is not specified and all types of rules are queried.

*   **blacklist:** IP address blacklist rules.
*   **custom:** custom rules.
*   **antiscan:** scan protection rules.
*   **cc_system:** HTTP flood protection rules.
*   **region_block:** region blacklist rules.', example='blacklist'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopClientIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='9F0F9AD6-62E2-50BB-A3E5-30FFB9410262'),
  ruleHitsTopClientIp?: [ 
    {
      clientIp?: string(name='ClientIp', description='The IP address of the service client.', example='3.3.XX.XX'),
      count?: long(name='Count', description='The number of attacks that are initiated from the IP address.', example='531'),
    }
  ](name='RuleHitsTopClientIp', description='The array of the top 10 IP addresses from which attacks are initiated.'),
}

model DescribeRuleHitsTopClientIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopClientIpResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 IP addresses from which attacks are initiated.
 *
 * @param request DescribeRuleHitsTopClientIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopClientIpResponse
 */
async function describeRuleHitsTopClientIpWithOptions(request: DescribeRuleHitsTopClientIpRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopClientIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopClientIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 IP addresses from which attacks are initiated.
 *
 * @param request DescribeRuleHitsTopClientIpRequest
 * @return DescribeRuleHitsTopClientIpResponse
 */
async function describeRuleHitsTopClientIp(request: DescribeRuleHitsTopClientIpRequest): DescribeRuleHitsTopClientIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopClientIpWithOptions(request, runtime);
}

model DescribeRuleHitsTopResourceRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386340'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleType?: string(name='RuleType', description='The type of rules that are triggered by the protected object. By default, this parameter is not specified and all types of rules are queried.

*   **blacklist:** IP address blacklist rules.
*   **custom:** custom rules.
*   **antiscan:** scan protection rules.
*   **cc_system:** HTTP flood protection rules.
*   **region_block:** region blacklist rules.', example='blacklist'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopResourceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='ADA11BC7-AA95-5C31-9095-5802C02ED1DC'),
  ruleHitsTopResource?: [ 
    {
      count?: long(name='Count', description='The number of requests that match protection rules.', example='14219'),
      resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
    }
  ](name='RuleHitsTopResource', description='The array of the top 10 protected objects that trigger protection rules.'),
}

model DescribeRuleHitsTopResourceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopResourceResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 protected objects that trigger protection rules.
 *
 * @param request DescribeRuleHitsTopResourceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopResourceResponse
 */
async function describeRuleHitsTopResourceWithOptions(request: DescribeRuleHitsTopResourceRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopResourceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopResource',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 protected objects that trigger protection rules.
 *
 * @param request DescribeRuleHitsTopResourceRequest
 * @return DescribeRuleHitsTopResourceResponse
 */
async function describeRuleHitsTopResource(request: DescribeRuleHitsTopResourceRequest): DescribeRuleHitsTopResourceResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopResourceWithOptions(request, runtime);
}

model DescribeRuleHitsTopRuleIdRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  isGroupResource?: string(name='IsGroupResource', description='Specifies whether protected objects that trigger protection rules are returned in the response. Valid values

- **true**: returns only the number of times each protection rule is triggered. If you set IsGroupResource to true, Resource is left empty.
- **false**: returns the number of times each protection rule is triggered by each protected object.', example='true'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  ruleType?: string(name='RuleType', description='The type of rules that are triggered by the protected object. By default, this parameter is not specified and all types of rules are queried.

*   **blacklist:** IP address blacklist rules.
*   **custom:** custom rules.
*   **antiscan:** scan protection rules.
*   **cc_system:** HTTP flood protection rules.
*   **region_block:** region blacklist rules.', example='blacklist'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopRuleIdResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='F6334274-8870-5D2F-A1AD-D6EF885AC1ED'),
  ruleHitsTopRuleId?: [ 
    {
      count?: long(name='Count', description='The number of requests that match the rule.', example='181174784'),
      resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
      ruleId?: string(name='RuleId', description='The ID of the rule.', example='5465465'),
    }
  ](name='RuleHitsTopRuleId', description='The array of the IDs of the top 10 rules that are matched by requests.'),
}

model DescribeRuleHitsTopRuleIdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopRuleIdResponseBody(name='body'),
}

/**
 * @summary Queries the IDs of the top 10 protection rules that are matched by requests.
 *
 * @param request DescribeRuleHitsTopRuleIdRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopRuleIdResponse
 */
async function describeRuleHitsTopRuleIdWithOptions(request: DescribeRuleHitsTopRuleIdRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopRuleIdResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.isGroupResource)) {
    query['IsGroupResource'] = request.isGroupResource;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopRuleId',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the IDs of the top 10 protection rules that are matched by requests.
 *
 * @param request DescribeRuleHitsTopRuleIdRequest
 * @return DescribeRuleHitsTopRuleIdResponse
 */
async function describeRuleHitsTopRuleId(request: DescribeRuleHitsTopRuleIdRequest): DescribeRuleHitsTopRuleIdResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopRuleIdWithOptions(request, runtime);
}

model DescribeRuleHitsTopTuleTypeRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end point of the time period for which to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The ID of the region where the WAF instance resides. Valid values:

*   **cn-hangzhou**: the Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  startTimestamp?: string(name='StartTimestamp', description='The start point of the time period for which to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopTuleTypeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='45E377CE-0B04-578E-B653-EEA63CFE****'),
  ruleHitsTopTuleType?: [ 
    {
      count?: long(name='Count', description='The number of requests that match protection rules.', example='698455'),
      ruleType?: string(name='RuleType', description='The type of rule that is matched. By default, this parameter is not returned. This indicates that all types of rules that are matched are returned.

*   **waf:** basic protection rules.
*   **blacklist:** IP address blacklist rules.
*   **custom:** custom rules.
*   **antiscan:** scan protection rules.
*   **cc_system:** HTTP flood protection rules.
*   **region_block:** region blacklist rules.
*   **scene:** bot management rules.
*   **dlp:** data leakage prevention rules.', example='cc_system'),
    }
  ](name='RuleHitsTopTuleType', description='The top 10 protection modules that are matched.'),
}

model DescribeRuleHitsTopTuleTypeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopTuleTypeResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 protection modules that are matched.
 *
 * @param request DescribeRuleHitsTopTuleTypeRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopTuleTypeResponse
 */
async function describeRuleHitsTopTuleTypeWithOptions(request: DescribeRuleHitsTopTuleTypeRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopTuleTypeResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopTuleType',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 protection modules that are matched.
 *
 * @param request DescribeRuleHitsTopTuleTypeRequest
 * @return DescribeRuleHitsTopTuleTypeResponse
 */
async function describeRuleHitsTopTuleType(request: DescribeRuleHitsTopTuleTypeRequest): DescribeRuleHitsTopTuleTypeResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopTuleTypeWithOptions(request, runtime);
}

model DescribeRuleHitsTopUaRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopUaResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8E5C7ED7-503A-5986-A005-36F2511EB89F'),
  ruleHitsTopUa?: [ 
    {
      count?: long(name='Count', description='The number of attacks that are initiated from the IP address.', example='531'),
      ua?: string(name='Ua', description='The user agent.', example='android'),
    }
  ](name='RuleHitsTopUa', description='The array of the top 10 user agents that are used to initiate attacks.'),
}

model DescribeRuleHitsTopUaResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopUaResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 user agents that are used to initiate attacks.
 *
 * @param request DescribeRuleHitsTopUaRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopUaResponse
 */
async function describeRuleHitsTopUaWithOptions(request: DescribeRuleHitsTopUaRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopUaResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopUa',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 user agents that are used to initiate attacks.
 *
 * @param request DescribeRuleHitsTopUaRequest
 * @return DescribeRuleHitsTopUaResponse
 */
async function describeRuleHitsTopUa(request: DescribeRuleHitsTopUaRequest): DescribeRuleHitsTopUaResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopUaWithOptions(request, runtime);
}

model DescribeRuleHitsTopUrlRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.

This parameter is required.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleType?: string(name='RuleType', description='The type of rules that are triggered by the protected object. By default, this parameter is not specified and all types of rules are queried.

*   **blacklist:** IP address blacklist rules.
*   **custom:** custom rules.
*   **antiscan:** scan protection rules.
*   **cc_system:** HTTP flood protection rules.
*   **region_block:** region blacklist rules.', example='blacklist'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeRuleHitsTopUrlResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='3D8AF43B-08EB-51CE-B33A-93AA****9B0C'),
  ruleHitsTopUrl?: [ 
    {
      count?: long(name='Count', description='The number of requests that match protection rules.', example='21862'),
      url?: string(name='Url', description='The request URL.

>  The value is Base64-encoded.', example='d3d3LmFsaXl1bmRvYy5jb20vcGF0aDM='),
    }
  ](name='RuleHitsTopUrl', description='The top 10 URLs that match protection rules.'),
}

model DescribeRuleHitsTopUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRuleHitsTopUrlResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 URLs that trigger protection rules.
 *
 * @param request DescribeRuleHitsTopUrlRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRuleHitsTopUrlResponse
 */
async function describeRuleHitsTopUrlWithOptions(request: DescribeRuleHitsTopUrlRequest, runtime: Util.RuntimeOptions): DescribeRuleHitsTopUrlResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleType)) {
    query['RuleType'] = request.ruleType;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRuleHitsTopUrl',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 URLs that trigger protection rules.
 *
 * @param request DescribeRuleHitsTopUrlRequest
 * @return DescribeRuleHitsTopUrlResponse
 */
async function describeRuleHitsTopUrl(request: DescribeRuleHitsTopUrlRequest): DescribeRuleHitsTopUrlResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRuleHitsTopUrlWithOptions(request, runtime);
}

model DescribeSlsAuthStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-g4t3g****04'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aek2okfav****iq'),
}

model DescribeSlsAuthStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='3589D3A3-4A04-51CB-AA89-353ED20A****'),
  status?: boolean(name='Status', description='Indicates whether WAF is authorized to access Logstores. Valid values:

*   **true**
*   **false**', example='false'),
}

model DescribeSlsAuthStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSlsAuthStatusResponseBody(name='body'),
}

/**
 * @summary Queries whether Web Application Firewall (WAF) is authorized to access Logstores.
 *
 * @param request DescribeSlsAuthStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeSlsAuthStatusResponse
 */
async function describeSlsAuthStatusWithOptions(request: DescribeSlsAuthStatusRequest, runtime: Util.RuntimeOptions): DescribeSlsAuthStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeSlsAuthStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries whether Web Application Firewall (WAF) is authorized to access Logstores.
 *
 * @param request DescribeSlsAuthStatusRequest
 * @return DescribeSlsAuthStatusResponse
 */
async function describeSlsAuthStatus(request: DescribeSlsAuthStatusRequest): DescribeSlsAuthStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeSlsAuthStatusWithOptions(request, runtime);
}

model DescribeSlsLogStoreRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-zpr3d****0o'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aek2wf3mn****vq'),
}

model DescribeSlsLogStoreResponseBody = {
  logStoreName?: string(name='LogStoreName', description='The name of the Logstore.', example='wafng-logstore'),
  projectName?: string(name='ProjectName', description='The name of the Simple Log Service project.', example='wafng-project-14316572********-cn-hangzhou'),
  quota?: long(name='Quota', description='The capacity of the Logstore. Unit: bytes.', example='3298534883328'),
  requestId?: string(name='RequestId', description='The request ID.', example='CAC0A24B-486A-5E12-9894-BE860E5F****'),
  ttl?: int32(name='Ttl', description='The storage duration of the Logstore. Unit: days.', example='180'),
  used?: long(name='Used', description='The used capacity of the Logstore. Unit: bytes.', example='35471136'),
}

model DescribeSlsLogStoreResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSlsLogStoreResponseBody(name='body'),
}

/**
 * @summary Queries information about a Logstore, such as the total capacity, storage duration, and used capacity.
 *
 * @param request DescribeSlsLogStoreRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeSlsLogStoreResponse
 */
async function describeSlsLogStoreWithOptions(request: DescribeSlsLogStoreRequest, runtime: Util.RuntimeOptions): DescribeSlsLogStoreResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeSlsLogStore',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries information about a Logstore, such as the total capacity, storage duration, and used capacity.
 *
 * @param request DescribeSlsLogStoreRequest
 * @return DescribeSlsLogStoreResponse
 */
async function describeSlsLogStore(request: DescribeSlsLogStoreRequest): DescribeSlsLogStoreResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeSlsLogStoreWithOptions(request, runtime);
}

model DescribeSlsLogStoreStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-uqm35****02'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfmzedqv****ma'),
}

model DescribeSlsLogStoreStatusResponseBody = {
  existStatus?: boolean(name='ExistStatus', description='Indicates whether a Logstore is created for WAF. Valid values:

*   **true**
*   **false**', example='true'),
  requestId?: string(name='RequestId', description='The request ID.', example='184F538F-C115-5C89-A4EF-C79CD2E29AC7'),
}

model DescribeSlsLogStoreStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSlsLogStoreStatusResponseBody(name='body'),
}

/**
 * @summary Queries the status of a Simple Log Service Logstore.
 *
 * @param request DescribeSlsLogStoreStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeSlsLogStoreStatusResponse
 */
async function describeSlsLogStoreStatusWithOptions(request: DescribeSlsLogStoreStatusRequest, runtime: Util.RuntimeOptions): DescribeSlsLogStoreStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeSlsLogStoreStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the status of a Simple Log Service Logstore.
 *
 * @param request DescribeSlsLogStoreStatusRequest
 * @return DescribeSlsLogStoreStatusResponse
 */
async function describeSlsLogStoreStatus(request: DescribeSlsLogStoreStatusRequest): DescribeSlsLogStoreStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeSlsLogStoreStatusWithOptions(request, runtime);
}

model DescribeTemplateResourceCountRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-lbj****gx08'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-aekzwwkpn****5i'),
  templateIds?: string(name='TemplateIds', description='The IDs of the protection templates that you want to query. Separate multiple template IDs with commas (,).

This parameter is required.', example='12345,12346'),
}

model DescribeTemplateResourceCountResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='B8064433-9781-5E86-806E-C1DD****1D95'),
  resourceCount?: [ 
    {
      groupCount?: int32(name='GroupCount', description='The number of protected object groups.', example='30'),
      singleCount?: int32(name='SingleCount', description='The number of protected objects.', example='30'),
      templateId?: long(name='TemplateId', description='The ID of the protection template.', example='12345'),
    }
  ](name='ResourceCount', description='The number of protected objects or protected object groups for which the protection template takes effect.'),
}

model DescribeTemplateResourceCountResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTemplateResourceCountResponseBody(name='body'),
}

/**
 * @summary Queries the number of protected resources for which a protection template takes effect.
 *
 * @param request DescribeTemplateResourceCountRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeTemplateResourceCountResponse
 */
async function describeTemplateResourceCountWithOptions(request: DescribeTemplateResourceCountRequest, runtime: Util.RuntimeOptions): DescribeTemplateResourceCountResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateIds)) {
    query['TemplateIds'] = request.templateIds;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeTemplateResourceCount',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the number of protected resources for which a protection template takes effect.
 *
 * @param request DescribeTemplateResourceCountRequest
 * @return DescribeTemplateResourceCountResponse
 */
async function describeTemplateResourceCount(request: DescribeTemplateResourceCountRequest): DescribeTemplateResourceCountResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeTemplateResourceCountWithOptions(request, runtime);
}

model DescribeTemplateResourcesRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  resourceType?: string(name='ResourceType', description='The type of the protected resource. Valid values:

*   **single:** protected object.
*   **group:** protected object group.

This parameter is required.', example='single'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template.

This parameter is required.', example='1020'),
}

model DescribeTemplateResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='C7BC9373-3960-53B0-8968-2B13454AE18F'),
  resources?: [ string ](name='Resources', description='An array of protected objects or protected object groups that are associated to the protection rule template.'),
}

model DescribeTemplateResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTemplateResourcesResponseBody(name='body'),
}

/**
 * @summary Queries the resources that are associated to a protection rule template.
 *
 * @param request DescribeTemplateResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeTemplateResourcesResponse
 */
async function describeTemplateResourcesWithOptions(request: DescribeTemplateResourcesRequest, runtime: Util.RuntimeOptions): DescribeTemplateResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeTemplateResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the resources that are associated to a protection rule template.
 *
 * @param request DescribeTemplateResourcesRequest
 * @return DescribeTemplateResourcesResponse
 */
async function describeTemplateResources(request: DescribeTemplateResourcesRequest): DescribeTemplateResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeTemplateResourcesWithOptions(request, runtime);
}

model DescribeUserSlsLogRegionsRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-uqm2z****0a'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou:** Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeUserSlsLogRegionsResponseBody = {
  logRegions?: [ string ](name='LogRegions', description='The region IDs.'),
  requestId?: string(name='RequestId', description='The request ID.', example='9D11AC3A-A10C-56E7-A342-E87EC892****'),
}

model DescribeUserSlsLogRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserSlsLogRegionsResponseBody(name='body'),
}

/**
 * @summary Queries available regions for log storage.
 *
 * @param request DescribeUserSlsLogRegionsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeUserSlsLogRegionsResponse
 */
async function describeUserSlsLogRegionsWithOptions(request: DescribeUserSlsLogRegionsRequest, runtime: Util.RuntimeOptions): DescribeUserSlsLogRegionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeUserSlsLogRegions',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries available regions for log storage.
 *
 * @param request DescribeUserSlsLogRegionsRequest
 * @return DescribeUserSlsLogRegionsResponse
 */
async function describeUserSlsLogRegions(request: DescribeUserSlsLogRegionsRequest): DescribeUserSlsLogRegionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeUserSlsLogRegionsWithOptions(request, runtime);
}

model DescribeUserWafLogStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-nwy34****0j'),
  regionId?: string(name='RegionId', description='The region where the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeUserWafLogStatusResponseBody = {
  logRegionId?: string(name='LogRegionId', description='The ID of the region where WAF logs are stored. Valid values:

*   **cn-hangzhou**: China (Hangzhou).
*   **cn-beijing**: China (Beijing).
*   **cn-hongkong**: China (Hong Kong).
*   **ap-southeast-1**: Singapore.
*   **ap-southeast-2**: Australia (Sydney).
*   **ap-southeast-3**: Malaysia (Kuala Lumpur).
*   **ap-southeast-5**: Indonesia (Jakarta).
*   **ap-southeast-6**: Philippines (Manila).
*   **ap-southeast-7**: Thailand (Bangkok).
*   **me-east-1**: UAE (Dubai).
*   **eu-central-1**: Germany (Frankfurt).
*   **us-east-1**: US (Virginia).
*   **us-west-1**: US (Silicon Valley).
*   **ap-northeast-1**: Japan (Tokyo).
*   **ap-northeast-2**: South Korea (Seoul).
*   **ap-south-1**: India (Mumbai).
*   **eu-west-1**: UK (London).
*   **cn-hangzhou-finance**: China East 1 Finance.
*   **cn-shanghai-finance-1**: China East 2 Finance.
*   **cn-shenzhen-finance**: China South 1 Finance.

>  The China East 1 Finance, China East 2 Finance, and China South 1 Finance regions are available only for Alibaba Finance Cloud users. Alibaba Finance Cloud users are also limited to storing logs within these specific regions.', example='cn-hangzhou'),
  logStatus?: string(name='LogStatus', description='The status of WAF logs.

*   **initializing**
*   **initialize_failed**
*   **normal**
*   **releasing**
*   **release_failed**', example='normal'),
  requestId?: string(name='RequestId', description='The request ID.', example='D7861F61-5B61-46CE-A47C-6B19160D****'),
  statusUpdateTime?: long(name='StatusUpdateTime', description='The time when the log status was modified. Unit: milliseconds.', example='1706771796859'),
}

model DescribeUserWafLogStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserWafLogStatusResponseBody(name='body'),
}

/**
 * @summary Queries the status, region ID, and status modification time of Web Application Firewall (WAF) logs.
 *
 * @param request DescribeUserWafLogStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeUserWafLogStatusResponse
 */
async function describeUserWafLogStatusWithOptions(request: DescribeUserWafLogStatusRequest, runtime: Util.RuntimeOptions): DescribeUserWafLogStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeUserWafLogStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the status, region ID, and status modification time of Web Application Firewall (WAF) logs.
 *
 * @param request DescribeUserWafLogStatusRequest
 * @return DescribeUserWafLogStatusResponse
 */
async function describeUserWafLogStatus(request: DescribeUserWafLogStatusRequest): DescribeUserWafLogStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeUserWafLogStatusWithOptions(request, runtime);
}

model DescribeVisitTopIpRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeVisitTopIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='5D2B8DAE-A761-58CB-A68D-74989E4831DA'),
  topIp?: [ 
    {
      area?: string(name='Area', description='The ordinal number of the area to which the IP address belongs.', example='310000'),
      count?: long(name='Count', description='The total number of requests that are sent from the IP address.', example='2622'),
      ip?: string(name='Ip', description='The IP address.', example='1.1.XX.XX'),
      isp?: string(name='Isp', description='The ISP.', example='AAA'),
    }
  ](name='TopIp', description='The array of the top 10 IP addresses from which requests are sent.'),
}

model DescribeVisitTopIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVisitTopIpResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 IP addresses from which requests are sent.
 *
 * @param request DescribeVisitTopIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeVisitTopIpResponse
 */
async function describeVisitTopIpWithOptions(request: DescribeVisitTopIpRequest, runtime: Util.RuntimeOptions): DescribeVisitTopIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeVisitTopIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 IP addresses from which requests are sent.
 *
 * @param request DescribeVisitTopIpRequest
 * @return DescribeVisitTopIpResponse
 */
async function describeVisitTopIp(request: DescribeVisitTopIpRequest): DescribeVisitTopIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeVisitTopIpWithOptions(request, runtime);
}

model DescribeVisitUasRequest {
  endTimestamp?: string(name='EndTimestamp', description='The end of the time range to query. Unit: seconds. If you do not specify this parameter, the current time is used.', example='1665386280'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object.', example='www.aliyundoc.com'),
  startTimestamp?: string(name='StartTimestamp', description='The beginning of the time range to query. Unit: seconds.

This parameter is required.', example='1665331200'),
}

model DescribeVisitUasResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2847CE98-AFAE-5A64-B80E-60461717F9DE'),
  uas?: [ 
    {
      count?: long(name='Count', description='The number of requests that use the user agent.', example='698455'),
      ua?: string(name='Ua', description='The user agent.', example='chrome'),
    }
  ](name='Uas', description='The array of the top 10 user agents that are used to initiate requests.'),
}

model DescribeVisitUasResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVisitUasResponseBody(name='body'),
}

/**
 * @summary Queries the top 10 user agents that are used to initiate requests.
 *
 * @param request DescribeVisitUasRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeVisitUasResponse
 */
async function describeVisitUasWithOptions(request: DescribeVisitUasRequest, runtime: Util.RuntimeOptions): DescribeVisitUasResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTimestamp)) {
    query['EndTimestamp'] = request.endTimestamp;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.startTimestamp)) {
    query['StartTimestamp'] = request.startTimestamp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeVisitUas',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the top 10 user agents that are used to initiate requests.
 *
 * @param request DescribeVisitUasRequest
 * @return DescribeVisitUasResponse
 */
async function describeVisitUas(request: DescribeVisitUasRequest): DescribeVisitUasResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeVisitUasWithOptions(request, runtime);
}

model DescribeWafSourceIpSegmentRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-*****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model DescribeWafSourceIpSegmentResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='9087ADDC-9047-4D02-82A7-33021B58083C'),
  wafSourceIp?: {
    IPv4?: [ string ](name='IPv4', description='An array of back-to-origin IPv4 CIDR blocks.'),
    IPv6?: [ string ](name='IPv6', description='An array of back-to-origin IPv6 CIDR blocks.'),
  }(name='WafSourceIp', description='The back-to-origin CIDR blocks that are used by the protection cluster.'),
}

model DescribeWafSourceIpSegmentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeWafSourceIpSegmentResponseBody(name='body'),
}

/**
 * @summary Queries the back-to-origin CIDR blocks of a Web Application Firewall (WAF) instance.
 *
 * @param request DescribeWafSourceIpSegmentRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeWafSourceIpSegmentResponse
 */
async function describeWafSourceIpSegmentWithOptions(request: DescribeWafSourceIpSegmentRequest, runtime: Util.RuntimeOptions): DescribeWafSourceIpSegmentResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeWafSourceIpSegment',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the back-to-origin CIDR blocks of a Web Application Firewall (WAF) instance.
 *
 * @param request DescribeWafSourceIpSegmentRequest
 * @return DescribeWafSourceIpSegmentResponse
 */
async function describeWafSourceIpSegment(request: DescribeWafSourceIpSegmentRequest): DescribeWafSourceIpSegmentResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeWafSourceIpSegmentWithOptions(request, runtime);
}

model ListTagKeysRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.', example='waf_v3prepaid_public_cn-wwo****iw02'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0*****'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to ALIYUN::WAF::DEFENSERESOURCE.

This parameter is required.', example='ALIYUN::WAF::DEFENSERESOURCE'),
}

model ListTagKeysResponseBody = {
  keys?: [ 
    {
      category?: string(name='Category', description='The type of the tag. Valid values:

*   custom
*   system', example='custom'),
      key?: string(name='Key', description='The key of the tag.', example='demoTagKey'),
    }
  ](name='Keys', description='The keys and types of the tags.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The request ID.', example='8CB8BB88-24C7-5608-BF5E-4DCA****CF1C'),
}

model ListTagKeysResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagKeysResponseBody(name='body'),
}

/**
 * @summary Queries tag keys.
 *
 * @param request ListTagKeysRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListTagKeysResponse
 */
async function listTagKeysWithOptions(request: ListTagKeysRequest, runtime: Util.RuntimeOptions): ListTagKeysResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagKeys',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries tag keys.
 *
 * @param request ListTagKeysRequest
 * @return ListTagKeysResponse
 */
async function listTagKeys(request: ListTagKeysRequest): ListTagKeysResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagKeysWithOptions(request, runtime);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0*****'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', description='The resource IDs. You can specify up to 50 resource IDs.'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to ALIYUN::WAF::DEFENSERESOURCE.

This parameter is required.', example='ALIYUN::WAF::DEFENSERESOURCE'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N that is added to the resource. Valid values of N: 1 to 20.', example='Tagkey1'),
      value?: string(name='Value', description='The value of tag N that is added to the resource. Valid values of N: 1 to 20.', example='TagValue1'),
    }
  ](name='Tag', description='The tags that are added to the resource.'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The request ID.', example='716E64DA-044F-51C7-B528-2FBF****AE4F'),
  tagResources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The resource ID.', example='c754d2a4-28f1-46df-b557-9586173a****'),
      resourceType?: string(name='ResourceType', description='The type of the resource. ALIYUN::WAF::DEFENSERESOURCE is returned.', example='ALIYUN::WAF::DEFENSERESOURCE'),
      tagKey?: string(name='TagKey', description='The key of tag N that is added to the resource.', example='TagKey1'),
      tagValue?: string(name='TagValue', description='The value of tag N that is added to the resource.', example='TayValue1'),
    }
  ](name='TagResources', description='The list of resources.'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

/**
 * @summary Queries the tags that are added to a resource.
 *
 * @param request ListTagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListTagResourcesResponse
 */
async function listTagResourcesWithOptions(request: ListTagResourcesRequest, runtime: Util.RuntimeOptions): ListTagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the tags that are added to a resource.
 *
 * @param request ListTagResourcesRequest
 * @return ListTagResourcesResponse
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagResourcesWithOptions(request, runtime);
}

model ListTagValuesRequest {
  key?: string(name='Key', description='The tag key.

This parameter is required.', example='demoKey'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0*****'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to ALIYUN::WAF::DEFENSERESOURCE.

This parameter is required.', example='ALIYUN::WAF::DEFENSERESOURCE'),
}

model ListTagValuesResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0*****'),
  requestId?: string(name='RequestId', description='The request ID.', example='705114BB-EAEF-5CC4-8837-F1D4****BB5B'),
  values?: [ string ](name='Values', description='The tag values.'),
}

model ListTagValuesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagValuesResponseBody(name='body'),
}

/**
 * @summary Queries the tag values of a tag key.
 *
 * @param request ListTagValuesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListTagValuesResponse
 */
async function listTagValuesWithOptions(request: ListTagValuesRequest, runtime: Util.RuntimeOptions): ListTagValuesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.key)) {
    query['Key'] = request.key;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagValues',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the tag values of a tag key.
 *
 * @param request ListTagValuesRequest
 * @return ListTagValuesResponse
 */
async function listTagValues(request: ListTagValuesRequest): ListTagValuesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagValuesWithOptions(request, runtime);
}

model ModifyApisecLogDeliveryRequest {
  assertKey?: string(name='AssertKey', description='This parameter is required.', example='risk'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v3_public_cn-uqm2z****0a'),
  logRegionId?: string(name='LogRegionId', description='This parameter is required.', example='cn-hangzhou'),
  logStoreName?: string(name='LogStoreName', description='This parameter is required.', example='apisec-logstore***'),
  projectName?: string(name='ProjectName', description='This parameter is required.', example='apisec-project-14316572********'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model ModifyApisecLogDeliveryResponseBody = {
  requestId?: string(name='RequestId', example='F35F45B0-5D6B-4238-BE02-A62D****E840'),
}

model ModifyApisecLogDeliveryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyApisecLogDeliveryResponseBody(name='body'),
}

/**
 * @summary 修改API安全日志订阅
 *
 * @param request ModifyApisecLogDeliveryRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyApisecLogDeliveryResponse
 */
async function modifyApisecLogDeliveryWithOptions(request: ModifyApisecLogDeliveryRequest, runtime: Util.RuntimeOptions): ModifyApisecLogDeliveryResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.assertKey)) {
    query['AssertKey'] = request.assertKey;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.logRegionId)) {
    query['LogRegionId'] = request.logRegionId;
  }
  if (!Util.isUnset(request.logStoreName)) {
    query['LogStoreName'] = request.logStoreName;
  }
  if (!Util.isUnset(request.projectName)) {
    query['ProjectName'] = request.projectName;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyApisecLogDelivery',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 修改API安全日志订阅
 *
 * @param request ModifyApisecLogDeliveryRequest
 * @return ModifyApisecLogDeliveryResponse
 */
async function modifyApisecLogDelivery(request: ModifyApisecLogDeliveryRequest): ModifyApisecLogDeliveryResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyApisecLogDeliveryWithOptions(request, runtime);
}

model ModifyApisecLogDeliveryStatusRequest {
  assertKey?: string(name='AssertKey', description='This parameter is required.', example='risk'),
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf_v3_public_cn-uqm2z****0a'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
  status?: boolean(name='Status', description='This parameter is required.', example='true'),
}

model ModifyApisecLogDeliveryStatusResponseBody = {
  requestId?: string(name='RequestId', example='F35F45B0-5D6B-4238-BE02-A62D****E840'),
}

model ModifyApisecLogDeliveryStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyApisecLogDeliveryStatusResponseBody(name='body'),
}

/**
 * @summary 修改API安全日志订阅状态
 *
 * @param request ModifyApisecLogDeliveryStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyApisecLogDeliveryStatusResponse
 */
async function modifyApisecLogDeliveryStatusWithOptions(request: ModifyApisecLogDeliveryStatusRequest, runtime: Util.RuntimeOptions): ModifyApisecLogDeliveryStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.assertKey)) {
    query['AssertKey'] = request.assertKey;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.status)) {
    query['Status'] = request.status;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyApisecLogDeliveryStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 修改API安全日志订阅状态
 *
 * @param request ModifyApisecLogDeliveryStatusRequest
 * @return ModifyApisecLogDeliveryStatusResponse
 */
async function modifyApisecLogDeliveryStatus(request: ModifyApisecLogDeliveryStatusRequest): ModifyApisecLogDeliveryStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyApisecLogDeliveryStatusWithOptions(request, runtime);
}

model ModifyDefenseResourceGroupRequest {
  addList?: string(name='AddList', description='The protected objects that you want to add to the protected object group. Separate the protected objects with commas (,). If you leave this parameter empty, no protected objects are added to the protected object group.', example='test1.aliyundoc.com,test2.aliyundoc.com'),
  deleteList?: string(name='DeleteList', description='The protected objects that you want to remove from the protected object group. Separate the protected objects with commas (,). If you leave this parameter empty, no protected objects are removed from the protected object group.', example='test14.waf.com,test24.waf.com'),
  description?: string(name='Description', description='The description of the protected object group.', example='test'),
  groupName?: string(name='GroupName', description='The name of the protected object group whose configurations you want to modify.

This parameter is required.', example='test01'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
}

model ModifyDefenseResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2CC1AFDE-BB31-5A2F-906E-92FCBDDE6B75'),
}

model ModifyDefenseResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseResourceGroupResponseBody(name='body'),
}

/**
 * @summary Modifies the configurations of a protected object group.
 *
 * @param request ModifyDefenseResourceGroupRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseResourceGroupResponse
 */
async function modifyDefenseResourceGroupWithOptions(request: ModifyDefenseResourceGroupRequest, runtime: Util.RuntimeOptions): ModifyDefenseResourceGroupResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.addList)) {
    query['AddList'] = request.addList;
  }
  if (!Util.isUnset(request.deleteList)) {
    query['DeleteList'] = request.deleteList;
  }
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.groupName)) {
    query['GroupName'] = request.groupName;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseResourceGroup',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the configurations of a protected object group.
 *
 * @param request ModifyDefenseResourceGroupRequest
 * @return ModifyDefenseResourceGroupResponse
 */
async function modifyDefenseResourceGroup(request: ModifyDefenseResourceGroupRequest): ModifyDefenseResourceGroupResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseResourceGroupWithOptions(request, runtime);
}

model ModifyDefenseResourceXffRequest {
  acwCookieStatus?: int32(name='AcwCookieStatus', description='The status of the tracking cookie.

*   **0**: disabled
*   **1**: enabled. This is the default value.', example='0'),
  acwSecureStatus?: int32(name='AcwSecureStatus', description='The status of the secure attribute of the tracking cookie.

*   **0**: disabled. This is the default value.
*   **1**: enabled.', example='0'),
  acwV3SecureStatus?: int32(name='AcwV3SecureStatus', description='The status of the secure attribute of the slider CAPTCHA cookie.

*   **0**: disabled. This is the default value.
*   **1**: enabled.', example='0'),
  customHeaders?: [ string ](name='CustomHeaders', description='The custom header fields.

>  The first IP address in the specified custom header field is used as the originating IP address of the client to prevent X-Forwarded-For forgery. If you specify multiple header fields, WAF reads the values of the header fields in sequence until the originating IP address is obtained. If the originating IP address cannot be obtained, the first IP address in the X-Forwarded-For header is used as the originating IP address of the client.'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-wwo3c****07'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The name of the protected object.

This parameter is required.', example='alb-4pxu81fgagx3****mz-alb'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm2kie2****wq'),
  xffStatus?: int32(name='XffStatus', description='Specifies whether a Layer 7 proxy is deployed in front of WAF. Layer 7 proxies include Anti-DDoS Proxy and Alibaba Cloud CDN. Valid values:

*   **0**: No Layer 7 proxies are deployed. This is the default value.
*   **1**: A Layer 7 proxy is deployed.

This parameter is required.', example='0'),
}

model ModifyDefenseResourceXffResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='6C094583-9B3F-5BD8-8748-DC638E****BF'),
}

model ModifyDefenseResourceXffResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseResourceXffResponseBody(name='body'),
}

/**
 * @summary Modifies the cookie settings of a protected object and the method to identify the originating IP addresses of clients.
 *
 * @param request ModifyDefenseResourceXffRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseResourceXffResponse
 */
async function modifyDefenseResourceXffWithOptions(request: ModifyDefenseResourceXffRequest, runtime: Util.RuntimeOptions): ModifyDefenseResourceXffResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.acwCookieStatus)) {
    query['AcwCookieStatus'] = request.acwCookieStatus;
  }
  if (!Util.isUnset(request.acwSecureStatus)) {
    query['AcwSecureStatus'] = request.acwSecureStatus;
  }
  if (!Util.isUnset(request.acwV3SecureStatus)) {
    query['AcwV3SecureStatus'] = request.acwV3SecureStatus;
  }
  if (!Util.isUnset(request.customHeaders)) {
    query['CustomHeaders'] = request.customHeaders;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.xffStatus)) {
    query['XffStatus'] = request.xffStatus;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseResourceXff',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the cookie settings of a protected object and the method to identify the originating IP addresses of clients.
 *
 * @param request ModifyDefenseResourceXffRequest
 * @return ModifyDefenseResourceXffResponse
 */
async function modifyDefenseResourceXff(request: ModifyDefenseResourceXffRequest): ModifyDefenseResourceXffResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseResourceXffWithOptions(request, runtime);
}

model ModifyDefenseRuleRequest {
  defenseScene?: string(name='DefenseScene', description='The scenario in which you want to use the protection rule. For more information, see the description of the **DefenseScene** parameter in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.

This parameter is required.', example='waf_group'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  rules?: string(name='Rules', description='The details of the protection rule. Specify a string that contains multiple parameters in the JSON format. You must specify the ID and the new configurations of the protection rule.

*   **id:** The ID of the protection rule. Data type: long. You must specify this parameter.
*   The protection rule configurations: The role of this parameter is the same as that of the **Rules** parameter in the **CreateDefenseRule** topic. For more information, see the "**Protection rule parameters**" section in the [CreateDefenseRule](~~CreateDefenseRule~~) topic.

This parameter is required.', example='[{"id":2344,"policyId":1012,"action":"block"}]'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template to which the protection rule whose configurations you want to modify belongs.

This parameter is required.', example='5325'),
}

model ModifyDefenseRuleResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='1EEA9C98-F166-54FE-ADE3-08D8****BDFA'),
}

model ModifyDefenseRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseRuleResponseBody(name='body'),
}

/**
 * @summary Modifies the configurations of a protection rule.
 *
 * @param request ModifyDefenseRuleRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseRuleResponse
 */
async function modifyDefenseRuleWithOptions(request: ModifyDefenseRuleRequest, runtime: Util.RuntimeOptions): ModifyDefenseRuleResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.defenseScene)) {
    query['DefenseScene'] = request.defenseScene;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.rules)) {
    query['Rules'] = request.rules;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseRule',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the configurations of a protection rule.
 *
 * @param request ModifyDefenseRuleRequest
 * @return ModifyDefenseRuleResponse
 */
async function modifyDefenseRule(request: ModifyDefenseRuleRequest): ModifyDefenseRuleResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseRuleWithOptions(request, runtime);
}

model ModifyDefenseRuleCacheRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-zvp****xm2r'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the protection rule.

This parameter is required.', example='12345678'),
  templateId?: long(name='TemplateId', description='The ID of the protection template.

This parameter is required.', example='12345'),
}

model ModifyDefenseRuleCacheResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='A0F2B994-8645-5270-A05D-9DAD8C****B6'),
}

model ModifyDefenseRuleCacheResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseRuleCacheResponseBody(name='body'),
}

/**
 * @summary Updates the cached page of a website that is protected based on a website tamper-proofing rule.
 *
 * @param request ModifyDefenseRuleCacheRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseRuleCacheResponse
 */
async function modifyDefenseRuleCacheWithOptions(request: ModifyDefenseRuleCacheRequest, runtime: Util.RuntimeOptions): ModifyDefenseRuleCacheResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseRuleCache',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Updates the cached page of a website that is protected based on a website tamper-proofing rule.
 *
 * @param request ModifyDefenseRuleCacheRequest
 * @return ModifyDefenseRuleCacheResponse
 */
async function modifyDefenseRuleCache(request: ModifyDefenseRuleCacheRequest): ModifyDefenseRuleCacheResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseRuleCacheWithOptions(request, runtime);
}

model ModifyDefenseRuleStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the protection rule whose status you want to change.

This parameter is required.', example='20002615'),
  ruleStatus?: int32(name='RuleStatus', description='The new status of the protection rule. Valid values:

*   **0:** disabled.
*   **1:** enabled.

This parameter is required.', example='1'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template to which the protection rule whose status you want to change belongs.

This parameter is required.', example='7239'),
}

model ModifyDefenseRuleStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='BB305BF3-3C71-57A9-9704-E22F567689B0'),
}

model ModifyDefenseRuleStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseRuleStatusResponseBody(name='body'),
}

/**
 * @summary Changes the status of a protection rule.
 *
 * @param request ModifyDefenseRuleStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseRuleStatusResponse
 */
async function modifyDefenseRuleStatusWithOptions(request: ModifyDefenseRuleStatusRequest, runtime: Util.RuntimeOptions): ModifyDefenseRuleStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.ruleStatus)) {
    query['RuleStatus'] = request.ruleStatus;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseRuleStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Changes the status of a protection rule.
 *
 * @param request ModifyDefenseRuleStatusRequest
 * @return ModifyDefenseRuleStatusResponse
 */
async function modifyDefenseRuleStatus(request: ModifyDefenseRuleStatusRequest): ModifyDefenseRuleStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseRuleStatusWithOptions(request, runtime);
}

model ModifyDefenseTemplateRequest {
  description?: string(name='Description', description='The description of the protection rule template whose configurations you want to modify.', example='test'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template whose configurations you want to modify.

This parameter is required.', example='7392'),
  templateName?: string(name='TemplateName', description='The name of the protection rule template whose configurations you want to modify.

This parameter is required.', example='test'),
}

model ModifyDefenseTemplateResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='1A68C85D-7467-5BB1-9A7E-2E8A5D96D88A'),
}

model ModifyDefenseTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseTemplateResponseBody(name='body'),
}

/**
 * @summary Modifies the configurations of a protection rule template.
 *
 * @param request ModifyDefenseTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseTemplateResponse
 */
async function modifyDefenseTemplateWithOptions(request: ModifyDefenseTemplateRequest, runtime: Util.RuntimeOptions): ModifyDefenseTemplateResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  if (!Util.isUnset(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseTemplate',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the configurations of a protection rule template.
 *
 * @param request ModifyDefenseTemplateRequest
 * @return ModifyDefenseTemplateResponse
 */
async function modifyDefenseTemplate(request: ModifyDefenseTemplateRequest): ModifyDefenseTemplateResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseTemplateWithOptions(request, runtime);
}

model ModifyDefenseTemplateStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template whose status you want to change.

This parameter is required.', example='2249'),
  templateStatus?: int32(name='TemplateStatus', description='The new status of the protection rule template. Valid values:

*   **0:** disabled.
*   **1:** enabled.

This parameter is required.', example='1'),
}

model ModifyDefenseTemplateStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='58007AE3-65D9-57BA-ABB4-1A544015FB50'),
}

model ModifyDefenseTemplateStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDefenseTemplateStatusResponseBody(name='body'),
}

/**
 * @summary Changes the status of a protection rule template.
 *
 * @param request ModifyDefenseTemplateStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDefenseTemplateStatusResponse
 */
async function modifyDefenseTemplateStatusWithOptions(request: ModifyDefenseTemplateStatusRequest, runtime: Util.RuntimeOptions): ModifyDefenseTemplateStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  if (!Util.isUnset(request.templateStatus)) {
    query['TemplateStatus'] = request.templateStatus;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDefenseTemplateStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Changes the status of a protection rule template.
 *
 * @param request ModifyDefenseTemplateStatusRequest
 * @return ModifyDefenseTemplateStatusResponse
 */
async function modifyDefenseTemplateStatus(request: ModifyDefenseTemplateStatusRequest): ModifyDefenseTemplateStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDefenseTemplateStatusWithOptions(request, runtime);
}

model ModifyDomainRequest {
  accessType?: string(name='AccessType', description='The mode in which you want to add the domain name to WAF. Set the value to share.

*   **share:** adds the domain name to WAF in CNAME record mode. This is the default value.', example='share'),
  domain?: string(name='Domain', description='The domain name whose access configurations you want to modify.

This parameter is required.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  listen?: {
    certId?: string(name='CertId', description='The ID of the certificate that you want to add.', example='123'),
    cipherSuite?: int32(name='CipherSuite', description='The type of cipher suite that you want to add. This parameter is available only when you specify the **HttpsPorts** parameter. Valid values:

*   **1:** all cipher suites.
*   **2:** strong cipher suites. You can select this value only when you set the **TLSVersion** parameter to **tlsv1.2**.
*   **99:** custom cipher suites.', example='2'),
    customCiphers?: [ string ](name='CustomCiphers', description='The custom cipher suites that you want to add. This parameter is available only when you set the **CipherSuite** parameter to **99**.'),
    enableTLSv3?: boolean(name='EnableTLSv3', description='Specifies whether to support TLS 1.3. This parameter is available only when you specify the **HttpsPorts** parameter. Valid values:

*   **true:** supports TLS 1.3.
*   **false:** does not support TLS 1.3.', example='true'),
    exclusiveIp?: boolean(name='ExclusiveIp', description='Specifies whether to enable an exclusive IP address for the domain name. This parameter is available only when you set the **IPv6Enabled** parameter to false and the **ProtectionResource** parameter to **share**. Valid values:

*   **true:** enables an exclusive IP address for the domain name.
*   **false:** does not enable an exclusive IP address for the domain name. This is the default value.', example='true'),
    focusHttps?: boolean(name='FocusHttps', description='Specifies whether to enable HTTP to HTTPS redirection for the domain name. This parameter is available only when you specify the **HttpsPorts** parameter and leave the **HttpPorts** parameter empty. Valid values:

*   **true:** enables HTTP to HTTPS redirection.
*   **false:** disables HTTP to HTTPS redirection.', example='true'),
    http2Enabled?: boolean(name='Http2Enabled', description='Specifies whether to enable HTTP/2. This parameter is available only when you specify the **HttpsPorts** parameter. Valid values:

*   **true:** enables HTTP/2.
*   **false:** disables HTTP/2. This is the default value.', example='true'),
    httpPorts?: [ int32 ](name='HttpPorts', description='An array of HTTP listener ports. Specify the value of this parameter in the [port1,port2,...] format.'),
    httpsPorts?: [ int32 ](name='HttpsPorts', description='An array of HTTPS listener ports. Specify the value of this parameter in the [port1,port2,...] format.'),
    IPv6Enabled?: boolean(name='IPv6Enabled', description='Specifies whether to enable IPv6. Valid values:

*   **true:** enables IPv6.
*   **false:** disables IPv6. This is the default value.', example='true'),
    protectionResource?: string(name='ProtectionResource', description='The type of the protection resource that you want to use. Valid values:

*   **share:** shared cluster. This is the default value.
*   **gslb:** shared cluster-based intelligent load balancing.', example='share'),
    SM2AccessOnly?: boolean(name='SM2AccessOnly', description='Specifies whether to allow access only from SM certificate-based clients. This parameter is available only if you set SM2Enabled to true.

*   true
*   false', example='true'),
    SM2CertId?: string(name='SM2CertId', description='The ID of the SM certificate that you want to add. This parameter is available only if you set SM2Enabled to true.', example='123-cn-hangzhou'),
    SM2Enabled?: boolean(name='SM2Enabled', description='Indicates whether SM certificate-based verification is enabled. Valid values:

*   **true**
*   **false**', example='true'),
    TLSVersion?: string(name='TLSVersion', description='The version of the Transport Layer Security (TLS) protocol. This parameter is available only when you specify the **HttpsPorts** parameter. Valid values:

*   **tlsv1**
*   **tlsv1.1**
*   **tlsv1.2**', example='tlsv1'),
    xffHeaderMode?: int32(name='XffHeaderMode', description='The method that you want WAF to use to obtain the actual IP address of a client. Valid values:

*   **0:** No Layer 7 proxies are deployed in front of WAF. This is the default value.
*   **1:** WAF reads the first value of the X-Forwarded-For (XFF) header field as the actual IP address of the client.
*   **2:** WAF reads the value of a custom header field as the actual IP address of the client.', example='2'),
    xffHeaders?: [ string ](name='XffHeaders', description='The custom header fields that you want to use to obtain the actual IP address of a client. Specify the value of this parameter in the ["header1","header2",...] format.

>  If you set the **XffHeaderMode** parameter to 2, this parameter is required.'),
  }(name='Listen', description='The configurations of the listeners.

This parameter is required.'),
  redirect?: {
    backends?: [ string ](name='Backends', description='The IP addresses or domain names of the origin server. You can use only one of the address types. If you use the domain name type, the domain name can be resolved only to an IPv4 address.

*   If you use the IP address type, specify the value in the ["ip1","ip2",...] format. You can enter up to 20 IP addresses.
*   If you use the domain name type, specify the value in the ["domain"] format. You can enter up to 20 domain names.'),
    cnameEnabled?: boolean(name='CnameEnabled', description='Specifies whether to enable the public cloud disaster recovery feature. Valid values:

*   **true**
*   **false** (default)', example='true'),
    connectTimeout?: int32(name='ConnectTimeout', description='The timeout period for connections. Unit: seconds. Valid values: 1 to 3600.', example='120'),
    focusHttpBackend?: boolean(name='FocusHttpBackend', description='Specifies whether to enable HTTPS to HTTP redirection for back-to-origin requests. This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false**', example='true'),
    keepalive?: boolean(name='Keepalive', description='Specifies whether to enable the persistent connection feature. Valid values:

*   **true** (default)
*   **false**', example='true'),
    keepaliveRequests?: int32(name='KeepaliveRequests', description='The number of reused persistent connections. Valid values: 60 to 1000.

>  This parameter specifies the number of reused persistent connections after you enable the persistent connection feature.', example='1000'),
    keepaliveTimeout?: int32(name='KeepaliveTimeout', description='The timeout period for idle persistent connections. Valid values: 1 to 60. Default value: 15. Unit: seconds.

>  This parameter specifies the time for which a reused persistent connection can remain in the Idle state before the persistent connection is released.', example='15'),
    loadbalance?: string(name='Loadbalance', description='The load balancing algorithm that you want to use to forward requests to the origin server. Valid values:

*   **ip_hash**
*   **roundRobin**
*   **leastTime** You can set the parameter to this value only if you set **ProtectionResource** to **gslb**.

This parameter is required.', example='iphash'),
    readTimeout?: int32(name='ReadTimeout', description='The timeout period for read connections. Unit: seconds. Valid values: 1 to 3600.', example='200'),
    requestHeaders?: [ 
      {
        key?: string(name='Key', description='The key of the custom header field.', example='aaa'),
        value?: string(name='Value', description='The value of the custom header field.', example='bbb'),
      }
    ](name='RequestHeaders', description='The custom header field that you want to use to label requests that are processed by WAF.

When a request passes through WAF, the custom header field is automatically used to label the request. This way, the backend service can identify requests that are processed by WAF.'),
    retry?: boolean(name='Retry', description='Specifies whether WAF retries forwarding requests to the origin server when the requests fail to be forwarded to the origin server. Valid values:

*   **true** (default)
*   **false**', example='true'),
    routingRules?: string(name='RoutingRules', description='The forwarding rules that you want to configure for the domain name that you want to add to WAF in hybrid cloud mode. This parameter is a string that consists of JSON arrays. Each element in a JSON array is a JSON struct that contains the following fields:

*   **rs**: the back-to-origin IP addresses or CNAMEs. The value must be of the ARRAY type.
*   **location**: the name of the protection node. The value must be of the STRING type.
*   **locationId**: the ID of the protection node. The value must be of the LONG type.', example='[
      {
            "rs": [
                  "1.1.XX.XX"
            ],
            "locationId": 535,
            "location": "test1111"
      }
]'),
    sniEnabled?: boolean(name='SniEnabled', description='Specifies whether to enable origin Server Name Indication (SNI). This parameter is available only if you specify **HttpsPorts**. Valid values:

*   **true**
*   **false** (default)', example='true'),
    sniHost?: string(name='SniHost', description='The value of the SNI field. If you do not specify this parameter, the value of the **Host** field is automatically used. This parameter is optional. If you want WAF to use an SNI field value that is different from the Host field value in back-to-origin requests, you can specify a custom value for the SNI field.

>  This parameter is required only if you set **SniEnalbed** to xxx.', example='www.aliyundoc.com'),
    writeTimeout?: int32(name='WriteTimeout', description='The timeout period for write connections. Unit: seconds. Valid values: 1 to 3600.', example='200'),
    xffProto?: boolean(name='XffProto', description='Specifies whether to use the X-Forward-For-Proto header to identify the protocol used by WAF to forward requests to the origin server. Valid values:

*   **true** (default)
*   **false**', example='true'),
  }(name='Redirect', description='The configurations of the forwarding rule.

This parameter is required.'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
}

model ModifyDomainShrinkRequest {
  accessType?: string(name='AccessType', description='The mode in which you want to add the domain name to WAF. Set the value to share.

*   **share:** adds the domain name to WAF in CNAME record mode. This is the default value.', example='share'),
  domain?: string(name='Domain', description='The domain name whose access configurations you want to modify.

This parameter is required.', example='www.aliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  listenShrink?: string(name='Listen', description='The configurations of the listeners.

This parameter is required.'),
  redirectShrink?: string(name='Redirect', description='The configurations of the forwarding rule.

This parameter is required.'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
}

model ModifyDomainResponseBody = {
  domainInfo?: {
    cname?: string(name='Cname', description='The CNAME that is assigned by WAF to the domain name.', example='xxxxxcvdaf.****.com'),
    domain?: string(name='Domain', description='The domain name whose access configurations you modified.', example='www.aliyundoc.com'),
    domainId?: string(name='DomainId', description='The ID of the domain name.', example='www.aliyundoc.com-waf'),
  }(name='DomainInfo', description='The information about the domain name.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D5EB0'),
}

model ModifyDomainResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDomainResponseBody(name='body'),
}

/**
 * @summary Modifies the configurations of a domain name that is added to Web Application Firewall (WAF) in CNAME record mode.
 *
 * @param tmpReq ModifyDomainRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDomainResponse
 */
async function modifyDomainWithOptions(tmpReq: ModifyDomainRequest, runtime: Util.RuntimeOptions): ModifyDomainResponse {
  Util.validateModel(tmpReq);
  var request = new ModifyDomainShrinkRequest{};
  OpenApiUtil.convert(tmpReq, request);
  if (!Util.isUnset(tmpReq.listen)) {
    request.listenShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.listen, 'Listen', 'json');
  }
  if (!Util.isUnset(tmpReq.redirect)) {
    request.redirectShrink = OpenApiUtil.arrayToStringWithSpecifiedStyle(tmpReq.redirect, 'Redirect', 'json');
  }
  var query = {};
  if (!Util.isUnset(request.accessType)) {
    query['AccessType'] = request.accessType;
  }
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.listenShrink)) {
    query['Listen'] = request.listenShrink;
  }
  if (!Util.isUnset(request.redirectShrink)) {
    query['Redirect'] = request.redirectShrink;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDomain',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the configurations of a domain name that is added to Web Application Firewall (WAF) in CNAME record mode.
 *
 * @param request ModifyDomainRequest
 * @return ModifyDomainResponse
 */
async function modifyDomain(request: ModifyDomainRequest): ModifyDomainResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDomainWithOptions(request, runtime);
}

model ModifyDomainPunishStatusRequest {
  domain?: string(name='Domain', description='The domain name that is penalized for failing to obtain an ICP filing.

This parameter is required.', example='demo.xxxxaliyundoc.com'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

> You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v2_public_cn-zxu****0g02'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
}

model ModifyDomainPunishStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='70E65A35-22B8-567C-B0A0-A2E9****20AE'),
}

model ModifyDomainPunishStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDomainPunishStatusResponseBody(name='body'),
}

/**
 * @summary Re-adds a domain name that is penalized for failing to obtain an Internet Content Provider (ICP) filing to Web Application Firewall (WAF).
 *
 * @param request ModifyDomainPunishStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyDomainPunishStatusResponse
 */
async function modifyDomainPunishStatusWithOptions(request: ModifyDomainPunishStatusRequest, runtime: Util.RuntimeOptions): ModifyDomainPunishStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.domain)) {
    query['Domain'] = request.domain;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyDomainPunishStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Re-adds a domain name that is penalized for failing to obtain an Internet Content Provider (ICP) filing to Web Application Firewall (WAF).
 *
 * @param request ModifyDomainPunishStatusRequest
 * @return ModifyDomainPunishStatusResponse
 */
async function modifyDomainPunishStatus(request: ModifyDomainPunishStatusRequest): ModifyDomainPunishStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyDomainPunishStatusWithOptions(request, runtime);
}

model ModifyHybridCloudClusterBypassStatusRequest {
  clusterResourceId?: string(name='ClusterResourceId', description='The ID of the hybrid cloud cluster.

This parameter is required.', example='hdbc_cluster_****'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

**

**You can call the **DescribeInstanceInfo[ operation to obtain the ID of the WAF instance.](https://help.aliyun.com/document_detail/140857.html)

This parameter is required.', example='waf_elasticity-cn-0xldbqt****'),
  ruleStatus?: string(name='RuleStatus', description='The status of manual bypass. Valid values:

*   **on**: enabled.
*   **off**: disabled. This is the default value.

This parameter is required.', example='on'),
}

model ModifyHybridCloudClusterBypassStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19160D5EB0'),
}

model ModifyHybridCloudClusterBypassStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyHybridCloudClusterBypassStatusResponseBody(name='body'),
}

/**
 * @summary Enables or disables manual bypass for a hybrid cloud cluster of the SDK-based traffic mirroring mode.
 *
 * @param request ModifyHybridCloudClusterBypassStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyHybridCloudClusterBypassStatusResponse
 */
async function modifyHybridCloudClusterBypassStatusWithOptions(request: ModifyHybridCloudClusterBypassStatusRequest, runtime: Util.RuntimeOptions): ModifyHybridCloudClusterBypassStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.clusterResourceId)) {
    query['ClusterResourceId'] = request.clusterResourceId;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ruleStatus)) {
    query['RuleStatus'] = request.ruleStatus;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyHybridCloudClusterBypassStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Enables or disables manual bypass for a hybrid cloud cluster of the SDK-based traffic mirroring mode.
 *
 * @param request ModifyHybridCloudClusterBypassStatusRequest
 * @return ModifyHybridCloudClusterBypassStatusResponse
 */
async function modifyHybridCloudClusterBypassStatus(request: ModifyHybridCloudClusterBypassStatusRequest): ModifyHybridCloudClusterBypassStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyHybridCloudClusterBypassStatusWithOptions(request, runtime);
}

model ModifyMajorProtectionBlackIpRequest {
  description?: string(name='Description', description='The description of the IP address blacklist.', example='test'),
  expiredTime?: long(name='ExpiredTime', description='The time after which the IP address blacklist becomes invalid. Unit: seconds.

>  If you set this parameter to **0**, the blacklist is permanently valid.

This parameter is required.', example='1662603328'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  ipList?: string(name='IpList', description='The IP addresses that you want to add to the IP address blacklist. You can specify multiple CIDR blocks or IP addresses. IPv4 and IPv6 addresses are supported. Separate the CIDR blocks or IP addresses with commas (,). For more information, see [Protection for major events](https://help.aliyun.com/document_detail/425591.html).

This parameter is required.', example='12.XX.XX.2,3.XX.XX.3/24'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  ruleId?: long(name='RuleId', description='The ID of the IP address blacklist rule for major event protection.

This parameter is required.', example='20012033'),
  templateId?: long(name='TemplateId', description='The ID of the IP address blacklist rule template for major event protection.

This parameter is required.', example='5132'),
}

model ModifyMajorProtectionBlackIpResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='66A98669-CC6E-4F3E-80A6-3014697B11AE'),
}

model ModifyMajorProtectionBlackIpResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyMajorProtectionBlackIpResponseBody(name='body'),
}

/**
 * @summary Modifies an IP address blacklist for major event protection.
 *
 * @param request ModifyMajorProtectionBlackIpRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyMajorProtectionBlackIpResponse
 */
async function modifyMajorProtectionBlackIpWithOptions(request: ModifyMajorProtectionBlackIpRequest, runtime: Util.RuntimeOptions): ModifyMajorProtectionBlackIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.expiredTime)) {
    query['ExpiredTime'] = request.expiredTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipList)) {
    query['IpList'] = request.ipList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.ruleId)) {
    query['RuleId'] = request.ruleId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyMajorProtectionBlackIp',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies an IP address blacklist for major event protection.
 *
 * @param request ModifyMajorProtectionBlackIpRequest
 * @return ModifyMajorProtectionBlackIpResponse
 */
async function modifyMajorProtectionBlackIp(request: ModifyMajorProtectionBlackIpRequest): ModifyMajorProtectionBlackIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyMajorProtectionBlackIpWithOptions(request, runtime);
}

model ModifyMemberAccountRequest {
  description?: string(name='Description', description='The description of the member. The description must be 1 to 256 characters in length, and can contain letters, digits, periods (.), underscores (_), hyphens (-), and asterisks (\\\\*).

This parameter is required.', example='account1'),
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_elasticity**-*******021'),
  memberAccountId?: string(name='MemberAccountId', description='The Alibaba Cloud account ID of the managed member.

This parameter is required.', example='131**********39'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  sourceIp?: string(name='SourceIp', description='The source IP address of the request. The system automatically obtains the value of this parameter.', example='0.0.XX.XX'),
}

model ModifyMemberAccountResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7861F61-5B61-46CE-A47C-6B19****5EB0'),
}

model ModifyMemberAccountResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyMemberAccountResponseBody(name='body'),
}

/**
 * @summary Modifies the information about members that are added for multi-account management.
 *
 * @param request ModifyMemberAccountRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyMemberAccountResponse
 */
async function modifyMemberAccountWithOptions(request: ModifyMemberAccountRequest, runtime: Util.RuntimeOptions): ModifyMemberAccountResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.description)) {
    query['Description'] = request.description;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.memberAccountId)) {
    query['MemberAccountId'] = request.memberAccountId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.sourceIp)) {
    query['SourceIp'] = request.sourceIp;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyMemberAccount',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Modifies the information about members that are added for multi-account management.
 *
 * @param request ModifyMemberAccountRequest
 * @return ModifyMemberAccountResponse
 */
async function modifyMemberAccount(request: ModifyMemberAccountRequest): ModifyMemberAccountResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyMemberAccountWithOptions(request, runtime);
}

model ModifyPauseProtectionStatusRequest {
  instanceId?: string(name='InstanceId', description='This parameter is required.', example='waf-cn-tl32ast****'),
  pauseStatus?: int32(name='PauseStatus', description='This parameter is required.', example='0'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', example='rg-acfm***q'),
}

model ModifyPauseProtectionStatusResponseBody = {
  requestId?: string(name='RequestId', example='D7861F61-*****-******-D5EB0'),
}

model ModifyPauseProtectionStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyPauseProtectionStatusResponseBody(name='body'),
}

/**
 * @summary 修改用户暂停防护状态
 *
 * @param request ModifyPauseProtectionStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyPauseProtectionStatusResponse
 */
async function modifyPauseProtectionStatusWithOptions(request: ModifyPauseProtectionStatusRequest, runtime: Util.RuntimeOptions): ModifyPauseProtectionStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.pauseStatus)) {
    query['PauseStatus'] = request.pauseStatus;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyPauseProtectionStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 修改用户暂停防护状态
 *
 * @param request ModifyPauseProtectionStatusRequest
 * @return ModifyPauseProtectionStatusResponse
 */
async function modifyPauseProtectionStatus(request: ModifyPauseProtectionStatusRequest): ModifyPauseProtectionStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyPauseProtectionStatusWithOptions(request, runtime);
}

model ModifyResourceLogStatusRequest {
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf-cn-zz11zcl****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resource?: string(name='Resource', description='The protected object on which you want to manage the log collection feature.

This parameter is required.', example='alb-wewbb23dfsetetcic1242-0****'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the resource group.', example='rg-acfm***q'),
  status?: boolean(name='Status', description='Specifies whether to enable the log collection feature for the protected object. Valid values:

*   **true:** enables the log collection feature.
*   **false:** disables the log collection feature.

This parameter is required.', example='true'),
}

model ModifyResourceLogStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='7C55A3E5-638A-5D6E-9A2F-C3CE5A677EC5'),
  status?: boolean(name='Status', description='Indicates whether the log collection feature is enabled for the protected object. Valid values:

*   **true**
*   **false**', example='true'),
}

model ModifyResourceLogStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyResourceLogStatusResponseBody(name='body'),
}

/**
 * @summary Enables or disables the log collection feature for a protected object.
 *
 * @param request ModifyResourceLogStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyResourceLogStatusResponse
 */
async function modifyResourceLogStatusWithOptions(request: ModifyResourceLogStatusRequest, runtime: Util.RuntimeOptions): ModifyResourceLogStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resource)) {
    query['Resource'] = request.resource;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.status)) {
    query['Status'] = request.status;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyResourceLogStatus',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Enables or disables the log collection feature for a protected object.
 *
 * @param request ModifyResourceLogStatusRequest
 * @return ModifyResourceLogStatusResponse
 */
async function modifyResourceLogStatus(request: ModifyResourceLogStatusRequest): ModifyResourceLogStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyResourceLogStatusWithOptions(request, runtime);
}

model ModifyTemplateResourcesRequest {
  bindResourceGroups?: [ string ](name='BindResourceGroups', description='The protected object groups that you want to associate with the protection rule template. Specify the value of this parameter in the ["group1","group2",...] format.'),
  bindResources?: [ string ](name='BindResources', description='The protected objects that you want to associate with the protection rule template. Specify the value of this parameter in the ["XX1","XX2",...] format.'),
  instanceId?: string(name='InstanceId', description='The ID of the Web Application Firewall (WAF) instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to obtain the ID of the WAF instance.

This parameter is required.', example='waf_cdnsdf3****'),
  regionId?: string(name='RegionId', description='The region where the WAF instance resides. Valid values:

*   **cn-hangzhou:** the Chinese mainland.
*   **ap-southeast-1:** outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm***q'),
  templateId?: long(name='TemplateId', description='The ID of the protection rule template.

This parameter is required.', example='2291'),
  unbindResourceGroups?: [ string ](name='UnbindResourceGroups', description='The protected object groups that you want to disassociate from the protection rule template. Specify the value of this parameter in the ["group1","group2",...] format.'),
  unbindResources?: [ string ](name='UnbindResources', description='The protected objects that you want to disassociate from the protection rule template. Specify the value of this parameter in the ["XX1","XX2",...] format.'),
}

model ModifyTemplateResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='CF708F2F-FFB0-54D4-B1E0-B84A7CEBFB60'),
}

model ModifyTemplateResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyTemplateResourcesResponseBody(name='body'),
}

/**
 * @summary Associates or disassociates a protected object or protected object group with or from a protection rule template.
 *
 * @param request ModifyTemplateResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ModifyTemplateResourcesResponse
 */
async function modifyTemplateResourcesWithOptions(request: ModifyTemplateResourcesRequest, runtime: Util.RuntimeOptions): ModifyTemplateResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.bindResourceGroups)) {
    query['BindResourceGroups'] = request.bindResourceGroups;
  }
  if (!Util.isUnset(request.bindResources)) {
    query['BindResources'] = request.bindResources;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  if (!Util.isUnset(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  if (!Util.isUnset(request.unbindResourceGroups)) {
    query['UnbindResourceGroups'] = request.unbindResourceGroups;
  }
  if (!Util.isUnset(request.unbindResources)) {
    query['UnbindResources'] = request.unbindResources;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyTemplateResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Associates or disassociates a protected object or protected object group with or from a protection rule template.
 *
 * @param request ModifyTemplateResourcesRequest
 * @return ModifyTemplateResourcesResponse
 */
async function modifyTemplateResources(request: ModifyTemplateResourcesRequest): ModifyTemplateResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyTemplateResourcesWithOptions(request, runtime);
}

model SyncProductInstanceRequest {
  instanceId?: string(name='InstanceId', description='The ID of the WAF instance.

>  You can call the [DescribeInstance](https://help.aliyun.com/document_detail/433756.html) operation to query the ID of the WAF instance.

This parameter is required.', example='waf_v3prepaid_public_cn-zsk****fb09'),
  regionId?: string(name='RegionId', description='The region in which the WAF instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.', example='cn-hangzhou'),
  resourceManagerResourceGroupId?: string(name='ResourceManagerResourceGroupId', description='The ID of the Alibaba Cloud resource group.', example='rg-acfm4co****f5qa'),
}

model SyncProductInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='45BA2382-7C3F-5B29-9A83-C3BCE586****'),
}

model SyncProductInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SyncProductInstanceResponseBody(name='body'),
}

/**
 * @summary Synchronizes Elastic Compute Service (ECS) instances and Classic Load Balancer (CLB) instances to Web Application Firewall (WAF).
 *
 * @description SyncProductInstance is an asynchronous operation. You can call the [DescribeProductInstances](https://help.aliyun.com/document_detail/2743168.html) operation to query the status of the task.
 *
 * @param request SyncProductInstanceRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return SyncProductInstanceResponse
 */
async function syncProductInstanceWithOptions(request: SyncProductInstanceRequest, runtime: Util.RuntimeOptions): SyncProductInstanceResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceManagerResourceGroupId)) {
    query['ResourceManagerResourceGroupId'] = request.resourceManagerResourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SyncProductInstance',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Synchronizes Elastic Compute Service (ECS) instances and Classic Load Balancer (CLB) instances to Web Application Firewall (WAF).
 *
 * @description SyncProductInstance is an asynchronous operation. You can call the [DescribeProductInstances](https://help.aliyun.com/document_detail/2743168.html) operation to query the status of the task.
 *
 * @param request SyncProductInstanceRequest
 * @return SyncProductInstanceResponse
 */
async function syncProductInstance(request: SyncProductInstanceRequest): SyncProductInstanceResponse {
  var runtime = new Util.RuntimeOptions{};
  return syncProductInstanceWithOptions(request, runtime);
}

model TagResourcesRequest {
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', description='The IDs of the resources. You can specify up to 50 resource IDs.

This parameter is required.'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to ALIYUN::WAF::DEFENSERESOURCE.

This parameter is required.', example='ALIYUN::WAF::DEFENSERESOURCE'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the resource. Valid values of N: 1 to 20.', example='demoTagKey'),
      value?: string(name='Value', description='The value of tag N to add to the resource. Valid values of N: 1 to 20.', example='demoTagValue'),
    }
  ](name='Tag', description='The tags to add to the resource.

This parameter is required.'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='57F8460F-8A62-5D79-8ED5-653C****0C6B'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

/**
 * @summary Adds tags to resources.
 *
 * @param request TagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return TagResourcesResponse
 */
async function tagResourcesWithOptions(request: TagResourcesRequest, runtime: Util.RuntimeOptions): TagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'TagResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Adds tags to resources.
 *
 * @param request TagResourcesRequest
 * @return TagResourcesResponse
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return tagResourcesWithOptions(request, runtime);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to remove all tags from the specified resource groups or members. Valid values:

*   false (default)
*   true', example='false'),
  regionId?: string(name='RegionId', description='The region in which the Web Application Firewall (WAF) instance is deployed. Valid values:

*   **cn-hangzhou**: Chinese mainland.
*   **ap-southeast-1**: outside the Chinese mainland.

This parameter is required.', example='cn-hangzhou'),
  resourceId?: [ string ](name='ResourceId', description='The resource IDs. You can specify up to 50 resource IDs.

This parameter is required.'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to ALIYUN::WAF::DEFENSERESOURCE.

This parameter is required.', example='ALIYUN::WAF::DEFENSERESOURCE'),
  tagKey?: [ string ](name='TagKey', description='The tag keys. You can specify up to 20 tag keys.'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='7A4B8DB1-A8B0-5362-A65D-6A55****07C5'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

/**
 * @summary Removes tags from resources and then deletes the tags.
 *
 * @param request UntagResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UntagResourcesResponse
 */
async function untagResourcesWithOptions(request: UntagResourcesRequest, runtime: Util.RuntimeOptions): UntagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.all)) {
    query['All'] = request.all;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tagKey)) {
    query['TagKey'] = request.tagKey;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UntagResources',
    version = '2021-10-01',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Removes tags from resources and then deletes the tags.
 *
 * @param request UntagResourcesRequest
 * @return UntagResourcesResponse
 */
async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return untagResourcesWithOptions(request, runtime);
}

