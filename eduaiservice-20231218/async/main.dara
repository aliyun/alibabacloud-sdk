/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'eduaiservice';
  @version = '2023-12-18';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model QueryOrgLabRecordListRequest {
  aliyunUid: string(name='AliyunUid', description='This parameter is required.', position='Query'),
  labId: string(name='LabId', description='This parameter is required.', position='Query'),
  orderBy?: string(name='OrderBy', position='Query'),
  orderDirection?: string(name='OrderDirection', position='Query'),
  pageIndex?: int32(name='PageIndex', position='Query'),
  pageSize?: int32(name='PageSize', position='Query'),
}

model QueryOrgLabRecordListResponseBody = {
  data?: [ 
    {
      createdAt?: long(name='CreatedAt'),
      labRecordId?: string(name='LabRecordId'),
      status?: int32(name='Status'),
      submittedAt?: long(name='SubmittedAt'),
    }
  ](name='Data'),
  errCode?: string(name='ErrCode'),
  errMessage?: string(name='ErrMessage'),
  pageIndex?: long(name='PageIndex'),
  pageSize?: long(name='PageSize'),
  requestId?: string(name='RequestId'),
  success?: boolean(name='Success'),
  totalCount?: long(name='TotalCount'),
}

model QueryOrgLabRecordListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: QueryOrgLabRecordListResponseBody(name='body'),
}

/**
  * @param request  the request parameters of QueryOrgLabRecordList  QueryOrgLabRecordListRequest
  * @return QueryOrgLabRecordListResponse
 */
async function queryOrgLabRecordList(request: QueryOrgLabRecordListRequest): QueryOrgLabRecordListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'QueryOrgLabRecordList', 'POST', '/', 'json', false, 'json', request);
}

