/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Privatelink';
  @version = '2020-04-15';
  @endpointRule = 'regional';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model AddUserToVpcEndpointServiceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  userARN?: string(name='UserARN', description='The whitelist in the format of Aliyun Resource Name (ARN).', example='acs:ram:*:<account-id>:*', position='Query'),
  userId?: long(name='UserId', description='The account ID that you want to add to the whitelist.', example='132193271328****', minimum=0, maximum=9223372036854775807, position='Query'),
}

model AddUserToVpcEndpointServiceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model AddUserToVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddUserToVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you add an account ID to the whitelist of an endpoint service, make sure that the endpoint service is in the **Active** state. You can call the [GetVpcEndpointServiceAttribute](~~469330~~) operation to query the status of the endpoint service.
  * *   You cannot repeatedly call the **AddUserToVpcEndpointService** operation to add the ID of an Alibaba Cloud account to the whitelist of an endpoint service within a specified period of time.
  *
 */
async function addUserToVpcEndpointService(request: AddUserToVpcEndpointServiceRequest): AddUserToVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddUserToVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model AddZoneToVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The ID of the endpoint to which you want to add the zone.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  vSwitchId: string(name='VSwitchId', description='The ID of the vSwitch in the zone that you want to add. The system automatically creates an endpoint ENI in the vSwitch.', example='vsw-hjkshjvdkdvd****', position='Query'),
  zoneId: string(name='ZoneId', description='The ID of the zone that you want to add.', example='cn-hangzhou-b', position='Query'),
  ip?: string(name='ip', description='The IP address of the endpoint elastic network interface (ENI) in the zone that you want to add.', example='192.XX.XX.32', position='Query'),
}

model AddZoneToVpcEndpointResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760'),
}

model AddZoneToVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddZoneToVpcEndpointResponseBody(name='body'),
}

/**
  * *   **AddZoneToVpcEndpoint** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpointZones](~~183560~~) operation to query the state of the zone.
  *     *   If the zone is in the **Creating** state, the zone is being added.
  *     *   If the zone is in the Wait state, the zone is added.
  * *   You cannot repeatedly call the **AddZoneToVpcEndpoint** operation to add a zone to an endpoint within a specified period of time.
  *
 */
async function addZoneToVpcEndpoint(request: AddZoneToVpcEndpointRequest): AddZoneToVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddZoneToVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model AttachResourceToVpcEndpointServiceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service to which you want to add the service resource.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the service resource. Valid values:

*   **slb**: a Classic Load Balancer (CLB) instance
*   **alb**: an Application Load Balancer (ALB) instance
*   **nlb**: a Network Load Balancer (NLB) instance', example='slb', position='Query'),
  serviceId: string(name='ServiceId', description='The ID of the endpoint service to which you want to add the service resource.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the service resource.', example='cn-hangzhou-j', position='Query'),
}

model AttachResourceToVpcEndpointServiceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model AttachResourceToVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachResourceToVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you add a service resource to an endpoint service, make sure that the endpoint service is in the **Active** state. You can call the [GetVpcEndpointServiceAttribute](~~469330~~) operation to query the status of the endpoint service.
  * *   You cannot repeatedly call the **AttachResourceToVpcEndpointService** operation to add a service resource to an endpoint service within a specified period of time.
  *
 */
async function attachResourceToVpcEndpointService(request: AttachResourceToVpcEndpointServiceRequest): AttachResourceToVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachResourceToVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model AttachSecurityGroupToVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The ID of the endpoint with which you want to associate the security group.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint with which you want to associate with the security group. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group with which you want to associate the endpoint.', example='sg-hp3c8qj1tyct90ej****', position='Query'),
}

model AttachSecurityGroupToVpcEndpointResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D778FF9-7640-4C13-BCD6-9265CA9A2F81'),
}

model AttachSecurityGroupToVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachSecurityGroupToVpcEndpointResponseBody(name='body'),
}

/**
  * *   **AttachSecurityGroupToVpcEndpoint** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpoints](~~183558~~) operation to query the state of the endpoint.
  *     *   If the endpoint is in the **Pending** state, the endpoint is being associated with the security group.
  *     *   If the endpoint is in the **Active** state, the endpoint is associated with the security group.
  * *   You cannot repeatedly call the **AttachSecurityGroupToVpcEndpoint** operation to associate an endpoint with a security group within a specified period of time.
  *
 */
async function attachSecurityGroupToVpcEndpoint(request: AttachSecurityGroupToVpcEndpointRequest): AttachSecurityGroupToVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachSecurityGroupToVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model ChangeResourceGroupRequest {
  resourceGroupId: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****', position='Query'),
  resourceId: string(name='ResourceId', description='The resource IDs. You can specify up to 50 resource IDs.', example='ep-hp3i05294c2d2d****', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of resource. Valid values:

*   **VpcEndpoint**: endpoint
*   **VpcEndpointService**: endpoint service', example='VpcEndpoint', position='Query'),
}

model ChangeResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
}

model ChangeResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ChangeResourceGroupResponseBody(name='body'),
}

async function changeResourceGroup(request: ChangeResourceGroupRequest): ChangeResourceGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ChangeResourceGroup', 'POST', '/', 'json', false, 'json', request);
}

model CheckProductOpenRequest {
}

model CheckProductOpenResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
  success?: boolean(name='Success', description='Indicates whether PrivateLink is activated.

Only **true** is returned. The value indicates that PrivateLink is activated.', example='true'),
}

model CheckProductOpenResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CheckProductOpenResponseBody(name='body'),
}

async function checkProductOpen(request: CheckProductOpenRequest): CheckProductOpenResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CheckProductOpen', 'POST', '/', 'json', false, 'json', request);
}

model CreateVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointDescription?: string(name='EndpointDescription', description='The description of the endpoint.

The description must be 2 to 256 characters in length, and cannot start with `http://` or `https://`.', example='This is my Endpoint.', position='Query'),
  endpointName?: string(name='EndpointName', description='The name of the endpoint.

The name must be 2 to 128 characters in length, and can contain digits, underscores (\\_), and hyphens (-). The name must start with a letter.', example='test', position='Query'),
  endpointType?: string(name='EndpointType', description='The type of the endpoint.

Set the value to **Interface**. Then, you can specify Application Load Balancer (ALB) and Classic Load Balancer (CLB) instances as service resources for the endpoint service.', example='Interface', position='Query'),
  protectedEnabled?: boolean(name='ProtectedEnabled', description='Specifies whether to enable user authentication. This parameter is available in Security Token Service (STS) mode. Valid values:

*   **true**: enables user authentication. After user authentication is enabled, only the user who creates the endpoint can modify or delete the endpoint in STS mode.
*   **false** (default): disables user authentication.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****', position='Query'),
  securityGroupId?: [ string ](name='SecurityGroupId', description='The IDs of security groups that are associated with the endpoint elastic network interface (ENI).', example='sg-hp33bw6ynvm2yb0e****', position='Query'),
  serviceId?: string(name='ServiceId', description='The ID of the endpoint service with which the endpoint is associated.', example='epsrv-hp3xdsq46ael67lo****', position='Query'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service with which the endpoint is associated.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag to add to the resource.', example='env'),
      value?: string(name='Value', description='The value of the tag to add to the resource.', example='prod'),
    }
  ](name='Tag', description='The tags to add to the resource.', position='Query'),
  vpcId: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the endpoint belongs.', example='vpc-hp356stwkxg3fn2xe****', position='Query'),
  zone?: [ 
    {
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch where you want to create the endpoint ENI in the zone. You can specify up to 10 vSwitch IDs.', example='vsw-hp3uf6045ljdhd5zr****'),
      zoneId?: string(name='ZoneId', description='The ID of the zone in which the endpoint is deployed.

You can specify up to 10 zone IDs.', example='cn-huhehaote-b'),
      ip?: string(name='ip', description='The IP address of the zone in which the endpoint is deployed.

You can specify up to 10 IP addresses.', example='192.168.XX.XX'),
    }
  ](name='Zone', description='The zones where the endpoint is deployed.', position='Query'),
  zonePrivateIpAddressCount?: long(name='ZonePrivateIpAddressCount', description='The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Set the value to **1**.', example='1', position='Query'),
}

model CreateVpcEndpointResponseBody = {
  bandwidth?: long(name='Bandwidth', description='The bandwidth of the endpoint connection. Unit: Mbit/s.', example='200'),
  connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The connection is being modified.
*   **Connecting**: The connection is being established.
*   **Connected**: The connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The connection is being deleted.', example='Disconnected'),
  createTime?: string(name='CreateTime', description='The time when the endpoint was created.', example='2022-01-02T19:11:12Z'),
  endpointBusinessStatus?: string(name='EndpointBusinessStatus', description='The service state of the endpoint. Valid values:

*   **Normal**: The endpoint runs as expected.
*   **FinancialLocked**: The endpoint is locked due to overdue payments.', example='Normal'),
  endpointDescription?: string(name='EndpointDescription', description='The description of the endpoint.', example='This is my Endpoint.'),
  endpointDomain?: string(name='EndpointDomain', description='The domain name of the endpoint.', example='ep-hp33b2e43fays7s8****.epsrv-hp3xdsq46ael67lo****.cn-huhehaote.privatelink.aliyuncs.com'),
  endpointId?: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****'),
  endpointName?: string(name='EndpointName', description='The name of the endpoint.', example='test'),
  endpointStatus?: string(name='EndpointStatus', description='The state of the endpoint. Valid values:

*   **Creating**: The endpoint is being created.
*   **Active**: The endpoint is available.
*   **Pending**: The endpoint is being modified.
*   **Deleting**: The endpoint is being deleted.', example='Active'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  serviceId?: string(name='ServiceId', description='The ID of the endpoint service with which the endpoint is associated.', example='epsrv-hp3vpx8yqxblby3i****'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service with which the endpoint is associated.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3xdsq46ael67lo****'),
  vpcId?: string(name='VpcId', description='The ID of the VPC to which the endpoint belongs.', example='vpc-hp356stwkxg3fn2xe****'),
}

model CreateVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateVpcEndpointResponseBody(name='body'),
}

/**
  * **CreateVpcEndpoint** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointAttribute](~~183568~~) operation to check whether the endpoint is created.
  * *   If the endpoint is in the **Creating** state, the endpoint is being created.
  * *   If the endpoint is in the **Active** state, the endpoint is created.
  *
 */
async function createVpcEndpoint(request: CreateVpcEndpointRequest): CreateVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model CreateVpcEndpointServiceRequest {
  autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Specifies whether to automatically accept endpoint connection requests. Valid values:

*   **true**
*   **false** (default)', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request.

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  payer?: string(name='Payer', description='The payer of the endpoint service. Valid values:

*   **Endpoint**: the service consumer
*   **EndpointService**: the service provider

> By default, the feature of allowing the service provider to pay is unavailable. To use this feature, log on to the [Quota Center console](https://quotas.console.aliyun.com/white-list-products/privatelink/quotas) and click Privileges in the left-side navigation pane. On the **Privileges** page, enter the quota ID `privatelink_whitelist/epsvc_payer_mode`, and click Apply in the Actions column.', example='Endpoint', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  resource?: [ 
    {
      resourceId?: string(name='ResourceId', description='The ID of the service resource that is added to the endpoint service. You can specify up to 20 service resource IDs.', example='lb-hp32z1wp5peaoox2q****'),
      resourceType?: string(name='ResourceType', description='The type of the service resource that is added to the endpoint service. You can add up to 20 service resources to the endpoint service. Valid values:

*   **slb**: Classic Load Balancer (CLB) instance
*   **alb**: Application Load Balancer (ALB) instance
*   **nlb**: Network Load Balancer (NLB) instance

>  In regions where PrivateLink is supported, CLB instances deployed in virtual private clouds (VPCs) can serve as the service resources of the endpoint service.', example='slb'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-huhehaote-a'),
    }
  ](name='Resource', description='The service resources of the endpoint service.', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****', position='Query'),
  serviceDescription?: string(name='ServiceDescription', description='The description of the endpoint service.', example='This is my EndpointService.', position='Query'),
  serviceResourceType?: string(name='ServiceResourceType', description='The type of the service resource. Valid values:

*   **slb**: a Classic Load Balancer (CLB) instance
*   **alb**: an Application Load Balancer (ALB) instance
*   **nlb**: a Network Load Balancer (NLB) instance', example='slb', position='Query'),
  serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Specifies whether to enable IPv6 for the endpoint service. Valid values:

*   **true**
*   **false** (default)', example='false', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag to add to the resource. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `aliyun` or `acs:`.', example='env'),
      value?: string(name='Value', description='The value of the tag to add to the resource. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `aliyun` or `acs:`.', example='prod'),
    }
  ](name='Tag', description='The tags to add to the resource.', position='Query'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:

*   **true**
*   **false** (default)', example='false', position='Query'),
}

model CreateVpcEndpointServiceResponseBody = {
  autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Indicates whether the endpoint service automatically accepts endpoint connection requests. Valid values:

*   **true**
*   **false**', example='false'),
  createTime?: string(name='CreateTime', description='The time when the endpoint service was created.', example='2022-01-02T19:11:12Z'),
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****'),
  serviceBusinessStatus?: string(name='ServiceBusinessStatus', description='The service state of the endpoint service. Valid values:

*   **Normal**: The endpoint service runs as expected.
*   **FinancialLocked**: The endpoint service is locked due to overdue payments.', example='Normal'),
  serviceDescription?: string(name='ServiceDescription', description='The description of the endpoint service.', example='This is my EndpointService.'),
  serviceDomain?: string(name='ServiceDomain', description='The domain name of the endpoint service.', example='epsrv-hp3vpx8yqxblby3i****.cn-huhehaote.privatelink.aliyuncs.com'),
  serviceId?: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****'),
  serviceStatus?: string(name='ServiceStatus', description='The state of the endpoint service. Valid values:

*   **Creating**: The endpoint service is being created.
*   **Pending**: The endpoint service is being modified.
*   **Active**: The endpoint service is available.
*   **Deleting**: The endpoint service is being deleted.', example='Active'),
  serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Indicates whether IPv6 was enabled for the endpoint service. Valid values:

*   **true**
*   **false**', example='false'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Indicates whether the domain name of the nearest endpoint that is associated with the endpoint service is resolved first. Valid values:

*   **true**
*   **false**', example='false'),
}

model CreateVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you create an endpoint service, make sure that you have created a Server Load Balancer (SLB) instance that supports PrivateLink. For more information, see [CreateLoadBalancer](~~174064~~).
  * *   **CreateVpcEndpointService** is an asynchronous operation. After a request is sent, the system returns a request ID and an instance ID and runs the task in the background. You can call the [GetVpcEndpointServiceAttribute](~~183542~~) operation to query the status of the endpoint service.
  *     *   If the endpoint service is in the **Creating** state, the endpoint service is being created.
  *     *   If the endpoint service is in the **Active** state, the endpoint service is created.
  *
 */
async function createVpcEndpointService(request: CreateVpcEndpointServiceRequest): CreateVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model DeleteVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The ID of the endpoint that you want to delete.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint that you want to delete. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
}

model DeleteVpcEndpointResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
}

model DeleteVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteVpcEndpointResponseBody(name='body'),
}

/**
  * *   Before you delete an endpoint, you must delete the zones that are added to the endpoint.
  * *   **DeleteVpcEndpoint** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointAttribute](~~183568~~) operation to check whether the endpoint is deleted.
  *     *   If the endpoint is in the **Deleting** state, the endpoint is being deleted.
  *     *   If the endpoint cannot be queried, the endpoint is deleted.
  *
 */
async function deleteVpcEndpoint(request: DeleteVpcEndpointRequest): DeleteVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model DeleteVpcEndpointServiceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  serviceId: string(name='ServiceId', description='The ID of the endpoint service that you want to delete.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model DeleteVpcEndpointServiceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model DeleteVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you delete an endpoint service, you must disconnect the endpoint from the endpoint service and remove the service resources.
  * *   **DeleteVpcEndpointService** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointServiceAttribute](~~183542~~) operation to check whether the endpoint service is deleted.
  *     *   If the endpoint service is in the **Deleting** state, the endpoint service is being deleted.
  *     *   If the endpoint service cannot be queried, the endpoint service is deleted.
  * *   You cannot repeatedly call the **DeleteVpcEndpointService** operation to delete an endpoint service that belongs to an Alibaba Cloud account within a specified period of time.
  *
 */
async function deleteVpcEndpointService(request: DeleteVpcEndpointServiceRequest): DeleteVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRegionsRequest {
  regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
}

model DescribeRegionsResponseBody = {
  regions?: {
    region?: [ 
    {
      localName?: string(name='LocalName', description='The name of the region.', example='China (Hangzhou)'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of the region.', example='privatelink.cn-hangzhou.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
    }
  ](name='Region')
  }(name='Regions', description='The available regions.'),
  requestId?: string(name='RequestId', description='The request ID.', example='611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F'),
}

model DescribeRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRegionsResponseBody(name='body'),
}

async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRegions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeZonesRequest {
  regionId: string(name='RegionId', description='The region ID of the zone. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model DescribeZonesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F'),
  zones?: {
    zone?: [ 
    {
      localName?: string(name='LocalName', description='The name of the zone.', example='Hangzhou Zone B'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-b'),
    }
  ](name='Zone')
  }(name='Zones', description='The returned zones.'),
}

model DescribeZonesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeZonesResponseBody(name='body'),
}

async function describeZones(request: DescribeZonesRequest): DescribeZonesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeZones', 'POST', '/', 'json', false, 'json', request);
}

model DetachResourceFromVpcEndpointServiceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate a value, but you must make sure that the value is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the service resource. Valid values:

*   **slb**: a Classic Load Balancer (CLB) instance that supports PrivateLink. In addition, the CLB instance is deployed in a virtual private cloud (VPC).
*   **alb**: an Application Load Balancer (ALB) instance that supports PrivateLink. In addition, the ALB instance is deployed in a VPC.', example='slb', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone that you want to remove.', example='cn-hangzhou-c', position='Query'),
}

model DetachResourceFromVpcEndpointServiceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model DetachResourceFromVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachResourceFromVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you remove a service resource from an endpoint service, make sure that the endpoint service is in the **Active** state. You can call the [GetVpcEndpointServiceAttribute](~~469330~~) operation to query the status of the endpoint service.
  * *   You cannot repeatedly call the **DetachResourceFromVpcEndpointService** operation to remove a service resource from an endpoint service within a specified period of time.
  *
 */
async function detachResourceFromVpcEndpointService(request: DetachResourceFromVpcEndpointServiceRequest): DetachResourceFromVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachResourceFromVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model DetachSecurityGroupFromVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The ID of the endpoint that you want to disassociate from the security group.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint that you want to disassociate from the security group. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group from which you want to disassociate the endpoint.', example='sg-hp3c8qj1tyct90ej****', position='Query'),
}

model DetachSecurityGroupFromVpcEndpointResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D778FF9-7640-4C13-BCD6-9265CA9A2F81'),
}

model DetachSecurityGroupFromVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachSecurityGroupFromVpcEndpointResponseBody(name='body'),
}

/**
  * *   **DetachSecurityGroupFromVpcEndpoint** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpoints](~~183558~~) to check whether the endpoint is disassociated from the security group.
  *     *   If the endpoint is in the **Pending** state, the endpoint is being disassociated from the security group.
  *     *   If you cannot query the endpoint in the security group, the endpoint is disassociated from the security group.
  * *   You cannot repeatedly call the **DetachSecurityGroupFromVpcEndpoint** operation to disassociate an endpoint from a security group within a specified period of time.
  *
 */
async function detachSecurityGroupFromVpcEndpoint(request: DetachSecurityGroupFromVpcEndpointRequest): DetachSecurityGroupFromVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachSecurityGroupFromVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model DisableVpcEndpointConnectionRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the connection request from the endpoint is rejected. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model DisableVpcEndpointConnectionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model DisableVpcEndpointConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DisableVpcEndpointConnectionResponseBody(name='body'),
}

/**
  * *   **DisableVpcEndpointConnection** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointAttribute](~~183568~~) operation to query the state of the endpoint connection.
  *     *   If the endpoint connection is in the **Disconnecting** state, the endpoint is being disconnected from the endpoint service.
  *     *   If the endpoint connection is in the **Disconnected** state, the endpoint is disconnected from the endpoint service.
  * *   You cannot repeatedly call the **DisableVpcEndpointConnection** operation to allow an endpoint service to reject a connection request from an endpoint within a specified period of time.
  *
 */
async function disableVpcEndpointConnection(request: DisableVpcEndpointConnectionRequest): DisableVpcEndpointConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DisableVpcEndpointConnection', 'POST', '/', 'json', false, 'json', request);
}

model DisableVpcEndpointZoneConnectionRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the connection request from the endpoint is rejected.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  replacedResource?: boolean(name='ReplacedResource', description='Specifies whether to disconnect the endpoint from the previous connection after the service resource is smoothly migrated. Valid values:

*   **true**
*   **false** (default)

> Set the value to true if you want to disconnect the endpoint from the previous connection in the zone after the service resource is smoothly migrated.', example='false', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId: string(name='ZoneId', description='The ID of the zone that is associated with the endpoint.', example='cn-hangzhou-b', position='Query'),
}

model DisableVpcEndpointZoneConnectionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model DisableVpcEndpointZoneConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DisableVpcEndpointZoneConnectionResponseBody(name='body'),
}

/**
  * *   You can call this operation only when the state of the endpoint is **Connected** and the state of the zone associated with the endpoint is **Connected** or **Migrated**.
  * *   **DisableVpcEndpointZoneConnection** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpointZones](~~183560~~) operation to query the status of the task.
  *     *   If the zone is in the **Disconnecting** state, the task is running.
  *     *   If the zone is in the **Disconnected** state, the task is successful.
  * *   You cannot repeatedly call the **DisableVpcEndpointZoneConnection** operation to allow an endpoint service to reject a connection request from the endpoint in the zone within a specified period of time.
  *
 */
async function disableVpcEndpointZoneConnection(request: DisableVpcEndpointZoneConnectionRequest): DisableVpcEndpointZoneConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DisableVpcEndpointZoneConnection', 'POST', '/', 'json', false, 'json', request);
}

model EnableVpcEndpointConnectionRequest {
  bandwidth?: int32(name='Bandwidth', description='The bandwidth of the endpoint connection. Unit: Mbit/s. Valid values: **3072 to 10240**.

>  The bandwidth of an endpoint connection is in the range of **100 to 10,240** Mbit/s. The default bandwidth is **3,072** Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is **3,072 to 10,240** Mbit/s. If Classic Load Balancer (CLB) instances or Application Load Balancer (ALB) instances are specified as service resources, you can modify the endpoint connection bandwidth based on your business requirements. This parameter is invalid if Network Load Balancer (NLB) instances are specified as service resources.', example='1024', minimum=0, maximum=2147483647, position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the check, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the connection request is accepted.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model EnableVpcEndpointConnectionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model EnableVpcEndpointConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnableVpcEndpointConnectionResponseBody(name='body'),
}

/**
  * *   **EnableVpcEndpointConnection** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointAttribute](~~183568~~) operation to query the state of the endpoint connection.
  *     *   If the state is **Connecting**, the endpoint connection is being established.
  *     *   If the state is **Connected**, the endpoint connection is established.
  * *   You cannot repeatedly call the **EnableVpcEndpointConnection** operation to allow an endpoint service of an Alibaba Cloud account to accept a connection request from an endpoint within a specified period of time.
  *
 */
async function enableVpcEndpointConnection(request: EnableVpcEndpointConnectionRequest): EnableVpcEndpointConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnableVpcEndpointConnection', 'POST', '/', 'json', false, 'json', request);
}

model EnableVpcEndpointZoneConnectionRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the endpoint connection request is accepted. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId: string(name='ZoneId', description='The ID of the zone that is associated with the endpoint.', example='cn-hangzhou-b', position='Query'),
}

model EnableVpcEndpointZoneConnectionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model EnableVpcEndpointZoneConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnableVpcEndpointZoneConnectionResponseBody(name='body'),
}

/**
  * *   You can call this operation only when the state of the endpoint is **Connected** and the state of the associated zone is **Disconnected**.
  * *   **EnableVpcEndpointZoneConnection** is an asynchronous operation. After you send a request, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpointZones](~~183560~~) operation to check whether the endpoint service accepts a connection request from the endpoint in the associated zone.
  *     *   If the zone is in the **Connecting** state, the endpoint service is accepting the connection request from the endpoint.
  *     *   If the zone is in the **Connected** state, the endpoint service has accepted the connection request from the endpoint.
  * *   You cannot repeatedly call the **EnableVpcEndpointZoneConnection** operation to allow an endpoint service to accept a connection request from an endpoint in the associated zone within a specified period of time.
  *
 */
async function enableVpcEndpointZoneConnection(request: EnableVpcEndpointZoneConnectionRequest): EnableVpcEndpointZoneConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnableVpcEndpointZoneConnection', 'POST', '/', 'json', false, 'json', request);
}

model GetVpcEndpointAttributeRequest {
  endpointId: string(name='EndpointId', description='The ID of the endpoint whose attributes you want to query.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint whose attributes you want to query.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
}

model GetVpcEndpointAttributeResponseBody = {
  bandwidth?: int32(name='Bandwidth', description='The bandwidth of the endpoint connection. Unit: Mbit/s.', example='1024'),
  connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The connection is being modified.
*   **Connecting**: The connection is being established.
*   **Connected**: The connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The connection is being deleted.', example='Connected'),
  createTime?: string(name='CreateTime', description='The time when the endpoint was created.', example='2021-09-24T18:00:07Z'),
  endpointBusinessStatus?: string(name='EndpointBusinessStatus', description='The service state of the endpoint. Valid values:

*   **Normal**: The endpoint runs as expected.
*   **FinancialLocked**: The endpoint is locked due to overdue payments.', example='Normal'),
  endpointDescription?: string(name='EndpointDescription', description='The description of the endpoint.', example='This is my Endpoint.'),
  endpointDomain?: string(name='EndpointDomain', description='The domain name of the endpoint.', example='ep-hp33b2e43fays7s8****.epsrv-hp3xdsq46ael67lo****.cn-huhehaote.privatelink.aliyuncs.com'),
  endpointId?: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****'),
  endpointName?: string(name='EndpointName', description='The name of the endpoint.', example='test'),
  endpointStatus?: string(name='EndpointStatus', description='The state of the endpoint. Valid values:

*   **Creating**: The endpoint is being created.
*   **Active**: The endpoint is available.
*   **Pending**: The endpoint is being modified.
*   **Deleting**: The endpoint is being deleted.', example='Active'),
  endpointType?: string(name='EndpointType', description='The type of the endpoint.

**Interface** is returned. The value indicates the interface endpoint with which the Classic Load Balancer (CLB) instances are associated.', example='Interface'),
  payer?: string(name='Payer', description='The payer. Valid values:

*   **Endpoint**: the service consumer.
*   **EndpointService**: the service provider.', example='Endpoint'),
  regionId?: string(name='RegionId', description='The region ID of the endpoint.', example='cn-huhehaote'),
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmz7nocpei***'),
  resourceOwner?: boolean(name='ResourceOwner', description='Indicates whether the endpoint and the endpoint service belong to the same Alibaba Cloud account. Valid values:

*   **true**: The endpoint and the endpoint service belong to the same Alibaba Cloud account.
*   **false**: The endpoint and the endpoint service do not belong to the same Alibaba Cloud account.', example='true'),
  serviceId?: string(name='ServiceId', description='The ID of the endpoint service with which the endpoint is associated.', example='epsrv-hp3vpx8yqxblby3i****'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service with which the endpoint is associated.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3xdsq46ael67lo****'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the endpoint belongs.', example='vpc-fdfhkjafhjvcvdjf****'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Indicates whether the domain name of the nearest endpoint that is associated with the endpoint service is resolved first. Valid values:

*   **true**
*   **false**', example='true'),
  zonePrivateIpAddressCount?: long(name='ZonePrivateIpAddressCount', description='The number of private IP addresses that are assigned to an elastic network interface (ENI) in each zone. Only **1** is returned.', example='1'),
}

model GetVpcEndpointAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetVpcEndpointAttributeResponseBody(name='body'),
}

async function getVpcEndpointAttribute(request: GetVpcEndpointAttributeRequest): GetVpcEndpointAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetVpcEndpointAttribute', 'POST', '/', 'json', false, 'json', request);
}

model GetVpcEndpointServiceAttributeRequest {
  regionId: string(name='RegionId', description='The region ID of the endpoint service.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model GetVpcEndpointServiceAttributeResponseBody = {
  autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Indicates whether endpoint connection requests are automatically accepted. Valid values:

*   **true**
*   **false**', example='true'),
  connectBandwidth?: int32(name='ConnectBandwidth', description='The default maximum bandwidth of the endpoint connection. Unit: Mbit/s. Valid values: **100** to 10240.', example='1024'),
  createTime?: string(name='CreateTime', description='The time when the endpoint service was created.', example='2020-01-02T19:11:12Z'),
  maxBandwidth?: int32(name='MaxBandwidth', description='The maximum bandwidth of the endpoint connection. Unit: Mbit/s.', example='1024'),
  minBandwidth?: int32(name='MinBandwidth', description='The minimum bandwidth of the endpoint connection. Unit: Mbit/s.', example='100'),
  payer?: string(name='Payer', description='The payer of the endpoint service. Valid values:

*   **Endpoint**: the service consumer.
*   **EndpointService**: the service provider.', example='Endpoint'),
  regionId?: string(name='RegionId', description='The region ID of the endpoint service.', example='cn-huhehaote'),
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****'),
  serviceBusinessStatus?: string(name='ServiceBusinessStatus', description='The service state of the endpoint service. Valid values:

*   **Normal**: The endpoint service runs as expected.
*   **FinacialLocked**: The endpoint service is locked due to overdue payments.', example='Normal'),
  serviceDescription?: string(name='ServiceDescription', description='The description of the endpoint service.', example='This is my EndpointService.'),
  serviceDomain?: string(name='ServiceDomain', description='The domain name of the endpoint service.', example='epsrv-hp3vpx8yqxblby3i****.cn-huhehaote.privatelink.aliyuncs.com'),
  serviceId?: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****'),
  serviceResourceType?: string(name='ServiceResourceType', description='The type of the service resource. Valid values:

*   **slb**: a CLB instance.
*   **alb**: an ALB instance.', example='slb'),
  serviceStatus?: string(name='ServiceStatus', description='The state of the endpoint service. Valid values:

*   **Creating**: The endpoint service is being created.
*   **Pending**: The endpoint service is being modified.
*   **Active**: The endpoint service is available.
*   **Deleting**: The endpoint service is being deleted.
*   **Inactive**: The endpoint service is unavailable.', example='Active'),
  serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Indicates whether IPv6 is enabled for the endpoint service. Valid values:

*   **true**
*   **false** (default)', example='false'),
  serviceType?: string(name='ServiceType', description='The type of the endpoint.

Only **Interface** is returned. The value indicates the interface endpoint. Then, you can specify ALB and CLB instances as service resources for the endpoint service.', example='Interface'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Indicates whether the domain name of the nearest endpoint that is associated with the endpoint service is resolved first. Valid values:

*   **true** (default)
*   **false**', example='true'),
  zones?: [ string ](name='Zones', description='The zones to which the service resources belong.'),
}

model GetVpcEndpointServiceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetVpcEndpointServiceAttributeResponseBody(name='body'),
}

async function getVpcEndpointServiceAttribute(request: GetVpcEndpointServiceAttributeRequest): GetVpcEndpointServiceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetVpcEndpointServiceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ListTagResourcesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.

*   If this is your first request or no next requests are to be sent, you do not need to specify this parameter.
*   If a next request is to be sent, you must specify the token that is obtained from the previous request as the value of **NextToken**.', example='caeba0bbb2be03f84eb48b699f0a****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the resource resides. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The resource IDs. You can specify up to 50 resource IDs.', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   **vpcendpoint**: endpoint
*   **vpcendpointservice**: endpoint service', example='vpcendpoint', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the resource. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key can be up to 64 characters in length and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The tag key must start with a letter but cannot start with `aliyun` or `acs:`. The tag key cannot contain `http://` or `https://`.', example='FinanceDept'),
      value?: string(name='Value', description='The value of tag N to add to the resource. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The tag value must start with a letter but cannot start with `aliyun` or `acs:`. The tag value cannot contain `http://` or `https://`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The tags to add to the resource.', position='Query'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of NextToken that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
  tagResources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The resource ID.', example='ep-hp3i05294c2d2d******'),
      resourceType?: string(name='ResourceType', description='The type of the resource. Valid values:

*   **vpcendpoint**: endpoint
*   **vpcendpointservice**: endpoint service', example='vpcendpoint'),
      tagKey?: string(name='TagKey', description='The key of tag N added to the resource.', example='endpoint'),
      tagValue?: string(name='TagValue', description='The value of tag N added to the resource.', example='FinanceJoshua'),
    }
  ](name='TagResources', description='The resources to which the tags are added.'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

/**
  * *   You must specify **ResourceId.N** or **Tag.N** in the request to specify the object that you want to query.
  * *   **Tag.N** is a resource tag that consists of a key-value pair (Tag.N.Key and Tag.N.Value). If you specify only **Tag.N.Key**, all tag values that are associated with the specified key are returned. If you specify only **Tag.N.Value**, an error message is returned.
  * *   If you specify **Tag.N** and **ResourceId.N** to filter tags, **ResourceId.N** must match all specified key-value pairs.
  * *   If you specify multiple key-value pairs, resources that contain these key-value pairs are returned.
  *
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagResources', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointConnectionsRequest {
  connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The endpoint connection is being modified.
*   **Connecting**: The endpoint connection is being established.
*   **Connected**: The endpoint connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The connection is being deleted.
*   **ServiceDeleted**: The corresponding endpoint service has been deleted.', example='Disconnected', position='Query'),
  endpointId?: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  endpointOwnerId?: long(name='EndpointOwnerId', description='The ID of the Alibaba Cloud account to which the endpoint belongs.', example='25346073170691****', minimum=0, maximum=9223372036854775807, position='Query'),
  eniId?: string(name='EniId', description='The ID of the endpoint elastic network interface (ENI).', example='eni-hp32lk0pyv6o94hs****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1** to **50**. Default value: **50**.', example='50', minimum=1, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the value to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint connection.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  replacedResourceId?: string(name='ReplacedResourceId', description='The ID of the replaced service resource in smooth migration scenarios.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the endpoint belongs.', example='rg-acfmy*****', position='Query'),
  resourceId?: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  serviceId?: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model ListVpcEndpointConnectionsResponseBody = {
  connections?: [ 
    {
      bandwidth?: int32(name='Bandwidth', description='The bandwidth of the endpoint connection. Valid values: **1024 to 10240**. Unit: Mbit/s.', example='1024'),
      connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The connection is being modified.
*   **Connecting**: The connection is being established.
*   **Connected**: The connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The connection is being deleted.
*   **ServiceDeleted**: The corresponding endpoint service has been deleted.', example='Disconnected'),
      endpointId?: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****'),
      endpointOwnerId?: long(name='EndpointOwnerId', description='The ID of the Alibaba Cloud account to which the endpoint belongs.', example='25346073170691****'),
      endpointVpcId?: string(name='EndpointVpcId', description='The ID of the virtual private cloud (VPC) to which the endpoint belongs.', example='vpc-hp356stwkxg3fn2xe****'),
      modifiedTime?: string(name='ModifiedTime', description='The time when the endpoint connection was modified.', example='2021-09-28T10:34:46Z'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the endpoint belongs.', example='rg-acfmw353z35v***'),
      resourceOwner?: boolean(name='ResourceOwner', description='Indicates whether the endpoint and the endpoint service belong to the same Alibaba Cloud account. Valid values:

*   **true**
*   **false**', example='true'),
      serviceId?: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****'),
      zones?: [ 
        {
          eniId?: string(name='EniId', description='The endpoint ENI ID.', example='eni-hp32lk0pyv6o94hs****'),
          replacedEniId?: string(name='ReplacedEniId', description='The ID of the replaced endpoint ENI in smooth migration scenarios.', example='eni-hp32lk0pyv6o94hs****'),
          replacedResourceId?: string(name='ReplacedResourceId', description='The ID of the replaced service resource in smooth migration scenarios.', example='lb-hp32z1wp5peaoox2q****'),
          resourceId?: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****'),
          vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the endpoint belongs.', example='vsw-hp3uf6045ljdhd5zr****'),
          zoneDomain?: string(name='ZoneDomain', description='The domain name of the zone.', example='ep-hp34jaz8ykl0exwt****-cn-huhehaote.epsrv-hp3vpx8yqxblby3i****.cn-huhehaote-b.privatelink.aliyuncs.com'),
          zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-huhehaote-b'),
          zoneStatus?: string(name='ZoneStatus', description='The state of the zone. Valid values:

*   **Creating**: The zone is being created.
*   **Wait**: The zone is to be connected.
*   **Connected**: The zone is connected.
*   **Deleting**: The zone is being deleted.
*   **Disconnecting**: The zone is being disconnected.
*   **Disconnected**: The zone is disconnected.
*   **Connecting**: The zone is being connected.
*   **Migrating**: The zone is being migrated.
*   **Migrated**: The zone is migrated.', example='Connected'),
        }
      ](name='Zones', description='The zones.'),
    }
  ](name='Connections', description='The endpoint connections.'),
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  totalCount?: string(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model ListVpcEndpointConnectionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointConnectionsResponseBody(name='body'),
}

async function listVpcEndpointConnections(request: ListVpcEndpointConnectionsRequest): ListVpcEndpointConnectionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointConnections', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointSecurityGroupsRequest {
  endpointId: string(name='EndpointId', description='The ID of the endpoint that you want to query.', example='ep-hp33b2e43fays7s8****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values:**1** to **50**. Default value: **50**.', example='50', minimum=0, maximum=50, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint that you want to query.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
}

model ListVpcEndpointSecurityGroupsResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned per page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  securityGroups?: [ 
    {
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group that is associated with the endpoint.', example='sg-hp33bw6ynvm2yb0e****'),
      securityGroupStatus?: string(name='SecurityGroupStatus'),
    }
  ](name='SecurityGroups', description='The information about the security groups.'),
  totalCount?: int32(name='TotalCount'),
}

model ListVpcEndpointSecurityGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointSecurityGroupsResponseBody(name='body'),
}

async function listVpcEndpointSecurityGroups(request: ListVpcEndpointSecurityGroupsRequest): ListVpcEndpointSecurityGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointSecurityGroups', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointServiceResourcesRequest {
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1** to **50**. Default value: **50**.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of NextToken that is returned from the last call.', example='FFmyTO70tTpLG6I3FmYAXGKPd****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the service resource.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model ListVpcEndpointServiceResourcesResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='FFmyTO70tTpLG6I3FmYAXGKPd****'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  resources?: [ 
    {
      autoAllocatedEnabled?: boolean(name='AutoAllocatedEnabled', description='Indicates whether automatic resource allocation is enabled. Valid values:

*   **true**
*   **false**', example='false'),
      ip?: string(name='Ip', description='The IP address of the service resource.', example='192.168.10.23'),
      regionId?: string(name='RegionId', description='The ID of the region where the service resource is deployed.', example='cn-huhehaote'),
      relatedDeprecatedEndpointCount?: long(name='RelatedDeprecatedEndpointCount', description='The number of endpoints that are associated with the service resource that is smoothly migrated.', example='10'),
      relatedEndpointCount?: long(name='RelatedEndpointCount', description='The number of endpoints that are associated with the service resource.', example='10'),
      resourceId?: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****'),
      resourceSupportIPv6?: boolean(name='ResourceSupportIPv6', description='Indicates whether IPv6 is enabled for the endpoint service. Valid values:

*   **true**
*   **false**', example='false'),
      resourceType?: string(name='ResourceType', description='The type of the service resource.

Only **slb** is returned. This value indicates a Classic Load Balancer (CLB) instance.', example='slb'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the service resource belongs.', example='vsw-hp3uf6045ljdhd5zr****'),
      vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the service resource belongs.', example='vpc-hp356stwkxg3fn2xe****'),
      zoneId?: string(name='ZoneId', description='The ID of the zone to which the service resource belongs.', example='cn-huhehaote-b'),
    }
  ](name='Resources', description='The service resources.'),
}

model ListVpcEndpointServiceResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointServiceResourcesResponseBody(name='body'),
}

async function listVpcEndpointServiceResources(request: ListVpcEndpointServiceResourcesRequest): ListVpcEndpointServiceResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointServiceResources', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointServiceUsersRequest {
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1 to 50**. Default value: **50**.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the value to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service that you want to query.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  userId?: long(name='UserId', description='The ID of the Alibaba Cloud account in the whitelist of the endpoint service.', example='12345678', minimum=0, maximum=9223372036854775807, position='Query'),
  userListType?: string(name='UserListType', description='The type of the user list in the whitelist of the endpoint service.', example='Users', position='Query'),
}

model ListVpcEndpointServiceUsersResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  totalCount?: string(name='TotalCount', description='The total number of entries returned.', example='3'),
  userARNs?: [ 
    {
      userARN?: string(name='UserARN', description='The whitelist in the format of ARN.', example='acs:ram:*::*'),
    }
  ](name='UserARNs', description='The whitelists in the format of Aliyun Resource Name (ARN).'),
  users?: [ 
    {
      userId?: long(name='UserId', description='The ID of the Alibaba Cloud account in the whitelist of the endpoint service.', example='12345678'),
    }
  ](name='Users', description='The Alibaba Cloud accounts in the whitelist of the endpoint service.'),
}

model ListVpcEndpointServiceUsersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointServiceUsersResponseBody(name='body'),
}

async function listVpcEndpointServiceUsers(request: ListVpcEndpointServiceUsersRequest): ListVpcEndpointServiceUsersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointServiceUsers', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointServicesRequest {
  autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Specifies whether to automatically accept endpoint connection requests. Valid values:

*   **true**
*   **false** (default)', example='false', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1** to **50**. Default value: **50**.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of NextToken that is returned from the last call.', example='FFmyTO70tTpLG6I3FmYAXGKPd****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****', position='Query'),
  resourceId?: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  serviceBusinessStatus?: string(name='ServiceBusinessStatus', description='The service state of the endpoint service. Valid values:

*   **Normal**: The endpoint service runs as expected.
*   **FinancialLocked**: The endpoint service is locked due to overdue payments.', example='Normal', position='Query'),
  serviceId?: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****', position='Query'),
  serviceResourceType?: string(name='ServiceResourceType', description='The type of the service resource. Valid values:

*   **slb**: a Classic Load Balancer (CLB) instance
*   **alb**: an Application Load Balancer (ALB) instance', example='slb', position='Query'),
  serviceStatus?: string(name='ServiceStatus', description='The state of the endpoint service. Valid values:

*   **Creating**: The endpoint service is being created.
*   **Pending**: The endpoint service is being modified.
*   **Active**: The endpoint service is available.
*   **Deleting**: The endpoint service is being deleted', example='Active', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs:`. It cannot contain `http://` or `https://`.', example='FinanceDept'),
      value?: string(name='Value', description='The value of the tag. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:

*   **true** (default)
*   **false**', example='true', position='Query'),
}

model ListVpcEndpointServicesResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned per page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='FFmyTO70tTpLG6I3FmYAXGKPd****'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  services?: [ 
    {
      autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Indicates whether endpoint connection requests are automatically accepted. Valid values:

*   **true**: Endpoint connection requests are automatically accepted.
*   **false**: Endpoint connection requests are not automatically accepted.', example='true'),
      connectBandwidth?: int32(name='ConnectBandwidth', description='The default maximum bandwidth of the endpoint connection. Unit: Mbit/s.', example='1024'),
      createTime?: string(name='CreateTime', description='The time when the endpoint service was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2021-09-24T17:15:10Z'),
      maxBandwidth?: int32(name='MaxBandwidth', description='The maximum bandwidth of the endpoint connection. Unit: Mbit/s.', example='1024'),
      minBandwidth?: int32(name='MinBandwidth', description='The minimum bandwidth of the endpoint connection. Unit: Mbit/s.', example='100'),
      payer?: string(name='Payer', description='The payer. Valid values:

*   **Endpoint**: service consumer
*   **EndpointService**: service provider', example='Endpoint'),
      regionId?: string(name='RegionId', description='The region ID of the endpoint service.', example='cn-huhehaote'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-acfmy*****'),
      serviceBusinessStatus?: string(name='ServiceBusinessStatus', description='The service state of the endpoint service. Valid values:

*   **Normal**: The endpoint service runs as expected.
*   **FinancialLocked**: The endpoint service is locked due to overdue payments.', example='Normal'),
      serviceDescription?: string(name='ServiceDescription', description='The description of the endpoint service.', example='This is my EndpointService.'),
      serviceDomain?: string(name='ServiceDomain', description='The domain name of the endpoint service.', example='epsrv-hp3vpx8yqxblby3i****.cn-huhehaote.privatelink.aliyuncs.com'),
      serviceId?: string(name='ServiceId', description='The ID of the endpoint service.', example='epsrv-hp3vpx8yqxblby3i****'),
      serviceName?: string(name='ServiceName', description='The name of the endpoint service.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****'),
      serviceResourceType?: string(name='ServiceResourceType', description='The type of the service resource. Valid values:

*   **slb**: Classic Load Balancer (CLB) instance
*   **alb**: Application Load Balancer (ALB) instance
*   **nlb**: Network Load Balancer (NLB) instance', example='slb'),
      serviceStatus?: string(name='ServiceStatus', description='The state of the endpoint service. Valid values:

*   **Creating**: The endpoint service is being created.
*   **Pending**: The endpoint service is being modified.
*   **Active**: The endpoint service is available.
*   **Deleting**: The endpoint service is being deleted.', example='Active'),
      serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Indicates whether the endpoint service supports IPv6. Valid values:

*   **true**
*   **false**', example='false'),
      serviceType?: string(name='ServiceType', description='The type of the endpoint service.

*   Only **Interface** may be returned. You can specify CLB, ALB, and NLB instances as the service resources of the endpoint service.', example='Interface'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of the tag added to the resource.', example='FinanceDept'),
          value?: string(name='Value', description='The value of the tag added to the resource.', example='FinanceJoshua'),
        }
      ](name='Tags', description='The tags added to the resource.'),
      zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Indicates whether zone affinity is enabled. Valid values:

*   **true**
*   **false**', example='true'),
    }
  ](name='Services', description='The endpoint services.'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='12'),
}

model ListVpcEndpointServicesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointServicesResponseBody(name='body'),
}

async function listVpcEndpointServices(request: ListVpcEndpointServicesRequest): ListVpcEndpointServicesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointServices', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointServicesByEndUserRequest {
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1** to **50**. Default value: **50**.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the value to the value of **NextToken** that is returned from the last call.', example='FFmyTO70tTpLG6I3FmYAXGKPd****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~DescribeRegions~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****', position='Query'),
  serviceId?: string(name='ServiceId', description='The ID of the endpoint service that you want to query.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service that you want to query.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3xdsq46ael67lo****', position='Query'),
  serviceType?: string(name='ServiceType', description='The type of the endpoint service.

Set the value to **Interface**. You can specify CLB and ALB instances as service resources for the endpoint service.', example='Interface', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs:`. It cannot contain `http://` or `https://`.', example='FinanceDept'),
      value?: string(name='Value', description='The value of the tag. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
}

model ListVpcEndpointServicesByEndUserResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned per page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='FFmyTO70tTpLG6I3FmYAXGKPd****'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  services?: [ 
    {
      payer?: string(name='Payer', description='The payer. Valid values:

*   **Endpoint**: the service consumer
*   **EndpointService**: the service provider', example='Endpoint'),
      resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-acfmy*****'),
      serviceDomain?: string(name='ServiceDomain', description='The domain name of the endpoint service that can be associated with the endpoint.', example='epsrv-hp3vpx8yqxblby3i****.cn-huhehaote.privatelink.aliyuncs.com'),
      serviceId?: string(name='ServiceId', description='The ID of the endpoint service that can be associated with the endpoint.', example='epsrv-hp3vpx8yqxblby3i****'),
      serviceName?: string(name='ServiceName', description='The name of the endpoint service that can be associated with the endpoint.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****'),
      serviceResourceType?: string(name='ServiceResourceType', description='The type of the service resource. Valid values:

*   **slb**: Classic Load Balancer (CLB) instance
*   **alb**: Application Load Balancer (ALB) instance
*   **nlb**: Network Load Balancer (NLB) instance', example='slb'),
      serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Indicates whether IPv6 is enabled. Valid values:

*   **true**
*   **false**', example='false'),
      serviceType?: string(name='ServiceType', description='The type of the endpoint service.

Only **Interface** is returned, which indicates an interface endpoint. You can specify **CLB** and **ALB** instances as service resources.', example='Interface'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of the tag.', example='FinanceDept'),
          value?: string(name='Value', description='The value of the tag.', example='FinanceJoshua'),
        }
      ](name='Tags', description='The list of tags.'),
      zones?: [ string ](name='Zones', description='The zones of the endpoint service that can be associated with the endpoint.'),
    }
  ](name='Services', description='The endpoint services.'),
  totalCount?: string(name='TotalCount', description='The total number of entries returned.', example='29'),
}

model ListVpcEndpointServicesByEndUserResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointServicesByEndUserResponseBody(name='body'),
}

async function listVpcEndpointServicesByEndUser(request: ListVpcEndpointServicesByEndUserRequest): ListVpcEndpointServicesByEndUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointServicesByEndUser', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointZonesRequest {
  endpointId: string(name='EndpointId', description='The ID of the endpoint for which you want to query zones.

After you specify an endpoint ID, the system queries the zones of the specified endpoint.', example='ep-hp33b2e43fays7s8****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page. Valid values: **1** to **50**. Default value: **50**.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
}

model ListVpcEndpointZonesResponseBody = {
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50'),
  nextToken?: string(name='NextToken', description='The returned value of NextToken is a pagination token, which can be used in the next request to retrieve a new page of results. Valid values:

*   If no value is returned for **NextToken**, no next requests are performed.
*   If a value is returned for **NextToken**, the value can be used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  totalCount?: int32(name='TotalCount'),
  zones?: [ 
    {
      eniId?: string(name='EniId', description='The ID of the endpoint ENI.', example='eni-hp3c8qj1tyct8aqy****'),
      eniIp?: string(name='EniIp', description='The IP address of the endpoint ENI.', example='192.168.2.23'),
      regionId?: string(name='RegionId', description='The region ID of the endpoint.', example='cn-huhehaote'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch in the zone. The system automatically creates an endpoint elastic network interface (ENI) in the vSwitch.', example='vsw-hjkshjvdkdvd****'),
      zoneDomain?: string(name='ZoneDomain', description='The domain name of the zone.

After the endpoint in the zone is connected to the endpoint service, you can access the service resources of the endpoint service by using the domain name of the zone.', example='ep-hp3f033dp24c5yc9****-cn-huhehaote.epsrv-hp3itcpowf37m3d5****.cn-huhehaote-a.privatelink.aliyuncs.com'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-huhehaote-a'),
      zoneIpv6Address?: string(name='ZoneIpv6Address', description='Indicates whether the endpoint service supports IPv6. Valid values:

*   **true**
*   **false** (default)', example='false'),
      zoneStatus?: string(name='ZoneStatus', description='The state of the zone. Valid values:

*   **Creating**: The zone is being created.
*   **Wait**: The zone is to be connected.
*   **Connected**: The zone is connected.
*   **Deleting**: The zone is being deleted.
*   **Disconnecting**: The zone is being disconnected.
*   **Disconnected**: The zone is disconnected.
*   **Connecting**: The zone is being connected.', example='Wait'),
    }
  ](name='Zones', description='The information about the zones.'),
}

model ListVpcEndpointZonesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointZonesResponseBody(name='body'),
}

async function listVpcEndpointZones(request: ListVpcEndpointZonesRequest): ListVpcEndpointZonesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpointZones', 'POST', '/', 'json', false, 'json', request);
}

model ListVpcEndpointsRequest {
  connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The endpoint connection is being modified.
*   **Connecting**: The endpoint connection is being established.
*   **Connected**: The endpoint connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The connection is being deleted.
*   **ServiceDeleted**: The corresponding endpoint service has been deleted.', example='Disconnected', position='Query'),
  endpointId?: string(name='EndpointId', description='The ID of the endpoint.', example='ep-hp33b2e43fays7s8****', position='Query'),
  endpointName?: string(name='EndpointName', description='The name of the endpoint.', example='test', position='Query'),
  endpointStatus?: string(name='EndpointStatus', description='The state of the endpoint. Valid values:

*   **Creating**: The endpoint is being created.
*   **Active**: The endpoint is available.
*   **Pending**: The endpoint is being modified.
*   **Deleting**: The endpoint is being deleted.', example='Active', position='Query'),
  endpointType?: string(name='EndpointType', description='The type of the endpoint.

Set the value to **Interface**. Then, you can specify Application Load Balancer (ALB) and Classic Load Balancer (CLB) instances as service resources for the endpoint service.', example='Interface', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50', minimum=0, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-huhehaote', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='1', position='Query'),
  serviceName?: string(name='ServiceName', description='The name of the endpoint service with which the endpoint is associated.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3vpx8yqxblby3i****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of the tag. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key must be 1 to 64 characters in length and cannot start with `aliyun` or `acs:`. It cannot contain `http://` or `https://`.', example='FinanceDept'),
      value?: string(name='Value', description='The value of the tag. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the VPC to which the endpoint belongs.', example='vpc-fdjkf789dfdfdfde****', position='Query'),
}

model ListVpcEndpointsResponseBody = {
  endpoints?: [ 
    {
      bandwidth?: long(name='Bandwidth', description='The bandwidth of the endpoint connection. Unit: Mbit/s.', example='1024'),
      connectionStatus?: string(name='ConnectionStatus', description='The state of the endpoint connection. Valid values:

*   **Pending**: The endpoint connection is being modified.
*   **Connecting**: The endpoint connection is being established.
*   **Connected**: The endpoint connection is established.
*   **Disconnecting**: The endpoint is being disconnected from the endpoint service.
*   **Disconnected**: The endpoint is disconnected from the endpoint service.
*   **Deleting**: The endpoint connection is being deleted.
*   **ServiceDeleted**: The corresponding service is deleted.', example='Disconnected'),
      createTime?: string(name='CreateTime', description='The time when the endpoint was created.', example='2021-09-24T18:00:07Z'),
      endpointBusinessStatus?: string(name='EndpointBusinessStatus', description='The service state of the endpoint. Valid values:

*   **Normal**: The endpoint runs as expected.
*   **FinancialLocked**: The endpoint is locked due to overdue payments.', example='Normal'),
      endpointDescription?: string(name='EndpointDescription', description='The description of the endpoint.', example='This is my Endpoint.'),
      endpointDomain?: string(name='EndpointDomain', description='The domain name of the endpoint.', example='ep-hp33b2e43fays7s8****.epsrv-hp3xdsq46ael67lo****.cn-huhehaote.privatelink.aliyuncs.com'),
      endpointId?: string(name='EndpointId', description='The ID of the endpoint.', example='ep-hp33b2e43fays7s8****'),
      endpointName?: string(name='EndpointName', description='The name of the endpoint.', example='test'),
      endpointStatus?: string(name='EndpointStatus', description='The state of the endpoint. Valid values:

*   **Creating**: The endpoint is being created.
*   **Active**: The endpoint is available.
*   **Pending**: The endpoint is being modified.
*   **Deleting**: The endpoint is being deleted.', example='Active'),
      endpointType?: string(name='EndpointType', description='The type of the endpoint.

Only **Interface** may be returned, which indicates an interface endpoint. You can specify Application Load Balancer (ALB) instances, Classic Load Balancer (CLB) instances, and Network Load Balancer (NLB) instances as service resources.', example='Interface'),
      regionId?: string(name='RegionId', description='The region ID of the endpoint.', example='cn-huhehaote'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='1'),
      resourceOwner?: boolean(name='ResourceOwner', description='Indicates whether the endpoint and the endpoint service belong to the same Alibaba Cloud account. Valid values:

*   **true**
*   **false**', example='true'),
      serviceId?: string(name='ServiceId', description='The ID of the endpoint service that is associated with the endpoint.', example='epsrv-hp3vpx8yqxblby3i****'),
      serviceName?: string(name='ServiceName', description='The name of the endpoint service that is associated with the endpoint.', example='com.aliyuncs.privatelink.cn-huhehaote.epsrv-hp3xdsq46ael67lo****'),
      tags?: [ 
        {
          key?: string(name='Key', description='The key of the tag added to the resource.', example='FinanceDept'),
          value?: string(name='Value', description='The value of the tag added to the resource.', example='FinanceJoshua'),
        }
      ](name='Tags', description='The tags added to the resource.'),
      vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the endpoint belongs.', example='vpc-hp356stwkxg3fn2xe****'),
      zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Indicates whether the domain name of the nearest endpoint that is associated with the endpoint service is resolved first. Valid values:

*   **true**
*   **false**', example='true'),
    }
  ](name='Endpoints', description='The information about the endpoints.'),
  maxResults?: int32(name='MaxResults', description='The number of entries returned on each page.', example='50'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. Valid values:

*   If this is your first request and no next requests are to be performed, you do not need to specify this parameter.
*   If a next request is to be performed, set the parameter to the value of **NextToken** that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a****'),
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='12'),
}

model ListVpcEndpointsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListVpcEndpointsResponseBody(name='body'),
}

async function listVpcEndpoints(request: ListVpcEndpointsRequest): ListVpcEndpointsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListVpcEndpoints', 'POST', '/', 'json', false, 'json', request);
}

model OpenPrivateLinkServiceRequest {
  ownerId?: long(name='OwnerId', position='Query'),
}

model OpenPrivateLinkServiceResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.', example='3245****'),
  requestId?: string(name='RequestId', description='The request ID.', example='427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D'),
}

model OpenPrivateLinkServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: OpenPrivateLinkServiceResponseBody(name='body'),
}

async function openPrivateLinkService(request: OpenPrivateLinkServiceRequest): OpenPrivateLinkServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'OpenPrivateLinkService', 'POST', '/', 'json', false, 'json', request);
}

model RemoveUserFromVpcEndpointServiceRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the AccessKey pair, the permissions of the RAM user, and the required parameters. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service for which you want to remove the account ID from the whitelist. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  userARN?: string(name='UserARN', description='The whitelist in the format of Aliyun Resource Name (ARN).', example='acs:ram:*:<account-id>:*', position='Query'),
  userId?: long(name='UserId', description='The account ID that you want to remove from the whitelist.', example='12345678', minimum=0, maximum=9223372036854775807, position='Query'),
}

model RemoveUserFromVpcEndpointServiceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model RemoveUserFromVpcEndpointServiceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RemoveUserFromVpcEndpointServiceResponseBody(name='body'),
}

/**
  * *   Before you remove an account ID from the whitelist of an endpoint service, make sure that the endpoint service is in the **Active** state. You can call the [GetVpcEndpointServiceAttribute](~~469330~~) operation to query the status of the endpoint service.
  * *   You cannot repeatedly call the **RemoveUserFromVpcEndpointService** operation to remove the ID of an Alibaba Cloud account from the whitelist of an endpoint service within a specified period of time.
  *
 */
async function removeUserFromVpcEndpointService(request: RemoveUserFromVpcEndpointServiceRequest): RemoveUserFromVpcEndpointServiceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RemoveUserFromVpcEndpointService', 'POST', '/', 'json', false, 'json', request);
}

model RemoveZoneFromVpcEndpointRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The ID of the endpoint for which you want to delete the zone.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint for which you want to delete the zone. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  zoneId: string(name='ZoneId', description='The ID of the zone that you want to delete.', example='eu-west-1a', position='Query'),
}

model RemoveZoneFromVpcEndpointResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760'),
}

model RemoveZoneFromVpcEndpointResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RemoveZoneFromVpcEndpointResponseBody(name='body'),
}

/**
  * *   **RemoveZoneFromVpcEndpoint** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [ListVpcEndpointZones](~~183560~~) operation to check whether the zone of the endpoint is deleted.
  *     *   If the zone of the endpoint is in the **Deleting** state, the zone is being deleted.
  *     *   If the zone cannot be queried, the zone is deleted.
  * *   You cannot repeatedly call the **RemoveZoneFromVpcEndpoint** operation to delete a zone of an endpoint within a specified period of time.
  *
 */
async function removeZoneFromVpcEndpoint(request: RemoveZoneFromVpcEndpointRequest): RemoveZoneFromVpcEndpointResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RemoveZoneFromVpcEndpoint', 'POST', '/', 'json', false, 'json', request);
}

model TagResourcesRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.

>  If you do not specify this parameter, the system automatically uses the request ID as the client token.******** The request ID may be different for each request.', example='123e4567-e89b-12d3-a456-426655440000', position='Body'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Body'),
  regionId: string(name='RegionId', description='The region ID of the PrivateLink instance.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Body'),
  resourceId: [ string ](name='ResourceId', description='The resource IDs. Up to 50 resource IDs are supported.', position='Body'),
  resourceType: string(name='ResourceType', description='The type of resource. Valid values:

*   **vpcendpoint**: endpoint
*   **vpcendpointservice**: endpoint service', example='1', position='Body'),
  tag: [ 
    {
      key: string(name='Key', description='The key of tag N to add to the resource. You can specify up to 20 tag keys. The tag key cannot be an empty string.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `aliyun` or `acs:`.', example='FinanceDept'),
      value: string(name='Value', description='The value of tag N to add to the resource. You can specify up to 20 tag values. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:` or `aliyun`.', example='FinanceJoshua'),
    }
  ](name='Tag', description='The tags to add to the resources.', position='Body'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='C46FF5A8-C5F0-4024-8262-B16B639225A0'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

/**
  * > You can add up to 20 tags to an instance. Before you add tags to a resource, Alibaba Cloud checks the number of existing tags of the resource. If the maximum number is reached, an error message is returned.
  *
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TagResources', 'POST', '/', 'json', true, 'form', request);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to remove all tags from the resource. Valid values:

*   **true**: removes all tags from the resource.
*   **false**: does not remove all tags from the resource.

>  If you specify both this parameter and **TagKey**, this parameter is invalid.', example='true', position='Body'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.

>  If you do not specify this parameter, the system automatically uses the request ID as the client token.******** The request ID may be different for each request.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0', position='Body'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a `2xx HTTP` status code is returned and the operation is performed.', example='false', position='Body'),
  regionId: string(name='RegionId', description='The region ID of the PrivateLink instance.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Body'),
  resourceId: [ string ](name='ResourceId', description='The resource IDs. You can specify up to 50 resource IDs.', position='Body'),
  resourceType: string(name='ResourceType', description='The resource type. Valid values:

*   **vpcendpoint**: endpoint
*   **vpcendpointservice**: endpoint service', example='slb', position='Body'),
  tagKey?: [ string ](name='TagKey', description='The keys of the tags that you want to remove from the resource. You can specify up to 20 tag keys.', position='Body'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UntagResources', 'POST', '/', 'json', true, 'form', request);
}

model UpdateVpcEndpointAttributeRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='true', position='Query'),
  endpointDescription?: string(name='EndpointDescription', description='The description of the endpoint.

The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.', example='This is my Endpoint.', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID whose attributes you want to modify.', example='ep-hp33b2e43fays7s8****', position='Query'),
  endpointName?: string(name='EndpointName', description='The name of the endpoint.

The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\\_), and hyphens (-). The name must start with a letter.', example='test', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint whose attributes you want to modify. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
}

model UpdateVpcEndpointAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model UpdateVpcEndpointAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateVpcEndpointAttributeResponseBody(name='body'),
}

/**
  * You cannot repeatedly call the **UpdateVpcEndpointAttribute** operation to modify the attributes of an endpoint that belongs to an Alibaba Cloud account within a specified period of time.
  *
 */
async function updateVpcEndpointAttribute(request: UpdateVpcEndpointAttributeRequest): UpdateVpcEndpointAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateVpcEndpointAttribute', 'POST', '/', 'json', false, 'json', request);
}

model UpdateVpcEndpointConnectionAttributeRequest {
  bandwidth?: int32(name='Bandwidth', description='The bandwidth of the endpoint connection that you want to modify. Unit: Mbit/s. Valid values: **3072** to **10240**.

>  The bandwidth of an endpoint connection is in the range of **100** to **10,240** Mbit/s. The default bandwidth is **3,072** Mbit/s. When the endpoint is connected to the endpoint service, the default bandwidth is the minimum bandwidth. In this case, the connection bandwidth range is **3,072** to **10,240** Mbit/s. If Classic Load Balancer (CLB) instances or Application Load Balancer (ALB) instances are specified as service resources, you can modify the endpoint connection bandwidth based on your business requirements. This parameter is invalid if Network Load Balancer (NLB) instances are specified as service resources.', example='1000', minimum=0, maximum=2147483647, position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint connection whose bandwidth you want to modify. You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='eu-west-1', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
}

model UpdateVpcEndpointConnectionAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model UpdateVpcEndpointConnectionAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateVpcEndpointConnectionAttributeResponseBody(name='body'),
}

/**
  * You cannot repeatedly call the **UpdateVpcEndpointConnectionAttribute** operation to modify the bandwidth of an endpoint connection that belongs to an Alibaba Cloud account within a specified period of time.
  *
 */
async function updateVpcEndpointConnectionAttribute(request: UpdateVpcEndpointConnectionAttributeRequest): UpdateVpcEndpointConnectionAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateVpcEndpointConnectionAttribute', 'POST', '/', 'json', false, 'json', request);
}

model UpdateVpcEndpointServiceAttributeRequest {
  autoAcceptEnabled?: boolean(name='AutoAcceptEnabled', description='Specifies whether to automatically accept endpoint connection requests. Valid values:

*   **true**
*   **false**', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  connectBandwidth?: int32(name='ConnectBandwidth', description='The default maximum bandwidth of the endpoint connection. Unit: Mbit/s. Default value: **3072**.

Valid values: **100** to **10240**.

>  You can specify this parameter only if you specify Classic Load Balancer (CLB) instances or Application Load Balancer (ALB) instances as service resources.', example='200', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint service.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  serviceDescription?: string(name='ServiceDescription', description='The description of the endpoint service.', example='This is my EndpointService.', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  serviceSupportIPv6?: boolean(name='ServiceSupportIPv6', description='Specifies whether to enable IPv6. Valid values:

*   **true**
*   **false** (default)', example='false', position='Query'),
  zoneAffinityEnabled?: boolean(name='ZoneAffinityEnabled', description='Specifies whether to first resolve the domain name of the nearest endpoint that is associated with the endpoint service. Valid values:

*   **true** (default)
*   **false**', example='true', position='Query'),
}

model UpdateVpcEndpointServiceAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8D8992C1-6712-423C-BAC5-E5E817484C6B'),
}

model UpdateVpcEndpointServiceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateVpcEndpointServiceAttributeResponseBody(name='body'),
}

/**
  * You cannot repeatedly call the **UpdateVpcEndpointServiceAttribute** operation to modify the attributes of an endpoint service that belongs to an Alibaba Cloud account within a specified period of time.
  *
 */
async function updateVpcEndpointServiceAttribute(request: UpdateVpcEndpointServiceAttributeRequest): UpdateVpcEndpointServiceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateVpcEndpointServiceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model UpdateVpcEndpointServiceResourceAttributeRequest {
  autoAllocatedEnabled: boolean(name='AutoAllocatedEnabled', description='Specifies whether to enable automatic resource allocation. Valid values:

*   **true**
*   **false**', example='true', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform a dry run. Valid values:

*   **true**: performs a dry run. The system checks the required parameters, request syntax, and limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false**: performs a dry run and sends the request. If the request passes the dry run, an HTTP 2xx status code is returned and the operation is performed. This is the default value.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the service resource is deployed.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The service resource ID.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the service resource.', example='cn-hangzhou-i', position='Query'),
}

model UpdateVpcEndpointServiceResourceAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model UpdateVpcEndpointServiceResourceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateVpcEndpointServiceResourceAttributeResponseBody(name='body'),
}

/**
  * You cannot repeatedly call the **UpdateVpcEndpointServiceResourceAttribute** operation to modify the attributes of a service resource that is added to an endpoint service within a specified period of time.
  *
 */
async function updateVpcEndpointServiceResourceAttribute(request: UpdateVpcEndpointServiceResourceAttributeRequest): UpdateVpcEndpointServiceResourceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateVpcEndpointServiceResourceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model UpdateVpcEndpointZoneConnectionResourceAttributeRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request.

You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters.', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   **true**: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and service limits. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   **false** (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  endpointId: string(name='EndpointId', description='The endpoint ID.', example='ep-hp33b2e43fays7s8****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the endpoint connection whose bandwidth you want to modify.

You can call the [DescribeRegions](~~120468~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceAllocateMode?: string(name='ResourceAllocateMode', description='The resource allocation mode. You can change the resource allocation mode only if the endpoint connection is in the **Disconnected** state. Valid values:

*   **Auto**: automatically and randomly allocates service resources. In this mode, the specified service resource is deleted.
*   **Manual**: manually allocates service resources. If you set the value to Manual, you must also specify the **ResourceId** and **ResourceType** parameters.', example='Auto', position='Query'),
  resourceId?: string(name='ResourceId', description='The ID of the service resource that you want to manually allocate or migrate in the zone where the endpoint connection is deployed.

> If **ResourceAllocateMode** is set to **Mannual**, or **ResourceReplaceMode** is set, this parameter is required.', example='lb-hp32z1wp5peaoox2q****', position='Query'),
  resourceReplaceMode?: string(name='ResourceReplaceMode', description='The migration mode of the service resource. Valid values:

*   **Graceful**: smooth migration. Service resources in the zone are smoothly migrated.
*   **Force**: forced migration. Service resources in the zone are forcefully migrated.

>  You need to specify this parameter only if you want to migrate service resources and the endpoint connection is in the **Connected** state. If you specify this parameter, you must also specify the **ResourceId** and **ResourceType** parameters.', example='Graceful', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the service resource. Valid values:

*   **slb**: a CLB instance that supports PrivateLink. In addition, the CLB instance is deployed in a VPC.
*   **alb**: an Application Load Balancer (ALB) instance that supports PrivateLink. In addition, the ALB instance is deployed in a VPC.

> If **ResourceAllocateMode** is set to **Mannual**, or **ResourceReplaceMode** is set, this parameter is required.', example='slb', position='Query'),
  serviceId: string(name='ServiceId', description='The endpoint service ID.', example='epsrv-hp3vpx8yqxblby3i****', position='Query'),
  zoneId: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-b', minimum=0, maximum=2147483647, position='Query'),
}

model UpdateVpcEndpointZoneConnectionResourceAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='0ED8D006-F706-4D23-88ED-E11ED28DCAC0'),
}

model UpdateVpcEndpointZoneConnectionResourceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateVpcEndpointZoneConnectionResourceAttributeResponseBody(name='body'),
}

/**
  * ### Prerequisites
  * By default, the feature of modifying a service resource of a zone to which an endpoint connection belongs is unavailable. To use this feature, log on to the [Quota Center console](https://quotas.console.aliyun.com/white-list-products/privatelink/quotas). Click Whitelist Quotas in the left-side navigation pane and click PrivateLink in the Networking section. On the page that appears, search for `privatelink_whitelist/svc_res_mgt_uat` and click Apply in the Actions column.
  * ### Usage notes
  * *   If the endpoint connection is in the **Disconnected** state, you can manually allocate the service resource in the zone.
  * *   If the endpoint connection is in the **Connected** state, you can manually migrate the service resource in the zone. In this case, the connection might be interrupted.
  * *   **UpdateVpcEndpointZoneConnectionResourceAttribute** is an asynchronous operation. After a request is sent, the system returns a request ID and runs the task in the background. You can call the [GetVpcEndpointServiceAttribute](~~469330~~) operation to check whether the service resource is modified.
  *     *   If the endpoint service is in the **Pending** state, the service resource is being modified.
  *     *   If the endpoint service is in the **Active** state, the service resource is modified.
  * *   You cannot repeatedly call the **UpdateVpcEndpointZoneConnectionResourceAttribute** operation to modify a service resource in the zone to which an endpoint connection belongs within a specified period of time.
  *
 */
async function updateVpcEndpointZoneConnectionResourceAttribute(request: UpdateVpcEndpointZoneConnectionResourceAttributeRequest): UpdateVpcEndpointZoneConnectionResourceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UpdateVpcEndpointZoneConnectionResourceAttribute', 'POST', '/', 'json', false, 'json', request);
}

