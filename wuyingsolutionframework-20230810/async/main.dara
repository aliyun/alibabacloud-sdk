/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'WuyingSolutionFramework';
  @version = '2023-08-10';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model SendOpsMessageToTerminalRequest {
  messageBody?: string(name='MessageBody', example='text', position='Query'),
  officeRegionId?: string(name='OfficeRegionId', example='cn-hangzhou', position='Query'),
  opsAction?: string(name='OpsAction', example='reboot', position='Query'),
  serialNo?: string(name='SerialNo', example='AAAAAAAAAAAA', position='Query'),
  waitForAck?: boolean(name='WaitForAck', example='true', position='Query'),
  waitForMsg?: boolean(name='WaitForMsg', example='false', position='Query'),
}

model SendOpsMessageToTerminalResponseBody = {
  code?: string(name='Code', example='200'),
  message?: string(name='Message', example='message'),
  requestId?: string(name='RequestId', example='2F015A9B-C457-5E5A-A58D-215CCEBC4A80'),
  success?: boolean(name='Success', example='true'),
}

model SendOpsMessageToTerminalResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendOpsMessageToTerminalResponseBody(name='body'),
}

/**
  * @param request  the request parameters of SendOpsMessageToTerminal  SendOpsMessageToTerminalRequest
  * @return SendOpsMessageToTerminalResponse
 */
async function sendOpsMessageToTerminal(request: SendOpsMessageToTerminalRequest): SendOpsMessageToTerminalResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendOpsMessageToTerminal', 'POST', '/', 'json', false, 'json', request);
}

