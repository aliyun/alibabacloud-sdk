/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'docmind-api';
  @version = '2022-07-29';
  @endpointRule = 'regional';
  @endpointMap = {
    ap-northeast-1 = 'docmind-api.aliyuncs.com',
    ap-northeast-2-pop = 'docmind-api.aliyuncs.com',
    ap-south-1 = 'docmind-api.aliyuncs.com',
    ap-southeast-1 = 'docmind-api.aliyuncs.com',
    ap-southeast-2 = 'docmind-api.aliyuncs.com',
    ap-southeast-3 = 'docmind-api.aliyuncs.com',
    ap-southeast-5 = 'docmind-api.aliyuncs.com',
    cn-beijing = 'docmind-api.aliyuncs.com',
    cn-beijing-finance-1 = 'docmind-api.aliyuncs.com',
    cn-beijing-finance-pop = 'docmind-api.aliyuncs.com',
    cn-beijing-gov-1 = 'docmind-api.aliyuncs.com',
    cn-beijing-nu16-b01 = 'docmind-api.aliyuncs.com',
    cn-chengdu = 'docmind-api.aliyuncs.com',
    cn-edge-1 = 'docmind-api.aliyuncs.com',
    cn-fujian = 'docmind-api.aliyuncs.com',
    cn-haidian-cm12-c01 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-bj-b01 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-finance = 'docmind-api.aliyuncs.com',
    cn-hangzhou-internal-prod-1 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-internal-test-1 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-internal-test-2 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-internal-test-3 = 'docmind-api.aliyuncs.com',
    cn-hangzhou-test-306 = 'docmind-api.aliyuncs.com',
    cn-hongkong = 'docmind-api.aliyuncs.com',
    cn-hongkong-finance-pop = 'docmind-api.aliyuncs.com',
    cn-huhehaote = 'docmind-api.aliyuncs.com',
    cn-huhehaote-nebula-1 = 'docmind-api.aliyuncs.com',
    cn-north-2-gov-1 = 'docmind-api.aliyuncs.com',
    cn-qingdao = 'docmind-api.aliyuncs.com',
    cn-qingdao-nebula = 'docmind-api.aliyuncs.com',
    cn-shanghai = 'docmind-api.aliyuncs.com',
    cn-shanghai-et15-b01 = 'docmind-api.aliyuncs.com',
    cn-shanghai-et2-b01 = 'docmind-api.aliyuncs.com',
    cn-shanghai-finance-1 = 'docmind-api.aliyuncs.com',
    cn-shanghai-inner = 'docmind-api.aliyuncs.com',
    cn-shanghai-internal-test-1 = 'docmind-api.aliyuncs.com',
    cn-shenzhen = 'docmind-api.aliyuncs.com',
    cn-shenzhen-finance-1 = 'docmind-api.aliyuncs.com',
    cn-shenzhen-inner = 'docmind-api.aliyuncs.com',
    cn-shenzhen-st4-d01 = 'docmind-api.aliyuncs.com',
    cn-shenzhen-su18-b01 = 'docmind-api.aliyuncs.com',
    cn-wuhan = 'docmind-api.aliyuncs.com',
    cn-wulanchabu = 'docmind-api.aliyuncs.com',
    cn-yushanfang = 'docmind-api.aliyuncs.com',
    cn-zhangbei = 'docmind-api.aliyuncs.com',
    cn-zhangbei-na61-b01 = 'docmind-api.aliyuncs.com',
    cn-zhangjiakou = 'docmind-api.aliyuncs.com',
    cn-zhangjiakou-na62-a01 = 'docmind-api.aliyuncs.com',
    cn-zhengzhou-nebula-1 = 'docmind-api.aliyuncs.com',
    eu-central-1 = 'docmind-api.aliyuncs.com',
    eu-west-1 = 'docmind-api.aliyuncs.com',
    eu-west-1-oxs = 'docmind-api.aliyuncs.com',
    me-east-1 = 'docmind-api.aliyuncs.com',
    rus-west-1-pop = 'docmind-api.aliyuncs.com',
    us-east-1 = 'docmind-api.aliyuncs.com',
    us-west-1 = 'docmind-api.aliyuncs.com',
  };
}

function close(): void {
  @handler.close();
}

model GetSingleDocumentExtractResultRequest {
  id?: string(name='Id', example='docmind-20220816-1e89d65c', position='Query'),
}

model GetSingleDocumentExtractResultResponseBody = {
  code?: string(name='Code', example='noPermission'),
  completed?: boolean(name='Completed', example='true'),
  data?: any(name='Data', example='{
  "RequestId": "2AABD2C2-D24F-12F7-875D-683A27C3****",
  "Completed": false,
  "Code": "DocProcessing",
  "Message": "Document processing",
  "HostId": "ocr-api.cn-hangzhou.aliyuncs.com",
  "Recommend": "https://next.api.aliyun.com/troubleshoot?q=DocProcessing&product=docmind-api"
}'),
  message?: string(name='Message', example='You are not authorized to perform this operation.'),
  requestId?: string(name='RequestId', example='43A29C77-405E-4CC0-BC55-EE694AD00655'),
  status?: string(name='Status', example='Success'),
}

model GetSingleDocumentExtractResultResponse = {
  headers: map[string]string(name='headers'),
  body: GetSingleDocumentExtractResultResponseBody(name='body'),
}

async function getSingleDocumentExtractResult(request: GetSingleDocumentExtractResultRequest): GetSingleDocumentExtractResultResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetSingleDocumentExtractResult', 'POST', '/', 'json', false, 'json', request);
}

model ReClassifyTradeDocumentExtractRequest {
  bizId?: string(name='BizId', position='Query'),
  pageUpdateInfoModels?: [ 
    {
      attTypeCode: string(name='AttTypeCode'),
      pageId: string(name='PageId'),
    }
  ](name='PageUpdateInfoModels', shrink='json', position='Query'),
}

model ReClassifyTradeDocumentExtractResponseBody = {
  code?: string(name='Code', example='noPermission'),
  data?: {
    id?: string(name='Id', example='docmind-20220816-15bc7965'),
  }(name='Data'),
  message?: string(name='Message', example='You are not authorized to perform this operation.'),
  requestId?: string(name='RequestId', example='43A29C77-405E-4CC0-BC55-EE694AD00655'),
}

model ReClassifyTradeDocumentExtractResponse = {
  headers: map[string]string(name='headers'),
  body: ReClassifyTradeDocumentExtractResponseBody(name='body'),
}

async function reClassifyTradeDocumentExtract(request: ReClassifyTradeDocumentExtractRequest): ReClassifyTradeDocumentExtractResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReClassifyTradeDocumentExtract', 'POST', '/', 'json', false, 'json', request);
}

model RetryTradeDocumentExtractRequest {
  bizId?: string(name='BizId', position='Query'),
}

model RetryTradeDocumentExtractResponseBody = {
  code?: string(name='Code', example='noPermission'),
  data?: {
    id?: string(name='Id', example='docmind-20220816-15bc7965'),
  }(name='Data'),
  message?: string(name='Message', example='You are not authorized to perform this operation.'),
  requestId?: string(name='RequestId', example='43A29C77-405E-4CC0-BC55-EE694AD00655'),
}

model RetryTradeDocumentExtractResponse = {
  headers: map[string]string(name='headers'),
  body: RetryTradeDocumentExtractResponseBody(name='body'),
}

async function retryTradeDocumentExtract(request: RetryTradeDocumentExtractRequest): RetryTradeDocumentExtractResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RetryTradeDocumentExtract', 'POST', '/', 'json', false, 'json', request);
}

