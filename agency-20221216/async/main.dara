/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Agency';
  @version = '2022-12-16';
  @endpointRule = 'regional';
  @endpointMap = {
    ap-northeast-1 = 'agency.aliyuncs.com',
    ap-northeast-2-pop = 'agency.aliyuncs.com',
    ap-south-1 = 'agency.aliyuncs.com',
    ap-southeast-2 = 'agency.aliyuncs.com',
    ap-southeast-3 = 'agency.aliyuncs.com',
    ap-southeast-5 = 'agency.aliyuncs.com',
    cn-beijing = 'agency.aliyuncs.com',
    cn-beijing-finance-1 = 'agency.aliyuncs.com',
    cn-beijing-finance-pop = 'agency.aliyuncs.com',
    cn-beijing-gov-1 = 'agency.aliyuncs.com',
    cn-beijing-nu16-b01 = 'agency.aliyuncs.com',
    cn-chengdu = 'agency.aliyuncs.com',
    cn-edge-1 = 'agency.aliyuncs.com',
    cn-fujian = 'agency.aliyuncs.com',
    cn-haidian-cm12-c01 = 'agency.aliyuncs.com',
    cn-hangzhou = 'agency.aliyuncs.com',
    cn-hangzhou-bj-b01 = 'agency.aliyuncs.com',
    cn-hangzhou-finance = 'agency.aliyuncs.com',
    cn-hangzhou-internal-prod-1 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-1 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-2 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-3 = 'agency.aliyuncs.com',
    cn-hangzhou-test-306 = 'agency.aliyuncs.com',
    cn-hongkong = 'agency.aliyuncs.com',
    cn-hongkong-finance-pop = 'agency.aliyuncs.com',
    cn-huhehaote = 'agency.aliyuncs.com',
    cn-huhehaote-nebula-1 = 'agency.aliyuncs.com',
    cn-north-2-gov-1 = 'agency.aliyuncs.com',
    cn-qingdao = 'agency.aliyuncs.com',
    cn-qingdao-nebula = 'agency.aliyuncs.com',
    cn-shanghai = 'agency.aliyuncs.com',
    cn-shanghai-et15-b01 = 'agency.aliyuncs.com',
    cn-shanghai-et2-b01 = 'agency.aliyuncs.com',
    cn-shanghai-finance-1 = 'agency.aliyuncs.com',
    cn-shanghai-inner = 'agency.aliyuncs.com',
    cn-shanghai-internal-test-1 = 'agency.aliyuncs.com',
    cn-shenzhen = 'agency.aliyuncs.com',
    cn-shenzhen-finance-1 = 'agency.aliyuncs.com',
    cn-shenzhen-inner = 'agency.aliyuncs.com',
    cn-shenzhen-st4-d01 = 'agency.aliyuncs.com',
    cn-shenzhen-su18-b01 = 'agency.aliyuncs.com',
    cn-wuhan = 'agency.aliyuncs.com',
    cn-wulanchabu = 'agency.aliyuncs.com',
    cn-yushanfang = 'agency.aliyuncs.com',
    cn-zhangbei = 'agency.aliyuncs.com',
    cn-zhangbei-na61-b01 = 'agency.aliyuncs.com',
    cn-zhangjiakou = 'agency.aliyuncs.com',
    cn-zhangjiakou-na62-a01 = 'agency.aliyuncs.com',
    cn-zhengzhou-nebula-1 = 'agency.aliyuncs.com',
    eu-central-1 = 'agency.aliyuncs.com',
    eu-west-1 = 'agency.aliyuncs.com',
    eu-west-1-oxs = 'agency.aliyuncs.com',
    me-east-1 = 'agency.aliyuncs.com',
    rus-west-1-pop = 'agency.aliyuncs.com',
    us-east-1 = 'agency.aliyuncs.com',
    us-west-1 = 'agency.aliyuncs.com',
  };
}

function close(): void {
  @handler.close();
}

model CancelSubscriptionBillRequest {
  subscribeType: string(name='SubscribeType', description='subscribeType', example='PartnerBillingItemDetailForBillingPeriod', position='Query'),
}

model CancelSubscriptionBillResponseBody = {
  code?: string(name='Code', description='code', example='200'),
  data?: boolean(name='Data', example='true'),
  message?: string(name='Message', description='message'),
  requestId?: string(name='RequestId', description='requestId', example='210e876f16704666020714468dab35'),
  success?: boolean(name='Success', description='success', example='true'),
}

model CancelSubscriptionBillResponse = {
  headers: map[string]string(name='headers'),
  body: CancelSubscriptionBillResponseBody(name='body'),
}

async function cancelSubscriptionBill(request: CancelSubscriptionBillRequest): CancelSubscriptionBillResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelSubscriptionBill', 'POST', '/', 'json', false, 'json', request);
}

model SubscriptionBillRequest {
  beginBillingCycle: string(name='BeginBillingCycle', description='subscribeBucket', example='2022-10', position='Query'),
  billFormat: string(name='BillFormat', example='csv', position='Query'),
  bucketOwnerId: long(name='BucketOwnerId', description='callerMainUid', example='5569414254138836', position='Query'),
  subscribeBucket: string(name='SubscribeBucket', description='subscribeType', example='bill-bucket', position='Query'),
  subscribeSegmentSize?: int32(name='SubscribeSegmentSize', example='100000', position='Query'),
  subscribeType: string(name='SubscribeType', description='popClientIP', example='PartnerBillingItemDetailForBillingPeriod', position='Query'),
}

model SubscriptionBillResponseBody = {
  code?: string(name='Code', description='code', example='200'),
  data?: boolean(name='Data', example='true'),
  message?: string(name='Message', description='message'),
  requestId?: string(name='RequestId', description='requestId', example='9C14ADFE-DF0A-54D4-8BD5-45D0839246B4'),
  success?: boolean(name='Success', description='success', example='true'),
}

model SubscriptionBillResponse = {
  headers: map[string]string(name='headers'),
  body: SubscriptionBillResponseBody(name='body'),
}

async function subscriptionBill(request: SubscriptionBillRequest): SubscriptionBillResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SubscriptionBill', 'POST', '/', 'json', false, 'json', request);
}

