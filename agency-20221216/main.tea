/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'regional';
  @endpointMap = {
    ap-northeast-1 = 'agency.aliyuncs.com',
    ap-northeast-2-pop = 'agency.aliyuncs.com',
    ap-south-1 = 'agency.aliyuncs.com',
    ap-southeast-2 = 'agency.aliyuncs.com',
    ap-southeast-3 = 'agency.aliyuncs.com',
    ap-southeast-5 = 'agency.aliyuncs.com',
    cn-beijing = 'agency.aliyuncs.com',
    cn-beijing-finance-1 = 'agency.aliyuncs.com',
    cn-beijing-finance-pop = 'agency.aliyuncs.com',
    cn-beijing-gov-1 = 'agency.aliyuncs.com',
    cn-beijing-nu16-b01 = 'agency.aliyuncs.com',
    cn-chengdu = 'agency.aliyuncs.com',
    cn-edge-1 = 'agency.aliyuncs.com',
    cn-fujian = 'agency.aliyuncs.com',
    cn-haidian-cm12-c01 = 'agency.aliyuncs.com',
    cn-hangzhou = 'agency.aliyuncs.com',
    cn-hangzhou-bj-b01 = 'agency.aliyuncs.com',
    cn-hangzhou-finance = 'agency.aliyuncs.com',
    cn-hangzhou-internal-prod-1 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-1 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-2 = 'agency.aliyuncs.com',
    cn-hangzhou-internal-test-3 = 'agency.aliyuncs.com',
    cn-hangzhou-test-306 = 'agency.aliyuncs.com',
    cn-hongkong = 'agency.aliyuncs.com',
    cn-hongkong-finance-pop = 'agency.aliyuncs.com',
    cn-huhehaote = 'agency.aliyuncs.com',
    cn-huhehaote-nebula-1 = 'agency.aliyuncs.com',
    cn-north-2-gov-1 = 'agency.aliyuncs.com',
    cn-qingdao = 'agency.aliyuncs.com',
    cn-qingdao-nebula = 'agency.aliyuncs.com',
    cn-shanghai = 'agency.aliyuncs.com',
    cn-shanghai-et15-b01 = 'agency.aliyuncs.com',
    cn-shanghai-et2-b01 = 'agency.aliyuncs.com',
    cn-shanghai-finance-1 = 'agency.aliyuncs.com',
    cn-shanghai-inner = 'agency.aliyuncs.com',
    cn-shanghai-internal-test-1 = 'agency.aliyuncs.com',
    cn-shenzhen = 'agency.aliyuncs.com',
    cn-shenzhen-finance-1 = 'agency.aliyuncs.com',
    cn-shenzhen-inner = 'agency.aliyuncs.com',
    cn-shenzhen-st4-d01 = 'agency.aliyuncs.com',
    cn-shenzhen-su18-b01 = 'agency.aliyuncs.com',
    cn-wuhan = 'agency.aliyuncs.com',
    cn-wulanchabu = 'agency.aliyuncs.com',
    cn-yushanfang = 'agency.aliyuncs.com',
    cn-zhangbei = 'agency.aliyuncs.com',
    cn-zhangbei-na61-b01 = 'agency.aliyuncs.com',
    cn-zhangjiakou = 'agency.aliyuncs.com',
    cn-zhangjiakou-na62-a01 = 'agency.aliyuncs.com',
    cn-zhengzhou-nebula-1 = 'agency.aliyuncs.com',
    eu-central-1 = 'agency.aliyuncs.com',
    eu-west-1 = 'agency.aliyuncs.com',
    eu-west-1-oxs = 'agency.aliyuncs.com',
    me-east-1 = 'agency.aliyuncs.com',
    rus-west-1-pop = 'agency.aliyuncs.com',
    us-east-1 = 'agency.aliyuncs.com',
    us-west-1 = 'agency.aliyuncs.com',
  };

  checkConfig(config);
  @endpoint = getEndpoint('agency', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model CancelSubscriptionBillRequest {
  subscribeType?: string(name='SubscribeType', description='The type of the bill to which you want to cancel the subscription. Valid values: PartnerBillingItemDetailForBillingPeriod, PartnerBillingItemDetailMonthly, PartnerInstanceDetailForBillingPeriod, and PartnerInstanceDetailMonthly.', example='PartnerBillingItemDetailForBillingPeriod'),
}

model CancelSubscriptionBillResponseBody = {
  code?: string(name='Code', description='The HTTP status code that is returned.', example='200'),
  data?: boolean(name='Data', description='The data that is returned.', example='true'),
  message?: string(name='Message', description='The message that is returned.', example='Successful'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='210e876f16704666020714468dab35'),
  success?: boolean(name='Success', description='Indicates whether the request was successful.', example='true'),
}

model CancelSubscriptionBillResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: CancelSubscriptionBillResponseBody(name='body'),
}

/**
  * Make sure that you are a distributor of the Alibaba Cloud international ecosystem.
  * You can call this operation to cancel the subscription to only one type of bill at a time.
  * After the subscription to a type of bill is canceled, bills of this type are no longer pushed to the specified Object Storage Service (OSS) bucket.
  * **This topic is published only on the international site (alibabacloud.com).
  *
  * @param request CancelSubscriptionBillRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return CancelSubscriptionBillResponse
 */
async function cancelSubscriptionBillWithOptions(request: CancelSubscriptionBillRequest, runtime: Util.RuntimeOptions): CancelSubscriptionBillResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.subscribeType)) {
    query['SubscribeType'] = request.subscribeType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CancelSubscriptionBill',
    version = '2022-12-16',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * Make sure that you are a distributor of the Alibaba Cloud international ecosystem.
  * You can call this operation to cancel the subscription to only one type of bill at a time.
  * After the subscription to a type of bill is canceled, bills of this type are no longer pushed to the specified Object Storage Service (OSS) bucket.
  * **This topic is published only on the international site (alibabacloud.com).
  *
  * @param request CancelSubscriptionBillRequest
  * @return CancelSubscriptionBillResponse
 */
async function cancelSubscriptionBill(request: CancelSubscriptionBillRequest): CancelSubscriptionBillResponse {
  var runtime = new Util.RuntimeOptions{};
  return cancelSubscriptionBillWithOptions(request, runtime);
}

model EditEndUserStatusRequest {
  creditStatus?: string(name='CreditStatus', example='postPayFreeze'),
  uid?: long(name='Uid', description='uid', example='1792155717328010'),
}

model EditEndUserStatusResponseBody = {
  code?: string(name='Code', example='200'),
  data?: string(name='Data', example='true'),
  message?: string(name='Message'),
  msg?: string(name='Msg', example='success'),
  requestId?: string(name='RequestId', example='9C14ADFE-DF0A-54D4-8BD5-45D0839246B4'),
}

model EditEndUserStatusResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: EditEndUserStatusResponseBody(name='body'),
}

async function editEndUserStatusWithOptions(request: EditEndUserStatusRequest, runtime: Util.RuntimeOptions): EditEndUserStatusResponse {
  Util.validateModel(request);
  var query = OpenApiUtil.query(Util.toMap(request));
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'EditEndUserStatus',
    version = '2022-12-16',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'GET',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function editEndUserStatus(request: EditEndUserStatusRequest): EditEndUserStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return editEndUserStatusWithOptions(request, runtime);
}

model EditNewBuyStatusRequest {
  newBuyStatus?: string(name='NewBuyStatus', example='cancelBan'),
  uid?: long(name='Uid', example='1133166938931507'),
}

model EditNewBuyStatusResponseBody = {
  code?: string(name='Code', example='200'),
  data?: string(name='Data', example='true'),
  message?: string(name='Message'),
  msg?: string(name='Msg', example='success'),
  requestId?: string(name='RequestId', example='9C14ADFE-DF0A-54D4-8BD5-45D0839246B4'),
}

model EditNewBuyStatusResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: EditNewBuyStatusResponseBody(name='body'),
}

async function editNewBuyStatusWithOptions(request: EditNewBuyStatusRequest, runtime: Util.RuntimeOptions): EditNewBuyStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.newBuyStatus)) {
    query['NewBuyStatus'] = request.newBuyStatus;
  }
  if (!Util.isUnset(request.uid)) {
    query['Uid'] = request.uid;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'EditNewBuyStatus',
    version = '2022-12-16',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function editNewBuyStatus(request: EditNewBuyStatusRequest): EditNewBuyStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return editNewBuyStatusWithOptions(request, runtime);
}

model EditZeroCreditShutdownRequest {
  shutdownPolicy?: string(name='ShutdownPolicy', example='NO_STOP'),
  uid?: long(name='Uid', description='uid', example='1263644979775567'),
}

model EditZeroCreditShutdownResponseBody = {
  code?: string(name='Code', example='200'),
  data?: string(name='Data', example='true'),
  message?: string(name='Message'),
  msg?: string(name='Msg', example='SUCCESS'),
  requestId?: string(name='RequestId', example='9C14ADFE-DF0A-54D4-8BD5-45D0839246B4'),
}

model EditZeroCreditShutdownResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: EditZeroCreditShutdownResponseBody(name='body'),
}

async function editZeroCreditShutdownWithOptions(request: EditZeroCreditShutdownRequest, runtime: Util.RuntimeOptions): EditZeroCreditShutdownResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.shutdownPolicy)) {
    query['ShutdownPolicy'] = request.shutdownPolicy;
  }
  if (!Util.isUnset(request.uid)) {
    query['Uid'] = request.uid;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'EditZeroCreditShutdown',
    version = '2022-12-16',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function editZeroCreditShutdown(request: EditZeroCreditShutdownRequest): EditZeroCreditShutdownResponse {
  var runtime = new Util.RuntimeOptions{};
  return editZeroCreditShutdownWithOptions(request, runtime);
}

model SubscriptionBillRequest {
  beginBillingCycle?: string(name='BeginBillingCycle', description='The start month from which the bills are pushed. Specify the value in the yyyy-MM format.

After the subscription is generated, the system automatically pushes the bill data that is generated from the month that you specified to the current point in time. Data of up to six months can be pushed. The current month is included. If you subscribe to the bills for more than six months, the subscription is invalid.', example='2022-10'),
  billFormat?: string(name='BillFormat', description='The file format of the bill. Valid values: csv and parquet.

If you subscribe to the bills of multiple file formats, we recommend that you store the bills in different OSS buckets to prevent file overwriting.', example='csv'),
  bucketOwnerId?: long(name='BucketOwnerId', description='The ID of the user to which the OSS bucket belongs.

If you are an eco-partner of Alibaba Cloud and you need to push the bills to the OSS bucket of a subordinate partner account, you must set this parameter to the ID of the subordinate partner account and grant the [AliyunConsumeDump2OSSRole](https://ram.console.aliyun.com/?spm=api-workbench.API%20Document.0.0.68c71e0fhmTSJp#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunConsumeDump2OSSRole%22,%20%22TemplateId%22:%20%22Dump2OSSRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fusercenter2.aliyun.com%22,%20%22Service%22:%20%22Consume%22%7D) permission to the subordinate partner account.

If you are an eco-partner of Alibaba Cloud and you need to push the bills to the OSS bucket of your own account, your account must be granted the [AliyunConsumeDump2OSSRole](https://ram.console.aliyun.com/?spm=api-workbench.API%20Document.0.0.68c71e0fhmTSJp#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunConsumeDump2OSSRole%22,%20%22TemplateId%22:%20%22Dump2OSSRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fusercenter2.aliyun.com%22,%20%22Service%22:%20%22Consume%22%7D) permission.', example='5569414254138836'),
  subscribeBucket?: string(name='SubscribeBucket', description='The name of the Object Storage Service (OSS) bucket in which you want to store the bills.', example='bill-bucket'),
  subscribeSegmentSize?: int32(name='SubscribeSegmentSize', description='The maximum rows in a single bill file. If the number of bill rows exceed the upper limit, the bill is automatically split into multiple files. The name of each split file is in the `uid_billType_billCycle_SquenceNo_fileNo` format.

Files whose names are the same except for the fileNo field are of the same type and belong to the same billing cycle.', example='100000'),
  subscribeType?: string(name='SubscribeType', description='The type of the bill to which you want to subscribe. Valid values: PartnerBillingItemDetailForBillingPeriod, PartnerBillingItemDetailMonthly, PartnerInstanceDetailForBillingPeriod, and PartnerInstanceDetailMonthly.', example='PartnerBillingItemDetailForBillingPeriod'),
}

model SubscriptionBillResponseBody = {
  code?: string(name='Code', description='The HTTP status code that is returned.', example='200'),
  data?: boolean(name='Data', description='The data that is returned.', example='true'),
  message?: string(name='Message', description='The message that is returned.', example='Successful'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='9C14ADFE-DF0A-54D4-8BD5-45D0839246B4'),
  success?: boolean(name='Success', description='Indicates whether the request was successful.', example='true'),
}

model SubscriptionBillResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: SubscriptionBillResponseBody(name='body'),
}

/**
  * *   Make sure that you are a distributor of the Alibaba Cloud international ecosystem.
  * *   You can call this operation to subscribe to only one type of bill at a time.
  * *   After the subscription to a type of bill is generated, the bill for the previous day is pushed on a daily basis from the next day. On the fifth day of each month, the full-data bill for the previous month is pushed.
  * *   A daily bill may be delayed. The delayed bill is pushed the next day after it is generated. The delayed bill may contain the bill data that is delayed until the previous day. We recommend that you query the full-data bill for the previous month at the beginning of each month.
  * *   Your account must be granted the [AliyunConsumeDump2OSSRole](https://ram.console.aliyun.com/?spm=api-workbench.API%20Document.0.0.68c71e0fhmTSJp#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunConsumeDump2OSSRole%22,%20%22TemplateId%22:%20%22Dump2OSSRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fusercenter2.aliyun.com%22,%20%22Service%22:%20%22Consume%22%7D) permission.
  * *   The following file name formats are supported for bills:
  * ```
  * BillingItemDetailForBillingPeriod
  *   
  * File name format of a daily bill: UID_PartnerBillingItemDetail_YYYYMMDD_SquenceNo_fileNo. Example: 169**_BillingItemDetail_20190310_0001_01. 
  *   
  * File name format of a monthly full-data bill: UID_PartnerBillingItemDetail_YYYYMM_SquenceNo_fileNo. Example: 169**_BillingItemDetail_201903_0001_01. 
  * InstanceDetailForBillingPeriod
  *  
  *  File name format of a daily bill: UID_PartnerInstanceDetail_YYYYMMDD_SquenceNo_fileNo. Example: 169**_InstanceDetail_20190310_0001_01. 
  *   
  * File name format of a monthly full-data bill: UID_PartnerInstanceDetail_YYYYMM_SquenceNo_fileNo. Example: 169**_InstanceDetail_201903_1999-0001_01. 
  * BillingItemDetailMonthly
  *   
  * File name format of a daily bill: UID_PartnerBillingItemDetailMonthly_YYYYMM_SquenceNo_fileNo. Example: 169**_BillingItemDetailMonthly_201903_0001_01. This bill contains the bill data that is generated from the beginning of the current month to the fifth day of the next month. 
  * InstanceDetailMonthly
  *   
  * File name format of a daily bill: UID_PartnerInstanceDetailMonthly_YYYYMM_SquenceNo_fileNo. Example: 169**_InstanceDetailMonthly_201903_0001_01. This bill contains the bill data that is generated from the beginning of the current month to the fifth day of the next month. 
  * The fileNo field exists only when the number of bill rows reaches the maximum rows in a single bill file and the bill is split into multiple files.
  * ```
  * **This topic is published only on the international site (alibabacloud.com).
  *
  * @param request SubscriptionBillRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return SubscriptionBillResponse
 */
async function subscriptionBillWithOptions(request: SubscriptionBillRequest, runtime: Util.RuntimeOptions): SubscriptionBillResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.beginBillingCycle)) {
    query['BeginBillingCycle'] = request.beginBillingCycle;
  }
  if (!Util.isUnset(request.billFormat)) {
    query['BillFormat'] = request.billFormat;
  }
  if (!Util.isUnset(request.bucketOwnerId)) {
    query['BucketOwnerId'] = request.bucketOwnerId;
  }
  if (!Util.isUnset(request.subscribeBucket)) {
    query['SubscribeBucket'] = request.subscribeBucket;
  }
  if (!Util.isUnset(request.subscribeSegmentSize)) {
    query['SubscribeSegmentSize'] = request.subscribeSegmentSize;
  }
  if (!Util.isUnset(request.subscribeType)) {
    query['SubscribeType'] = request.subscribeType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SubscriptionBill',
    version = '2022-12-16',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * *   Make sure that you are a distributor of the Alibaba Cloud international ecosystem.
  * *   You can call this operation to subscribe to only one type of bill at a time.
  * *   After the subscription to a type of bill is generated, the bill for the previous day is pushed on a daily basis from the next day. On the fifth day of each month, the full-data bill for the previous month is pushed.
  * *   A daily bill may be delayed. The delayed bill is pushed the next day after it is generated. The delayed bill may contain the bill data that is delayed until the previous day. We recommend that you query the full-data bill for the previous month at the beginning of each month.
  * *   Your account must be granted the [AliyunConsumeDump2OSSRole](https://ram.console.aliyun.com/?spm=api-workbench.API%20Document.0.0.68c71e0fhmTSJp#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunConsumeDump2OSSRole%22,%20%22TemplateId%22:%20%22Dump2OSSRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fusercenter2.aliyun.com%22,%20%22Service%22:%20%22Consume%22%7D) permission.
  * *   The following file name formats are supported for bills:
  * ```
  * BillingItemDetailForBillingPeriod
  *   
  * File name format of a daily bill: UID_PartnerBillingItemDetail_YYYYMMDD_SquenceNo_fileNo. Example: 169**_BillingItemDetail_20190310_0001_01. 
  *   
  * File name format of a monthly full-data bill: UID_PartnerBillingItemDetail_YYYYMM_SquenceNo_fileNo. Example: 169**_BillingItemDetail_201903_0001_01. 
  * InstanceDetailForBillingPeriod
  *  
  *  File name format of a daily bill: UID_PartnerInstanceDetail_YYYYMMDD_SquenceNo_fileNo. Example: 169**_InstanceDetail_20190310_0001_01. 
  *   
  * File name format of a monthly full-data bill: UID_PartnerInstanceDetail_YYYYMM_SquenceNo_fileNo. Example: 169**_InstanceDetail_201903_1999-0001_01. 
  * BillingItemDetailMonthly
  *   
  * File name format of a daily bill: UID_PartnerBillingItemDetailMonthly_YYYYMM_SquenceNo_fileNo. Example: 169**_BillingItemDetailMonthly_201903_0001_01. This bill contains the bill data that is generated from the beginning of the current month to the fifth day of the next month. 
  * InstanceDetailMonthly
  *   
  * File name format of a daily bill: UID_PartnerInstanceDetailMonthly_YYYYMM_SquenceNo_fileNo. Example: 169**_InstanceDetailMonthly_201903_0001_01. This bill contains the bill data that is generated from the beginning of the current month to the fifth day of the next month. 
  * The fileNo field exists only when the number of bill rows reaches the maximum rows in a single bill file and the bill is split into multiple files.
  * ```
  * **This topic is published only on the international site (alibabacloud.com).
  *
  * @param request SubscriptionBillRequest
  * @return SubscriptionBillResponse
 */
async function subscriptionBill(request: SubscriptionBillRequest): SubscriptionBillResponse {
  var runtime = new Util.RuntimeOptions{};
  return subscriptionBillWithOptions(request, runtime);
}

