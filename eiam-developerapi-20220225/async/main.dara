/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Eiam-developerapi';
  @version = '2022-02-25';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model AddUserToOrganizationalUnitsRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
  organizationalUnitIds: [ string ](name='organizationalUnitIds', description='组织ID列表。', example='[ou_wovwffm62xifdziem7an7xxxxx]', position='Body'),
}

model AddUserToOrganizationalUnitsResponse = {
  headers: map[string]string(name='headers'),
}

async function addUserToOrganizationalUnits(request: AddUserToOrganizationalUnitsRequest): AddUserToOrganizationalUnitsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'AddUserToOrganizationalUnits', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/addUserToOrganizationalUnits', 'none', false, 'json', request);
}

model CreateOrganizationalUnitRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  description?: string(name='description', description='描述', example='xxxx', position='Body'),
  organizationalUnitExternalId?: string(name='organizationalUnitExternalId', description='机构外部ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Body'),
  organizationalUnitName: string(name='organizationalUnitName', description='机构名称', example='name001', position='Body'),
  parentId: string(name='parentId', description='父机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Body'),
}

model CreateOrganizationalUnitResponseBody = {
  organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
}

model CreateOrganizationalUnitResponse = {
  headers: map[string]string(name='headers'),
  body: CreateOrganizationalUnitResponseBody(name='body'),
}

async function createOrganizationalUnit(request: CreateOrganizationalUnitRequest): CreateOrganizationalUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'CreateOrganizationalUnit', 'POST', '/v2/{instanceId}/{applicationId}/organizationalUnits', 'json', false, 'json', request);
}

model CreateUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  customFields?: [ 
    {
      fieldName?: string(name='fieldName', description='扩展字段标识', example='age'),
      fieldValue?: string(name='fieldValue', description='扩展字段值', example='fieldValue_001'),
    }
  ](name='customFields', description='扩展字段列表', position='Body'),
  description?: string(name='description', description='描述', example='xxxxx', position='Body'),
  displayName?: string(name='displayName', description='账户展示名。', example='display_name001', position='Body'),
  email?: string(name='email', description='邮箱', example='example@example.com', position='Body'),
  emailVerified?: boolean(name='emailVerified', description='邮箱是否验证，邮箱若设置此字段必须设置，无特殊业务可直接设置为true', example='true', position='Body'),
  password?: string(name='password', description='密码, 参考密码策略', example='xxxxx', position='Body'),
  passwordInitializationConfig?: {
    passwordForcedUpdateStatus?: string(name='passwordForcedUpdateStatus', description='强制修改密码状态,默认不启用。枚举取值:enabled(开启)、disabled(禁用)', example='enabled'),
    passwordInitializationPolicyPriority?: string(name='passwordInitializationPolicyPriority', description='密码初始化策略优先级，不传不生效。枚举取值:global(全局优先)、custom(自定义优先)', example='global'),
    passwordInitializationType?: string(name='passwordInitializationType', description='密码初始化方式。枚举取值:random(随机)', example='random'),
    userNotificationChannels?: [ string ](name='userNotificationChannels', description='密码通知渠道。枚举取值:email(邮件)、sms(短信)', example='sms'),
  }(name='passwordInitializationConfig', description='密码初始化配置', position='Body'),
  phoneNumber?: string(name='phoneNumber', description='手机号', example='156xxxxxxx', position='Body'),
  phoneNumberVerified?: boolean(name='phoneNumberVerified', description='手机号是否验证，手机号若设置此字段必须设置，无特殊业务可直接设置为true', example='true', position='Body'),
  phoneRegion?: string(name='phoneRegion', description='手机地区编号,示例：中国大陆手区号为86，不带 00 或 +, 手机号若设置，此参数必填', example='86', position='Body'),
  primaryOrganizationalUnitId: string(name='primaryOrganizationalUnitId', description='账户主机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Body'),
  userExternalId?: string(name='userExternalId', description='账户外部ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Body'),
  username: string(name='username', description='账户名称。', example='name001', position='Body'),
}

model CreateUserResponseBody = {
  userId?: string(name='userId', description='账户ID。', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
}

model CreateUserResponse = {
  headers: map[string]string(name='headers'),
  body: CreateUserResponseBody(name='body'),
}

async function createUser(request: CreateUserRequest): CreateUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'CreateUser', 'POST', '/v2/{instanceId}/{applicationId}/users', 'json', false, 'json', request);
}

model DeleteOrganizationalUnitRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  organizationalUnitId: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model DeleteOrganizationalUnitResponse = {
  headers: map[string]string(name='headers'),
}

async function deleteOrganizationalUnit(request: DeleteOrganizationalUnitRequest): DeleteOrganizationalUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'DeleteOrganizationalUnit', 'DELETE', '/v2/{instanceId}/{applicationId}/organizationalUnits/{organizationalUnitId}', 'none', false, 'json', request);
}

model DeleteUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model DeleteUserResponse = {
  headers: map[string]string(name='headers'),
}

async function deleteUser(request: DeleteUserRequest): DeleteUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'DeleteUser', 'DELETE', '/v2/{instanceId}/{applicationId}/users/{userId}', 'none', false, 'json', request);
}

model DisableUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_001', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
}

model DisableUserResponse = {
  headers: map[string]string(name='headers'),
}

async function disableUser(request: DisableUserRequest): DisableUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'DisableUser', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/disable', 'none', false, 'json', request);
}

model EnableUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_001', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
}

model EnableUserResponse = {
  headers: map[string]string(name='headers'),
}

async function enableUser(request: EnableUserRequest): EnableUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'EnableUser', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/enable', 'none', false, 'json', request);
}

model GenerateDeviceCodeRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  scope?: string(name='scope', description='scope范围', example='xxx', position='Query'),
}

model GenerateDeviceCodeResponseBody = {
  deviceCode?: string(name='device_code', description='设备验证码', example='xxxxx'),
  expiresAt?: long(name='expires_at', description='过期时间', example='1653288641'),
  expiresIn?: long(name='expires_in', description='device_code和user_code的有效时长，单位秒', example='1200'),
  interval?: long(name='interval', description='请求token节点的超时时间，单位秒', example='5'),
  userCode?: string(name='user_code', description='终端用户验证码', example='xxxxx'),
  verificationUri?: string(name='verification_uri', description='验证URI', example='https://example.com/authorize/device'),
  verificationUriComplete?: string(name='verification_uri_complete', description='包含user_code的完整验证URI', example='https://example.com/authorize/device?user_code=
xxxx'),
}

model GenerateDeviceCodeResponse = {
  headers: map[string]string(name='headers'),
  body: GenerateDeviceCodeResponseBody(name='body'),
}

async function generateDeviceCode(request: GenerateDeviceCodeRequest): GenerateDeviceCodeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GenerateDeviceCode', 'POST', '/v2/{instanceId}/{applicationId}/oauth2/device/code', 'json', false, 'json', request);
}

model GenerateTokenRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  clientId?: string(name='client_id', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Query'),
  clientSecret?: string(name='client_secret', example='CSEHDcHcrUKHw1CuxkJEHPveWRXBGqVqRsxxxx', position='Query'),
  code?: string(name='code', description='code码', example='xxxx', position='Query'),
  codeVerifier?: string(name='code_verifier', description='验证code', example='xxx', position='Query'),
  deviceCode?: string(name='device_code', description='设备码', example='xxxx', position='Query'),
  exclusiveTag?: string(name='exclusive_tag', description='排除的tag', example='ATxxx', position='Query'),
  grantType: string(name='grant_type', description='授权类型', example='client_credentials', position='Query'),
  password?: string(name='password', description='密码', example='xxxxxx', position='Query'),
  redirectUri?: string(name='redirect_uri', description='重定向URI', example='xxx', position='Query'),
  refreshToken?: string(name='refresh_token', description='更新token', example='ATxxx', position='Query'),
  scope?: string(name='scope', description='scope范围', example='xxxx', position='Query'),
  username?: string(name='username', description='用户名', example='uesrname_001', position='Query'),
}

model GenerateTokenResponseBody = {
  accessToken?: string(name='access_token', description='access_token。', example='ATxxx'),
  expiresAt?: long(name='expires_at', description='过期时间', example='1653288641'),
  expiresIn?: long(name='expires_in', description='有效时长，单位秒', example='1200'),
  idToken?: string(name='id_token', description='id_token。', example='xxxxx'),
  refreshToken?: string(name='refresh_token', description='refresh_token。', example='RTxxx'),
  tokenType?: string(name='token_type', description='token类型，包含Basic,Bearer', example='Bearer'),
}

model GenerateTokenResponse = {
  headers: map[string]string(name='headers'),
  body: GenerateTokenResponseBody(name='body'),
}

async function generateToken(request: GenerateTokenRequest): GenerateTokenResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GenerateToken', 'POST', '/v2/{instanceId}/{applicationId}/oauth2/token', 'json', false, 'json', request);
}

model GetApplicationProvisioningScopeRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model GetApplicationProvisioningScopeResponseBody = {
  organizationalUnitIds?: [ string ](name='organizationalUnitIds', description='机构ID列表', example='[ou_xxx001]'),
}

model GetApplicationProvisioningScopeResponse = {
  headers: map[string]string(name='headers'),
  body: GetApplicationProvisioningScopeResponseBody(name='body'),
}

async function getApplicationProvisioningScope(request: GetApplicationProvisioningScopeRequest): GetApplicationProvisioningScopeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetApplicationProvisioningScope', 'GET', '/v2/{instanceId}/{applicationId}/provisioningScope', 'json', false, 'json', request);
}

model GetOrganizationalUnitRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  organizationalUnitId: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model GetOrganizationalUnitResponseBody = {
  createTime?: long(name='createTime', description='创建时间，毫秒', example='1652083425923'),
  description?: string(name='description', description='描述', example='xxxxx'),
  instanceId?: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
  organizationalUnitExternalId?: string(name='organizationalUnitExternalId', description='外部ID', example='id_wovwffm62xifdziem7an7xxxxx'),
  organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
  organizationalUnitName?: string(name='organizationalUnitName', description='机构名称', example='name001'),
  organizationalUnitSourceId?: string(name='organizationalUnitSourceId', description='来源ID', example='id_wovwffm62xifdziem7an7xxxxx'),
  organizationalUnitSourceType?: string(name='organizationalUnitSourceType', description='来源类型', example='build_in'),
  parentId?: string(name='parentId', description='父机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
  updateTime?: long(name='updateTime', description='最近一次更新时间，毫秒', example='1652083425923'),
}

model GetOrganizationalUnitResponse = {
  headers: map[string]string(name='headers'),
  body: GetOrganizationalUnitResponseBody(name='body'),
}

async function getOrganizationalUnit(request: GetOrganizationalUnitRequest): GetOrganizationalUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetOrganizationalUnit', 'GET', '/v2/{instanceId}/{applicationId}/organizationalUnits/{organizationalUnitId}', 'json', false, 'json', request);
}

model GetOrganizationalUnitIdByExternalIdRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  organizationalUnitExternalId: string(name='organizationalUnitExternalId', description='组织外部ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Body'),
  organizationalUnitSourceId: string(name='organizationalUnitSourceId', description='组织来源ID,自建类型(build_in)值为实例ID，非自建类型，为对应企业ID，比如钉钉，对应的corpId', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Body'),
  organizationalUnitSourceType: string(name='organizationalUnitSourceType', description='组织来源类型, 取值可选范围： build_in(自建), ding_talk(钉钉导入),ad(AD导入),ldap(LDAP导入)', example='build_in', position='Body'),
}

model GetOrganizationalUnitIdByExternalIdResponseBody = {
  organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
}

model GetOrganizationalUnitIdByExternalIdResponse = {
  headers: map[string]string(name='headers'),
  body: GetOrganizationalUnitIdByExternalIdResponseBody(name='body'),
}

async function getOrganizationalUnitIdByExternalId(request: GetOrganizationalUnitIdByExternalIdRequest): GetOrganizationalUnitIdByExternalIdResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetOrganizationalUnitIdByExternalId', 'POST', '/v2/{instanceId}/{applicationId}/organizationalUnits/_/actions/getOrganizationalUnitIdByExternalId', 'json', false, 'json', request);
}

model GetUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model GetUserResponseBody = {
  accountExpireTime?: long(name='accountExpireTime', description='账户过期时间, 毫秒时间', example='1652085686179'),
  createTime?: long(name='createTime', description='创建时间, 毫秒时间', example='1652085686179'),
  customFields?: [ 
    {
      fieldName?: string(name='fieldName', description='字段标识', example='xxxx'),
      fieldValue?: string(name='fieldValue', description='字段数据值', example='字段数据值'),
    }
  ](name='customFields', description='账户扩展字段列表'),
  description?: string(name='description', description='账号描述', example='xxxx'),
  displayName?: string(name='displayName', description='显示名', example='display_name001'),
  email?: string(name='email', description='邮箱', example='example@example.com'),
  emailVerified?: boolean(name='emailVerified', description='邮箱是否验证', example='true'),
  groups?: [ 
    {
      description?: string(name='description', description='组描述。', example='description_demo'),
      groupId?: string(name='groupId', description='组ID。', example='group_ufdsasn35ea5lmthk267xxxxx'),
      groupName?: string(name='groupName', description='组名称。', example='name_test'),
    }
  ](name='groups', description='账户所属组列表'),
  instanceId?: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
  lockExpireTime?: long(name='lockExpireTime', description='锁定过期时间, 毫秒时间', example='1652085686179'),
  organizationalUnits?: [ 
    {
      organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
      organizationalUnitName?: string(name='organizationalUnitName', description='机构名称', example='name001'),
      primary?: boolean(name='primary', description='是否主机构', example='true'),
    }
  ](name='organizationalUnits', description='账户所属组织列表'),
  passwordSet?: boolean(name='passwordSet', description='密码是否已设置', example='true'),
  phoneNumber?: string(name='phoneNumber', description='手机号', example='156xxxxxxx'),
  phoneNumberVerified?: boolean(name='phoneNumberVerified', description='手机号是否验证', example='true'),
  phoneRegion?: string(name='phoneRegion', description='手机地区编号,示例：中国大陆手区号为86，不带 00 或 +', example='86'),
  primaryOrganizationalUnitId?: string(name='primaryOrganizationalUnitId', description='账户主机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
  registerTime?: long(name='registerTime', example='1652085686179'),
  status?: string(name='status', description='账户状态, enabled:启用,disabled:禁用', example='enabled'),
  updateTime?: long(name='updateTime', description='最近一次更新时间, 毫秒时间', example='1652085686179'),
  userExternalId?: string(name='userExternalId', description='外部ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
  userId?: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
  userSourceId?: string(name='userSourceId', description='来源ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
  userSourceType?: string(name='userSourceType', description='来源类型，build_in[自建],ding_talk[钉钉导入],ad[AD导入],ldap[LDAP导入]', example='build_in'),
  username?: string(name='username', description='账户名', example='name001'),
}

model GetUserResponse = {
  headers: map[string]string(name='headers'),
  body: GetUserResponseBody(name='body'),
}

async function getUser(request: GetUserRequest): GetUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUser', 'GET', '/v2/{instanceId}/{applicationId}/users/{userId}', 'json', false, 'json', request);
}

model GetUserIdByEmailRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  email: string(name='email', description='邮箱', example='example@example.com', position='Body'),
}

model GetUserIdByEmailResponseBody = {
  userId?: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
}

model GetUserIdByEmailResponse = {
  headers: map[string]string(name='headers'),
  body: GetUserIdByEmailResponseBody(name='body'),
}

async function getUserIdByEmail(request: GetUserIdByEmailRequest): GetUserIdByEmailResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUserIdByEmail', 'POST', '/v2/{instanceId}/{applicationId}/users/_/actions/getUserIdByEmail', 'json', false, 'json', request);
}

model GetUserIdByPhoneNumberRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  phoneNumber: string(name='phoneNumber', description='手机号', example='156xxxxxxx', position='Body'),
}

model GetUserIdByPhoneNumberResponseBody = {
  userId?: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
}

model GetUserIdByPhoneNumberResponse = {
  headers: map[string]string(name='headers'),
  body: GetUserIdByPhoneNumberResponseBody(name='body'),
}

async function getUserIdByPhoneNumber(request: GetUserIdByPhoneNumberRequest): GetUserIdByPhoneNumberResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUserIdByPhoneNumber', 'POST', '/v2/{instanceId}/{applicationId}/users/_/actions/getUserIdByPhoneNumber', 'json', false, 'json', request);
}

model GetUserIdByUserExternalIdRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  userExternalId: string(name='userExternalId', description='账户外部ID', example='xxx001', position='Body'),
  userSourceId: string(name='userSourceId', description='账户来源ID,自建类型(build_in)值为实例ID，非自建类型，为对应企业ID，比如钉钉，对应的corpId', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Body'),
  userSourceType: string(name='userSourceType', description='账户来源类型, 取值可选范围： build_in(自建), ding_talk(钉钉导入),ad(AD导入),ldap(LDAP导入)', example='build_in', position='Body'),
}

model GetUserIdByUserExternalIdResponseBody = {
  userId?: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
}

model GetUserIdByUserExternalIdResponse = {
  headers: map[string]string(name='headers'),
  body: GetUserIdByUserExternalIdResponseBody(name='body'),
}

async function getUserIdByUserExternalId(request: GetUserIdByUserExternalIdRequest): GetUserIdByUserExternalIdResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUserIdByUserExternalId', 'POST', '/v2/{instanceId}/{applicationId}/users/_/actions/getUserIdByExternalId', 'json', false, 'json', request);
}

model GetUserIdByUsernameRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
  username: string(name='username', description='账户名。', example='username_001', position='Body'),
}

model GetUserIdByUsernameResponseBody = {
  userId?: string(name='userId', description='账户ID。', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
}

model GetUserIdByUsernameResponse = {
  headers: map[string]string(name='headers'),
  body: GetUserIdByUsernameResponseBody(name='body'),
}

async function getUserIdByUsername(request: GetUserIdByUsernameRequest): GetUserIdByUsernameResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUserIdByUsername', 'POST', '/v2/{instanceId}/{applicationId}/users/_/actions/getUserIdByUsername', 'json', false, 'json', request);
}

model GetUserInfoRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer xxxx', position='Header'),
}

model GetUserInfoResponse = {
  headers: map[string]string(name='headers'),
  body: map[string]any(name='body'),
}

async function getUserInfo(request: GetUserInfoRequest): GetUserInfoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'GetUserInfo', 'GET', '/v2/{instanceId}/{applicationId}/oauth2/userinfo', 'json', false, 'json', request);
}

model ListOrganizationalUnitParentIdsRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  organizationalUnitId: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
}

model ListOrganizationalUnitParentIdsResponseBody = {
  parentIds?: [ string ](name='parentIds', description='父机构ID列表，顺序层级从上到下', example='[ou_xxx001]'),
}

model ListOrganizationalUnitParentIdsResponse = {
  headers: map[string]string(name='headers'),
  body: ListOrganizationalUnitParentIdsResponseBody(name='body'),
}

async function listOrganizationalUnitParentIds(request: ListOrganizationalUnitParentIdsRequest): ListOrganizationalUnitParentIdsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'ListOrganizationalUnitParentIds', 'GET', '/v2/{instanceId}/{applicationId}/organizationalUnits/{organizationalUnitId}/parentIds', 'json', false, 'json', request);
}

model ListOrganizationalUnitsRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  pageNumber?: int32(name='pageNumber', description='页码，默认1', example='1', position='Query'),
  pageSize?: int32(name='pageSize', description='单页大小，默认20', example='20', position='Query'),
  parentId: string(name='parentId', description='父机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Query'),
}

model ListOrganizationalUnitsResponseBody = {
  data?: [ 
    {
      createTime?: long(name='createTime', description='创建时间，毫秒', example='1652083425923'),
      description?: string(name='description', description='描述', example='xxxxx'),
      instanceId?: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
      organizationalUnitExternalId?: string(name='organizationalUnitExternalId', description='外部ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
      organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
      organizationalUnitName?: string(name='organizationalUnitName', description='机构名称', example='name001'),
      organizationalUnitSourceId?: string(name='organizationalUnitSourceId', description='来源ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
      organizationalUnitSourceType?: string(name='organizationalUnitSourceType', description='来源类型', example='build_in'),
      parentId?: string(name='parentId', description='父机构ID', example='ou_wovwffm62xifdziem7an7xxxxx'),
      updateTime?: long(name='updateTime', description='最近一次更新时间，毫秒', example='1652083425923'),
    }
  ](name='data'),
  totalCount?: long(name='totalCount', description='记录总数', example='1000'),
}

model ListOrganizationalUnitsResponse = {
  headers: map[string]string(name='headers'),
  body: ListOrganizationalUnitsResponseBody(name='body'),
}

async function listOrganizationalUnits(request: ListOrganizationalUnitsRequest): ListOrganizationalUnitsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'ListOrganizationalUnits', 'GET', '/v2/{instanceId}/{applicationId}/organizationalUnits', 'json', false, 'json', request);
}

model ListUsersRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  organizationalUnitId?: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Query'),
  pageNumber?: int32(name='pageNumber', description='页码，默认1', example='1', position='Query'),
  pageSize?: int32(name='pageSize', description='单页大小，默认20', example='20', position='Query'),
}

model ListUsersResponseBody = {
  data?: [ 
    {
      accountExpireTime?: long(name='accountExpireTime', description='账户过期时间, 毫秒时间', example='1652085686179'),
      createTime?: long(name='createTime', description='创建时间, 毫秒时间', example='1652085686179'),
      description?: string(name='description', description='账号描述', example='xxxx'),
      displayName?: string(name='displayName', description='显示名', example='display_name001'),
      email?: string(name='email', description='邮箱', example='example@example.com'),
      emailVerified?: boolean(name='emailVerified', description='邮箱是否验证', example='true'),
      instanceId?: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
      lockExpireTime?: long(name='lockExpireTime', description='锁定过期时间, 毫秒时间', example='1652085686179'),
      passwordSet?: boolean(name='passwordSet', description='密码是否已设置', example='true'),
      phoneNumber?: string(name='phoneNumber', description='手机号', example='156xxxxxxx'),
      phoneNumberVerified?: boolean(name='phoneNumberVerified', description='手机号是否验证', example='true'),
      phoneRegion?: string(name='phoneRegion', description='手机地区编号,示例：中国大陆手区号为86，不带 00 或 +', example='86'),
      registerTime?: long(name='registerTime', example='1652085686179'),
      status?: string(name='status', description='账户状态, enabled:启用,disabled:禁用', example='enabled'),
      updateTime?: long(name='updateTime', description='最近一次更新时间, 毫秒时间', example='1652085686179'),
      userExternalId?: string(name='userExternalId', description='外部ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
      userId?: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx'),
      userSourceId?: string(name='userSourceId', description='来源ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx'),
      userSourceType?: string(name='userSourceType', description='来源类型，build_in[自建],ding_talk[钉钉导入],ad[AD导入],ldap[LDAP导入]', example='build_in'),
      username?: string(name='username', description='账户名', example='name001'),
    }
  ](name='data'),
  totalCount?: long(name='totalCount', description='记录总数', example='1000'),
}

model ListUsersResponse = {
  headers: map[string]string(name='headers'),
  body: ListUsersResponseBody(name='body'),
}

async function listUsers(request: ListUsersRequest): ListUsersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'ListUsers', 'GET', '/v2/{instanceId}/{applicationId}/users', 'json', false, 'json', request);
}

model PatchOrganizationalUnitRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  organizationalUnitId: string(name='organizationalUnitId', description='机构ID', example='ou_wovwffm62xifdziem7an7xxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息，格式:Bearer access_token', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  description?: string(name='description', description='机构描述', example='机构描述', position='Body'),
  organizationalUnitName?: string(name='organizationalUnitName', description='机构名称', example='name001', position='Body'),
}

model PatchOrganizationalUnitResponse = {
  headers: map[string]string(name='headers'),
}

async function patchOrganizationalUnit(request: PatchOrganizationalUnitRequest): PatchOrganizationalUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'PatchOrganizationalUnit', 'PATCH', '/v2/{instanceId}/{applicationId}/organizationalUnits/{organizationalUnitId}', 'none', false, 'json', request);
}

model PatchUserRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer AT8csE2seYxxxxxij', position='Header'),
  customFields?: [ 
    {
      fieldName?: string(name='fieldName', description='扩展字段标识', example='age'),
      fieldValue?: string(name='fieldValue', description='扩展字段值', example='test_value'),
      operation?: string(name='operation', description='字段操作类型，取值可选范围：
- add：添加。
- replace：替换。若对应扩展字段无设置值，会转换为add操作。
- remove：移除。', example='replace'),
      operator?: string(name='operator', example='replace', deprecated='true'),
    }
  ](name='customFields', description='扩展字段列表', position='Body'),
  displayName?: string(name='displayName', description='账户展示名', example='display_name001', position='Body'),
  email?: string(name='email', description='邮箱', example='example@example.com', position='Body'),
  emailVerified?: boolean(name='emailVerified', description='邮箱是否验证，邮箱若设置此字段必须设置，无特殊业务可直接设置为true', example='true', position='Body'),
  phoneNumber?: string(name='phoneNumber', description='手机号', example='156xxxxxxx', position='Body'),
  phoneNumberVerified?: boolean(name='phoneNumberVerified', description='手机号是否验证，手机号若设置此字段必须设置，无特殊业务可直接设置为true', example='true', position='Body'),
  phoneRegion?: string(name='phoneRegion', description='手机地区编号,示例：中国大陆手区号为86，不带 00 或 +, 手机号若设置，此参数必填', example='86', position='Body'),
  username?: string(name='username', description='账户名', example='name001', position='Body'),
}

model PatchUserResponse = {
  headers: map[string]string(name='headers'),
}

async function patchUser(request: PatchUserRequest): PatchUserResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'PatchUser', 'PATCH', '/v2/{instanceId}/{applicationId}/users/{userId}', 'none', false, 'json', request);
}

model RemoveUserFromOrganizationalUnitsRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
  organizationalUnitIds: [ string ](name='organizationalUnitIds', description='组织ID列表。', example='[ou_wovwffm62xifdziem7an7xxxxx]', position='Body'),
}

model RemoveUserFromOrganizationalUnitsResponse = {
  headers: map[string]string(name='headers'),
}

async function removeUserFromOrganizationalUnits(request: RemoveUserFromOrganizationalUnitsRequest): RemoveUserFromOrganizationalUnitsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'RemoveUserFromOrganizationalUnits', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/removeUserFromOrganizationalUnits', 'none', false, 'json', request);
}

model RevokeTokenRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  clientId?: string(name='client_id', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Query'),
  clientSecret?: string(name='client_secret', example='CSEHDcHcrUKHw1CuxkJEHPveWRXBGqVqRsxxxx', position='Query'),
  token: string(name='token', description='撤销的token', example='ATxxxx', position='Query'),
  tokenTypeHint?: string(name='token_type_hint', description='token类型', example='access_token', position='Query'),
}

model RevokeTokenResponse = {
  headers: map[string]string(name='headers'),
  body: map[string]any(name='body'),
}

async function revokeToken(request: RevokeTokenRequest): RevokeTokenResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'RevokeToken', 'POST', '/v2/{instanceId}/{applicationId}/oauth2/revoke', 'json', false, 'json', request);
}

model SetUserPrimaryOrganizationalUnitRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
  organizationalUnitId: string(name='organizationalUnitId', description='主组织ID。', example='ou_wovwffm62xifdziem7an7xxxxx', position='Body'),
}

model SetUserPrimaryOrganizationalUnitResponse = {
  headers: map[string]string(name='headers'),
}

async function setUserPrimaryOrganizationalUnit(request: SetUserPrimaryOrganizationalUnitRequest): SetUserPrimaryOrganizationalUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'SetUserPrimaryOrganizationalUnit', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/setUserPrimaryOrganizationalUnit', 'none', false, 'json', request);
}

model UpdateUserPasswordRequest {
  regionId?: string(name='regionId', position='Host'),
  instanceId: string(name='instanceId', description='实例ID。', example='idaas_ue2jvisn35ea5lmthk267xxxxx', position='Path'),
  applicationId: string(name='applicationId', description='应用ID。', example='app_mkv7rgt4d7i4u7zqtzev2mxxxx', position='Path'),
  userId: string(name='userId', description='账户ID', example='user_d6sbsuumeta4h66ec3il7yxxxx', position='Path'),
  authorization: string(name='Authorization', description='认证信息。
格式:Bearer ${access_token}。
示例：Bearer ATxxxx。', example='Bearer xxxx', position='Header'),
  password?: string(name='password', description='密码', example='xxxx', position='Body'),
}

model UpdateUserPasswordResponse = {
  headers: map[string]string(name='headers'),
}

async function updateUserPassword(request: UpdateUserPasswordRequest): UpdateUserPasswordResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RESTFUL', 'UpdateUserPassword', 'POST', '/v2/{instanceId}/{applicationId}/users/{userId}/actions/updateUserPassword', 'none', false, 'json', request);
}

