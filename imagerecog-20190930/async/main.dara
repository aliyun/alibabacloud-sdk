/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'imagerecog';
  @version = '2019-09-30';
  @endpointRule = 'regional';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model GetAsyncJobResultRequest {
  jobId: string(name='JobId', description='This parameter is required.', example='72CFDC08-3FEF-56AA-91E5-B14DE31C09C2', position='Query'),
}

model GetAsyncJobResultResponseBody = {
  data?: {
    errorCode?: string(name='ErrorCode', example='InvalidParameter'),
    errorMessage?: string(name='ErrorMessage', example='paramsIllegal'),
    jobId?: string(name='JobId', example='72CFDC08-3FEF-56AA-91E5-B14DE31C09C2'),
    result?: string(name='Result', example='{\\"tags\\":[{\\"confidence\\":-1,\\"value\\":\\"{\\\\\\"tagInfo\\\\\\": {\\\\\\"humanInfo\\\\\\": [[{\\\\\\"category\\\\\\": \\\\\\"human-real-normal\\\\\\", \\\\\\"score\\\\\\": 0.9690580798778683, \\\\\\"bbox\\\\\\": [77, 280, 431, 569], \\\\\\"cloth_category\\\\\\": \\\\\\"modern\\\\\\", \\\\\\"cloth_category_score\\\\\\": 0.7393399477005005}]], \\\\\\"sceneInfo\\\\\\": [[{\\\\\\"category\\\\\\": \\\\\\"gamescreen-gameeffect\\\\\\", \\\\\\"score\\\\\\": 0.44200169294841274}]], \\\\\\"objectInfo\\\\\\": [null]}}\\"}]}'),
    status?: string(name='Status', example='PROCESS_SUCCESS'),
  }(name='Data'),
  requestId?: string(name='RequestId', example='572974F0-1014-5C60-97EE-DBFFC0FF7616'),
}

model GetAsyncJobResultResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAsyncJobResultResponseBody(name='body'),
}

/**
  * @param request  the request parameters of GetAsyncJobResult  GetAsyncJobResultRequest
  * @return GetAsyncJobResultResponse
 */
async function getAsyncJobResult(request: GetAsyncJobResultRequest): GetAsyncJobResultResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetAsyncJobResult', 'GET', '/', 'json', false, 'json', request);
}

