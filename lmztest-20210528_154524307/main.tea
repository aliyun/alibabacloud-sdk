/**
 *
 */
import Util;
import OpenApi;

import EndpointUtil;

extends OpenApi;

init(config: OpenApi.Config){
  super(config);
  @endpointRule = '';
  
  checkConfig(config);
  @endpoint = getEndpoint('lmztest', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }

  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}
model YxTestAPIRequest {
  f0?: int32(name='f0', description='param0'),
  f1?: int32(name='f1', description='param1'),
}

model YxTestAPIResponseBody = {
  sum?: int32(name='sum', description='sum'),
}

model YxTestAPIResponse = {
  headers: map[string]string(name='headers'),
  body: YxTestAPIResponseBody(name='body'),
}

async function yxTestAPIWithOptions(request: YxTestAPIRequest, runtime: Util.RuntimeOptions): YxTestAPIResponse {
  Util.validateModel(request);
  var req = new OpenApi.OpenApiRequest{ 
    body = Util.toMap(request),
  };
  return doRPCRequest('YxTestAPI', '2021-05-28_15-45-24-307', 'HTTPS', 'POST', 'AK', 'json', req, runtime);
}

async function yxTestAPI(request: YxTestAPIRequest): YxTestAPIResponse {
  var runtime = new Util.RuntimeOptions{};
  return yxTestAPIWithOptions(request, runtime);
}

