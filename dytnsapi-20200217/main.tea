/**
 *
 */
import Util;
import OpenApi;

import EndpointUtil;

extends OpenApi;

init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'central';
  
  checkConfig(config);
  @endpoint = getEndpoint('dytnsapi', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }

  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}
model DescribePhoneNumberStatusRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  phoneNumber?: string(name='PhoneNumber'),
}

model DescribePhoneNumberStatusResponseBody = {
  code?: string(name='Code'),
  message?: string(name='Message'),
  requestId?: string(name='RequestId'),
  phoneStatus?: {
    status?: string(name='Status'),
    serialId?: string(name='SerialId'),
    carrier?: string(name='Carrier'),
  }(name='PhoneStatus'),
}

model DescribePhoneNumberStatusResponse = {
  headers: map[string]string(name='headers'),
  body: DescribePhoneNumberStatusResponseBody(name='body'),
}

async function describePhoneNumberStatusWithOptions(request: DescribePhoneNumberStatusRequest, runtime: Util.RuntimeOptions): DescribePhoneNumberStatusResponse {
  Util.validateModel(request);
  var req = new OpenApi.OpenApiRequest{ 
    body = Util.toMap(request),
  };
  return doRPCRequest('DescribePhoneNumberStatus', '2020-02-17', 'HTTPS', 'POST', 'AK', 'json', req, runtime);
}

async function describePhoneNumberStatus(request: DescribePhoneNumberStatusRequest): DescribePhoneNumberStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePhoneNumberStatusWithOptions(request, runtime);
}

model DescribePhoneNumberAttributeRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  phoneNumber?: string(name='PhoneNumber'),
}

model DescribePhoneNumberAttributeResponseBody = {
  code?: string(name='Code'),
  message?: string(name='Message'),
  requestId?: string(name='RequestId'),
  phoneNumberAttribute?: {
    basicCarrier?: string(name='BasicCarrier'),
    carrier?: string(name='Carrier'),
    isNumberPortability?: boolean(name='IsNumberPortability'),
    numberSegment?: long(name='NumberSegment'),
    city?: string(name='City'),
    province?: string(name='Province'),
  }(name='PhoneNumberAttribute'),
}

model DescribePhoneNumberAttributeResponse = {
  headers: map[string]string(name='headers'),
  body: DescribePhoneNumberAttributeResponseBody(name='body'),
}

async function describePhoneNumberAttributeWithOptions(request: DescribePhoneNumberAttributeRequest, runtime: Util.RuntimeOptions): DescribePhoneNumberAttributeResponse {
  Util.validateModel(request);
  var req = new OpenApi.OpenApiRequest{ 
    body = Util.toMap(request),
  };
  return doRPCRequest('DescribePhoneNumberAttribute', '2020-02-17', 'HTTPS', 'POST', 'AK', 'json', req, runtime);
}

async function describePhoneNumberAttribute(request: DescribePhoneNumberAttributeRequest): DescribePhoneNumberAttributeResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePhoneNumberAttributeWithOptions(request, runtime);
}

model DescribePhoneNumberResaleRequest {
  ownerId?: long(name='OwnerId'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount'),
  resourceOwnerId?: long(name='ResourceOwnerId'),
  phoneNumber?: string(name='PhoneNumber'),
  since?: string(name='Since'),
}

model DescribePhoneNumberResaleResponseBody = {
  code?: string(name='Code'),
  message?: string(name='Message'),
  requestId?: string(name='RequestId'),
  twiceTelVerify?: {
    carrier?: string(name='Carrier'),
    verifyResult?: int32(name='VerifyResult'),
  }(name='TwiceTelVerify'),
}

model DescribePhoneNumberResaleResponse = {
  headers: map[string]string(name='headers'),
  body: DescribePhoneNumberResaleResponseBody(name='body'),
}

async function describePhoneNumberResaleWithOptions(request: DescribePhoneNumberResaleRequest, runtime: Util.RuntimeOptions): DescribePhoneNumberResaleResponse {
  Util.validateModel(request);
  var req = new OpenApi.OpenApiRequest{ 
    body = Util.toMap(request),
  };
  return doRPCRequest('DescribePhoneNumberResale', '2020-02-17', 'HTTPS', 'POST', 'AK', 'json', req, runtime);
}

async function describePhoneNumberResale(request: DescribePhoneNumberResaleRequest): DescribePhoneNumberResaleResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePhoneNumberResaleWithOptions(request, runtime);
}

