/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'regional';
  
  checkConfig(config);
  @endpoint = getEndpoint('resourcesharing', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model AcceptResourceShareInvitationRequest {
  resourceShareInvitationId?: string(name='ResourceShareInvitationId', description='The ID of the resource sharing invitation.

You can call the [ListResourceShareInvitations](~~450564~~) operation to obtain the ID of a resource sharing invitation.', example='i-pMnItMX19fBJ****'),
}

model AcceptResourceShareInvitationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='08F18B04-47CB-5C0E-A6D2-37DEF5C2A961'),
  resourceShareInvitation?: {
    createTime?: string(name='CreateTime', description='The time when the invitation was created. The time is displayed in UTC.', example='2022-09-02T06:43:12.353Z'),
    receiverAccountId?: string(name='ReceiverAccountId', description='The Alibaba Cloud account ID of the invitee.', example='134254031178****'),
    resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-ysGRci9z****'),
    resourceShareInvitationId?: string(name='ResourceShareInvitationId', description='The ID of the invitation.', example='i-pMnItMX19fBJ****'),
    resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='example'),
    senderAccountId?: string(name='SenderAccountId', description='The Alibaba Cloud account ID of the inviter.', example='151266687691****'),
    status?: string(name='Status', description='The status of the invitation. Valid values:

*   Pending: The invitation is waiting for confirmation.
*   Accepted: The invitation is accepted.
*   Cancelled: The invitation is canceled.
*   Rejected: The invitation is rejected.
*   Expired: The invitation has expired.', example='Accepted'),
  }(name='ResourceShareInvitation', description='The information of the resource sharing invitation.'),
}

model AcceptResourceShareInvitationResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: AcceptResourceShareInvitationResponseBody(name='body'),
}

/**
  * *   A principal needs to accept or reject a resource sharing invitation only if the principal is not the management account or a member of a resource directory. If you share resources with an object in a resource directory, the system automatically accepts the resource sharing invitation for the object.
  * *   A resource sharing invitation is valid for seven days. A principal must accept or reject the invitation within the validity period.
  * This topic provides an example on how to call the API operation to accept the resource sharing invitation `i-pMnItMX19fBJ****` in the `cn-hangzhou` region.
  *
  * @param request AcceptResourceShareInvitationRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return AcceptResourceShareInvitationResponse
 */
async function acceptResourceShareInvitationWithOptions(request: AcceptResourceShareInvitationRequest, runtime: Util.RuntimeOptions): AcceptResourceShareInvitationResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.resourceShareInvitationId)) {
    query['ResourceShareInvitationId'] = request.resourceShareInvitationId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'AcceptResourceShareInvitation',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * *   A principal needs to accept or reject a resource sharing invitation only if the principal is not the management account or a member of a resource directory. If you share resources with an object in a resource directory, the system automatically accepts the resource sharing invitation for the object.
  * *   A resource sharing invitation is valid for seven days. A principal must accept or reject the invitation within the validity period.
  * This topic provides an example on how to call the API operation to accept the resource sharing invitation `i-pMnItMX19fBJ****` in the `cn-hangzhou` region.
  *
  * @param request AcceptResourceShareInvitationRequest
  * @return AcceptResourceShareInvitationResponse
 */
async function acceptResourceShareInvitation(request: AcceptResourceShareInvitationRequest): AcceptResourceShareInvitationResponse {
  var runtime = new Util.RuntimeOptions{};
  return acceptResourceShareInvitationWithOptions(request, runtime);
}

model AssociateResourceShareRequest {
  permissionNames?: [ string ](name='PermissionNames'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
  resources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The ID of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

>  Resources.N.ResourceId and Resources.N.ResourceType must be used in pairs.', example='vsw-bp183p93qs667muql****'),
      resourceType?: string(name='ResourceType', description='The type of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).

>  `Resources.N.ResourceId` and `Resources.N.ResourceType` must be used in pairs.', example='VSwitch'),
    }
  ](name='Resources'),
  targets?: [ string ](name='Targets', example='172050525300****'),
}

model AssociateResourceShareResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='111FB84A-60A9-403E-9067-E55D7EE95BD1'),
  resourceShareAssociations?: [ 
    {
      associationStatus?: string(name='AssociationStatus', description='The association status. Valid values:

*   Associating: The entity is being associated.
*   Associated: The entity is associated.
*   Failed: The entity fails to be associated.
*   Disassociating: The entity is being disassociated.
*   Disassociated: The entity is disassociated.

>  The system deletes the records of entities in the `Failed` or `Disassociated` state within 48 hours to 96 hours.', example='Associating'),
      associationStatusMessage?: string(name='AssociationStatusMessage', description='The cause of the association failure.', example='The reason for the association failure.'),
      associationType?: string(name='AssociationType', description='The association type. Valid values:

*   Resource
*   Target', example='Resource'),
      createTime?: string(name='CreateTime', description='The time when the association of the entity was created. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the shared resource was associated with the resource share.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the principal was associated with the resource share.', example='2020-12-04T09:40:41.246Z'),
      entityId?: string(name='EntityId', description='The ID of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the ID of the shared resource.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the ID of the principal.', example='vsw-bp183p93qs667muql****'),
      entityType?: string(name='EntityType', description='The type of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of AssociationType is Resource, the value of this parameter is the type of the shared resource. For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).
*   If the value of AssociationType is Target, the value of this parameter is `Account`.', example='VSwitch'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
      resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='test'),
      updateTime?: string(name='UpdateTime', description='The time when the association of the entity was updated. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the association of the shared resource was updated.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the association of the principal was updated.', example='2020-12-04T09:40:41.246Z'),
    }
  ](name='ResourceShareAssociations', description='The information of the entities that are associated with the resource share.'),
}

model AssociateResourceShareResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: AssociateResourceShareResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to associate the vSwitch `vsw-bp183p93qs667muql****` and the member `172050525300****` with the resource share `rs-6GRmdD3X****` in the `cn-hangzhou` region. After the association, the vSwitch is shared with the member.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request AssociateResourceShareRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return AssociateResourceShareResponse
 */
async function associateResourceShareWithOptions(request: AssociateResourceShareRequest, runtime: Util.RuntimeOptions): AssociateResourceShareResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.permissionNames)) {
    query['PermissionNames'] = request.permissionNames;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  if (!Util.isUnset(request.resources)) {
    query['Resources'] = request.resources;
  }
  if (!Util.isUnset(request.targets)) {
    query['Targets'] = request.targets;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'AssociateResourceShare',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to associate the vSwitch `vsw-bp183p93qs667muql****` and the member `172050525300****` with the resource share `rs-6GRmdD3X****` in the `cn-hangzhou` region. After the association, the vSwitch is shared with the member.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request AssociateResourceShareRequest
  * @return AssociateResourceShareResponse
 */
async function associateResourceShare(request: AssociateResourceShareRequest): AssociateResourceShareResponse {
  var runtime = new Util.RuntimeOptions{};
  return associateResourceShareWithOptions(request, runtime);
}

model AssociateResourceSharePermissionRequest {
  permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
  replace?: boolean(name='Replace', description='Specifies whether to use the specified permission to replace an existing permission. Valid values:

*   false: does not use the specified permission to replace an existing permission. This is the default value. If you set the value to false for a resource share that does not have associated permissions, the system associates the specified permission with the resource share. In a resource share, one resource type can have only one permission. If you set the value to false for a resource share that already has a permission for the resource type indicated by the specified permission, the system reports an error. This prevents you from replacing the existing permission by mistake.
*   true: uses the specified permission to replace an existing permission of the same resource type.', example='false'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
}

model AssociateResourceSharePermissionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='111FB84A-60A9-403E-9067-E55D7EE95BD1'),
}

model AssociateResourceSharePermissionResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: AssociateResourceSharePermissionResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to associate the `AliyunRSDefaultPermissionVSwitch` permission with the `rs-6GRmdD3X****` resource share in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request AssociateResourceSharePermissionRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return AssociateResourceSharePermissionResponse
 */
async function associateResourceSharePermissionWithOptions(request: AssociateResourceSharePermissionRequest, runtime: Util.RuntimeOptions): AssociateResourceSharePermissionResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.permissionName)) {
    query['PermissionName'] = request.permissionName;
  }
  if (!Util.isUnset(request.replace)) {
    query['Replace'] = request.replace;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'AssociateResourceSharePermission',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to associate the `AliyunRSDefaultPermissionVSwitch` permission with the `rs-6GRmdD3X****` resource share in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request AssociateResourceSharePermissionRequest
  * @return AssociateResourceSharePermissionResponse
 */
async function associateResourceSharePermission(request: AssociateResourceSharePermissionRequest): AssociateResourceSharePermissionResponse {
  var runtime = new Util.RuntimeOptions{};
  return associateResourceSharePermissionWithOptions(request, runtime);
}

model CreateResourceShareRequest {
  allowExternalTargets?: boolean(name='AllowExternalTargets', description='Specifies whether resources in the resource share can be shared with accounts outside the resource directory. Valid values:

*   false: Resources in the resource share can be shared only with accounts in the resource directory. This is the default value.
*   true: Resources in the resource share can be shared with both accounts in the resource directory and accounts outside the resource directory.', example='false'),
  permissionNames?: [ string ](name='PermissionNames'),
  resourceGroupId?: string(name='ResourceGroupId'),
  resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.

The name must be 1 to 50 characters in length.

The name can contain letters, digits, periods (.), underscores (\\_), and hyphens (-).', example='test'),
  resources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The ID of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

>  `Resources.N.ResourceId` and `Resources.N.ResourceType` must be used in pairs.', example='vsw-bp183p93qs667muql****'),
      resourceType?: string(name='ResourceType', description='The type of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).

>  `Resources.N.ResourceId` and `Resources.N.ResourceType` must be used in pairs.', example='VSwitch'),
    }
  ](name='Resources'),
  targets?: [ string ](name='Targets', example='172050525300****'),
}

model CreateResourceShareResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2C3FA051-61DC-4F3E-81E9-E4830524DF4B'),
  resourceShare?: {
    allowExternalTargets?: boolean(name='AllowExternalTargets', description='Indicates whether resources in the resource share can be shared with accounts outside the resource directory. Valid values:

*   false: Resources in the resource share can be shared only with accounts in the resource directory.
*   true: Resources in the resource share can be shared with both accounts in the resource directory and accounts outside the resource directory.', example='false'),
    createTime?: string(name='CreateTime', description='The time when the resource share was created.', example='2020-12-03T08:02:22.413Z'),
    resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-qSkW1HBY****'),
    resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='test'),
    resourceShareOwner?: string(name='ResourceShareOwner', description='The owner of the resource share.', example='151266687691****'),
    resourceShareStatus?: string(name='ResourceShareStatus', description='The status of the resource share. Valid values:

*   Active: The resource share is enabled.
*   Pending: The resource share is associated with one or more resource sharing invitations that are waiting for confirmation.
*   Deleting: The resource share is being deleted.
*   Deleted: The resource share is deleted.

>  The system deletes the records of resource shares in the Deleted state within 48 hours to 96 hours after you delete the resource shares.', example='Active'),
    updateTime?: string(name='UpdateTime', description='The time when the resource share was updated.', example='2020-12-03T08:02:22.413Z'),
  }(name='ResourceShare', description='The information of the resource share.'),
}

model CreateResourceShareResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: CreateResourceShareResponseBody(name='body'),
}

/**
  * Resource Sharing allows you to share your resources with one or more accounts and access the resources shared by other accounts. For more information, see [Resource Sharing overview](~~160622~~).
  * This topic provides an example on how to call the API operation to create a resource share named `test` in the `cn-hangzhou` region to share the vSwitch `vsw-bp183p93qs667muql****` with the member `172050525300****`. In this example, the management account of a resource directory is used to call this API operation.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request CreateResourceShareRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return CreateResourceShareResponse
 */
async function createResourceShareWithOptions(request: CreateResourceShareRequest, runtime: Util.RuntimeOptions): CreateResourceShareResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.allowExternalTargets)) {
    query['AllowExternalTargets'] = request.allowExternalTargets;
  }
  if (!Util.isUnset(request.permissionNames)) {
    query['PermissionNames'] = request.permissionNames;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceShareName)) {
    query['ResourceShareName'] = request.resourceShareName;
  }
  if (!Util.isUnset(request.resources)) {
    query['Resources'] = request.resources;
  }
  if (!Util.isUnset(request.targets)) {
    query['Targets'] = request.targets;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateResourceShare',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * Resource Sharing allows you to share your resources with one or more accounts and access the resources shared by other accounts. For more information, see [Resource Sharing overview](~~160622~~).
  * This topic provides an example on how to call the API operation to create a resource share named `test` in the `cn-hangzhou` region to share the vSwitch `vsw-bp183p93qs667muql****` with the member `172050525300****`. In this example, the management account of a resource directory is used to call this API operation.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request CreateResourceShareRequest
  * @return CreateResourceShareResponse
 */
async function createResourceShare(request: CreateResourceShareRequest): CreateResourceShareResponse {
  var runtime = new Util.RuntimeOptions{};
  return createResourceShareWithOptions(request, runtime);
}

model DeleteResourceShareRequest {
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-qSkW1HBY****'),
}

model DeleteResourceShareResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='A627EE2A-223D-4E1F-A954-394686AEA916'),
}

model DeleteResourceShareResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DeleteResourceShareResponseBody(name='body'),
}

/**
  * After a resource share is deleted, all principals in the resource share can no longer access the resources in the resource share. However, the resources are not deleted with the resource share.
  * A resource share that is deleted is in the `Deleted` state. The system deletes the record of the resource share within 48 hours to 96 hours.
  * This topic provides an example on how to call the API operation to delete the resource share `rs-qSkW1HBY****` in the `cn-hangzhou` region.
  *
  * @param request DeleteResourceShareRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DeleteResourceShareResponse
 */
async function deleteResourceShareWithOptions(request: DeleteResourceShareRequest, runtime: Util.RuntimeOptions): DeleteResourceShareResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteResourceShare',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * After a resource share is deleted, all principals in the resource share can no longer access the resources in the resource share. However, the resources are not deleted with the resource share.
  * A resource share that is deleted is in the `Deleted` state. The system deletes the record of the resource share within 48 hours to 96 hours.
  * This topic provides an example on how to call the API operation to delete the resource share `rs-qSkW1HBY****` in the `cn-hangzhou` region.
  *
  * @param request DeleteResourceShareRequest
  * @return DeleteResourceShareResponse
 */
async function deleteResourceShare(request: DeleteResourceShareRequest): DeleteResourceShareResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteResourceShareWithOptions(request, runtime);
}

model DescribeRegionsRequest {
  acceptLanguage?: string(name='AcceptLanguage', description='The supported natural language. Valid values:

*   zh-CN: Chinese
*   en-US: English', example='zh-CN'),
}

model DescribeRegionsResponseBody = {
  regions?: [ 
    {
      localName?: string(name='LocalName', description='The name of the region.'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of the Resource Sharing service in the region.', example='resourcesharing.cn-hangzhou.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
    }
  ](name='Regions', description='The information of the regions.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='0D64A198-5842-4570-8E26-5E540CDC84CD'),
}

model DescribeRegionsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeRegionsResponseBody(name='body'),
}

async function describeRegionsWithOptions(request: DescribeRegionsRequest, runtime: Util.RuntimeOptions): DescribeRegionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.acceptLanguage)) {
    query['AcceptLanguage'] = request.acceptLanguage;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRegions',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRegionsWithOptions(request, runtime);
}

model DisassociateResourceShareRequest {
  resourceOwner?: string(name='ResourceOwner', description='The owner of the resource share. Valid values:

*   Self: The resource share belongs to the current account. This is the default value. If you are the management account or a member of a resource directory and you want to remove resources or principals from a resource share, set this parameter to Self.
*   OtherAccounts: The resource share belongs to another account. If you are not the management account or a member of a resource directory and you want to exit a resource share, set this parameter to OtherAccounts.', example='Self'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
  resources?: [ 
    {
      resourceId?: string(name='ResourceId', description='The ID of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

>  Resources.N.ResourceId and Resources.N.ResourceType must be used in pairs.', example='vsw-bp183p93qs667muql****'),
      resourceType?: string(name='ResourceType', description='The type of a shared resource.

Valid values of N: 1 to 5. This indicates that a maximum of five shared resources can be specified at a time.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).

>  Resources.N.ResourceId and Resources.N.ResourceType must be used in pairs.', example='VSwitch'),
    }
  ](name='Resources'),
  targets?: [ string ](name='Targets', example='172050525300****'),
}

model DisassociateResourceShareResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='95230BC9-A8E8-4493-96BD-4F0C758E37F8'),
  resourceShareAssociations?: [ 
    {
      associationStatus?: string(name='AssociationStatus', description='The association status. Valid values:

*   Associating: The entity is being associated.
*   Associated: The entity is associated.
*   Failed: The entity fails to be associated.
*   Disassociating: The entity is being disassociated.
*   Disassociated: The entity is disassociated.

>  The system deletes the records of entities in the `Failed` or `Disassociated` state within 48 hours to 96 hours.', example='Disassociating'),
      associationStatusMessage?: string(name='AssociationStatusMessage', description='The cause of the disassociation failure.', example='The Resources is invalid.'),
      associationType?: string(name='AssociationType', description='The association type. Valid values:

*   Resource
*   Target', example='Target'),
      createTime?: string(name='CreateTime', description='The time when the disassociation of the entity was performed. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the resource was disassociated from the resource share.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the principal was disassociated from the resource share.', example='2020-12-04T09:40:41.250Z'),
      entityId?: string(name='EntityId', description='The ID of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the ID of the resource.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the ID of the resource directory, folder, or member.', example='172050525300****'),
      entityType?: string(name='EntityType', description='The type of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of AssociationType is Resource, the value of this parameter is the type of the resource. For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).
*   If the value of AssociationType is Target, the value of this parameter is Account.', example='Account'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
      resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='test'),
      updateTime?: string(name='UpdateTime', description='The time when the disassociation of the entity was updated. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the disassociation of the resource was updated.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the disassociation of the principal was updated.', example='2020-12-04T09:40:45.556Z'),
    }
  ](name='ResourceShareAssociations', description='The information of the entities that are associated with the resource share.'),
}

model DisassociateResourceShareResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DisassociateResourceShareResponseBody(name='body'),
}

/**
  * *   A resource owner can call this API operation to remove shared resources or principals from a resource share.
  * *   If an Alibaba Cloud account that is not the management account or a member of a resource directory is added to a resource share as a principal, you can use the Alibaba Cloud account to call this API operation to exit the resource share. For more information, see [Exit a resource share](~~440614~~).
  * This topic provides an example on how to use the management account of a resource directory to call the API operation to remove the member `172050525300****` from the resource share `rs-6GRmdD3X****` in the `cn-hangzhou` region. After the member is removed from the resource share, the member cannot share the resources in the resource share.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request DisassociateResourceShareRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DisassociateResourceShareResponse
 */
async function disassociateResourceShareWithOptions(request: DisassociateResourceShareRequest, runtime: Util.RuntimeOptions): DisassociateResourceShareResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.resourceOwner)) {
    query['ResourceOwner'] = request.resourceOwner;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  if (!Util.isUnset(request.resources)) {
    query['Resources'] = request.resources;
  }
  if (!Util.isUnset(request.targets)) {
    query['Targets'] = request.targets;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DisassociateResourceShare',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * *   A resource owner can call this API operation to remove shared resources or principals from a resource share.
  * *   If an Alibaba Cloud account that is not the management account or a member of a resource directory is added to a resource share as a principal, you can use the Alibaba Cloud account to call this API operation to exit the resource share. For more information, see [Exit a resource share](~~440614~~).
  * This topic provides an example on how to use the management account of a resource directory to call the API operation to remove the member `172050525300****` from the resource share `rs-6GRmdD3X****` in the `cn-hangzhou` region. After the member is removed from the resource share, the member cannot share the resources in the resource share.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request DisassociateResourceShareRequest
  * @return DisassociateResourceShareResponse
 */
async function disassociateResourceShare(request: DisassociateResourceShareRequest): DisassociateResourceShareResponse {
  var runtime = new Util.RuntimeOptions{};
  return disassociateResourceShareWithOptions(request, runtime);
}

model DisassociateResourceSharePermissionRequest {
  permissionName?: string(name='PermissionName', description='The name of the permission. For more information, see [Permission library](~~465474~~).', example='AliyunRSDefaultPermissionVSwitch'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
}

model DisassociateResourceSharePermissionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='111FB84A-60A9-403E-9067-E55D7EE95BD1'),
}

model DisassociateResourceSharePermissionResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DisassociateResourceSharePermissionResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to disassociate the `AliyunRSDefaultPermissionVSwitch` permission from the `rs-6GRmdD3X****` resource share in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request DisassociateResourceSharePermissionRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DisassociateResourceSharePermissionResponse
 */
async function disassociateResourceSharePermissionWithOptions(request: DisassociateResourceSharePermissionRequest, runtime: Util.RuntimeOptions): DisassociateResourceSharePermissionResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.permissionName)) {
    query['PermissionName'] = request.permissionName;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DisassociateResourceSharePermission',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to disassociate the `AliyunRSDefaultPermissionVSwitch` permission from the `rs-6GRmdD3X****` resource share in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request DisassociateResourceSharePermissionRequest
  * @return DisassociateResourceSharePermissionResponse
 */
async function disassociateResourceSharePermission(request: DisassociateResourceSharePermissionRequest): DisassociateResourceSharePermissionResponse {
  var runtime = new Util.RuntimeOptions{};
  return disassociateResourceSharePermissionWithOptions(request, runtime);
}

model EnableSharingWithResourceDirectoryResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2F23CFB6-A721-4E90-AC1E-0E30FA8B45DA'),
}

model EnableSharingWithResourceDirectoryResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: EnableSharingWithResourceDirectoryResponseBody(name='body'),
}

/**
  * You can share your resources with all members in your resource directory, all members in a specific folder in your resource directory, or a specific member in your resource directory as a resource owner only after you enable resource sharing for your resource directory.
  * You can call this API operation only by using the management account of your resource directory or a RAM user or RAM role to which the required permissions are granted within the management account.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request EnableSharingWithResourceDirectoryRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return EnableSharingWithResourceDirectoryResponse
 */
async function enableSharingWithResourceDirectoryWithOptions(runtime: Util.RuntimeOptions): EnableSharingWithResourceDirectoryResponse {
  var req = new OpenApi.OpenApiRequest{};
  var params = new OpenApi.Params{
    action = 'EnableSharingWithResourceDirectory',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * You can share your resources with all members in your resource directory, all members in a specific folder in your resource directory, or a specific member in your resource directory as a resource owner only after you enable resource sharing for your resource directory.
  * You can call this API operation only by using the management account of your resource directory or a RAM user or RAM role to which the required permissions are granted within the management account.
  * ## Limits
  * You can call this operation up to 10 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @return EnableSharingWithResourceDirectoryResponse
 */
async function enableSharingWithResourceDirectory(): EnableSharingWithResourceDirectoryResponse {
  var runtime = new Util.RuntimeOptions{};
  return enableSharingWithResourceDirectoryWithOptions(runtime);
}

model GetPermissionRequest {
  permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
  permissionVersion?: string(name='PermissionVersion', description='The version of the permission.', example='v1'),
}

model GetPermissionResponseBody = {
  permission?: {
    createTime?: string(name='CreateTime', description='The creation time.', example='2020-12-07T07:39:01.818Z'),
    defaultPermission?: boolean(name='DefaultPermission', description='Indicates whether the permission is the default permission. Valid values:

*   false: The permission is not the default permission.
*   true: The permission is the default permission.', example='true'),
    defaultVersion?: boolean(name='DefaultVersion', description='Indicates whether the version is the default version. Valid values:

*   false: The version is not the default version.
*   true: The version is the default version.', example='true'),
    permission?: string(name='Permission', description='The document of the policy related to the permission.', example='{"Effect":"Allow","Action":["vpc:DescribeVSwitches","vpc:DescribeVSwitchAttributes"]}'),
    permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
    permissionVersion?: string(name='PermissionVersion', description='The version of the permission.', example='v1'),
    resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
    updateTime?: string(name='UpdateTime', description='The update time.', example='2020-12-07T07:39:01.818Z'),
  }(name='Permission', description='The information about the permission.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='2F23CFB6-A721-4E90-AC1E-0E30FA8B45DA'),
}

model GetPermissionResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: GetPermissionResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the information about the `AliyunRSDefaultPermissionVSwitch` permission whose version is `v1` in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request GetPermissionRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return GetPermissionResponse
 */
async function getPermissionWithOptions(request: GetPermissionRequest, runtime: Util.RuntimeOptions): GetPermissionResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.permissionName)) {
    query['PermissionName'] = request.permissionName;
  }
  if (!Util.isUnset(request.permissionVersion)) {
    query['PermissionVersion'] = request.permissionVersion;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetPermission',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the information about the `AliyunRSDefaultPermissionVSwitch` permission whose version is `v1` in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request GetPermissionRequest
  * @return GetPermissionResponse
 */
async function getPermission(request: GetPermissionRequest): GetPermissionResponse {
  var runtime = new Util.RuntimeOptions{};
  return getPermissionWithOptions(request, runtime);
}

model ListPermissionVersionsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
}

model ListPermissionVersionsResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  permissions?: [ 
    {
      createTime?: string(name='CreateTime', description='The creation time.', example='2020-12-07T07:39:01.818Z'),
      defaultPermission?: boolean(name='DefaultPermission', description='Indicates whether the permission is the default permission. Valid values:

*   false: The permission is not the default permission.
*   true: The permission is the default permission.', example='true'),
      defaultVersion?: boolean(name='DefaultVersion', description='Indicates whether the version is the default version. Valid values:

*   false: The version is not the default version.
*   true: The version is the default version.', example='true'),
      permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
      permissionVersion?: string(name='PermissionVersion', description='The version of the permission.', example='v1'),
      resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
      updateTime?: string(name='UpdateTime', description='The update time.', example='2020-12-07T07:39:01.818Z'),
    }
  ](name='Permissions', description='The information about the permission.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='04677DCA-7C33-464B-8811-1B1DA3C3D197'),
}

model ListPermissionVersionsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListPermissionVersionsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the versions of the `AliyunRSDefaultPermissionVSwitch` permission in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListPermissionVersionsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListPermissionVersionsResponse
 */
async function listPermissionVersionsWithOptions(request: ListPermissionVersionsRequest, runtime: Util.RuntimeOptions): ListPermissionVersionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.permissionName)) {
    query['PermissionName'] = request.permissionName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListPermissionVersions',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the versions of the `AliyunRSDefaultPermissionVSwitch` permission in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListPermissionVersionsRequest
  * @return ListPermissionVersionsResponse
 */
async function listPermissionVersions(request: ListPermissionVersionsRequest): ListPermissionVersionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listPermissionVersionsWithOptions(request, runtime);
}

model ListPermissionsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
}

model ListPermissionsResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  permissions?: [ 
    {
      createTime?: string(name='CreateTime', description='The creation time.', example='2020-12-07T07:39:01.818Z'),
      defaultPermission?: boolean(name='DefaultPermission', description='Indicates whether the permission is the default permission. Valid values:

*   false: The permission is not the default permission.
*   true: The permission is the default permission.', example='true'),
      defaultVersion?: boolean(name='DefaultVersion', description='Indicates whether the version is the default version. Valid values:

*   false: The version is not the default version.
*   true: The version is the default version.', example='true'),
      permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
      permissionVersion?: string(name='PermissionVersion', description='The version of the permission.', example='v1'),
      resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
      updateTime?: string(name='UpdateTime', description='The update time.', example='2020-12-07T07:39:01.818Z'),
    }
  ](name='Permissions', description='The information about the permission.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='04677DCA-7C33-464B-8811-1B1DA3C3D197'),
}

model ListPermissionsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListPermissionsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the information about the default permission for the `VSwitch` resource type in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListPermissionsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListPermissionsResponse
 */
async function listPermissionsWithOptions(request: ListPermissionsRequest, runtime: Util.RuntimeOptions): ListPermissionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListPermissions',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the information about the default permission for the `VSwitch` resource type in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListPermissionsRequest
  * @return ListPermissionsResponse
 */
async function listPermissions(request: ListPermissionsRequest): ListPermissionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listPermissionsWithOptions(request, runtime);
}

model ListResourceShareAssociationsRequest {
  associationStatus?: string(name='AssociationStatus', description='The association status. Valid values:

*   Associating: The entity is being associated.
*   Associated: The entity is associated.
*   Failed: The entity fails to be associated.
*   Disassociating: The entity is being disassociated.
*   Disassociated: The entity is disassociated.

>  The system deletes the records of entities in the `Failed` or `Disassociated` state within 48 hours to 96 hours.', example='Associated'),
  associationType?: string(name='AssociationType', description='The association type. Valid values:

*   Resource
*   Target', example='Resource'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceId?: string(name='ResourceId', description='The ID of the resource.

>  This parameter is unavailable if you set the `AssociationType` parameter to `Target`.', example='vsw-bp183p93qs667muql****'),
  resourceShareIds?: [ string ](name='ResourceShareIds', example='rs-6GRmdD3X****'),
  target?: string(name='Target', description='The ID of the principal.

>  This parameter is unavailable if you set the `AssociationType` parameter to `Resource`.', example='172050525300****'),
}

model ListResourceShareAssociationsResponseBody = {
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='11BA57B5-7301-4E2F-BBA5-2AE4C2F4FCDB'),
  resourceShareAssociations?: [ 
    {
      associationStatus?: string(name='AssociationStatus', description='The association status. Valid values:

*   Associating: The entity is being associated.
*   Associated: The entity is associated.
*   Failed: The entity fails to be associated.
*   Disassociating: The entity is being disassociated.
*   Disassociated: The entity is disassociated.

>  The system deletes the records of entities in the `Failed` or `Disassociated` state within 48 hours to 96 hours.', example='Associated'),
      associationStatusMessage?: string(name='AssociationStatusMessage', description='The cause of the association failure.', example='The reason for the association failure.'),
      associationType?: string(name='AssociationType', description='The association type. Valid values:

*   Resource
*   Target', example='Resource'),
      createTime?: string(name='CreateTime', description='The time when the association of the entity was created. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the shared resource was associated with or disassociated from the resource share.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the principal was associated with or disassociated from the resource share.', example='2020-12-07T07:39:01.818Z'),
      entityId?: string(name='EntityId', description='The ID of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the ID of the shared resource.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the ID of the principal.', example='vsw-bp1upw03qyz8n7us9****'),
      entityType?: string(name='EntityType', description='The type of the entity. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of AssociationType is Resource, the value of this parameter is the type of the resource. For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).
*   If the value of AssociationType is Target, the value of this parameter is `Account`.', example='VSwitch'),
      external?: boolean(name='External', description='Indicates whether the principal is outside the resource directory. Valid values:

*   true: The principal is outside the resource directory.
*   false: The principal is in the resource directory.', example='false'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
      resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='example'),
      updateTime?: string(name='UpdateTime', description='The time when the association of the entity was updated. The value of this parameter depends on the value of the AssociationType parameter:

*   If the value of `AssociationType` is `Resource`, the value of this parameter is the time when the association of the shared resource was updated.
*   If the value of `AssociationType` is `Target`, the value of this parameter is the time when the association of the principal was updated.', example='2020-12-07T07:39:02.920Z'),
    }
  ](name='ResourceShareAssociations', description='The information of the entities.'),
}

model ListResourceShareAssociationsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListResourceShareAssociationsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the association records of the resource shares that are created by using the current Alibaba Cloud account in the `cn-hangzhou` region. The response shows the following records:
  * *   The resource `vsw-bp1upw03qyz8n7us9****` of the `VSwitch` type has been associated with the resource share `rs-6GRmdD3X****`. The resource is in the `Associated` state. This indicates that the resource is being shared.
  * *   The resource `vsw-bp183p93qs667muql****` of the `VSwitch` type has been disassociated from the resource share `rs-6GRmdD3X****`. The resource is in the `Disassociated` state. This indicates that the sharing of the resource is stopped.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceShareAssociationsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListResourceShareAssociationsResponse
 */
async function listResourceShareAssociationsWithOptions(request: ListResourceShareAssociationsRequest, runtime: Util.RuntimeOptions): ListResourceShareAssociationsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.associationStatus)) {
    query['AssociationStatus'] = request.associationStatus;
  }
  if (!Util.isUnset(request.associationType)) {
    query['AssociationType'] = request.associationType;
  }
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceShareIds)) {
    query['ResourceShareIds'] = request.resourceShareIds;
  }
  if (!Util.isUnset(request.target)) {
    query['Target'] = request.target;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListResourceShareAssociations',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the association records of the resource shares that are created by using the current Alibaba Cloud account in the `cn-hangzhou` region. The response shows the following records:
  * *   The resource `vsw-bp1upw03qyz8n7us9****` of the `VSwitch` type has been associated with the resource share `rs-6GRmdD3X****`. The resource is in the `Associated` state. This indicates that the resource is being shared.
  * *   The resource `vsw-bp183p93qs667muql****` of the `VSwitch` type has been disassociated from the resource share `rs-6GRmdD3X****`. The resource is in the `Disassociated` state. This indicates that the sharing of the resource is stopped.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceShareAssociationsRequest
  * @return ListResourceShareAssociationsResponse
 */
async function listResourceShareAssociations(request: ListResourceShareAssociationsRequest): ListResourceShareAssociationsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listResourceShareAssociationsWithOptions(request, runtime);
}

model ListResourceShareInvitationsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceShareIds?: [ string ](name='ResourceShareIds'),
  resourceShareInvitationIds?: [ string ](name='ResourceShareInvitationIds'),
}

model ListResourceShareInvitationsResponseBody = {
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='30EC8328-1BDE-51D5-BFAB-039508BD91A1'),
  resourceShareInvitations?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the invitation was created. The time is displayed in UTC.', example='2022-08-18T05:36:45.024Z'),
      receiverAccountId?: string(name='ReceiverAccountId', description='The Alibaba Cloud account ID of the invitee.', example='134254031178****'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-ysGRci9z****'),
      resourceShareInvitationId?: string(name='ResourceShareInvitationId', description='The ID of the invitation.', example='i-p6eRytrkjVvM****'),
      resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='example'),
      senderAccountId?: string(name='SenderAccountId', description='The Alibaba Cloud account ID of the inviter.', example='151266687691****'),
      status?: string(name='Status', description='The status of the invitation. Valid values:

*   Pending: The invitation is waiting for confirmation.
*   Accepted: The invitation is accepted.
*   Cancelled: The invitation is canceled.
*   Rejected: The invitation is rejected.
*   Expired: The invitation has expired.', example='Pending'),
    }
  ](name='ResourceShareInvitations', description='The information of the resource sharing invitations.'),
}

model ListResourceShareInvitationsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListResourceShareInvitationsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the resource sharing invitations that are received by the current account in the `cn-hangzhou` region. The response shows that one invitation is received by the current account and is waiting for confirmation.
  *
  * @param request ListResourceShareInvitationsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListResourceShareInvitationsResponse
 */
async function listResourceShareInvitationsWithOptions(request: ListResourceShareInvitationsRequest, runtime: Util.RuntimeOptions): ListResourceShareInvitationsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceShareIds)) {
    query['ResourceShareIds'] = request.resourceShareIds;
  }
  if (!Util.isUnset(request.resourceShareInvitationIds)) {
    query['ResourceShareInvitationIds'] = request.resourceShareInvitationIds;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListResourceShareInvitations',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the resource sharing invitations that are received by the current account in the `cn-hangzhou` region. The response shows that one invitation is received by the current account and is waiting for confirmation.
  *
  * @param request ListResourceShareInvitationsRequest
  * @return ListResourceShareInvitationsResponse
 */
async function listResourceShareInvitations(request: ListResourceShareInvitationsRequest): ListResourceShareInvitationsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listResourceShareInvitationsWithOptions(request, runtime);
}

model ListResourceSharePermissionsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceOwner?: string(name='ResourceOwner', description='The owner of the resource share. Valid values:

*   Self: the current account
*   OtherAccounts: an account other than the current account', example='Self'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
}

model ListResourceSharePermissionsResponseBody = {
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  permissions?: [ 
    {
      createTime?: string(name='CreateTime', description='The creation time.', example='2020-12-07T07:39:01.818Z'),
      defaultPermission?: boolean(name='DefaultPermission', description='Indicates whether the permission is the default permission. Valid values:

*   false: The permission is not the default permission.
*   true: The permission is the default permission.', example='true'),
      defaultVersion?: boolean(name='DefaultVersion', description='Indicates whether the version is the default version. Valid values:

*   false: The version is not the default version.
*   true: The version is the default version.', example='true'),
      permissionName?: string(name='PermissionName', description='The name of the permission.', example='AliyunRSDefaultPermissionVSwitch'),
      permissionVersion?: string(name='PermissionVersion', description='The version of the permission.', example='v1'),
      resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
      updateTime?: string(name='UpdateTime', description='The update time.', example='2020-12-07T07:39:01.818Z'),
    }
  ](name='Permissions', description='The information about the permissions.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='2F23CFB6-A721-4E90-AC1E-0E30FA8B45DA'),
}

model ListResourceSharePermissionsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListResourceSharePermissionsResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the permissions that are associated with the resource share created by using the current Alibaba Cloud account in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceSharePermissionsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListResourceSharePermissionsResponse
 */
async function listResourceSharePermissionsWithOptions(request: ListResourceSharePermissionsRequest, runtime: Util.RuntimeOptions): ListResourceSharePermissionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceOwner)) {
    query['ResourceOwner'] = request.resourceOwner;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListResourceSharePermissions',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the permissions that are associated with the resource share created by using the current Alibaba Cloud account in the `cn-hangzhou` region.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceSharePermissionsRequest
  * @return ListResourceSharePermissionsResponse
 */
async function listResourceSharePermissions(request: ListResourceSharePermissionsRequest): ListResourceSharePermissionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listResourceSharePermissionsWithOptions(request, runtime);
}

model ListResourceSharesRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  permissionName?: string(name='PermissionName', description='The name of the permission. For more information, see [Permission library](~~465474~~).', example='AliyunRSDefaultPermissionVSwitch'),
  resourceGroupId?: string(name='ResourceGroupId'),
  resourceOwner?: string(name='ResourceOwner', description='The owner of the resource shares. Valid values:

*   Self: the current account
*   OtherAccounts: an account other than the current account', example='Self'),
  resourceShareIds?: [ string ](name='ResourceShareIds', example='rs-PqysnzIj****'),
  resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='test'),
  resourceShareStatus?: string(name='ResourceShareStatus', description='The status of the resource share. Valid values:

*   Active: The resource share is enabled.
*   Pending: The resource share is associated with one or more resource sharing invitations that are waiting for confirmation.
*   Deleting: The resource share is being deleted.
*   Deleted: The resource share is deleted.

>  The system deletes the records of resource shares in the Deleted state within 48 hours to 96 hours after you delete the resource shares.', example='Active'),
}

model ListResourceSharesResponseBody = {
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='2F23CFB6-A721-4E90-AC1E-0E30FA8B45DA'),
  resourceShares?: [ 
    {
      allowExternalTargets?: boolean(name='AllowExternalTargets', description='Indicates whether resources in the resource share can be shared with accounts outside the resource directory. Valid values:

*   false: Resources in the resource share can be shared only with accounts in the resource directory.
*   true: Resources in the resource share can be shared with both accounts in the resource directory and accounts outside the resource directory.', example='false'),
      createTime?: string(name='CreateTime', description='The time when the resource share was created.', example='2020-12-03T02:20:31.292Z'),
      resourceGroupId?: string(name='ResourceGroupId'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-PqysnzIj****'),
      resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='test'),
      resourceShareOwner?: string(name='ResourceShareOwner', description='The owner of the resource share.', example='151266687691****'),
      resourceShareStatus?: string(name='ResourceShareStatus', description='The status of the resource share. Valid values:

*   Active: The resource share is enabled.
*   Pending: The resource share is associated with one or more resource sharing invitations that are waiting for confirmation.
*   Deleting: The resource share is being deleted.
*   Deleted: The resource share is deleted.

>  The system deletes the records of resource shares in the Deleted state within 48 hours to 96 hours after you delete the resource shares.', example='Active'),
      updateTime?: string(name='UpdateTime', description='The time when the resource share was updated.', example='2020-12-03T08:01:43.638Z'),
    }
  ](name='ResourceShares', description='The information of the resource shares.'),
}

model ListResourceSharesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListResourceSharesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the resource shares that are created by using the current Alibaba Cloud account in the `cn-hangzhou` region. The response shows that the following resource shares are created by using the account whose ID is `151266687691****`:
  * *   `rs-hX9wC5jO****`, which is in the `Deleted` state
  * *   `rs-PqysnzIj****`, which is in the `Active` state
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceSharesRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListResourceSharesResponse
 */
async function listResourceSharesWithOptions(request: ListResourceSharesRequest, runtime: Util.RuntimeOptions): ListResourceSharesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.permissionName)) {
    query['PermissionName'] = request.permissionName;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceOwner)) {
    query['ResourceOwner'] = request.resourceOwner;
  }
  if (!Util.isUnset(request.resourceShareIds)) {
    query['ResourceShareIds'] = request.resourceShareIds;
  }
  if (!Util.isUnset(request.resourceShareName)) {
    query['ResourceShareName'] = request.resourceShareName;
  }
  if (!Util.isUnset(request.resourceShareStatus)) {
    query['ResourceShareStatus'] = request.resourceShareStatus;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListResourceShares',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the resource shares that are created by using the current Alibaba Cloud account in the `cn-hangzhou` region. The response shows that the following resource shares are created by using the account whose ID is `151266687691****`:
  * *   `rs-hX9wC5jO****`, which is in the `Deleted` state
  * *   `rs-PqysnzIj****`, which is in the `Active` state
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListResourceSharesRequest
  * @return ListResourceSharesResponse
 */
async function listResourceShares(request: ListResourceSharesRequest): ListResourceSharesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listResourceSharesWithOptions(request, runtime);
}

model ListSharedResourcesRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceIds?: [ string ](name='ResourceIds', example='vsw-bp1upw03qyz8n7us9****'),
  resourceOwner?: string(name='ResourceOwner', description='The owner of the resource shares. Valid values:

*   Self: your account. If you set the value to Self, the resources you share with other accounts are queried.
*   OtherAccounts: another account. If you set the value to OtherAccounts, the resources other accounts share with you are queried.', example='Self'),
  resourceShareIds?: [ string ](name='ResourceShareIds', example='rs-6GRmdD3X****'),
  resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
  target?: string(name='Target', description='The ID of the principal or resource owner.

*   If the value of `ResourceOwner` is `Self`, set this parameter to the ID of a principal.
*   If the value of `ResourceOwner` is `OtherAccounts`, set this parameter to the ID of a resource owner.', example='172050525300****'),
}

model ListSharedResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='The token that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='04677DCA-7C33-464B-8811-1B1DA3C3D197'),
  sharedResources?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the shared resource was associated with the resource share.', example='2020-12-07T07:39:02.921Z'),
      resourceId?: string(name='ResourceId', description='The ID of the shared resource.', example='vsw-bp1upw03qyz8n7us9****'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
      resourceStatus?: string(name='ResourceStatus', description='The status of the shared resource. This parameter is returned only when you query the resources that other accounts share with you.

Valid values:

*   Available: The resource is available.
*   ZonalResourceInaccessible: The resource is unavailable in the current zone.
*   LimitExceeded: The resource is unavailable because the maximum number of resources that other accounts can share with you exceeds the upper limit.
*   Unavailable: The resource is unavailable.', example='Available'),
      resourceStatusMessage?: string(name='ResourceStatusMessage', description='The cause of the association failure.', example='The reason for the association failure.'),
      resourceType?: string(name='ResourceType', description='The type of the shared resource.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
      updateTime?: string(name='UpdateTime', description='The time when the association of the shared resource was updated.', example='2020-12-07T07:39:02.921Z'),
    }
  ](name='SharedResources', description='The information of the shared resources.'),
}

model ListSharedResourcesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListSharedResourcesResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to query the resources that you share with other accounts in the `cn-hangzhou` region. The response shows that in the resource share `rs-6GRmdD3X****`, you share the `vsw-bp1upw03qyz8n7us9****` resource of the `VSwitch` type with other accounts.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListSharedResourcesRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListSharedResourcesResponse
 */
async function listSharedResourcesWithOptions(request: ListSharedResourcesRequest, runtime: Util.RuntimeOptions): ListSharedResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceIds)) {
    query['ResourceIds'] = request.resourceIds;
  }
  if (!Util.isUnset(request.resourceOwner)) {
    query['ResourceOwner'] = request.resourceOwner;
  }
  if (!Util.isUnset(request.resourceShareIds)) {
    query['ResourceShareIds'] = request.resourceShareIds;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.target)) {
    query['Target'] = request.target;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListSharedResources',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to query the resources that you share with other accounts in the `cn-hangzhou` region. The response shows that in the resource share `rs-6GRmdD3X****`, you share the `vsw-bp1upw03qyz8n7us9****` resource of the `VSwitch` type with other accounts.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListSharedResourcesRequest
  * @return ListSharedResourcesResponse
 */
async function listSharedResources(request: ListSharedResourcesRequest): ListSharedResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listSharedResourcesWithOptions(request, runtime);
}

model ListSharedTargetsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return for a single request.

Valid values: 1 to 100. Default value: 20.', example='20'),
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  resourceId?: string(name='ResourceId', description='The ID of the shared resource.', example='vsw-bp1upw03qyz8n7us9****'),
  resourceOwner?: string(name='ResourceOwner', description='The owner of the resource share.

*   Self: your account. If you set the value to Self, the principals that are associated with your resource shares are queried.
*   OtherAccounts: another account. If you set the value to OtherAccounts, the resource shares with which your account is associated and the owners of the resource shares are queried.', example='Self'),
  resourceShareIds?: [ string ](name='ResourceShareIds', example='rs-6GRmdD3X****'),
  resourceType?: string(name='ResourceType', description='The type of the shared resources.

For more information about the types of resources that can be shared, see [Services that work with Resource Sharing](~~450526~~).', example='VSwitch'),
  targets?: [ string ](name='Targets', example='114240524784****'),
}

model ListSharedTargetsResponseBody = {
  nextToken?: string(name='NextToken', description='The `token` that is used to initiate the next request. If the response of the current request is truncated, you can use the token to initiate another request and obtain the remaining records.', example='TGlzdFJlc291cm****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='04677DCA-7C33-464B-8811-1B1DA3C3D197'),
  sharedTargets?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the principal was associated with the resource share.', example='2020-12-07T09:16:59.905Z'),
      external?: boolean(name='External', description='Indicates whether the principal is outside the resource directory. Valid values:

*   true: The principal is outside the resource directory.
*   false: The principal is in the resource directory.', example='false'),
      resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-6GRmdD3X****'),
      targetId?: string(name='TargetId', description='The ID of the principal or resource owner.

*   If the value of `ResourceOwner` is `Self`, the value of this parameter is the ID of a principal.
*   If the value of `ResourceOwner` is `OtherAccounts`, the value of this parameter is the ID of a resource owner.', example='114240524784****'),
      updateTime?: string(name='UpdateTime', description='The time when the association of the principal was updated.', example='2020-12-07T09:16:59.905Z'),
    }
  ](name='SharedTargets', description='The information of the principals.'),
}

model ListSharedTargetsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListSharedTargetsResponseBody(name='body'),
}

/**
  * If you are a resource owner, you can query the principals with which you share your resources.
  * If you are a principal, you can query the resources that are shared with you.
  * This topic provides an example on how to call the API operation to query the principals with which you share your resources in the `cn-hangzhou` region. The response shows that you share your resources with the principals `114240524784****` and `172050525300****`.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListSharedTargetsRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListSharedTargetsResponse
 */
async function listSharedTargetsWithOptions(request: ListSharedTargetsRequest, runtime: Util.RuntimeOptions): ListSharedTargetsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceOwner)) {
    query['ResourceOwner'] = request.resourceOwner;
  }
  if (!Util.isUnset(request.resourceShareIds)) {
    query['ResourceShareIds'] = request.resourceShareIds;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.targets)) {
    query['Targets'] = request.targets;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListSharedTargets',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * If you are a resource owner, you can query the principals with which you share your resources.
  * If you are a principal, you can query the resources that are shared with you.
  * This topic provides an example on how to call the API operation to query the principals with which you share your resources in the `cn-hangzhou` region. The response shows that you share your resources with the principals `114240524784****` and `172050525300****`.
  * ## Limits
  * You can call this operation up to 20 times per second per account. This operation is globally limited to 500 times per second across all accounts. If the number of the calls per second exceeds a limit, throttling is triggered. As a result, your business may be affected. We recommend that you take note of the limits when you call this operation.
  *
  * @param request ListSharedTargetsRequest
  * @return ListSharedTargetsResponse
 */
async function listSharedTargets(request: ListSharedTargetsRequest): ListSharedTargetsResponse {
  var runtime = new Util.RuntimeOptions{};
  return listSharedTargetsWithOptions(request, runtime);
}

model RejectResourceShareInvitationRequest {
  resourceShareInvitationId?: string(name='ResourceShareInvitationId', description='The ID of the resource sharing invitation.

You can call the [ListResourceShareInvitations](~~450564~~) operation to obtain the ID of a resource sharing invitation.', example='i-yyTWbkjHArYh****'),
}

model RejectResourceShareInvitationResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='E446D6DE-BFC8-5F37-A494-33D7B118147D'),
  resourceShareInvitation?: {
    createTime?: string(name='CreateTime', description='The time when the invitation was created. The time is displayed in UTC.', example='2022-09-02T07:07:30.809Z'),
    receiverAccountId?: string(name='ReceiverAccountId', description='The Alibaba Cloud account ID of the invitee.', example='134254031178****'),
    resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-JoA1Ayjm****'),
    resourceShareInvitationId?: string(name='ResourceShareInvitationId', description='The ID of the invitation.', example='i-yyTWbkjHArYh****'),
    resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='example'),
    senderAccountId?: string(name='SenderAccountId', description='The Alibaba Cloud account ID of the inviter.', example='151266687691****'),
    status?: string(name='Status', description='The status of the invitation. Valid values:

*   Pending: The invitation is waiting for confirmation.
*   Accepted: The invitation is accepted.
*   Cancelled: The invitation is canceled.
*   Rejected: The invitation is rejected.
*   Expired: The invitation has expired.', example='Rejected'),
  }(name='ResourceShareInvitation', description='The information of the resource sharing invitation.'),
}

model RejectResourceShareInvitationResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: RejectResourceShareInvitationResponseBody(name='body'),
}

/**
  * This topic provides an example on how to call the API operation to reject the resource sharing invitation `i-yyTWbkjHArYh****` in the `cn-hangzhou` region.
  *
  * @param request RejectResourceShareInvitationRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return RejectResourceShareInvitationResponse
 */
async function rejectResourceShareInvitationWithOptions(request: RejectResourceShareInvitationRequest, runtime: Util.RuntimeOptions): RejectResourceShareInvitationResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.resourceShareInvitationId)) {
    query['ResourceShareInvitationId'] = request.resourceShareInvitationId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'RejectResourceShareInvitation',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * This topic provides an example on how to call the API operation to reject the resource sharing invitation `i-yyTWbkjHArYh****` in the `cn-hangzhou` region.
  *
  * @param request RejectResourceShareInvitationRequest
  * @return RejectResourceShareInvitationResponse
 */
async function rejectResourceShareInvitation(request: RejectResourceShareInvitationRequest): RejectResourceShareInvitationResponse {
  var runtime = new Util.RuntimeOptions{};
  return rejectResourceShareInvitationWithOptions(request, runtime);
}

model UpdateResourceShareRequest {
  allowExternalTargets?: boolean(name='AllowExternalTargets', description='Specifies whether resources in the resource share can be shared with accounts outside the resource directory. Valid values:

*   false: Resources in the resource share can be shared only with accounts in the resource directory.
*   true: Resources in the resource share can be shared with both accounts in the resource directory and accounts outside the resource directory.', example='false'),
  resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-qSkW1HBY****'),
  resourceShareName?: string(name='ResourceShareName', description='The new name of the resource share.

The name must be 1 to 50 characters in length.

The name can contain letters, digits, periods (.), underscores (\\_), and hyphens (-).', example='new'),
}

model UpdateResourceShareResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='2860A3A4-D8C1-4EF4-954E-84A3945E26E5'),
  resourceShare?: {
    allowExternalTargets?: boolean(name='AllowExternalTargets', description='Indicates whether resources in the resource share can be shared with accounts outside the resource directory. Valid values:

*   false: Resources in the resource share can be shared only with accounts in the resource directory.
*   true: Resources in the resource share can be shared with both accounts in the resource directory and accounts outside the resource directory.', example='false'),
    createTime?: string(name='CreateTime', description='The time when the resource share was created.', example='2020-12-03T08:02:22.413Z'),
    resourceShareId?: string(name='ResourceShareId', description='The ID of the resource share.', example='rs-qSkW1HBY****'),
    resourceShareName?: string(name='ResourceShareName', description='The name of the resource share.', example='new'),
    resourceShareOwner?: string(name='ResourceShareOwner', description='The owner of the resource share.', example='151266687691****'),
    resourceShareStatus?: string(name='ResourceShareStatus', description='The status of the resource share. Valid values:

*   Active: The resource share is enabled.
*   Pending: The resource share is associated with one or more resource sharing invitations that are waiting for confirmation.
*   Deleting: The resource share is being deleted.
*   Deleted: The resource share is deleted.

>  The system deletes the records of resource shares in the Deleted state within 48 hours to 96 hours after you delete the resource shares.', example='Active'),
    updateTime?: string(name='UpdateTime', description='The time when the resource share was updated.', example='2020-12-04T08:55:25.382Z'),
  }(name='ResourceShare', description='The information of the resource share.'),
}

model UpdateResourceShareResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: UpdateResourceShareResponseBody(name='body'),
}

/**
  * You can call this API operation to change the name or resource sharing scope of a resource share.
  * This topic provides an example on how to call the API operation to change the name of the resource share `rs-qSkW1HBY****` in the `cn-hangzhou` region from `test` to `new`.
  *
  * @param request UpdateResourceShareRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return UpdateResourceShareResponse
 */
async function updateResourceShareWithOptions(request: UpdateResourceShareRequest, runtime: Util.RuntimeOptions): UpdateResourceShareResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.allowExternalTargets)) {
    query['AllowExternalTargets'] = request.allowExternalTargets;
  }
  if (!Util.isUnset(request.resourceShareId)) {
    query['ResourceShareId'] = request.resourceShareId;
  }
  if (!Util.isUnset(request.resourceShareName)) {
    query['ResourceShareName'] = request.resourceShareName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UpdateResourceShare',
    version = '2020-01-10',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * You can call this API operation to change the name or resource sharing scope of a resource share.
  * This topic provides an example on how to call the API operation to change the name of the resource share `rs-qSkW1HBY****` in the `cn-hangzhou` region from `test` to `new`.
  *
  * @param request UpdateResourceShareRequest
  * @return UpdateResourceShareResponse
 */
async function updateResourceShare(request: UpdateResourceShareRequest): UpdateResourceShareResponse {
  var runtime = new Util.RuntimeOptions{};
  return updateResourceShareWithOptions(request, runtime);
}

