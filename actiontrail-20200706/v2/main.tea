/**
 *
 */
import OpenApi;
import OpenApi.OpenApiUtil;

extends OpenApi;


init(config: OpenApiUtil.Config){
  super(config);
  @endpointRule = 'regional';
  @endpointMap = {
    'ap-northeast-2-pop' = 'actiontrail.ap-northeast-1.aliyuncs.com',
    'cn-beijing-finance-1' = 'actiontrail.aliyuncs.com',
    'cn-beijing-finance-pop' = 'actiontrail.aliyuncs.com',
    'cn-beijing-gov-1' = 'actiontrail.aliyuncs.com',
    'cn-beijing-nu16-b01' = 'actiontrail.aliyuncs.com',
    'cn-edge-1' = 'actiontrail.aliyuncs.com',
    'cn-fujian' = 'actiontrail.aliyuncs.com',
    'cn-haidian-cm12-c01' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-bj-b01' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-finance' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-internal-prod-1' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-internal-test-1' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-internal-test-2' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-internal-test-3' = 'actiontrail.aliyuncs.com',
    'cn-hangzhou-test-306' = 'actiontrail.aliyuncs.com',
    'cn-hongkong-finance-pop' = 'actiontrail.aliyuncs.com',
    'cn-qingdao-nebula' = 'actiontrail.aliyuncs.com',
    'cn-shanghai-et15-b01' = 'actiontrail.aliyuncs.com',
    'cn-shanghai-et2-b01' = 'actiontrail.aliyuncs.com',
    'cn-shanghai-inner' = 'actiontrail.aliyuncs.com',
    'cn-shanghai-internal-test-1' = 'actiontrail.aliyuncs.com',
    'cn-shenzhen-finance-1' = 'actiontrail.aliyuncs.com',
    'cn-shenzhen-inner' = 'actiontrail.aliyuncs.com',
    'cn-shenzhen-st4-d01' = 'actiontrail.aliyuncs.com',
    'cn-shenzhen-su18-b01' = 'actiontrail.aliyuncs.com',
    'cn-wuhan' = 'actiontrail.aliyuncs.com',
    'cn-yushanfang' = 'actiontrail.aliyuncs.com',
    'cn-zhangbei-na61-b01' = 'actiontrail.aliyuncs.com',
    'cn-zhangjiakou-na62-a01' = 'actiontrail.aliyuncs.com',
    'cn-zhengzhou-nebula-1' = 'actiontrail.aliyuncs.com',
    'eu-west-1-oxs' = 'actiontrail.ap-northeast-1.aliyuncs.com',
    'rus-west-1-pop' = 'actiontrail.ap-northeast-1.aliyuncs.com',
  };

  checkConfig(config);
  @endpoint = getEndpoint('actiontrail', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!$isNull(endpoint)) {
    return endpoint;
  }
  
  if (!$isNull(endpointMap) && !$isNull(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return OpenApiUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model CreateAdvancedQueryHistoryRequest {
  querySql?: string(name='QuerySql', example='event.userIdentity.accessKeyId: *'),
  simpleQuery?: boolean(name='SimpleQuery', description='This parameter is required.', example='false'),
}

model CreateAdvancedQueryHistoryResponseBody = {
  queryId?: string(name='QueryId', example='query-uIkIvLiVSuCKqg0yoa****'),
  querySql?: string(name='QuerySql', example='event.userIdentity.accessKeyId: *'),
  requestId?: string(name='RequestId', example='D0227506-AA8C-5998-8A62-74769106****'),
  simpleQuery?: boolean(name='SimpleQuery', example='false'),
}

model CreateAdvancedQueryHistoryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAdvancedQueryHistoryResponseBody(name='body'),
}

/**
 * @summary 创建高级查询历史记录
 *
 * @param request CreateAdvancedQueryHistoryRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateAdvancedQueryHistoryResponse
 */
@context("createAdvancedQueryHistoryWithContext")
async function createAdvancedQueryHistoryWithOptions(request: CreateAdvancedQueryHistoryRequest, runtime: $RuntimeOptions): CreateAdvancedQueryHistoryResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.querySql)) {
    query['QuerySql'] = request.querySql;
  }
  if (!$isNull(request.simpleQuery)) {
    query['SimpleQuery'] = request.simpleQuery;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'CreateAdvancedQueryHistory',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 创建高级查询历史记录
 *
 * @param request CreateAdvancedQueryHistoryRequest
 * @return CreateAdvancedQueryHistoryResponse
 */
async function createAdvancedQueryHistory(request: CreateAdvancedQueryHistoryRequest): CreateAdvancedQueryHistoryResponse {
  var runtime = new $RuntimeOptions{};
  return createAdvancedQueryHistoryWithOptions(request, runtime);
}

model CreateAdvancedQueryTemplateRequest {
  simpleQuery?: boolean(name='SimpleQuery', description='This parameter is required.', example='false'),
  templateName?: string(name='TemplateName'),
  templateSql?: string(name='TemplateSql', description='This parameter is required.', example='event.eventName: ConsoleSignin AND event.userIdentity.type: root-account'),
}

model CreateAdvancedQueryTemplateResponseBody = {
  requestId?: string(name='RequestId', example='4ABAEA6E-C740-5CE2-A003-643E551964F5'),
  simpleQuery?: string(name='SimpleQuery', example='false'),
  templateId?: string(name='TemplateId', example='x4a0Tw5dQy2J6IRJxf4kng'),
  templateName?: string(name='TemplateName'),
  templateSql?: string(name='TemplateSql', example='event.eventName: ConsoleSignin AND event.userIdentity.type: root-account'),
}

model CreateAdvancedQueryTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAdvancedQueryTemplateResponseBody(name='body'),
}

/**
 * @summary 创建高级查询模板
 *
 * @param request CreateAdvancedQueryTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateAdvancedQueryTemplateResponse
 */
@context("createAdvancedQueryTemplateWithContext")
async function createAdvancedQueryTemplateWithOptions(request: CreateAdvancedQueryTemplateRequest, runtime: $RuntimeOptions): CreateAdvancedQueryTemplateResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.simpleQuery)) {
    query['SimpleQuery'] = request.simpleQuery;
  }
  if (!$isNull(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!$isNull(request.templateSql)) {
    query['TemplateSql'] = request.templateSql;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'CreateAdvancedQueryTemplate',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 创建高级查询模板
 *
 * @param request CreateAdvancedQueryTemplateRequest
 * @return CreateAdvancedQueryTemplateResponse
 */
async function createAdvancedQueryTemplate(request: CreateAdvancedQueryTemplateRequest): CreateAdvancedQueryTemplateResponse {
  var runtime = new $RuntimeOptions{};
  return createAdvancedQueryTemplateWithOptions(request, runtime);
}

model CreateDeliveryHistoryJobRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests.

The token can contain only ASCII characters and can be up to 64 characters in length.

For more information, see [How to ensure idempotence](https://help.aliyun.com/document_detail/25693.html).', example='123e4567-e89b-12d3-a456-42665544****'),
  trailName?: string(name='TrailName', description='The name of the trail for which you want to create a historical event delivery task.

This parameter is required.', example='trail-name'),
}

model CreateDeliveryHistoryJobResponseBody = {
  jobId?: int32(name='JobId', description='The ID of the historical event delivery task.', example='16602'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='9D356A34-D5A9-41CD-9915-837B7F9D8722'),
}

model CreateDeliveryHistoryJobResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDeliveryHistoryJobResponseBody(name='body'),
}

/**
 * @summary Creates a data backfill task.
 *
 * @description Limits
 * *   Make sure that you have created a single-account trail to deliver events to Simple Log Service by calling the [CreateTrail](https://help.aliyun.com/document_detail/212313.html) operation.
 * *   Only one data backfill task can run at a time within an Alibaba Cloud account.
 * This topic provides an example on how to create a data backfill task for a trail named `trail-name`.
 *
 * @param request CreateDeliveryHistoryJobRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateDeliveryHistoryJobResponse
 */
@context("createDeliveryHistoryJobWithContext")
async function createDeliveryHistoryJobWithOptions(request: CreateDeliveryHistoryJobRequest, runtime: $RuntimeOptions): CreateDeliveryHistoryJobResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.clientToken)) {
    query['ClientToken'] = request.clientToken;
  }
  if (!$isNull(request.trailName)) {
    query['TrailName'] = request.trailName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'CreateDeliveryHistoryJob',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a data backfill task.
 *
 * @description Limits
 * *   Make sure that you have created a single-account trail to deliver events to Simple Log Service by calling the [CreateTrail](https://help.aliyun.com/document_detail/212313.html) operation.
 * *   Only one data backfill task can run at a time within an Alibaba Cloud account.
 * This topic provides an example on how to create a data backfill task for a trail named `trail-name`.
 *
 * @param request CreateDeliveryHistoryJobRequest
 * @return CreateDeliveryHistoryJobResponse
 */
async function createDeliveryHistoryJob(request: CreateDeliveryHistoryJobRequest): CreateDeliveryHistoryJobResponse {
  var runtime = new $RuntimeOptions{};
  return createDeliveryHistoryJobWithOptions(request, runtime);
}

model CreateTrailRequest {
  eventRW?: string(name='EventRW', description='The read/write type of the events to be delivered. Valid values:

*   Write: write events. It is the default value.
*   Read: read events.
*   All: read and write events.', example='Write'),
  isOrganizationTrail?: boolean(name='IsOrganizationTrail', description='Specifies whether to create a multi-account trail. Valid values:

*   true: creates a multi-account trail.
*   false (default): creates a single-account trail.', example='false'),
  maxComputeProjectArn?: string(name='MaxComputeProjectArn', description='The ARN of the MaxCompute project to which you want to deliver events.

>  You must specify at least one of the following parameters: OssBucketName, SlsProjectArn, and MaxComputeProjectArn.

>  The name of the MaxCompute project must be prefixed with actiontrail_.', example='acs:odps:cn-hangzhou:15127787691****:project/actiontrail_****'),
  maxComputeWriteRoleArn?: string(name='MaxComputeWriteRoleArn', description='The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the corresponding resource. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter and deliver events to the current account, you must grant the RAM role the permissions on the service-linked role for ActionTrail. If you want to deliver events to other accounts, you must attach a system policy to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::15127787691****:role/aliyunserviceroleforactiontrail'),
  name?: string(name='Name', description='The name of the trail to be created.

The name must be 6 to 36 characters in length. The name must start with a lowercase letter and can contain lowercase letters, digits, hyphens (-), and underscores (_).

> The name must be unique within your Alibaba Cloud account.

This parameter is required.', example='trail-test'),
  ossBucketName?: string(name='OssBucketName', description='The name of the OSS bucket to which events are to be delivered.

The name must be 3 to 63 characters in length. The name must start with a lowercase letter or a digit and can contain lowercase letters, digits, and hyphens (-).

> You must specify at least one of the OssBucketName and SlsProjectArn parameters.', example='audit-log'),
  ossKeyPrefix?: string(name='OssKeyPrefix', description='The prefix of the log files to be stored in the destination OSS bucket. This parameter can be left empty.

The prefix must be 6 to 32 characters in length. The prefix must start with a letter and can contain letters, digits, hyphens (-), forward slashes (/), and underscores (_).', example='at-product-account-audit-B'),
  ossWriteRoleArn?: string(name='OssWriteRoleArn', description='The Alibaba Cloud Resource Name (ARN) of the service-linked role that is assumed by ActionTrail to deliver events to the destination Object Storage Service (OSS) bucket.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the corresponding resource. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter and deliver events to the current account, you must grant the RAM role the permissions on the service-linked role for ActionTrail. If you want to deliver events to other accounts, you must attach a system policy to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  slsProjectArn?: string(name='SlsProjectArn', description='The ARN of the Log Service project to which events are to be delivered.

> You must specify at least one of the OssBucketName and SlsProjectArn parameters.', example='acs:log:cn-shanghai::project/***'),
  slsWriteRoleArn?: string(name='SlsWriteRoleArn', description='The ARN of the RAM role that is assumed by ActionTrail to deliver events to the Log Service project.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the corresponding resource. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter, you must grant the permissions of the service-linked role that is assumed by ActionTrail to the RAM role before you can deliver events to your Alibaba Cloud account. If you need to deliver events to other Alibaba Cloud accounts, you must attach the permission policy that is used to grant permissions related to event delivery to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  trailRegion?: string(name='TrailRegion', description='The one or more regions from which the trail delivers events.

The default value is All, which indicates that the trail delivers events from all regions.

You can also specify specific regions. You can call the [DescribeRegions](https://help.aliyun.com/document_detail/213597.html) operation to query all the supported regions.', example='All'),
}

model CreateTrailResponseBody = {
  eventRW?: string(name='EventRW', description='The read/write type of the events to be delivered.', example='Write'),
  homeRegion?: string(name='HomeRegion', description='The home region of the trail.', example='cn-hangzhou'),
  maxComputeProjectArn?: string(name='MaxComputeProjectArn', description='ARN of the Big Data Compute Service project for tracking delivery.', example='acs:odps:cn-hangzhou:151266687691****:project/actiontrail_****'),
  maxComputeWriteRoleArn?: string(name='MaxComputeWriteRoleArn', description='The ARN of the role that Operation Audit assumes when delivering operation events to the Big Data Compute Service project.', example='acs:ram::151266687691****:role/aliyunserviceroleforactiontrail'),
  name?: string(name='Name', description='The name of the trail.', example='trail-test'),
  ossBucketName?: string(name='OssBucketName', description='The name of the OSS bucket to which events are to be delivered.', example='audit-log'),
  ossKeyPrefix?: string(name='OssKeyPrefix', description='The prefix of the log files to be stored in the destination OSS bucket.', example='at-product-account-audit-B'),
  ossWriteRoleArn?: string(name='OssWriteRoleArn', description='The ARN of the service-linked role that is assumed by ActionTrail to deliver events to the destination OSS bucket.', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='442DDADF-DA58-4029-8E8B-82C73E9A7A70'),
  slsProjectArn?: string(name='SlsProjectArn', description='The ARN of the Log Service project to which events are to be delivered.', example='acs:log:cn-hangzhou:151266687691****:project/test-project'),
  slsWriteRoleArn?: string(name='SlsWriteRoleArn', description='The ARN of the service-linked role that is assumed by ActionTrail to deliver events to the destination Log Service project.', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  trailRegion?: string(name='TrailRegion', description='The one or more regions from which the trail delivers events.', example='All'),
}

model CreateTrailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateTrailResponseBody(name='body'),
}

/**
 * @summary Creates a trail. By default, ActionTrail allows you to query events generated within your Alibaba Cloud account in the last 90 days. To query and analyze events generated more than 90 days ago, create a trail to deliver events to Object Storage Service (OSS), Simple Log Service, or MaxCompute.
 *
 * @description **Operation description**
 * >By default, a trail that is created by calling an operation is in the Disabled state. You must call the StartLogging operation to enable the trail. This way, ActionTrail can deliver events to the destination cloud service.
 * **Prerequisites**
 * Before you create a trail, make sure that at least one of the following storage configurations is complete:
 * - Deliver events to OSS
 *   - OSS is activated and a bucket is created.
 *   
 * - Deliver events to Simple Log Service
 *   - Simple Log Service is activated and a project is created.
 *  >When a trail is created, ActionTrail automatically creates a Logstore named `actiontrail_<Trail name>` in the project. You cannot write data other than the audit data to the Logstore. This ensures the accuracy of the audit data.
 *     
 * - Deliver events to MaxCompute
 *   - MaxCompute is activated.
 * >When a trail is created, ActionTrail automatically creates a project named `actiontrail_<Account ID>` on the Projects page. You cannot write data other than the audit data to the project. This ensures the accuracy of the audit data.
 * **Usage Notes**
 * This topic provides an example on how to create a single-account trail named `trail-test` to deliver events to an OSS bucket named `audit-log`.
 *
 * @param request CreateTrailRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return CreateTrailResponse
 */
@context("createTrailWithContext")
async function createTrailWithOptions(request: CreateTrailRequest, runtime: $RuntimeOptions): CreateTrailResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.eventRW)) {
    query['EventRW'] = request.eventRW;
  }
  if (!$isNull(request.isOrganizationTrail)) {
    query['IsOrganizationTrail'] = request.isOrganizationTrail;
  }
  if (!$isNull(request.maxComputeProjectArn)) {
    query['MaxComputeProjectArn'] = request.maxComputeProjectArn;
  }
  if (!$isNull(request.maxComputeWriteRoleArn)) {
    query['MaxComputeWriteRoleArn'] = request.maxComputeWriteRoleArn;
  }
  if (!$isNull(request.name)) {
    query['Name'] = request.name;
  }
  if (!$isNull(request.ossBucketName)) {
    query['OssBucketName'] = request.ossBucketName;
  }
  if (!$isNull(request.ossKeyPrefix)) {
    query['OssKeyPrefix'] = request.ossKeyPrefix;
  }
  if (!$isNull(request.ossWriteRoleArn)) {
    query['OssWriteRoleArn'] = request.ossWriteRoleArn;
  }
  if (!$isNull(request.slsProjectArn)) {
    query['SlsProjectArn'] = request.slsProjectArn;
  }
  if (!$isNull(request.slsWriteRoleArn)) {
    query['SlsWriteRoleArn'] = request.slsWriteRoleArn;
  }
  if (!$isNull(request.trailRegion)) {
    query['TrailRegion'] = request.trailRegion;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'CreateTrail',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Creates a trail. By default, ActionTrail allows you to query events generated within your Alibaba Cloud account in the last 90 days. To query and analyze events generated more than 90 days ago, create a trail to deliver events to Object Storage Service (OSS), Simple Log Service, or MaxCompute.
 *
 * @description **Operation description**
 * >By default, a trail that is created by calling an operation is in the Disabled state. You must call the StartLogging operation to enable the trail. This way, ActionTrail can deliver events to the destination cloud service.
 * **Prerequisites**
 * Before you create a trail, make sure that at least one of the following storage configurations is complete:
 * - Deliver events to OSS
 *   - OSS is activated and a bucket is created.
 *   
 * - Deliver events to Simple Log Service
 *   - Simple Log Service is activated and a project is created.
 *  >When a trail is created, ActionTrail automatically creates a Logstore named `actiontrail_<Trail name>` in the project. You cannot write data other than the audit data to the Logstore. This ensures the accuracy of the audit data.
 *     
 * - Deliver events to MaxCompute
 *   - MaxCompute is activated.
 * >When a trail is created, ActionTrail automatically creates a project named `actiontrail_<Account ID>` on the Projects page. You cannot write data other than the audit data to the project. This ensures the accuracy of the audit data.
 * **Usage Notes**
 * This topic provides an example on how to create a single-account trail named `trail-test` to deliver events to an OSS bucket named `audit-log`.
 *
 * @param request CreateTrailRequest
 * @return CreateTrailResponse
 */
async function createTrail(request: CreateTrailRequest): CreateTrailResponse {
  var runtime = new $RuntimeOptions{};
  return createTrailWithOptions(request, runtime);
}

model DeleteAdvancedQueryHistoryRequest {
  queryId?: string(name='QueryId', description='This parameter is required.', example='query-uIkIvLiVSuCKqg0yoa****'),
}

model DeleteAdvancedQueryHistoryResponseBody = {
  requestId?: string(name='RequestId', example='04857D99-8B0C-53EB-85F1-E64198E7****'),
}

model DeleteAdvancedQueryHistoryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAdvancedQueryHistoryResponseBody(name='body'),
}

/**
 * @summary 删除高级查询历史记录
 *
 * @param request DeleteAdvancedQueryHistoryRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteAdvancedQueryHistoryResponse
 */
@context("deleteAdvancedQueryHistoryWithContext")
async function deleteAdvancedQueryHistoryWithOptions(request: DeleteAdvancedQueryHistoryRequest, runtime: $RuntimeOptions): DeleteAdvancedQueryHistoryResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.queryId)) {
    query['QueryId'] = request.queryId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DeleteAdvancedQueryHistory',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 删除高级查询历史记录
 *
 * @param request DeleteAdvancedQueryHistoryRequest
 * @return DeleteAdvancedQueryHistoryResponse
 */
async function deleteAdvancedQueryHistory(request: DeleteAdvancedQueryHistoryRequest): DeleteAdvancedQueryHistoryResponse {
  var runtime = new $RuntimeOptions{};
  return deleteAdvancedQueryHistoryWithOptions(request, runtime);
}

model DeleteAdvancedQueryTemplateRequest {
  templateId?: string(name='TemplateId', example='utpl-QNL3dpYkQcyjZxrIQCciqQ'),
}

model DeleteAdvancedQueryTemplateResponseBody = {
  requestId?: string(name='RequestId', example='95F2CD1D-9BD3-564A-A74A-743FFC5E46E5'),
}

model DeleteAdvancedQueryTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAdvancedQueryTemplateResponseBody(name='body'),
}

/**
 * @summary 删除高级查询模板
 *
 * @param request DeleteAdvancedQueryTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteAdvancedQueryTemplateResponse
 */
@context("deleteAdvancedQueryTemplateWithContext")
async function deleteAdvancedQueryTemplateWithOptions(request: DeleteAdvancedQueryTemplateRequest, runtime: $RuntimeOptions): DeleteAdvancedQueryTemplateResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DeleteAdvancedQueryTemplate',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 删除高级查询模板
 *
 * @param request DeleteAdvancedQueryTemplateRequest
 * @return DeleteAdvancedQueryTemplateResponse
 */
async function deleteAdvancedQueryTemplate(request: DeleteAdvancedQueryTemplateRequest): DeleteAdvancedQueryTemplateResponse {
  var runtime = new $RuntimeOptions{};
  return deleteAdvancedQueryTemplateWithOptions(request, runtime);
}

model DeleteDeliveryHistoryJobRequest {
  jobId?: int32(name='JobId', description='The ID of the historical event delivery task to be deleted.

You can call the [ListDeliveryHistoryJobs](https://help.aliyun.com/document_detail/188101.html) operation to query task IDs.

This parameter is required.', example='16602'),
}

model DeleteDeliveryHistoryJobResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D74DD20B-6598-429C-873B-B9B449B656B6'),
}

model DeleteDeliveryHistoryJobResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDeliveryHistoryJobResponseBody(name='body'),
}

/**
 * @summary Deletes a data backfill task.
 *
 * @description This topic describes how to delete a data backfill task whose ID is `16602`.
 *
 * @param request DeleteDeliveryHistoryJobRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteDeliveryHistoryJobResponse
 */
@context("deleteDeliveryHistoryJobWithContext")
async function deleteDeliveryHistoryJobWithOptions(request: DeleteDeliveryHistoryJobRequest, runtime: $RuntimeOptions): DeleteDeliveryHistoryJobResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.jobId)) {
    query['JobId'] = request.jobId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DeleteDeliveryHistoryJob',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a data backfill task.
 *
 * @description This topic describes how to delete a data backfill task whose ID is `16602`.
 *
 * @param request DeleteDeliveryHistoryJobRequest
 * @return DeleteDeliveryHistoryJobResponse
 */
async function deleteDeliveryHistoryJob(request: DeleteDeliveryHistoryJobRequest): DeleteDeliveryHistoryJobResponse {
  var runtime = new $RuntimeOptions{};
  return deleteDeliveryHistoryJobWithOptions(request, runtime);
}

model DeleteTrailRequest {
  name?: string(name='Name', description='The name of the trail that you want to delete.

The name must be 6 to 36 characters in length. The name must start with a lowercase letter and can contain lowercase letters, digits, hyphens (-), and underscores (_).

> The name must be unique within your Alibaba Cloud account.

This parameter is required.', example='my-test'),
}

model DeleteTrailResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
}

model DeleteTrailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteTrailResponseBody(name='body'),
}

/**
 * @summary Deletes a trail.
 *
 * @description This topic describes how to delete a sample trail named `trail-test`.
 *
 * @param request DeleteTrailRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DeleteTrailResponse
 */
@context("deleteTrailWithContext")
async function deleteTrailWithOptions(request: DeleteTrailRequest, runtime: $RuntimeOptions): DeleteTrailResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.name)) {
    query['Name'] = request.name;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DeleteTrail',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Deletes a trail.
 *
 * @description This topic describes how to delete a sample trail named `trail-test`.
 *
 * @param request DeleteTrailRequest
 * @return DeleteTrailResponse
 */
async function deleteTrail(request: DeleteTrailRequest): DeleteTrailResponse {
  var runtime = new $RuntimeOptions{};
  return deleteTrailWithOptions(request, runtime);
}

model DescribeAdvancedQueryHistoryResponseBody = {
  queryHistoryList?: [ 
    {
      queryId?: string(name='QueryId', example='query-uIkIvLiVSuCKqg0yoa****'),
      querySql?: string(name='QuerySql', example='event.userIdentity.accessKeyId: *'),
      simpleQuery?: boolean(name='SimpleQuery', example='false'),
      timeStamp?: string(name='TimeStamp', example='1753695874000'),
    }
  ](name='QueryHistoryList'),
  requestId?: string(name='RequestId', example='19F032B7-5FD8-5AC9-97FD-ACF54371****'),
}

model DescribeAdvancedQueryHistoryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAdvancedQueryHistoryResponseBody(name='body'),
}

/**
 * @summary 查询高级查询历史记录
 *
 * @param request DescribeAdvancedQueryHistoryRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeAdvancedQueryHistoryResponse
 */
async function describeAdvancedQueryHistoryWithOptions(runtime: $RuntimeOptions): DescribeAdvancedQueryHistoryResponse {
  var req = new OpenApiUtil.OpenApiRequest{};
  var params = new OpenApiUtil.Params{
    action = 'DescribeAdvancedQueryHistory',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询高级查询历史记录
 *
 * @return DescribeAdvancedQueryHistoryResponse
 */
async function describeAdvancedQueryHistory(): DescribeAdvancedQueryHistoryResponse {
  var runtime = new $RuntimeOptions{};
  return describeAdvancedQueryHistoryWithOptions(runtime);
}

model DescribeAdvancedQueryTemplateRequest {
  pageNumber?: long(name='PageNumber', example='1'),
  pageSize?: long(name='PageSize', example='20'),
  templateName?: string(name='TemplateName'),
}

model DescribeAdvancedQueryTemplateResponseBody = {
  requestId?: string(name='RequestId', example='1EC1FDC7-6D01-559F-852C-30D86E9EEB3F'),
  templatePage?: {
    pageNumber?: string(name='PageNumber', example='1'),
    pageSize?: string(name='PageSize', example='20'),
    templateList?: [ 
      {
        simpleQuery?: boolean(name='SimpleQuery', example='false'),
        templateId?: string(name='TemplateId', example='utpl-7OaxbyJATDaoLOgZRcV5RQ'),
        templateName?: string(name='TemplateName'),
        templateSql?: string(name='TemplateSql', example='event.userIdentity.type: root-account AND event.userIdentity.accessKeyId: *'),
      }
    ](name='TemplateList'),
    total?: long(name='Total', example='5'),
  }(name='TemplatePage'),
}

model DescribeAdvancedQueryTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAdvancedQueryTemplateResponseBody(name='body'),
}

/**
 * @summary 查询高级查询模板
 *
 * @param request DescribeAdvancedQueryTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeAdvancedQueryTemplateResponse
 */
@context("describeAdvancedQueryTemplateWithContext")
async function describeAdvancedQueryTemplateWithOptions(request: DescribeAdvancedQueryTemplateRequest, runtime: $RuntimeOptions): DescribeAdvancedQueryTemplateResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!$isNull(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeAdvancedQueryTemplate',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询高级查询模板
 *
 * @param request DescribeAdvancedQueryTemplateRequest
 * @return DescribeAdvancedQueryTemplateResponse
 */
async function describeAdvancedQueryTemplate(request: DescribeAdvancedQueryTemplateRequest): DescribeAdvancedQueryTemplateResponse {
  var runtime = new $RuntimeOptions{};
  return describeAdvancedQueryTemplateWithOptions(request, runtime);
}

model DescribeRegionsRequest {
  acceptLanguage?: string(name='AcceptLanguage', description='The language of the content within the request and response. Valid values:

*   zh-CN: Chinese
*   en-US (default): English', example='en-US'),
}

model DescribeRegionsResponseBody = {
  regions?: {
    region?: [ 
    {
      localName?: string(name='LocalName', description='The name of the region.

>  If AcceptLanguage is set to zh-CN, the Chinese name of the region is returned. If AcceptLanguage is set to en-US or left empty, the English name of the region is returned.', example='China (Hangzhou)'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of ActionTrail in the region.', example='actiontrail.cn-hangzhou.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
    }
  ](name='Region')
  }(name='Regions', description='A list of regions.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='ACA7C814-12BC-4D81-A0D2-72071C9D6D2C'),
}

model DescribeRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRegionsResponseBody(name='body'),
}

/**
 * @summary Queries the Alibaba Cloud regions that are supported by ActionTrail.
 *
 * @description For more information, see [Regions and zones](https://help.aliyun.com/document_detail/40654.html).
 *
 * @param request DescribeRegionsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeRegionsResponse
 */
@context("describeRegionsWithContext")
async function describeRegionsWithOptions(request: DescribeRegionsRequest, runtime: $RuntimeOptions): DescribeRegionsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.acceptLanguage)) {
    query['AcceptLanguage'] = request.acceptLanguage;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeRegions',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the Alibaba Cloud regions that are supported by ActionTrail.
 *
 * @description For more information, see [Regions and zones](https://help.aliyun.com/document_detail/40654.html).
 *
 * @param request DescribeRegionsRequest
 * @return DescribeRegionsResponse
 */
async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  var runtime = new $RuntimeOptions{};
  return describeRegionsWithOptions(request, runtime);
}

model DescribeResourceLifeCycleEventsRequest {
  resourceType?: string(name='ResourceType', example='ACS::ECS::Instance'),
  serviceName?: string(name='ServiceName', example='ECS'),
}

model DescribeResourceLifeCycleEventsResponseBody = {
  data?: string(name='Data'),
  requestId?: string(name='RequestId', example='B10969CF-C743-55F8-9710-F0711504****'),
}

model DescribeResourceLifeCycleEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceLifeCycleEventsResponseBody(name='body'),
}

/**
 * @summary 列举资源生命周期事件
 *
 * @param request DescribeResourceLifeCycleEventsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeResourceLifeCycleEventsResponse
 */
@context("describeResourceLifeCycleEventsWithContext")
async function describeResourceLifeCycleEventsWithOptions(request: DescribeResourceLifeCycleEventsRequest, runtime: $RuntimeOptions): DescribeResourceLifeCycleEventsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!$isNull(request.serviceName)) {
    query['ServiceName'] = request.serviceName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeResourceLifeCycleEvents',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 列举资源生命周期事件
 *
 * @param request DescribeResourceLifeCycleEventsRequest
 * @return DescribeResourceLifeCycleEventsResponse
 */
async function describeResourceLifeCycleEvents(request: DescribeResourceLifeCycleEventsRequest): DescribeResourceLifeCycleEventsResponse {
  var runtime = new $RuntimeOptions{};
  return describeResourceLifeCycleEventsWithOptions(request, runtime);
}

model DescribeScenesRequest {
  searchCode?: string(name='SearchCode', example='ak'),
}

model DescribeScenesResponseBody = {
  requestId?: string(name='RequestId', example='7EC26DF0-35AC-5F37-82B3-F5545D0A****'),
  sceneList?: [ 
    {
      description?: string(name='Description'),
      name?: string(name='Name'),
      sceneId?: string(name='SceneId', example='sc-lpYrjKouRfy3MK-wteJW_Q'),
      token?: string(name='Token', example='identity'),
      type?: string(name='Type', example='normal'),
    }
  ](name='SceneList'),
}

model DescribeScenesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeScenesResponseBody(name='body'),
}

/**
 * @summary 查询所有场景
 *
 * @param request DescribeScenesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeScenesResponse
 */
@context("describeScenesWithContext")
async function describeScenesWithOptions(request: DescribeScenesRequest, runtime: $RuntimeOptions): DescribeScenesResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.searchCode)) {
    query['SearchCode'] = request.searchCode;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeScenes',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询所有场景
 *
 * @param request DescribeScenesRequest
 * @return DescribeScenesResponse
 */
async function describeScenes(request: DescribeScenesRequest): DescribeScenesResponse {
  var runtime = new $RuntimeOptions{};
  return describeScenesWithOptions(request, runtime);
}

model DescribeSearchTemplatesRequest {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='20'),
  sceneId?: string(name='SceneId', description='This parameter is required.', example='sc-lpYrjKouRfy3MK-wteJW_Q'),
}

model DescribeSearchTemplatesResponseBody = {
  pageNumber?: int32(name='PageNumber', example='1'),
  pageSize?: int32(name='PageSize', example='20'),
  requestId?: string(name='RequestId', example='787DD24A-E322-5C0D-A730-057FE62B****'),
  templateList?: [ 
    {
      charts?: string(name='Charts', example='[]'),
      description?: string(name='Description'),
      params?: string(name='Params'),
      sceneId?: string(name='SceneId', example='sc-lpYrjKouRfy3MK-wteJW_Q'),
      sql?: string(name='Sql', example='select \\\\"event.userIdentity.accountId\\\\" as account_id, count(1) as cnt group by account_id limit 1000'),
      templateId?: string(name='TemplateId', example='tpl-wCZAFWx3Spq6CO9Ymp****'),
      templateName?: string(name='TemplateName'),
      token?: string(name='Token', example='identity.rootLogin'),
      type?: string(name='Type', example='audit'),
    }
  ](name='TemplateList'),
}

model DescribeSearchTemplatesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSearchTemplatesResponseBody(name='body'),
}

/**
 * @summary 列举所有模版
 *
 * @param request DescribeSearchTemplatesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeSearchTemplatesResponse
 */
@context("describeSearchTemplatesWithContext")
async function describeSearchTemplatesWithOptions(request: DescribeSearchTemplatesRequest, runtime: $RuntimeOptions): DescribeSearchTemplatesResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!$isNull(request.sceneId)) {
    query['SceneId'] = request.sceneId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeSearchTemplates',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 列举所有模版
 *
 * @param request DescribeSearchTemplatesRequest
 * @return DescribeSearchTemplatesResponse
 */
async function describeSearchTemplates(request: DescribeSearchTemplatesRequest): DescribeSearchTemplatesResponse {
  var runtime = new $RuntimeOptions{};
  return describeSearchTemplatesWithOptions(request, runtime);
}

model DescribeTrailsRequest {
  includeOrganizationTrail?: boolean(name='IncludeOrganizationTrail', description='Specifies whether to query the information about multi-account trails. Valid values:

*   true
*   false (default)', example='false'),
  includeShadowTrails?: boolean(name='IncludeShadowTrails', description='Specifies whether to return the information about shadow trails. Valid values:

*   false: Do not return the information about shadow trails. It is the default value.
*   true: Return the information about shadow trails.', example='false'),
  nameList?: string(name='NameList', description='The names of the trails whose information you want to query. Separate multiple trail names with commas (,).', example='abc,def'),
}

model DescribeTrailsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='ED8BC689-69DA-42AC-855E-3B06C1271194'),
  trailList?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the trail was created.', example='2021-03-01T06:27:28Z'),
      eventRW?: string(name='EventRW', description='The read/write type of the events that are delivered. Valid values:

*   Write: write events. This is the default value.
*   Read: read events.
*   All: read and write events.', example='All'),
      homeRegion?: string(name='HomeRegion', description='The home region of the trail.', example='cn-hangzhou'),
      isOrganizationTrail?: boolean(name='IsOrganizationTrail', description='Indicates whether the trail is a multi-account trail. Valid values:

*   false (default)
*   true', example='false'),
      maxComputeProjectArn?: string(name='MaxComputeProjectArn', description='The ARN of the MaxCompute project.', example='acs:odps:cn-hangzhou:141266687691****:project/actiontrail_****'),
      maxComputeWriteRoleArn?: string(name='MaxComputeWriteRoleArn', description='The ARN of the role that is assumed by ActionTrail to deliver events to the MaxCompute project.', example='acs:ram::141266687691****:role/aliyunserviceroleforactiontrail'),
      name?: string(name='Name', description='The name of the trail.', example='test-4'),
      organizationId?: string(name='OrganizationId', description='The ID of the resource directory.

>  This parameter is returned only when the trail is a multi-account trail.', example='rd-EV****'),
      ossBucketLocation?: string(name='OssBucketLocation', description='The region where the OSS bucket resides.', example='oss-cn-hangzhou'),
      ossBucketName?: string(name='OssBucketName', description='The name of the OSS bucket to which events are delivered.', example='secloud'),
      ossKeyPrefix?: string(name='OssKeyPrefix', description='The prefix of the files that are stored in the Object Storage Service (OSS) bucket.', example='trail1'),
      ossWriteRoleArn?: string(name='OssWriteRoleArn', description='The Alibaba Cloud Resource Name (ARN) of the RAM role that is assumed by ActionTrail to deliver events to the OSS bucket.', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
      region?: string(name='Region', description='The region where the trail resides.', example='cn-hangzhou'),
      slsProjectArn?: string(name='SlsProjectArn', description='The ARN of the Log Service project to which events are delivered.', example='acs:log:cn-qingdao:159498693826****:project/zhengze-audit-log'),
      slsWriteRoleArn?: string(name='SlsWriteRoleArn', description='The ARN of the RAM role that is assumed by ActionTrail to deliver events to the Log Service project.', example='acs:ram::159498693826****:role/aliyunserviceroleforactiontrail'),
      startLoggingTime?: string(name='StartLoggingTime', description='The time when the trail was last enabled.', example='2021-04-06T02:08:38Z'),
      status?: string(name='Status', description='The status of the trail. Valid values:

*   Disable: disabled.
*   Enable: enabled.
*   Fresh: The trail is created but is not enabled.', example='Enable'),
      stopLoggingTime?: string(name='StopLoggingTime', description='The time when the trail was last disabled.', example='2021-04-06T02:09:04Z'),
      trailArn?: string(name='TrailArn', description='The ARN of the trail.', example='acs:actiontrail:cn-hangzhou:159498693826****:trail/test-delivery-other'),
      trailRegion?: string(name='TrailRegion', description='The region of the trail.', example='All'),
      updateTime?: string(name='UpdateTime', description='The time when the configurations of the trail were last updated.', example='2021-04-06T02:16:24Z'),
    }
  ](name='TrailList', description='The trails.'),
}

model DescribeTrailsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTrailsResponseBody(name='body'),
}

/**
 * @summary Queries created trails.
 *
 * @description This topic shows you how to query the information about the single-account trails within an Alibaba Cloud account. In this example, the information about a trail named `test-4` is returned.
 *
 * @param request DescribeTrailsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeTrailsResponse
 */
@context("describeTrailsWithContext")
async function describeTrailsWithOptions(request: DescribeTrailsRequest, runtime: $RuntimeOptions): DescribeTrailsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.includeOrganizationTrail)) {
    query['IncludeOrganizationTrail'] = request.includeOrganizationTrail;
  }
  if (!$isNull(request.includeShadowTrails)) {
    query['IncludeShadowTrails'] = request.includeShadowTrails;
  }
  if (!$isNull(request.nameList)) {
    query['NameList'] = request.nameList;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeTrails',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries created trails.
 *
 * @description This topic shows you how to query the information about the single-account trails within an Alibaba Cloud account. In this example, the information about a trail named `test-4` is returned.
 *
 * @param request DescribeTrailsRequest
 * @return DescribeTrailsResponse
 */
async function describeTrails(request: DescribeTrailsRequest): DescribeTrailsResponse {
  var runtime = new $RuntimeOptions{};
  return describeTrailsWithOptions(request, runtime);
}

model DescribeUserAlertCountRequest {
  endDate?: string(name='EndDate', example='2025-06-10'),
  startDate?: string(name='StartDate', example='2025-05-12'),
}

model DescribeUserAlertCountResponseBody = {
  data?: {
    counts?: [ long ](name='Counts'),
    dates?: [ string ](name='Dates'),
  }(name='Data'),
  requestId?: string(name='RequestId', example='90D6CC31-947F-5D8A-BEDC-F312EE9B31EA'),
}

model DescribeUserAlertCountResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserAlertCountResponseBody(name='body'),
}

/**
 * @summary 查询用户告警量
 *
 * @param request DescribeUserAlertCountRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeUserAlertCountResponse
 */
@context("describeUserAlertCountWithContext")
async function describeUserAlertCountWithOptions(request: DescribeUserAlertCountRequest, runtime: $RuntimeOptions): DescribeUserAlertCountResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.endDate)) {
    query['EndDate'] = request.endDate;
  }
  if (!$isNull(request.startDate)) {
    query['StartDate'] = request.startDate;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeUserAlertCount',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询用户告警量
 *
 * @param request DescribeUserAlertCountRequest
 * @return DescribeUserAlertCountResponse
 */
async function describeUserAlertCount(request: DescribeUserAlertCountRequest): DescribeUserAlertCountResponse {
  var runtime = new $RuntimeOptions{};
  return describeUserAlertCountWithOptions(request, runtime);
}

model DescribeUserLogCountRequest {
  endDate?: string(name='EndDate', example='2025-06-10'),
  startDate?: string(name='StartDate', example='2025-05-12'),
}

model DescribeUserLogCountResponseBody = {
  data?: {
    counts?: [ long ](name='Counts'),
    dates?: [ string ](name='Dates'),
  }(name='Data'),
  requestId?: string(name='RequestId', example='90D6CC31-947F-5D8A-BEDC-F312EE9B31EA'),
}

model DescribeUserLogCountResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserLogCountResponseBody(name='body'),
}

/**
 * @summary 查询用户日志量
 *
 * @param request DescribeUserLogCountRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return DescribeUserLogCountResponse
 */
@context("describeUserLogCountWithContext")
async function describeUserLogCountWithOptions(request: DescribeUserLogCountRequest, runtime: $RuntimeOptions): DescribeUserLogCountResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.endDate)) {
    query['EndDate'] = request.endDate;
  }
  if (!$isNull(request.startDate)) {
    query['StartDate'] = request.startDate;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'DescribeUserLogCount',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询用户日志量
 *
 * @param request DescribeUserLogCountRequest
 * @return DescribeUserLogCountResponse
 */
async function describeUserLogCount(request: DescribeUserLogCountRequest): DescribeUserLogCountResponse {
  var runtime = new $RuntimeOptions{};
  return describeUserLogCountWithOptions(request, runtime);
}

model EnableInsightRequest {
  insightType?: string(name='InsightType', description='The type of the Insights event. Valid values:

*   IpInsight: Insights event on IP address
*   ApiCallRateInsight: Insights event on API call rate
*   ApiErrorRateInsight: Insights event on API error rate', example='IpInsight'),
}

model EnableInsightResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='45AA79B7-0240-52AB-B158-3F9A512228ED'),
}

model EnableInsightResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnableInsightResponseBody(name='body'),
}

/**
 * @summary Enables the Insights feature
 *
 * @param request EnableInsightRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return EnableInsightResponse
 */
@context("enableInsightWithContext")
async function enableInsightWithOptions(request: EnableInsightRequest, runtime: $RuntimeOptions): EnableInsightResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.insightType)) {
    query['InsightType'] = request.insightType;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'EnableInsight',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Enables the Insights feature
 *
 * @param request EnableInsightRequest
 * @return EnableInsightResponse
 */
async function enableInsight(request: EnableInsightRequest): EnableInsightResponse {
  var runtime = new $RuntimeOptions{};
  return enableInsightWithOptions(request, runtime);
}

model GetAccessKeyLastUsedEventsRequest {
  accessKey?: string(name='AccessKey', description='The AccessKey ID.

This parameter is required.', example='LTAI****************'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the query.

> The request parameters must be the same as those of the last request.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  pageSize?: string(name='PageSize', description='The number of entries to return on each page.

Valid values: 0 to 100.

Default value: 20.', example='20'),
  serviceName?: string(name='ServiceName', description='The Alibaba Cloud service. For more information about the Alibaba Cloud services supported by ActionTrail, see [Supported Alibaba Cloud services](https://help.aliyun.com/document_detail/28829.html).

This parameter is required.', example='Ecs'),
}

model GetAccessKeyLastUsedEventsResponseBody = {
  events?: [ 
    {
      detail?: string(name='Detail', description='An array that consists of the details about the event.', example='{
  "eventId": "239EB588-CD24-522E-B0B5-174A1A58****",
  "eventVersion": 1,
  "eventSource": "ecs.cn-hangzhou.aliyuncs.com",
  "sourceIpAddress": "``10.10.**.**``",
  "eventType": "ApiCall",
  "userIdentity": {
    "accountId": "104758519118****",
    "principalId": "24549429003625****",
    "type": "ram-user",
    "userName": "alice"
  },
  "serviceName": "Ecs",
  "apiVersion": "2016-01-20",
  "requestId": "239EB588-CD24-522E-B0B5-174A1A588BE0",
  "eventTime": "2021-08-05T09:21:32Z",
  "isGlobal": false,
  "acsRegion": "cn-hangzhou",
  "eventName": "DescribeInstances"
}'),
      eventName?: string(name='EventName', description='The name of the event.', example='DescribeInstances'),
      source?: string(name='Source', description='The event source.', example='ManagementEvent'),
      usedTimestamp?: long(name='UsedTimestamp', description='The timestamp when the event was generated.', example='1657247532000'),
    }
  ](name='Events', description='The list of returned events.

This parameter is required.'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the query.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  requestId?: string(name='RequestId', description='The ID of the request.

This parameter is required.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
}

model GetAccessKeyLastUsedEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAccessKeyLastUsedEventsResponseBody(name='body'),
}

/**
 * @summary Queries the information about the most recent events that are generated when a specified AccessKey pair is called to access Alibaba Cloud services.
 *
 * @description You can call this operation to query only the information about the most recent events that are generated within 400 days after February 1, 2022 when a specified AccessKey pair is called to access Alibaba Cloud services. For more information about supported events, see [Alibaba Cloud services and events that are supported by the AccessKey pair audit feature](https://help.aliyun.com/document_detail/419214.html). Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedEventsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAccessKeyLastUsedEventsResponse
 */
@context("getAccessKeyLastUsedEventsWithContext")
async function getAccessKeyLastUsedEventsWithOptions(request: GetAccessKeyLastUsedEventsRequest, runtime: $RuntimeOptions): GetAccessKeyLastUsedEventsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.accessKey)) {
    query['AccessKey'] = request.accessKey;
  }
  if (!$isNull(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!$isNull(request.serviceName)) {
    query['ServiceName'] = request.serviceName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAccessKeyLastUsedEvents',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about the most recent events that are generated when a specified AccessKey pair is called to access Alibaba Cloud services.
 *
 * @description You can call this operation to query only the information about the most recent events that are generated within 400 days after February 1, 2022 when a specified AccessKey pair is called to access Alibaba Cloud services. For more information about supported events, see [Alibaba Cloud services and events that are supported by the AccessKey pair audit feature](https://help.aliyun.com/document_detail/419214.html). Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedEventsRequest
 * @return GetAccessKeyLastUsedEventsResponse
 */
async function getAccessKeyLastUsedEvents(request: GetAccessKeyLastUsedEventsRequest): GetAccessKeyLastUsedEventsResponse {
  var runtime = new $RuntimeOptions{};
  return getAccessKeyLastUsedEventsWithOptions(request, runtime);
}

model GetAccessKeyLastUsedInfoRequest {
  accessKey?: string(name='AccessKey', description='The AccessKey ID.

This parameter is required.', example='LTAI****************'),
}

model GetAccessKeyLastUsedInfoResponseBody = {
  accessKeyId?: string(name='AccessKeyId', description='The AccessKey ID.', example='LTAI****************'),
  accountId?: string(name='AccountId', description='The ID of the Alibaba Cloud account.', example='104758519118****'),
  accountType?: string(name='AccountType', description='The type of the account to which the AccessKey pair belongs.', example='ram-user'),
  detail?: string(name='Detail', description='The details about the event.', example='{
  "eventId": "239EB588-CD24-522E-B0B5-174A1A58****",
  "eventVersion": 1,
  "eventSource": "ecs.cn-hangzhou.aliyuncs.com",
  "sourceIpAddress": "``10.10.**.**``",
  "eventType": "ApiCall",
  "userIdentity": {
    "accountId": "104758519118****",
    "principalId": "24549429003625****",
    "type": "ram-user",
    "userName": "alice"
  },
  "serviceName": "Ecs",
  "apiVersion": "2016-01-20",
  "requestId": "239EB588-CD24-522E-B0B5-174A1A588BE0",
  "eventTime": "2021-08-05T09:21:32Z",
  "isGlobal": false,
  "acsRegion": "cn-hangzhou",
  "eventName": "DescribeInstances"
}'),
  ownerId?: string(name='OwnerId', description='The ID of the account to which the AccessKey pair belongs.', example='24549429003625****'),
  requestId?: string(name='RequestId', description='The ID of the request.

This parameter is required.', example='239EB588-CD24-522E-B0B5-174A1A588BE0'),
  serviceName?: string(name='ServiceName', description='The Alibaba Cloud service that was last accessed.

This parameter is required.', example='Ecs'),
  serviceNameCn?: string(name='ServiceNameCn', description='The Chinese name of the Alibaba Cloud service that was last accessed.', example='Elastic Compute Service (ECS)'),
  serviceNameEn?: string(name='ServiceNameEn', description='The English name of the Alibaba Cloud service that was last accessed.', example='Elastic Compute Service'),
  source?: string(name='Source', description='The event source.', example='ManagementEvent'),
  usedTimestamp?: long(name='UsedTimestamp', description='The timestamp when the AccessKey pair was last called.

This parameter is required.', example='1657247532000'),
  userName?: string(name='UserName', description='The name of the account to which the AccessKey pair belongs.

If the value of the AccountType parameter is root-account, the value of the UserName parameter is root. If the value of the AccountType parameter is ram-user, the value of the UserName parameter is the name of a RAM user.', example='alice'),
}

model GetAccessKeyLastUsedInfoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAccessKeyLastUsedInfoResponseBody(name='body'),
}

/**
 * @summary Queries the information about the most recent call of a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about the most recent call of a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedInfoRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAccessKeyLastUsedInfoResponse
 */
@context("getAccessKeyLastUsedInfoWithContext")
async function getAccessKeyLastUsedInfoWithOptions(request: GetAccessKeyLastUsedInfoRequest, runtime: $RuntimeOptions): GetAccessKeyLastUsedInfoResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.accessKey)) {
    query['AccessKey'] = request.accessKey;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAccessKeyLastUsedInfo',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about the most recent call of a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about the most recent call of a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedInfoRequest
 * @return GetAccessKeyLastUsedInfoResponse
 */
async function getAccessKeyLastUsedInfo(request: GetAccessKeyLastUsedInfoRequest): GetAccessKeyLastUsedInfoResponse {
  var runtime = new $RuntimeOptions{};
  return getAccessKeyLastUsedInfoWithOptions(request, runtime);
}

model GetAccessKeyLastUsedIpsRequest {
  accessKey?: string(name='AccessKey', description='The AccessKey ID.

This parameter is required.', example='LTAI****************'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.

>  You must specify the token that is obtained from the previous query as the value of NextToken.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  pageSize?: string(name='PageSize', description='The number of entries per page. Valid values: 0 to 100. Default value: 20.', example='20'),
  serviceName?: string(name='ServiceName', description='The Alibaba Cloud service. For more information about the Alibaba Cloud services supported by ActionTrail, see [Services that work with ActionTrail](https://help.aliyun.com/document_detail/28829.html).

This parameter is required.', example='Ecs'),
}

model GetAccessKeyLastUsedIpsResponseBody = {
  ips?: [ 
    {
      detail?: string(name='Detail', description='The event details.', example='{
  "eventId": "239EB588-CD24-522E-B0B5-174A1A58****",
  "eventVersion": 1,
  "eventSource": "ecs.cn-hangzhou.aliyuncs.com",
  "sourceIpAddress": "``10.10.**.**``",
  "eventType": "ApiCall",
  "userIdentity": {
    "accountId": "104758519118****",
    "principalId": "24549429003625****",
    "type": "ram-user",
    "userName": "alice"
  },
  "serviceName": "Ecs",
  "apiVersion": "2016-01-20",
  "requestId": "239EB588-CD24-522E-B0B5-174A1A588BE0",
  "eventTime": "2021-08-05T09:21:32Z",
  "isGlobal": false,
  "acsRegion": "cn-hangzhou",
  "eventName": "DescribeInstances"
}'),
      ip?: string(name='Ip', description='The IP address.', example='``10.10.**.**``'),
      source?: string(name='Source', description='The event source.

Valid values:

*   Internal: other events.
*   ManagementEvent: management events.
*   DataEvent: data events.', example='ManagementEvent'),
      usedTimestamp?: long(name='UsedTimestamp', description='The timestamp when the IP address was used. Unit: milliseconds.', example='1657247532000'),
    }
  ](name='Ips', description='The IP addresses.

This parameter is required.'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  requestId?: string(name='RequestId', description='The request ID.

This parameter is required.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
}

model GetAccessKeyLastUsedIpsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAccessKeyLastUsedIpsResponseBody(name='body'),
}

/**
 * @summary Queries the information about the IP addresses that are most recently used when an AccessKey pair is called to access Alibaba Cloud services.
 *
 * @description You can call this operation to query only the information about the IP addresses that are most recently used within 400 days after February 1, 2022 when a specified AccessKey pair is called to access Alibaba Cloud services. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedIpsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAccessKeyLastUsedIpsResponse
 */
@context("getAccessKeyLastUsedIpsWithContext")
async function getAccessKeyLastUsedIpsWithOptions(request: GetAccessKeyLastUsedIpsRequest, runtime: $RuntimeOptions): GetAccessKeyLastUsedIpsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.accessKey)) {
    query['AccessKey'] = request.accessKey;
  }
  if (!$isNull(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!$isNull(request.serviceName)) {
    query['ServiceName'] = request.serviceName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAccessKeyLastUsedIps',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about the IP addresses that are most recently used when an AccessKey pair is called to access Alibaba Cloud services.
 *
 * @description You can call this operation to query only the information about the IP addresses that are most recently used within 400 days after February 1, 2022 when a specified AccessKey pair is called to access Alibaba Cloud services. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedIpsRequest
 * @return GetAccessKeyLastUsedIpsResponse
 */
async function getAccessKeyLastUsedIps(request: GetAccessKeyLastUsedIpsRequest): GetAccessKeyLastUsedIpsResponse {
  var runtime = new $RuntimeOptions{};
  return getAccessKeyLastUsedIpsWithOptions(request, runtime);
}

model GetAccessKeyLastUsedProductsRequest {
  accessKey?: string(name='AccessKey', description='The AccessKey ID.

This parameter is required.', example='LTAI****************'),
}

model GetAccessKeyLastUsedProductsResponseBody = {
  products?: [ 
    {
      detail?: string(name='Detail', description='The event details.', example='{
  "eventId": "239EB588-CD24-522E-B0B5-174A1A58****",
  "eventVersion": 1,
  "eventSource": "ecs.cn-hangzhou.aliyuncs.com",
  "sourceIpAddress": "``10.10.**.**``",
  "eventType": "ApiCall",
  "userIdentity": {
    "accountId": "104758519118****",
    "principalId": "24549429003625****",
    "type": "ram-user",
    "userName": "alice"
  },
  "serviceName": "Ecs",
  "apiVersion": "2016-01-20",
  "requestId": "239EB588-CD24-522E-B0B5-174A1A588BE0",
  "eventTime": "2021-08-05T09:21:32Z",
  "isGlobal": false,
  "acsRegion": "cn-hangzhou",
  "eventName": "DescribeInstances"
}'),
      serviceName?: string(name='ServiceName', description='The Alibaba Cloud service.', example='Ecs'),
      serviceNameCn?: string(name='ServiceNameCn', description='The Chinese name of the Alibaba Cloud service.', example='Elastic Compute Service (ECS)'),
      serviceNameEn?: string(name='ServiceNameEn', description='The English name of the Alibaba Cloud service.', example='Elastic Compute Service'),
      source?: string(name='Source', description='The event source.

Valid values:

*   Internal

    <!-- -->

    :

    <!-- -->

    other events

    <!-- -->

*   ManagementEvent

    <!-- -->

    :

    <!-- -->

    management events

    <!-- -->

*   DataEvent

    <!-- -->

    :

    <!-- -->

    data events

    <!-- -->', example='ManagementEvent'),
      usedTimestamp?: long(name='UsedTimestamp', description='A pagination token. It can be used in the next request to retrieve a new page of results. Unit: millisecond.', example='1657247532000'),
    }
  ](name='Products', description='The list of returned Alibaba Cloud services.

This parameter is required.'),
  requestId?: string(name='RequestId', description='The request ID.

This parameter is required.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
}

model GetAccessKeyLastUsedProductsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAccessKeyLastUsedProductsResponseBody(name='body'),
}

/**
 * @summary Queries the information about the Alibaba Cloud services that are most recently accessed by using a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about Alibaba Cloud services that are most recently accessed by using a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedProductsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAccessKeyLastUsedProductsResponse
 */
@context("getAccessKeyLastUsedProductsWithContext")
async function getAccessKeyLastUsedProductsWithOptions(request: GetAccessKeyLastUsedProductsRequest, runtime: $RuntimeOptions): GetAccessKeyLastUsedProductsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.accessKey)) {
    query['AccessKey'] = request.accessKey;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAccessKeyLastUsedProducts',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about the Alibaba Cloud services that are most recently accessed by using a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about Alibaba Cloud services that are most recently accessed by using a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedProductsRequest
 * @return GetAccessKeyLastUsedProductsResponse
 */
async function getAccessKeyLastUsedProducts(request: GetAccessKeyLastUsedProductsRequest): GetAccessKeyLastUsedProductsResponse {
  var runtime = new $RuntimeOptions{};
  return getAccessKeyLastUsedProductsWithOptions(request, runtime);
}

model GetAccessKeyLastUsedResourcesRequest {
  accessKey?: string(name='AccessKey', description='The AccessKey ID.

This parameter is required.', example='LTAI****************'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.

> The request parameters must be the same as those of the last request.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  pageSize?: string(name='PageSize', description='The number of entries per page.

*   Valid values: 0 to 100.
*   Default value: 20.', example='20'),
  serviceName?: string(name='ServiceName', description='The Alibaba Cloud service. For more information about the Alibaba Cloud services supported by ActionTrail, see [Supported Alibaba Cloud services](https://help.aliyun.com/document_detail/28829.html).

This parameter is required.', example='Ecs'),
}

model GetAccessKeyLastUsedResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  requestId?: string(name='RequestId', description='The request ID.

This parameter is required.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
  resources?: [ 
    {
      detail?: string(name='Detail', description='The event details.', example='{
  "eventId": "239EB588-CD24-522E-B0B5-174A1A58****",
  "eventVersion": 1,
  "eventSource": "ecs.cn-hangzhou.aliyuncs.com",
  "sourceIpAddress": "``10.10.**.**``",
  "eventType": "ApiCall",
  "userIdentity": {
    "accountId": "104758519118****",
    "principalId": "24549429003625****",
    "type": "ram-user",
    "userName": "alice"
  },
  "serviceName": "Ecs",
  "apiVersion": "2016-01-20",
  "requestId": "239EB588-CD24-522E-B0B5-174A1A588BE0",
  "eventTime": "2021-08-05T09:21:32Z",
  "isGlobal": false,
  "acsRegion": "cn-hangzhou",
  "eventName": "DescribeInstances"
}'),
      resourceName?: string(name='ResourceName', description='The resource name.', example='i-bp1ltva99x1a****'),
      resourceType?: string(name='ResourceType', description='The resource type.', example='ACS::ECS::Instance'),
      source?: string(name='Source', description='The event source.

Valid values:

*   Internal

    <!-- -->

    :

    <!-- -->

    other events

    <!-- -->

*   ManagementEvent

    <!-- -->

    :

    <!-- -->

    management events

    <!-- -->

*   DataEvent

    <!-- -->

    :

    <!-- -->

    data events

    <!-- -->', example='ManagementEvent'),
      usedTimestamp?: long(name='UsedTimestamp', description='The timestamp when the resource was used. Unit: millisecond.', example='1657247532000'),
    }
  ](name='Resources', description='The list of returned resources.

This parameter is required.'),
}

model GetAccessKeyLastUsedResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAccessKeyLastUsedResourcesResponseBody(name='body'),
}

/**
 * @summary Queries the information about the resources that are most recently accessed by using a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about resources that are most recently accessed by using a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedResourcesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAccessKeyLastUsedResourcesResponse
 */
@context("getAccessKeyLastUsedResourcesWithContext")
async function getAccessKeyLastUsedResourcesWithOptions(request: GetAccessKeyLastUsedResourcesRequest, runtime: $RuntimeOptions): GetAccessKeyLastUsedResourcesResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.accessKey)) {
    query['AccessKey'] = request.accessKey;
  }
  if (!$isNull(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!$isNull(request.serviceName)) {
    query['ServiceName'] = request.serviceName;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAccessKeyLastUsedResources',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the information about the resources that are most recently accessed by using a specified AccessKey pair.
 *
 * @description You can call this operation to query only the information about resources that are most recently accessed by using a specified AccessKey pair within 400 days after February 1, 2022. Data is updated at 1-hour intervals, which can cause query latency. We recommend that you do not change an AccessKey pair unless required.
 *
 * @param request GetAccessKeyLastUsedResourcesRequest
 * @return GetAccessKeyLastUsedResourcesResponse
 */
async function getAccessKeyLastUsedResources(request: GetAccessKeyLastUsedResourcesRequest): GetAccessKeyLastUsedResourcesResponse {
  var runtime = new $RuntimeOptions{};
  return getAccessKeyLastUsedResourcesWithOptions(request, runtime);
}

model GetAdvancedQueryTemplateRequest {
  templateId?: string(name='TemplateId', description='This parameter is required.', example='utpl-N9fpjnFBSWauSXhVNP3erw'),
}

model GetAdvancedQueryTemplateResponseBody = {
  requestId?: string(name='RequestId', example='32110C73-0004-5141-9DA7-4B8045C8173A'),
  simpleQuery?: boolean(name='SimpleQuery', example='false'),
  templateId?: string(name='TemplateId', example='utpl-N9fpjnFBSWauSXhVNP3erw'),
  templateName?: string(name='TemplateName'),
  templateSql?: string(name='TemplateSql', example='event.userIdentity.type: root-account AND event.userIdentity.accessKeyId: *'),
}

model GetAdvancedQueryTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetAdvancedQueryTemplateResponseBody(name='body'),
}

/**
 * @summary 查询单个高级查询模板
 *
 * @param request GetAdvancedQueryTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetAdvancedQueryTemplateResponse
 */
@context("getAdvancedQueryTemplateWithContext")
async function getAdvancedQueryTemplateWithOptions(request: GetAdvancedQueryTemplateRequest, runtime: $RuntimeOptions): GetAdvancedQueryTemplateResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetAdvancedQueryTemplate',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询单个高级查询模板
 *
 * @param request GetAdvancedQueryTemplateRequest
 * @return GetAdvancedQueryTemplateResponse
 */
async function getAdvancedQueryTemplate(request: GetAdvancedQueryTemplateRequest): GetAdvancedQueryTemplateResponse {
  var runtime = new $RuntimeOptions{};
  return getAdvancedQueryTemplateWithOptions(request, runtime);
}

model GetDeliveryHistoryJobRequest {
  jobId?: long(name='JobId', description='The ID of the historical event delivery task.

This parameter is required.', example='16602'),
}

model GetDeliveryHistoryJobResponseBody = {
  createdTime?: string(name='CreatedTime', description='The time when the task was created.', example='2021-05-27T07:15:03Z'),
  endTime?: string(name='EndTime', description='The time when the task ended.', example='2021-05-27T07:20:03Z'),
  homeRegion?: string(name='HomeRegion', description='The home region of the trail.', example='cn-hangzhou'),
  jobId?: long(name='JobId', description='The ID of the task.', example='16602'),
  jobStatus?: int32(name='JobStatus', description='The task status. Valid values:

*   0: The task is initializing.
*   1: The task is delivering historical events.
*   2: The task is complete.
*   3: The task fails.', example='2'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='FAFEC427-A00D-5653-B837-D0FA52220D8C'),
  startTime?: string(name='StartTime', description='The time when the task started.', example='2021-02-26T07:15:03Z'),
  status?: [ 
    {
      region?: string(name='Region', description='The ID of the region.', example='cn-hangzhou'),
      status?: int32(name='Status', description='The task status in each region. Valid values:

*   0: The task is initializing.
*   1: The task is delivering historical events.
*   2: The task is complete.
*   3: The task fails.', example='2'),
    }
  ](name='Status', description='A list of task statuses in each region.'),
  trailName?: string(name='TrailName', description='The name of the trail based on which the task delivers events.', example='trail-name'),
  updatedTime?: string(name='UpdatedTime', description='The time when the task was updated.', example='2021-05-27T07:28:47Z'),
}

model GetDeliveryHistoryJobResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetDeliveryHistoryJobResponseBody(name='body'),
}

/**
 * @summary Queries the details of a data backfill task.
 *
 * @description This topic provides an example on how to query the details of a data backfill task whose ID is `16602`. The return result shows that historical events for a trail named `trail-name` are delivered to Simple Log Service and the task is complete.
 *
 * @param request GetDeliveryHistoryJobRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetDeliveryHistoryJobResponse
 */
@context("getDeliveryHistoryJobWithContext")
async function getDeliveryHistoryJobWithOptions(request: GetDeliveryHistoryJobRequest, runtime: $RuntimeOptions): GetDeliveryHistoryJobResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.jobId)) {
    query['JobId'] = request.jobId;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetDeliveryHistoryJob',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the details of a data backfill task.
 *
 * @description This topic provides an example on how to query the details of a data backfill task whose ID is `16602`. The return result shows that historical events for a trail named `trail-name` are delivered to Simple Log Service and the task is complete.
 *
 * @param request GetDeliveryHistoryJobRequest
 * @return GetDeliveryHistoryJobResponse
 */
async function getDeliveryHistoryJob(request: GetDeliveryHistoryJobRequest): GetDeliveryHistoryJobResponse {
  var runtime = new $RuntimeOptions{};
  return getDeliveryHistoryJobWithOptions(request, runtime);
}

model GetGlobalEventsStorageRegionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='0474CD9D-DF37-55D4-8383-D978CFBE13A4'),
  storageRegion?: string(name='StorageRegion', description='The region where global events are stored.

Valid values:

*   ap-southeast-1

    <!-- -->

    :

    <!-- -->

    the Singapore region

    <!-- -->

*   cn-hangzhou

    <!-- -->

    :

    <!-- -->

    the China (Hangzhou) region

    <!-- -->', example='cn-hangzhou'),
}

model GetGlobalEventsStorageRegionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetGlobalEventsStorageRegionResponseBody(name='body'),
}

/**
 * @summary Queries the region where global events are stored.
 *
 * @description By default, global events are stored in the Singapore region.
 * To obtain the permissions to call the API operation, you must submit a ticket.
 *
 * @param request GetGlobalEventsStorageRegionRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetGlobalEventsStorageRegionResponse
 */
async function getGlobalEventsStorageRegionWithOptions(runtime: $RuntimeOptions): GetGlobalEventsStorageRegionResponse {
  var req = new OpenApiUtil.OpenApiRequest{};
  var params = new OpenApiUtil.Params{
    action = 'GetGlobalEventsStorageRegion',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'GET',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the region where global events are stored.
 *
 * @description By default, global events are stored in the Singapore region.
 * To obtain the permissions to call the API operation, you must submit a ticket.
 *
 * @return GetGlobalEventsStorageRegionResponse
 */
async function getGlobalEventsStorageRegion(): GetGlobalEventsStorageRegionResponse {
  var runtime = new $RuntimeOptions{};
  return getGlobalEventsStorageRegionWithOptions(runtime);
}

model GetGovernanceMetricsResponseBody = {
  data?: {
    accountId?: string(name='AccountId', example='195622768501****'),
    governanceMetrics?: [ 
      {
        columnsSchema?: string(name='ColumnsSchema', example='{
    "trailName": "trail-test",
    "homeRegion": "cn-hangzhou",
    "trailRegion": "All",
    "trailStatus": "Enable",
    "eventRW": "All",
    "isOrganizationTrail": false,
    "ossDeliveryStatus": "normal",
    "deliveryObjectLifeCycle": "999",
    "ossBucketLifeCycle": "999",
    "trailTotal": 100
}'),
        governanceItem?: string(name='GovernanceItem', example='actiontrail_storage_audit_log'),
        governanceScore?: string(name='GovernanceScore', example='100'),
      }
    ](name='GovernanceMetrics'),
  }(name='Data'),
  requestId?: string(name='RequestId', example='145318BE-DEE1-4C57-AA7C-5BE7D34A****'),
}

model GetGovernanceMetricsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetGovernanceMetricsResponseBody(name='body'),
}

/**
 * @summary 操作审计成熟度查询接口
 *
 * @param request GetGovernanceMetricsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetGovernanceMetricsResponse
 */
async function getGovernanceMetricsWithOptions(runtime: $RuntimeOptions): GetGovernanceMetricsResponse {
  var req = new OpenApiUtil.OpenApiRequest{};
  var params = new OpenApiUtil.Params{
    action = 'GetGovernanceMetrics',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 操作审计成熟度查询接口
 *
 * @return GetGovernanceMetricsResponse
 */
async function getGovernanceMetrics(): GetGovernanceMetricsResponse {
  var runtime = new $RuntimeOptions{};
  return getGovernanceMetricsWithOptions(runtime);
}

model GetTrailStatusRequest {
  isOrganizationTrail?: boolean(name='IsOrganizationTrail', description='Specifies whether to query the status of a multi-account trail. Valid values:

*   true: Query the status of a multi-account trail.
*   false: Query the status of a single-account trail. It is the default value.', example='false'),
  name?: string(name='Name', description='The name of the trail.

The name must be 6 to 36 characters in length. The name must start with a lowercase letter and can contain lowercase letters, digits, hyphens (-), and underscores (_).

> The name must be unique within your Alibaba Cloud account.

This parameter is required.', example='trail-test'),
}

model GetTrailStatusResponseBody = {
  isLogging?: boolean(name='IsLogging', description='Indicates whether logging is enabled for the trail. Valid values:

*   true
*   false', example='true'),
  latestDeliveryError?: string(name='LatestDeliveryError', description='The log of the last failed delivery.', example='write sls failed, exception: the parent of sub user must be project owner, itemscount: 1'),
  latestDeliveryLogServiceError?: string(name='LatestDeliveryLogServiceError', description='The log of the last failed delivery to Log Service.', example='write sls failed, exception: the parent of sub user must be project owner, itemscount: 1'),
  latestDeliveryLogServiceTime?: string(name='LatestDeliveryLogServiceTime', description='The most recent time when an event was delivered to Log Service.', example='2021-02-26T09:19:44Z'),
  latestDeliveryTime?: string(name='LatestDeliveryTime', description='The most recent time when an event was delivered by the trail.', example='2021-02-26T09:19:44Z'),
  ossBucketStatus?: boolean(name='OssBucketStatus', description='Indicates whether the destination Object Storage Service (OSS) bucket is available. Valid values:

*   true
*   false', example='true'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='8067369B-B923-4D26-85BC-61BF33922505'),
  slsLogStoreStatus?: boolean(name='SlsLogStoreStatus', description='Indicates whether the destination Log Service Logstore is available. Valid values:

*   true
*   false', example='true'),
  startLoggingTime?: string(name='StartLoggingTime', description='The time when logging was last enabled for the trail.', example='2021-02-24T09:19:44Z'),
  stopLoggingTime?: string(name='StopLoggingTime', description='The time when logging was last disabled for the trail.', example='2021-02-25T09:19:44Z'),
}

model GetTrailStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetTrailStatusResponseBody(name='body'),
}

/**
 * @summary Queries the status of a trail.
 *
 * @description This topic describes how to query the status of a sample single-account trail named `trail-test`.
 *
 * @param request GetTrailStatusRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return GetTrailStatusResponse
 */
@context("getTrailStatusWithContext")
async function getTrailStatusWithOptions(request: GetTrailStatusRequest, runtime: $RuntimeOptions): GetTrailStatusResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.isOrganizationTrail)) {
    query['IsOrganizationTrail'] = request.isOrganizationTrail;
  }
  if (!$isNull(request.name)) {
    query['Name'] = request.name;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'GetTrailStatus',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries the status of a trail.
 *
 * @description This topic describes how to query the status of a sample single-account trail named `trail-test`.
 *
 * @param request GetTrailStatusRequest
 * @return GetTrailStatusResponse
 */
async function getTrailStatus(request: GetTrailStatusRequest): GetTrailStatusResponse {
  var runtime = new $RuntimeOptions{};
  return getTrailStatusWithOptions(request, runtime);
}

model ListDataEventServicesRequest {
  maxResults?: int32(name='MaxResults', example='20'),
  nextToken?: string(name='NextToken', example='VjE6dLbnNpVmbz06****'),
}

model ListDataEventServicesResponseBody = {
  data?: {
    maxResults?: int32(name='MaxResults', example='20'),
    nextToken?: string(name='NextToken', example='VjE6bHJlTGoxdm1M****'),
    serviceInfos?: [ 
      {
        eventNames?: [ string ](name='EventNames'),
        serviceName?: string(name='ServiceName', example='Cms'),
      }
    ](name='ServiceInfos'),
  }(name='Data'),
  requestId?: string(name='RequestId', example='851038F3-33AB-4C49-97D7-6AB37D35****'),
}

model ListDataEventServicesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListDataEventServicesResponseBody(name='body'),
}

/**
 * @summary 查询数据事件支持的服务与事件名称
 *
 * @param request ListDataEventServicesRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListDataEventServicesResponse
 */
@context("listDataEventServicesWithContext")
async function listDataEventServicesWithOptions(request: ListDataEventServicesRequest, runtime: $RuntimeOptions): ListDataEventServicesResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!$isNull(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'ListDataEventServices',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 查询数据事件支持的服务与事件名称
 *
 * @param request ListDataEventServicesRequest
 * @return ListDataEventServicesResponse
 */
async function listDataEventServices(request: ListDataEventServicesRequest): ListDataEventServicesResponse {
  var runtime = new $RuntimeOptions{};
  return listDataEventServicesWithOptions(request, runtime);
}

model ListDeliveryHistoryJobsRequest {
  pageNumber?: int32(name='PageNumber', description='The page number.

*   Pages start from page 1.
*   Default value: 1.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

*   Valid values: 1 to 100.
*   Default value: 20.', example='20'),
}

model ListDeliveryHistoryJobsResponseBody = {
  deliveryHistoryJobs?: [ 
    {
      createdTime?: string(name='CreatedTime', description='The time when the task was created.', example='2021-04-26T03:17:04Z'),
      endTime?: string(name='EndTime', description='The time when the task ended.', example='2021-04-26T03:22:04Z'),
      homeRegion?: string(name='HomeRegion', description='The home region of the trail.', example='cn-hangzhou'),
      jobId?: long(name='JobId', description='The task ID.', example='16602'),
      jobStatus?: int32(name='JobStatus', description='The task status. Valid values:

*   0: The task is initializing.
*   1: The task is delivering historical events.
*   2: The task is complete.
*   3: The task fails.', example='2'),
      startTime?: string(name='StartTime', description='The time when the task started.', example='2021-01-26T03:17:04Z'),
      trailName?: string(name='TrailName', description='The name of the trail.', example='trail-name'),
      updatedTime?: string(name='UpdatedTime', description='The time when the task was updated.', example='2021-04-26T03:20:08Z'),
    }
  ](name='DeliveryHistoryJobs', description='The list of historical event delivery tasks.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='20'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B190816C-6DCA-4DC5-9B8E-EE0367B57CFF'),
  totalCount?: int32(name='TotalCount', description='The number of historical event delivery tasks returned.', example='1'),
}

model ListDeliveryHistoryJobsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListDeliveryHistoryJobsResponseBody(name='body'),
}

/**
 * @summary Queries a list of data backfill tasks.
 *
 * @description This topic provides an example on how to query a list of data backfill tasks. The returned result shows that a data backfill task with the ID `16602` is used to deliver historical events for a trail named `trail-name` to Simple Log Service.
 *
 * @param request ListDeliveryHistoryJobsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return ListDeliveryHistoryJobsResponse
 */
@context("listDeliveryHistoryJobsWithContext")
async function listDeliveryHistoryJobsWithOptions(request: ListDeliveryHistoryJobsRequest, runtime: $RuntimeOptions): ListDeliveryHistoryJobsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!$isNull(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'ListDeliveryHistoryJobs',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries a list of data backfill tasks.
 *
 * @description This topic provides an example on how to query a list of data backfill tasks. The returned result shows that a data backfill task with the ID `16602` is used to deliver historical events for a trail named `trail-name` to Simple Log Service.
 *
 * @param request ListDeliveryHistoryJobsRequest
 * @return ListDeliveryHistoryJobsResponse
 */
async function listDeliveryHistoryJobs(request: ListDeliveryHistoryJobsRequest): ListDeliveryHistoryJobsResponse {
  var runtime = new $RuntimeOptions{};
  return listDeliveryHistoryJobsWithOptions(request, runtime);
}

model LookupEventsRequest {
  direction?: string(name='Direction', description='The order in which details of events are to be retrieved. Valid values:

*   FORWARD: ascending order.
*   BACKWARD: descending order. This is the default value.', example='BACKWARD'),
  endTime?: string(name='EndTime', description='The end of the time range to query. The default time is the current time. Specify the time in the ISO 8601 standard in the `YYYY-MM-DDThh:mm:ssZ` format. The time must be in UTC.', example='2020-10-15T11:00:00Z'),
  lookupAttribute?: [ 
    {
      key?: string(name='Key', description='The key of the query condition. Valid values:

*  ServiceName: the name of a specific Alibaba Cloud service.
*  EventName: the name of a specific event.
*  User: the name of the RAM user who calls a specific operation.
*  EventId: the ID of a specific event.
*  ResourceType: the type of resources.
*   ResourceName: the name of a specific resource.
*   EventRW: the read/write type of events.
*  EventAccessKeyId: the AccessKey ID used in events.

> You can use only one query condition for each query.', example='ServiceName'),
      value?: string(name='Value', description='The value of the query condition. Valid values:

*   When the LookupAttribute.N.Key parameter is set to ServiceName, you can set this parameter to a value such as `Ecs`.
*   When the LookupAttribute.N.Key parameter is set to EventName, you can set this parameter to a value such as `ConsoleSignin`.
*   When the LookupAttribute.N.Key parameter is set to User, you can set this parameter to a value such as `Alice`.
*   When the LookupAttribute.N.Key parameter is set to EventId, you can set this parameter to a value such as `B702AFA3-FD4B-40E3-88E4-C0752FAA****`.
*   When the LookupAttribute.N.Key parameter is set to ResourceType, you can set this parameter to a value such as `ACS::ECS::Instance`.
*   When the LookupAttribute.N.Key parameter is set to ResourceName, you can set this parameter to a value such as `i-bp14664y88udkt45****`.
*   When the LookupAttribute.N.Key parameter is set to EventRW, you can set this parameter to `Read` or `Write`.
*   When the LookupAttribute.N.Key parameter is set to EventAccessKeyId, you can set this parameter to a value such as `LTAI****************`.', example='Ecs'),
    }
  ](name='LookupAttribute', description='Query conditions.'),
  maxResults?: string(name='MaxResults', description='The maximum number of entries to be returned.

Valid values: 0 to 50.', example='20'),
  nextToken?: string(name='NextToken', description='The token used to request the next page of query results.

> The request parameters must be the same as those of the last request.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  startTime?: string(name='StartTime', description='The beginning of the time range to query. The default time is seven days prior to the current time. Specify the time in the ISO 8601 standard in the `YYYY-MM-DDThh:mm:ssZ` format. The time must be in UTC.', example='2020-10-08T11:00:00Z'),
}

model LookupEventsResponseBody = {
  endTime?: string(name='EndTime', description='The end of the time range when event details were queried.', example='2020-07-22T14:00:00Z'),
  events?: [  map[string]any ](name='Events', description='The returned event details.

For more information about the fields in an event log, see [ActionTrail event log reference](https://help.aliyun.com/document_detail/28819.html).'),
  nextToken?: string(name='NextToken', description='The token used to return the next page of query results.

> This parameter is not returned if no more results are to be returned.', example='eyJhY2NvdW50IjoiMTQyNDM3OTU4NjM4NzE2MSIsImV2ZW50SWQiOiI3MkJDRTExRi02OTU3LTQ0NUItQjY0MC1CNEUyMkM4NUEwQzgiLCJsb2dJZCI6IjgyLTE0MjQzNzk1ODYzODcxNjEiLCJ0aW1lIjoxNjAyMzExNTQwMD****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='FD79665A-CE8B-49D4-82E6-5EE2E0E791DD'),
  startTime?: string(name='StartTime', description='The beginning of the time range when event details were queried.', example='2020-07-15T14:00:00Z'),
}

model LookupEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: LookupEventsResponseBody(name='body'),
}

/**
 * @summary Queries event details.
 *
 * @description When you call this operation to query event details, you can query the event details at most twice per second.
 * > Do not frequently call this operation. You can create a trail to deliver events to Log Service. Then, you can query event details in near real time by using the real-time log consumption feature of Log Service. For more information, see [Create a single-account trail](https://help.aliyun.com/document_detail/28810.html), [Create a multi-account trail](https://help.aliyun.com/document_detail/160661.html), and [Overview](https://help.aliyun.com/document_detail/28997.html).
 *
 * @param request LookupEventsRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return LookupEventsResponse
 */
@context("lookupEventsWithContext")
async function lookupEventsWithOptions(request: LookupEventsRequest, runtime: $RuntimeOptions): LookupEventsResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.direction)) {
    query['Direction'] = request.direction;
  }
  if (!$isNull(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!$isNull(request.lookupAttribute)) {
    query['LookupAttribute'] = request.lookupAttribute;
  }
  if (!$isNull(request.maxResults)) {
    query['MaxResults'] = request.maxResults;
  }
  if (!$isNull(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!$isNull(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'LookupEvents',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Queries event details.
 *
 * @description When you call this operation to query event details, you can query the event details at most twice per second.
 * > Do not frequently call this operation. You can create a trail to deliver events to Log Service. Then, you can query event details in near real time by using the real-time log consumption feature of Log Service. For more information, see [Create a single-account trail](https://help.aliyun.com/document_detail/28810.html), [Create a multi-account trail](https://help.aliyun.com/document_detail/160661.html), and [Overview](https://help.aliyun.com/document_detail/28997.html).
 *
 * @param request LookupEventsRequest
 * @return LookupEventsResponse
 */
async function lookupEvents(request: LookupEventsRequest): LookupEventsResponse {
  var runtime = new $RuntimeOptions{};
  return lookupEventsWithOptions(request, runtime);
}

model StartLoggingRequest {
  name?: string(name='Name', description='The name of the trail that you want to enable.

The name must be 6 to 36 characters in length, and can contain lowercase letters, digits, hyphens (-), and underscores (_). It must start with a lowercase letter.

> The name must be unique within your Alibaba Cloud account.

This parameter is required.', example='trail-test'),
}

model StartLoggingResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
}

model StartLoggingResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartLoggingResponseBody(name='body'),
}

/**
 * @summary Enables a trail to deliver events to an Object Storage Service (OSS) bucket or a Simple Log Service Logstore.
 *
 * @description This topic describes how to enable logging for a sample trail named `trail-test`.
 *
 * @param request StartLoggingRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return StartLoggingResponse
 */
@context("startLoggingWithContext")
async function startLoggingWithOptions(request: StartLoggingRequest, runtime: $RuntimeOptions): StartLoggingResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.name)) {
    query['Name'] = request.name;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'StartLogging',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Enables a trail to deliver events to an Object Storage Service (OSS) bucket or a Simple Log Service Logstore.
 *
 * @description This topic describes how to enable logging for a sample trail named `trail-test`.
 *
 * @param request StartLoggingRequest
 * @return StartLoggingResponse
 */
async function startLogging(request: StartLoggingRequest): StartLoggingResponse {
  var runtime = new $RuntimeOptions{};
  return startLoggingWithOptions(request, runtime);
}

model StopLoggingRequest {
  name?: string(name='Name', description='The name of the trail that you want to disable.

The name must be 6 to 36 characters in length, and can contain lowercase letters, digits, hyphens (-), and underscores (_). It must start with a lowercase letter.

> The name must be unique within your Alibaba Cloud account.

This parameter is required.', example='trail-test'),
}

model StopLoggingResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='1C488B66-B819-4D14-8711-C4EAAA13AC01'),
}

model StopLoggingResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopLoggingResponseBody(name='body'),
}

/**
 * @summary Disables a trail to stop the delivery of events to an Object Storage Service (OSS) bucket or a  Simple Log Service Logstore.
 *
 * @description This topic describes how to disable logging for a sample trail named `trail-test`.
 *
 * @param request StopLoggingRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return StopLoggingResponse
 */
@context("stopLoggingWithContext")
async function stopLoggingWithOptions(request: StopLoggingRequest, runtime: $RuntimeOptions): StopLoggingResponse {
  request.validate();
  var query = OpenApiUtil.query(request.toMap());
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'StopLogging',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'GET',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Disables a trail to stop the delivery of events to an Object Storage Service (OSS) bucket or a  Simple Log Service Logstore.
 *
 * @description This topic describes how to disable logging for a sample trail named `trail-test`.
 *
 * @param request StopLoggingRequest
 * @return StopLoggingResponse
 */
async function stopLogging(request: StopLoggingRequest): StopLoggingResponse {
  var runtime = new $RuntimeOptions{};
  return stopLoggingWithOptions(request, runtime);
}

model UpdateAdvancedQueryTemplateRequest {
  simpleQuery?: boolean(name='SimpleQuery', description='This parameter is required.', example='false'),
  templateId?: string(name='TemplateId', description='This parameter is required.', example='x4a0Tw5dQy2J6IRJxf4kng'),
  templateName?: string(name='TemplateName'),
  templateSql?: string(name='TemplateSql', example='event.eventName: ConsoleSignin AND event.userIdentity.type: root-account'),
}

model UpdateAdvancedQueryTemplateResponseBody = {
  requestId?: string(name='RequestId', example='145318BE-DEE1-4C57-AA7C-5BE7D34A6AE0'),
  simpleQuery?: string(name='SimpleQuery', example='true'),
  templateId?: string(name='TemplateId', example='utpl-QNL3dpYkQcyjZxrIQCciqQ'),
  templateName?: string(name='TemplateName'),
  templateSql?: string(name='TemplateSql', example='event.userIdentity.type: root-account AND event.userIdentity.accessKeyId: *'),
}

model UpdateAdvancedQueryTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateAdvancedQueryTemplateResponseBody(name='body'),
}

/**
 * @summary 更新高级查询模板
 *
 * @param request UpdateAdvancedQueryTemplateRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UpdateAdvancedQueryTemplateResponse
 */
@context("updateAdvancedQueryTemplateWithContext")
async function updateAdvancedQueryTemplateWithOptions(request: UpdateAdvancedQueryTemplateRequest, runtime: $RuntimeOptions): UpdateAdvancedQueryTemplateResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.simpleQuery)) {
    query['SimpleQuery'] = request.simpleQuery;
  }
  if (!$isNull(request.templateId)) {
    query['TemplateId'] = request.templateId;
  }
  if (!$isNull(request.templateName)) {
    query['TemplateName'] = request.templateName;
  }
  if (!$isNull(request.templateSql)) {
    query['TemplateSql'] = request.templateSql;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'UpdateAdvancedQueryTemplate',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary 更新高级查询模板
 *
 * @param request UpdateAdvancedQueryTemplateRequest
 * @return UpdateAdvancedQueryTemplateResponse
 */
async function updateAdvancedQueryTemplate(request: UpdateAdvancedQueryTemplateRequest): UpdateAdvancedQueryTemplateResponse {
  var runtime = new $RuntimeOptions{};
  return updateAdvancedQueryTemplateWithOptions(request, runtime);
}

model UpdateGlobalEventsStorageRegionRequest {
  storageRegion?: string(name='StorageRegion', description='The region where you want to store global events.

Valid values:

*   ap-southeast-1

    <!-- -->

    :

    <!-- -->

    the Singapore region

    <!-- -->

*   cn-hangzhou

    <!-- -->

    :

    <!-- -->

    the China (Hangzhou) region

    <!-- -->

This parameter is required.', example='ap-southeast-1'),
}

model UpdateGlobalEventsStorageRegionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D7A0694E-C8FE-574E-92E3-63C5B5D23BD4'),
}

model UpdateGlobalEventsStorageRegionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateGlobalEventsStorageRegionResponseBody(name='body'),
}

/**
 * @summary Specifies the region where you want to store global events.
 *
 * @description By default, global events are stored in the Singapore region.
 * *   To obtain the permissions to call the API operation, you must submit a ticket.
 * *   Only the China (Hangzhou) region (cn-hangzhou) and the Singapore region (ap-southeast-1) are supported.
 *
 * @param request UpdateGlobalEventsStorageRegionRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UpdateGlobalEventsStorageRegionResponse
 */
@context("updateGlobalEventsStorageRegionWithContext")
async function updateGlobalEventsStorageRegionWithOptions(request: UpdateGlobalEventsStorageRegionRequest, runtime: $RuntimeOptions): UpdateGlobalEventsStorageRegionResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.storageRegion)) {
    query['StorageRegion'] = request.storageRegion;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'UpdateGlobalEventsStorageRegion',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Specifies the region where you want to store global events.
 *
 * @description By default, global events are stored in the Singapore region.
 * *   To obtain the permissions to call the API operation, you must submit a ticket.
 * *   Only the China (Hangzhou) region (cn-hangzhou) and the Singapore region (ap-southeast-1) are supported.
 *
 * @param request UpdateGlobalEventsStorageRegionRequest
 * @return UpdateGlobalEventsStorageRegionResponse
 */
async function updateGlobalEventsStorageRegion(request: UpdateGlobalEventsStorageRegionRequest): UpdateGlobalEventsStorageRegionResponse {
  var runtime = new $RuntimeOptions{};
  return updateGlobalEventsStorageRegionWithOptions(request, runtime);
}

model UpdateTrailRequest {
  eventRW?: string(name='EventRW', description='The read/write type of the events to be delivered. Valid values:

*   Write: write events. It is the default value.
*   Read: read events.
*   All: read and write events.', example='All'),
  maxComputeProjectArn?: string(name='MaxComputeProjectArn', description='The ARN of the MaxCompute project to which you want to deliver events.

>  The name of the MaxCompute project must be prefixed with actiontrail_.', example='acs:odps:cn-hangzhou:、151277687691****:project/actiontrail_****'),
  maxComputeWriteRoleArn?: string(name='MaxComputeWriteRoleArn', description='The ARN of the role that is assumed by ActionTrail to deliver events to the destination Simple Log Service project.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the required resources. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter and deliver events to the current account, you must grant the RAM role the permissions on the service-linked role for ActionTrail. If you want to deliver events to other accounts, you must attach a system policy to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::151277687691****:role/aliyunserviceroleforactiontrail'),
  name?: string(name='Name', description='The name of the trail whose configurations you want to update.

The name must be 6 to 36 characters in length and can contain lowercase letters, digits, hyphens (-), and underscores (_). It must start with a lowercase letter.

>  The name must be unique within an Alibaba Cloud account.

This parameter is required.', example='trail-test'),
  ossBucketName?: string(name='OssBucketName', description='The name of the Object Storage Service (OSS) bucket to which you want to deliver events.

The name must be 3 to 63 characters in length. The name must start with a lowercase letter or a digit and can contain lowercase letters, digits, and hyphens (-).

>  Make sure that the bucket exists before you update the configuration of the trail.', example='audit-log'),
  ossKeyPrefix?: string(name='OssKeyPrefix', description='The prefix of the files that are stored in the OSS bucket.

The prefix must be 6 to 32 characters in length. The prefix must start with a letter and can contain letters, digits, hyphens (-), forward slashes (/), and underscores (_).', example='at-product-account-audit-B'),
  ossWriteRoleArn?: string(name='OssWriteRoleArn', description='The Alibaba Cloud Resource Name (ARN) of the RAM role that is assumed by ActionTrail to deliver events to the OSS bucket.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the required resources. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter, you must grant the permissions of the service-linked role that is assumed by ActionTrail to the RAM role before you can deliver events to your Alibaba Cloud account. If you need to deliver events to other Alibaba Cloud accounts, you must attach the permission policy that is used to grant permissions related to event delivery to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  slsProjectArn?: string(name='SlsProjectArn', description='The ARN of the Log Service project to which you want to deliver events.', example='acs:log:cn-shanghai::project/***'),
  slsWriteRoleArn?: string(name='SlsWriteRoleArn', description='The ARN of the RAM role that is assumed by ActionTrail to deliver events to the Log Service project.

*   If you do not specify this parameter, ActionTrail creates a service-linked role to create the corresponding resource. For more information, see [Manage the service-linked role](https://help.aliyun.com/document_detail/169244.html).
*   If you specify this parameter, you must grant the permissions of the service-linked role that is assumed by ActionTrail to the RAM role before you can deliver events to your Alibaba Cloud account. If you need to deliver events to other Alibaba Cloud accounts, you must attach the permission policy that is used to grant permissions related to event delivery to the RAM role. For more information about how to deliver events across Alibaba Cloud accounts, see [Deliver events across Alibaba Cloud accounts](https://help.aliyun.com/document_detail/207462.html).', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  trailRegion?: string(name='TrailRegion', description='The region of the trail.

*   The default value is All, which indicates that the trail delivers events from all regions.

You can also specify specific regions. You can call the [DescribeRegions](https://help.aliyun.com/document_detail/213597.html) operation to query all the supported regions.', example='All'),
}

model UpdateTrailResponseBody = {
  eventRW?: string(name='EventRW', description='The read/write type of the events to be delivered.', example='Write'),
  homeRegion?: string(name='HomeRegion', description='The home region of the trail.', example='cn-hangzhou'),
  maxComputeProjectArn?: string(name='MaxComputeProjectArn', description='ARN of the Big Data Compute Service project for tracking delivery.', example='acs:odps:cn-hangzhou:151266687691****:project/actiontrail_****'),
  maxComputeWriteRoleArn?: string(name='MaxComputeWriteRoleArn', description='The ARN of the role that Operation Audit assumes when delivering operation events to the Big Data Compute Service project.', example='acs:ram::151266687691****:role/aliyunserviceroleforactiontrail'),
  name?: string(name='Name', description='The name of the trail.', example='trail-test'),
  ossBucketName?: string(name='OssBucketName', description='The name of the OSS bucket.', example='audit-log'),
  ossKeyPrefix?: string(name='OssKeyPrefix', description='The prefix of the log files to be stored in the destination OSS bucket.', example='at-product-account-audit-B'),
  ossWriteRoleArn?: string(name='OssWriteRoleArn', description='The ARN of the RAM role that is assumed by ActionTrail to deliver events to the OSS bucket.', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='2599A180-5236-44D8-9490-50B6F4F8BA35'),
  slsProjectArn?: string(name='SlsProjectArn', description='The ARN of the Log Service project to which events are to be delivered.', example='acs:log:cn-hangzhou:151266687691****:project/test-project'),
  slsWriteRoleArn?: string(name='SlsWriteRoleArn', description='The ARN of the RAM role that is assumed by ActionTrail is to deliver events to the Log Service project.', example='acs:ram::***:role/aliyunserviceroleforactiontrail'),
  trailRegion?: string(name='TrailRegion', description='The one or more regions from which the trail delivers events.', example='All'),
}

model UpdateTrailResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UpdateTrailResponseBody(name='body'),
}

/**
 * @summary Updates the configurations of a trail.
 *
 * @description This topic shows you how to change the destination Object Storage Service (OSS) bucket of a sample trail named `trail-test` to `audit-log`.
 *
 * @param request UpdateTrailRequest
 * @param runtime runtime options for this request RuntimeOptions
 * @return UpdateTrailResponse
 */
@context("updateTrailWithContext")
async function updateTrailWithOptions(request: UpdateTrailRequest, runtime: $RuntimeOptions): UpdateTrailResponse {
  request.validate();
  var query = {};
  if (!$isNull(request.eventRW)) {
    query['EventRW'] = request.eventRW;
  }
  if (!$isNull(request.maxComputeProjectArn)) {
    query['MaxComputeProjectArn'] = request.maxComputeProjectArn;
  }
  if (!$isNull(request.maxComputeWriteRoleArn)) {
    query['MaxComputeWriteRoleArn'] = request.maxComputeWriteRoleArn;
  }
  if (!$isNull(request.name)) {
    query['Name'] = request.name;
  }
  if (!$isNull(request.ossBucketName)) {
    query['OssBucketName'] = request.ossBucketName;
  }
  if (!$isNull(request.ossKeyPrefix)) {
    query['OssKeyPrefix'] = request.ossKeyPrefix;
  }
  if (!$isNull(request.ossWriteRoleArn)) {
    query['OssWriteRoleArn'] = request.ossWriteRoleArn;
  }
  if (!$isNull(request.slsProjectArn)) {
    query['SlsProjectArn'] = request.slsProjectArn;
  }
  if (!$isNull(request.slsWriteRoleArn)) {
    query['SlsWriteRoleArn'] = request.slsWriteRoleArn;
  }
  if (!$isNull(request.trailRegion)) {
    query['TrailRegion'] = request.trailRegion;
  }
  var req = new OpenApiUtil.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApiUtil.Params{
    action = 'UpdateTrail',
    version = '2020-07-06',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
 * @summary Updates the configurations of a trail.
 *
 * @description This topic shows you how to change the destination Object Storage Service (OSS) bucket of a sample trail named `trail-test` to `audit-log`.
 *
 * @param request UpdateTrailRequest
 * @return UpdateTrailResponse
 */
async function updateTrail(request: UpdateTrailRequest): UpdateTrailResponse {
  var runtime = new $RuntimeOptions{};
  return updateTrailWithOptions(request, runtime);
}

