/**
  *
  */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'appstream-center';
  @version = '2021-09-03';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model GetConnectionTicketRequest {
  accessType?: string(name='AccessType', example='INTERNET', maxLength=10, position='Body'),
  appId?: string(name='AppId', example='ca-etn4zizgaezo9gis9', position='Body'),
  appInstanceGroupId?: string(name='AppInstanceGroupId', example='aig-bw1o1gcwvd3e1ipeu', position='Body'),
  appInstanceId?: string(name='AppInstanceId', position='Body'),
  appPolicyId?: string(name='AppPolicyId', position='Body'),
  appVersion?: string(name='AppVersion', example='1.0.0.1', position='Body'),
  autoConnectInQueue?: boolean(name='AutoConnectInQueue', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientId?: string(name='ClientId', example='f2463208-ec89-4309-8e8c-8b17acdcab93', position='Body'),
  clientIp?: string(name='ClientIp', example='22.21.2.21', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_"Windows 10 Enterprise LTSC 2019" 10.0 (Build 17763)', position='Body'),
  clientType?: string(name='ClientType', position='Body'),
  clientVersion?: string(name='ClientVersion', example='2.0.1-D-20211008.101607', position='Body'),
  connectionProperties?: string(name='ConnectionProperties', position='Body'),
  endUserId?: string(name='EndUserId', example='test.test', position='Body'),
  environmentConfig?: string(name='EnvironmentConfig', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken?: string(name='LoginToken', example='v1c4e2ef03d620f0f6cb41634196161219054e12d8aa5a13deb9ed14eebb76d674559115ad2e27a57f6820c1fd33e0ca36', position='Body'),
  param?: string(name='Param', example='/home/test/test.jpg', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='CloudApp', position='Body'),
  resourceId?: string(name='ResourceId', position='Body'),
  sessionId?: string(name='SessionId', example='09e2b2e6-3181-4c84-9539-6fc9f1c3199e', position='Body'),
  taskId?: string(name='TaskId', example='6f41731b-7091-4954-80c8-1d1e0b3ebb48', position='Body'),
  tenantId?: string(name='TenantId', example='1126819517152528', position='Body'),
  uuid?: string(name='Uuid', example='A8B35215993FBF283F28D617975204C4', position='Body'),
}

model GetConnectionTicketResponseBody = {
  appInstanceGroupId?: string(name='AppInstanceGroupId', example='aig-53fvrq1oanz6cxzi3'),
  appInstanceId?: string(name='AppInstanceId', example='ai-gc1gemx6vpa6vlync'),
  appInstancePersistentId?: string(name='AppInstancePersistentId'),
  avatarId?: string(name='AvatarId', example='abc'),
  bindQueueInfo?: {
    queueStatus?: string(name='QueueStatus'),
    rank?: int32(name='Rank'),
    readyTimeout?: long(name='ReadyTimeout'),
    remainingTime?: long(name='RemainingTime'),
    requestKey?: string(name='RequestKey'),
    targetId?: string(name='TargetId'),
    waitTime?: long(name='WaitTime'),
  }(name='BindQueueInfo'),
  code?: string(name='Code', example='InternalError.TicketGenInternalError'),
  loginToken?: string(name='LoginToken', example='v15418e331d8d068c29411646996786785303b8f61fd880aeaa50c5b584443cd9e65cc7eec72acdaad0a844666a3b26dab'),
  message?: string(name='Message', example='reenter app instance failed'),
  nextPollIntervalMs?: int32(name='NextPollIntervalMs', example='500'),
  osType?: string(name='OsType', example='Windows'),
  policy?: {
    resolutionAdaptive?: string(name='ResolutionAdaptive'),
    resolutionHeight?: int32(name='ResolutionHeight'),
    resolutionWidth?: int32(name='ResolutionWidth'),
  }(name='Policy'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='Id of the request', example='AD2D0761-1FE5-549D-B169-D3F8D19C6CDD'),
  retryTimes?: int32(name='RetryTimes', example='3'),
  taskId?: string(name='TaskId', example='f3d1b31c-605e-4d04-a896-015fc9fc03b4'),
  taskStatus?: string(name='TaskStatus', example='Running'),
  tenantId?: long(name='TenantId'),
  ticket?: string(name='Ticket', example='n7n9bqZlPrvgUOPSJzfdb$89jWwlVISgrchpY0tOfVYGBBcdoPoH39PVHK63fQTEM14kzajQdWAnHTnSicc35W_eI2LbTSGKquKukwcU7opRwmInhtQH*mlmsZQ3ByOLYVmqI*1hFESs0'),
}

model GetConnectionTicketResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetConnectionTicketResponseBody(name='body'),
}

/**
  * @param request  the request parameters of GetConnectionTicket  GetConnectionTicketRequest
  * @return GetConnectionTicketResponse
 */
async function getConnectionTicket(request: GetConnectionTicketRequest): GetConnectionTicketResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetConnectionTicket', 'POST', '/', 'json', true, 'form', request);
}

model ListPublishedAppInfoRequest {
  appName?: string(name='AppName', example='Microsoft Word', position='Query'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Query'),
  categoryId?: long(name='CategoryId', example='1', position='Query'),
  categoryType?: long(name='CategoryType', example='1', position='Query'),
  clientId?: string(name='ClientId', example='17b38aaa-761f-44c5-9862-2ad0f5025d15', position='Query'),
  clientIp?: string(name='ClientIp', example='125.80.132.13', position='Query'),
  clientOS?: string(name='ClientOS', example='windows_\\"Windows 10 Enterprise\\" 10.0 (Build 14393)', position='Query'),
  clientVersion?: string(name='ClientVersion', example='2.0.1-D-20211008.101607', position='Query'),
  endUserId?: string(name='EndUserId', example='test.test', position='Query'),
  loginRegionId?: string(name='LoginRegionId', example='cn-shanghai', position='Query'),
  loginToken?: string(name='LoginToken', example='v189fa78c1aff77a0483b16497517322299131027b85bb84bbdc0871988ce8296d8fd891e2fdeaded3bd75f81f639acee8', position='Query'),
  orderParam?: string(name='OrderParam', position='Query'),
  productType?: string(name='ProductType', example='CloudApp', position='Query'),
  sessionId?: string(name='SessionId', example='c261a6a1-e242-4f4b-813c-5fe807e49f03', position='Query'),
  sortType?: string(name='SortType', position='Query'),
}

model ListPublishedAppInfoResponseBody = {
  appModels?: [ 
    {
      appCenterImageId?: string(name='AppCenterImageId', example='img-f37nddbjc1lje14st'),
      appId?: string(name='AppId', example='ca-fxwp4koyr5y2sp4mz'),
      appName?: string(name='AppName', example='Microsoft Word'),
      appThemeColor?: string(name='AppThemeColor'),
      appVersion?: string(name='AppVersion', example='R2021a'),
      appVersionName?: string(name='AppVersionName', example='v1.0'),
      authTime?: string(name='AuthTime'),
      categoryId?: long(name='CategoryId', example='2'),
      categoryType?: long(name='CategoryType', example='1'),
      iconUrl?: string(name='IconUrl', example='https://app-streaming-icon-prod-shanghai.oss-cn-shanghai.aliyuncs.com/tenant/1973619010349344/1634523814270_Matlab.png'),
      isAuth?: boolean(name='IsAuth', example='True'),
      usedInSession?: boolean(name='UsedInSession', example='True'),
    }
  ](name='AppModels', description='appModels'),
  nextToken?: string(name='NextToken', example='2NVfhLfgy5b3J5iJyoLQ6x4EULMg1hbhgB9NfnvdK9oj5zwxd17j4TuQkZze3RvhEvBinZYjknujF3Q1M'),
  requestId?: string(name='RequestId', description='Id of the request', example='DB70F8FE-63A3-587B-8560-CEC258E8B944'),
}

model ListPublishedAppInfoResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListPublishedAppInfoResponseBody(name='body'),
}

/**
  * @param request  the request parameters of ListPublishedAppInfo  ListPublishedAppInfoRequest
  * @return ListPublishedAppInfoResponse
 */
async function listPublishedAppInfo(request: ListPublishedAppInfoRequest): ListPublishedAppInfoResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListPublishedAppInfo', 'POST', '/', 'json', false, 'json', request);
}

model ListRunningAppsRequest {
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Query'),
  clientId?: string(name='ClientId', example='370b56f8-2812-4b6c-bfa6-2560791cad88', position='Query'),
  clientIp?: string(name='ClientIp', example='22.21.2.32', position='Query'),
  clientOS?: string(name='ClientOS', example='windows_"Windows 10 Enterprise" 10.0 (Build 18363)', position='Query'),
  clientVersion?: string(name='ClientVersion', example='0.1.0-R-20220512.175656', position='Query'),
  endUserId?: string(name='EndUserId', example='test.test', position='Query'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Query'),
  loginToken?: string(name='LoginToken', example='v1124500957832f30b3e716406562071655aa43b2a723ed2be0837815483d54e025db13ba5469f06f2410d0efc4d302e36', position='Query'),
  productType?: string(name='ProductType', example='CloudApp', position='Query'),
  sessionId?: string(name='SessionId', example='a863f4c3-2f1d-4971-8cf7-e2b92ae97764', position='Query'),
  tenantId?: string(name='TenantId', example='1735953493960828', position='Query'),
  uuid?: string(name='Uuid', example='470E8C12AB78CE9C3F6627DD0409E51D', position='Query'),
}

model ListRunningAppsResponseBody = {
  requestId?: string(name='RequestId', description='Id of the request', example='2DC3521C-3820-5EA5-9A9A-00BB7AF4E8E5'),
  runningCloudApps?: [ 
    {
      appId?: string(name='AppId', example='ca-dln05y44ze6esfl8x'),
      appInstanceGroupId?: string(name='AppInstanceGroupId', example='aig-dk8p95irk9xs5xi6a'),
      appInstanceId?: string(name='AppInstanceId', example='ai-gc1gemx6vpa6vlync'),
      appName?: string(name='AppName', example='alihealth-keeper'),
      appVersion?: string(name='AppVersion', example='11.1'),
      appVersionName?: string(name='AppVersionName', example='test1.0'),
      duration?: long(name='Duration', example='87'),
      iconUrl?: string(name='IconUrl', example='https://app-icon-shanghai.oss-cn-shanghai.aliyuncs.com/tenant/187465/18_bf1.jpg'),
      osType?: string(name='OsType', example='Windows'),
      regionId?: string(name='RegionId', example='cn-hangzhou'),
      startTime?: string(name='StartTime', example='1642748400'),
    }
  ](name='RunningCloudApps'),
}

model ListRunningAppsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListRunningAppsResponseBody(name='body'),
}

/**
  * @param request  the request parameters of ListRunningApps  ListRunningAppsRequest
  * @return ListRunningAppsResponse
 */
async function listRunningApps(request: ListRunningAppsRequest): ListRunningAppsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListRunningApps', 'POST', '/', 'json', false, 'json', request);
}

model ResetAppResourcesRequest {
  appInstanceGroupId: string(name='AppInstanceGroupId', description='This parameter is required.', example='aig-9ciijz60n4xsv****', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientId: string(name='ClientId', description='This parameter is required.', example='f4a0dc8e-1702-4728-9a60-95b27a35****', position='Body'),
  clientIp?: string(name='ClientIp', example='1.2.3.4', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_\\"Windows 10 Pro\\" 10.0 (Build 22631)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='7.7.0-R-20241217.092056', position='Body'),
  endUserId?: string(name='EndUserId', example='user01', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken: string(name='LoginToken', description='This parameter is required.', example='v285fdd7f6d39fa7861981639366085772e150a390a5bb7b43c4e62440d94fc392b945770e1596cebe90085ce0af4d****', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='AndroidCloud', position='Body'),
  resourceIds: [ string ](name='ResourceIds', description='This parameter is required.', position='Body'),
  sessionId: string(name='SessionId', description='This parameter is required.', example='c261a6a1-e242-4f4b-813c-5fe807e49f03', position='Body'),
  uuid?: string(name='Uuid', example='2943802884B27030B6759F9132B2****', position='Body'),
}

model ResetAppResourcesResponseBody = {
  code?: string(name='Code', example='InvalidAppInstanceGroup.NotFound'),
  message?: string(name='Message', example='The app instance group is not found.'),
  requestId?: string(name='RequestId', example='1CBAFFAB-B697-4049-A9B1-67E1FC5F****'),
  success?: string(name='Success', example='true'),
}

model ResetAppResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ResetAppResourcesResponseBody(name='body'),
}

/**
  * @param request  the request parameters of ResetAppResources  ResetAppResourcesRequest
  * @return ResetAppResourcesResponse
 */
async function resetAppResources(request: ResetAppResourcesRequest): ResetAppResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ResetAppResources', 'POST', '/', 'json', true, 'form', request);
}

model RestartAppResourcesRequest {
  appInstanceGroupId: string(name='AppInstanceGroupId', description='This parameter is required.', example='aig-53fvrq1oanz6c****', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientId: string(name='ClientId', description='This parameter is required.', example='eac19bef-1e45-4190-a03a-4ea74b699ca7', position='Body'),
  clientIp?: string(name='ClientIp', example='1.2.3.4', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_\\"Windows 10 Enterprise\\" 10.0 (Build 14393)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='7.5.3-RS-20241127.131156', position='Body'),
  endUserId?: string(name='EndUserId', example='user001', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken: string(name='LoginToken', description='This parameter is required.', example='v1124500957832f30b3e716406562071655aa43b2a723ed2be0837815483d54e025db13ba5469f06f2410d0efc4d302e36', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='AndroidCloud', position='Body'),
  resourceIds: [ string ](name='ResourceIds', description='This parameter is required.', position='Body'),
  sessionId: string(name='SessionId', description='This parameter is required.', example='c261a6a1-e242-4f4b-813c-5fe807e49f03', position='Body'),
  uuid?: string(name='Uuid', example='2943802884B27030B6759F9132B2****', position='Body'),
}

model RestartAppResourcesResponseBody = {
  code?: string(name='Code', example='InvalidAppInstanceGroup.NotFound'),
  message?: string(name='Message', example='The app instance group is not found.'),
  requestId?: string(name='RequestId', example='1CBAFFAB-B697-4049-A9B1-67E1FC5F****'),
  success?: string(name='Success', example='true'),
}

model RestartAppResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RestartAppResourcesResponseBody(name='body'),
}

/**
  * @param request  the request parameters of RestartAppResources  RestartAppResourcesRequest
  * @return RestartAppResourcesResponse
 */
async function restartAppResources(request: RestartAppResourcesRequest): RestartAppResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RestartAppResources', 'POST', '/', 'json', true, 'form', request);
}

model StartAppResourcesRequest {
  appInstanceGroupId: string(name='AppInstanceGroupId', description='This parameter is required.', example='aig-9ciijz60n4xsv****', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientId: string(name='ClientId', description='This parameter is required.', example='eac19bef-1e45-4190-a03a-4ea74b69****', position='Body'),
  clientIp?: string(name='ClientIp', example='1.2.3.4', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_\\"Windows 10 Pro\\" 10.0 (Build 22631)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='7.5.1-R-20240903.163046', position='Body'),
  endUserId?: string(name='EndUserId', example='testUser01', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken: string(name='LoginToken', description='This parameter is required.', example='v185fdd7f6d39fa7861981639366085772e150a390a5bb7b43c4e62440d94fc392b945770e1596cebe90085ce0af4d****', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='AndroidCloud', position='Body'),
  resourceIds: [ string ](name='ResourceIds', description='This parameter is required.', position='Body'),
  sessionId: string(name='SessionId', description='This parameter is required.', example='a863f4c3-2f1d-4971-8cf7-e2b92ae9****', position='Body'),
  uuid?: string(name='Uuid', example='2943802884B27030B6759F9132B2****', position='Body'),
}

model StartAppResourcesResponseBody = {
  code?: string(name='Code', example='InvalidAppInstanceGroup.NotFound'),
  message?: string(name='Message', example='The app instance group is not found.'),
  requestId?: string(name='RequestId', example='1CBAFFAB-B697-4049-A9B1-67E1FC5F****'),
  success?: string(name='Success', example='true'),
}

model StartAppResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartAppResourcesResponseBody(name='body'),
}

/**
  * @param request  the request parameters of StartAppResources  StartAppResourcesRequest
  * @return StartAppResourcesResponse
 */
async function startAppResources(request: StartAppResourcesRequest): StartAppResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartAppResources', 'POST', '/', 'json', true, 'form', request);
}

model StopAppRequest {
  aliUid?: long(name='AliUid', example='1924794279035094', position='Body'),
  apiType?: string(name='ApiType', example='AnonymousUserAPI', position='Body'),
  appId?: string(name='AppId', example='ca-fxwp4koywsglzvvex', position='Body'),
  appInstanceGroupId?: string(name='AppInstanceGroupId', example='aig-89ibriac2wudyph38', position='Body'),
  appInstanceId?: string(name='AppInstanceId', example='ai-d297eyf83g5niwnjl', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientChannel?: string(name='ClientChannel', example='pc', position='Body'),
  clientId?: string(name='ClientId', example='91b79184-51d0-42ad-8475-78cae95b0aa6', position='Body'),
  clientIp?: string(name='ClientIp', example='22.21.2.79', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_"Windows 10 Enterprise" 10.0 (Build 19042)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='3.1.1-R-20211022.144255', position='Body'),
  endUserId?: string(name='EndUserId', example='test.test', position='Body'),
  forceStop?: boolean(name='ForceStop', example='false', position='Body'),
  idpId?: string(name='IdpId', example='idp-9ie5smicnct2xodn2', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken?: string(name='LoginToken', example='v185fdd7f6d39fa7861981639366085772e150a390a5bb7b43c4e62440d94fc392b945770e1596cebe90085ce0af4d330e', position='Body'),
  productType?: string(name='ProductType', example='CloudApp', position='Body'),
  regionId?: string(name='RegionId', example='cn-hangzhou', position='Body'),
  sessionId?: string(name='SessionId', example='597e869d-ea14-4b83-9490-714f68bfe935', position='Body'),
  uuid?: string(name='Uuid', example='2943802884B27030B6759F9132B26903', position='Body'),
  wyId?: string(name='WyId', example='ac3cb49059261898', position='Body'),
}

model StopAppResponseBody = {
  requestId?: string(name='RequestId', example='83A9075B-C646-59A9-8232-CAE41AF4B9E3'),
}

model StopAppResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopAppResponseBody(name='body'),
}

/**
  * @param request  the request parameters of StopApp  StopAppRequest
  * @return StopAppResponse
 */
async function stopApp(request: StopAppRequest): StopAppResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopApp', 'POST', '/', 'json', true, 'form', request);
}

model StopAppResourcesRequest {
  appInstanceGroupId: string(name='AppInstanceGroupId', description='This parameter is required.', example='aig-9ciijz60n4xsv****', position='Body'),
  bizRegionId?: string(name='BizRegionId', example='cn-hangzhou', position='Body'),
  clientId: string(name='ClientId', description='This parameter is required.', example='eac19bef-1e45-4190-a03a-4ea74b699ca7', position='Body'),
  clientIp?: string(name='ClientIp', example='1.2.3.4', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_"Windows 10 Enterprise" 10.0 (Build 19042)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='7.2.0-R-20241008.110000', position='Body'),
  endUserId?: string(name='EndUserId', example='testUser', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-hangzhou', position='Body'),
  loginToken: string(name='LoginToken', description='This parameter is required.', example='v12369636c721ba6b3ddb1683341016775c3f63e4d0e78f120f9a0544ed826b7af7daf747c402f0d0730b52f451b70****', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='AndroidCloud', position='Body'),
  resourceIds: [ string ](name='ResourceIds', description='This parameter is required.', position='Body'),
  sessionId: string(name='SessionId', description='This parameter is required.', example='597e869d-ea14-4b83-9490-714f68bfe935', position='Body'),
  uuid?: string(name='Uuid', example='C50973691A6D2BE23F2CDD73B85B****', position='Body'),
}

model StopAppResourcesResponseBody = {
  code?: string(name='Code', example='InvalidAppInstanceGroup.NotFound'),
  message?: string(name='Message', example='The app instance group is not found.'),
  requestId?: string(name='RequestId', example='829444D6-9FD3-5C65-A570-065975537647'),
  success?: string(name='Success', example='true'),
}

model StopAppResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopAppResourcesResponseBody(name='body'),
}

/**
  * @param request  the request parameters of StopAppResources  StopAppResourcesRequest
  * @return StopAppResourcesResponse
 */
async function stopAppResources(request: StopAppResourcesRequest): StopAppResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopAppResources', 'POST', '/', 'json', true, 'form', request);
}

model UnbindRequest {
  appId?: string(name='AppId', example='ca-fxwp4koxs8hopi94e', position='Body'),
  appInstanceGroupId: string(name='AppInstanceGroupId', description='This parameter is required.', example='aig-e1l4kqqykxt4uzdx9', position='Body'),
  appInstanceId?: string(name='AppInstanceId', position='Body'),
  appInstancePersistentId?: string(name='AppInstancePersistentId', example='p-xxxxx', position='Body'),
  clientId?: string(name='ClientId', example='eac19bef-1e45-4190-a03a-4ea74b699ca7', position='Body'),
  clientIp?: string(name='ClientIp', example='139.129.223.122', position='Body'),
  clientOS?: string(name='ClientOS', example='windows_\\"Windows 10 Pro\\" 10.0 (Build 19041)', position='Body'),
  clientVersion?: string(name='ClientVersion', example='2.0.1-D-20220303.171122', position='Body'),
  endUserId?: string(name='EndUserId', example='test.test', position='Body'),
  loginRegionId?: string(name='LoginRegionId', example='cn-shanghai', position='Body'),
  loginToken: string(name='LoginToken', description='This parameter is required.', example='v1e9c8e83d83ea11270871640059145702bde8c5be8c6b9a854ffb6a43bd2673c19a5551c83800724e024f488dbfb0b247', position='Body'),
  productType: string(name='ProductType', description='This parameter is required.', example='CloudApp', position='Body'),
  sessionId: string(name='SessionId', description='This parameter is required.', example='11040139-4fb4-4b35-9b44-6c07c746a43e', position='Body'),
  tenantId?: long(name='TenantId', example='1569416393841402', position='Body'),
}

model UnbindResponseBody = {
  requestId?: string(name='RequestId', description='Id of the request', example='6EBD4046-2202-5FBD-8595-4B631F0C484B'),
}

model UnbindResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnbindResponseBody(name='body'),
}

/**
  * @param request  the request parameters of Unbind  UnbindRequest
  * @return UnbindResponse
 */
async function unbind(request: UnbindRequest): UnbindResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'Unbind', 'POST', '/', 'json', true, 'form', request);
}

