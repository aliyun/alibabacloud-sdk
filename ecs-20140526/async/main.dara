/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Ecs';
  @version = '2014-05-26';
  @endpointRule = 'regional';
  @endpointMap = {
    'cn-hangzhou' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shanghai-finance-1' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shenzhen-finance-1' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-north-2-gov-1' = 'ecs.aliyuncs.com',
    'ap-northeast-2-pop' = 'ecs.aliyuncs.com',
    'cn-beijing-finance-pop' = 'ecs.aliyuncs.com',
    'cn-beijing-gov-1' = 'ecs.aliyuncs.com',
    'cn-beijing-nu16-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-edge-1' = 'ecs.cn-qingdao-nebula.aliyuncs.com',
    'cn-fujian' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-haidian-cm12-c01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-bj-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-finance' = 'ecs.aliyuncs.com',
    'cn-hangzhou-internal-prod-1' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-internal-test-1' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-internal-test-2' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-internal-test-3' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hangzhou-test-306' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-hongkong-finance-pop' = 'ecs.aliyuncs.com',
    'cn-huhehaote-nebula-1' = 'ecs.cn-qingdao-nebula.aliyuncs.com',
    'cn-shanghai-et15-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shanghai-et2-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shanghai-inner' = 'ecs.aliyuncs.com',
    'cn-shanghai-internal-test-1' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shenzhen-inner' = 'ecs.aliyuncs.com',
    'cn-shenzhen-st4-d01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-shenzhen-su18-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-wuhan' = 'ecs.aliyuncs.com',
    'cn-yushanfang' = 'ecs.aliyuncs.com',
    'cn-zhangbei' = 'ecs.aliyuncs.com',
    'cn-zhangbei-na61-b01' = 'ecs-cn-hangzhou.aliyuncs.com',
    'cn-zhangjiakou-na62-a01' = 'ecs.cn-zhangjiakou.aliyuncs.com',
    'cn-zhengzhou-nebula-1' = 'ecs.cn-qingdao-nebula.aliyuncs.com',
    'eu-west-1-oxs' = 'ecs.cn-shenzhen-cloudstone.aliyuncs.com',
    'rus-west-1-pop' = 'ecs.aliyuncs.com',
  };
}

function close(): void {
  @handler.close();
}

model AcceptInquiredSystemEventRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  choice?: string(name='Choice', description='> This parameter is in invitational preview and is unavailable to general users.', example='hide', position='Query'),
  eventId: string(name='EventId', description='The ID of the system event.', example='e-2zeielxl1qzq8slb****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the system event. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AcceptInquiredSystemEventResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='4DD56CA6-6D75-4D33-BE34-E4A44EBE1C3D'),
}

model AcceptInquiredSystemEventResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AcceptInquiredSystemEventResponseBody(name='body'),
}

async function acceptInquiredSystemEvent(request: AcceptInquiredSystemEventRequest): AcceptInquiredSystemEventResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AcceptInquiredSystemEvent', 'POST', '/', 'json', false, 'json', request);
}

model ActivateRouterInterfaceRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
}

model ActivateRouterInterfaceResponseBody = {
  requestId?: string(name='RequestId'),
}

model ActivateRouterInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ActivateRouterInterfaceResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function activateRouterInterface(request: ActivateRouterInterfaceRequest): ActivateRouterInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ActivateRouterInterface', 'POST', '/', 'json', false, 'json', request);
}

model AddBandwidthPackageIpsRequest {
  bandwidthPackageId: string(name='BandwidthPackageId', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  ipCount: string(name='IpCount', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AddBandwidthPackageIpsResponseBody = {
  requestId?: string(name='RequestId'),
}

model AddBandwidthPackageIpsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddBandwidthPackageIpsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function addBandwidthPackageIps(request: AddBandwidthPackageIpsRequest): AddBandwidthPackageIpsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddBandwidthPackageIps', 'POST', '/', 'json', false, 'json', request);
}

model AddTagsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource. When the resources are instances, this parameter can be interpreted as InstanceId.', example='i-bp1gtjxuuvwj17zr****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: elastic network interface (ENI)
*   ddh: dedicated host
*   keypair: SSH key pair
*   launchtemplate: launch template
*   reservedinstance: reserved instance
*   snapshotpolicy: automatic snapshot policy

All values must be lowercase.', example='instance', position='Query'),
  tag: [ 
    {
      key?: string(name='Key', description='The key of tag N of the resource. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain [http:// or https://](http://https://).', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the resource. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain [http:// or https://](http://https://).', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model AddTagsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AddTagsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AddTagsResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   Up to 20 tags can be added to each ECS resource.
  * *   `Tag.N.Key` must match `Tag.N.Value` based on the value of N.
  * *   If you add a tag that has the same key (`Tag.N.Key`) as an existing tag on the specified resource, the new tag value (`Tag.N.Value`) overwrites the original tag value.
  *
 */
async function addTags(request: AddTagsRequest): AddTagsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AddTags', 'POST', '/', 'json', false, 'json', request);
}

model AllocateDedicatedHostsRequest {
  networkAttributes?: {
    slbUdpTimeout?: int32(name='SlbUdpTimeout', description='The timeout period for a UDP session between a Server Load Balancer (SLB) instance and the dedicated host. Unit: seconds. Valid values: 15 to 310.', example='60'),
    udpTimeout?: int32(name='UdpTimeout', description='The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.', example='60'),
  }(name='NetworkAttributes', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  actionOnMaintenance?: string(name='ActionOnMaintenance', description='The policy used to migrate the instances deployed on the dedicated host when the dedicated host fails or needs to be repaired online. Valid values:

*   Migrate: The instances are migrated to another physical server and restarted.

    If cloud disks are attached to the dedicated host, the default value is Migrate.

*   Stop: The instances are stopped. If the dedicated host cannot be repaired, the instances are migrated to another physical machine and then restarted.

    If local disks are attached to the dedicated host, the default value is Stop.', example='Migrate', position='Query'),
  autoPlacement?: string(name='AutoPlacement', description='Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you create an ECS instance on a dedicated host without specifying the **DedicatedHostId** parameter, Alibaba Cloud selects a dedicated host from the resource pool to host the instance. For more information, see [Automatic deployment](~~118938~~). Valid values:

*   on: adds the dedicated host to the resource pool for automatic deployment.
*   off: does not add the dedicated host to the resource pool for automatic deployment.

Default value: on.

> If you do not want to add the dedicated host to the resource pool for automatic deployment, set this parameter to off.', example='off', position='Query'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The time when to automatically release the dedicated host. Specify the time in the `ISO 8601` standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

> 

*   It must be at least half an hour later than the current time.

*   It must be at most three years later than the current time.

*   If the value of seconds (ss) is not 00, it is automatically set to 00.', example='2019-08-21T12:30:24Z', position='Query'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to automatically renew the subscription dedicated host.

> The **AutoRenew** parameter takes effect only when the **ChargeType** parameter is set to PrePaid.

Default value: false', example='false', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal duration of the dedicated host. The **AutoRenewPeriod** parameter takes effect and is required only when the **AutoRenew** parameter is set to true. Valid values:

Valid values when PeriodUnit is set to Month: 1, 2, 3, 6, and 12.', example='1', position='Query'),
  chargeType?: string(name='ChargeType', description='The billing method of the dedicated host. Valid values:

*   PrePaid: subscription. If you set this parameter to PrePaid, make sure that you have sufficient account balance or credits. Otherwise, `InvalidPayMethod` is returned.
*   PostPaid: pay-as-you-go.

Default value: PostPaid.', example='PrePaid', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  cpuOverCommitRatio?: float(name='CpuOverCommitRatio', description='The CPU overcommit ratio. You can configure CPU overcommit ratios only for the following dedicated host types: g6s, c6s, and r6s. Valid values: 1 to 5.

The CPU overcommit ratio affects the number of available vCPUs on a dedicated host. You can use the following formula to calculate the number of available vCPUs on a dedicated host: Number of available vCPUs = Number of physical CPU cores × 2 × CPU overcommit ratio. For example, the number of physical CPU cores on each g6s dedicated host is 52. If you set the CPU overcommit ratio of a g6s dedicated host to 4, the number of available vCPUs on the dedicated host is 416. For scenarios that have minimal requirements on CPU stability or where CPU load is not heavy, such as development and test environments, you can increase the number of available vCPUs on a dedicated host by increasing the CPU overcommit ratio. This way, you can deploy more ECS instances of the same specifications on the dedicated host and reduce the unit deployment cost.', example='1', position='Query'),
  dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster in which to create the dedicated host.', example='dc-bp12wlf6am0vz9v2****', position='Query'),
  dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host. The name must be 2 to 128 characters in length and can contain letters and digits. The name can contain colons (:), underscores (\\_), periods (.), and hyphens (-).', example='myDDH', position='Query'),
  dedicatedHostType: string(name='DedicatedHostType', description='The dedicated host type. You can call the [DescribeDedicatedHostTypes](~~134240~~) operation to query the most recent list of dedicated host types.', example='ddh.c5', position='Query'),
  description?: string(name='Description', description='The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This-is-my-DDH', position='Query'),
  minQuantity?: int32(name='MinQuantity', description='The minimum number of dedicated hosts to create. Valid values: 1 to 100.

> If the number of available dedicated hosts is less than the minimum number of dedicated hosts to create, the dedicated hosts fail to be created.', example='2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The subscription duration of the dedicated host. The `Period` parameter is required and takes effect only when the `ChargeType` parameter is set to `PrePaid`. Valid values:

*   Valid values when the PeriodUnit parameter is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.
*   Valid values when the PeriodUnit parameter is set to Year: 1, 2, 3, 4, and 5.', example='6', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription duration of the dedicated host. Valid values:

*   Month
*   Year

Default value: Month.', example='Month', position='Query'),
  quantity?: int32(name='Quantity', description='The number of dedicated hosts that you want to create. Valid values: 1 to 100.

Default value: 1.', example='2', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the dedicated host.', example='rg-bp67acfmxazb4ph***', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the dedicated host. Valid values of N: 1 to 20.

The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with acs: or aliyun.', example='Environment'),
      value?: string(name='Value', description='The value of tag N to add to the dedicated host. Valid values of N: 1 to 20.

The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='Production'),
    }
  ](name='Tag', description='The tags to add to the dedicated host.', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which to create the dedicated host.

This parameter is empty by default. If you do not specify a zone, the system selects a zone.', example='cn-hangzhou-f', position='Query'),
}

model AllocateDedicatedHostsResponseBody = {
  dedicatedHostIdSets?: {
    dedicatedHostId?: [ string ](name='DedicatedHostId')
  }(name='DedicatedHostIdSets', description='The IDs of the dedicated hosts.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='E2A664A6-2933-4C64-88AE-5033D003****'),
}

model AllocateDedicatedHostsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AllocateDedicatedHostsResponseBody(name='body'),
}

/**
  * Before you create a dedicated host, you can call the [DescribeAvailableResource](~~66186~~) operation to query the resources available in a specific region or zone.
  * We recommend that you understand the billing methods of resources before you create a dedicated host. You are charged for resources used by the created dedicated host. For more information, see [Billing overview](~~68978~~).
  * *   You can create up to 100 pay-as-you-go or subscription dedicated hosts at a time.
  * *   After a dedicated host is created, you can use the returned dedicated host ID as the value of a request parameter to call the [DescribeDedicatedHosts](~~134242~~) operation to query the state of the dedicated host.
  * *   After you submit a request to create a dedicated host, an error is returned if a specific parameter is invalid or if the requested resources are insufficient. For more information about error causes, see the "Error codes" section of this topic.
  * *   After a dedicated host is created, you can call the [ModifyInstanceDeployment](~~134248~~) operation to migrate ECS instances from a shared host to the dedicated host. You can also migrate ECS instances from another dedicated host to the created dedicated host.
  *
 */
async function allocateDedicatedHosts(request: AllocateDedicatedHostsRequest): AllocateDedicatedHostsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AllocateDedicatedHosts', 'POST', '/', 'json', false, 'json', request);
}

model AllocateEipAddressRequest {
  activityId?: long(name='ActivityId', position='Query'),
  bandwidth?: string(name='Bandwidth', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  ISP?: string(name='ISP', position='Query'),
  internetChargeType?: string(name='InternetChargeType', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AllocateEipAddressResponseBody = {
  allocationId?: string(name='AllocationId'),
  eipAddress?: string(name='EipAddress'),
  requestId?: string(name='RequestId'),
}

model AllocateEipAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AllocateEipAddressResponseBody(name='body'),
}

/**
  * @deprecated
  * > This operation has been upgraded. We recommend that you do not use it. For information about the new version of this operation, see [AllocateEipAddress](~~120192~~).
  *
 */
// Deprecated
async function allocateEipAddress(request: AllocateEipAddressRequest): AllocateEipAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AllocateEipAddress', 'POST', '/', 'json', false, 'json', request);
}

model AllocatePublicIpAddressRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance to which you want to assign a public IP address.', example='i-bp1gtjxuuvwj17zr****', position='Query'),
  ipAddress?: string(name='IpAddress', description='The public IP address. If you leave this parameter empty, the system randomly assigns a public IP address to the instance.', example='112.124.**.**', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vlanId?: string(name='VlanId', description='The virtual LAN (VLAN) ID of the instance.

> This parameter will be removed in the future. To ensure future compatibility, we recommend that you use other parameters.', example='720', position='Query'),
}

model AllocatePublicIpAddressResponseBody = {
  ipAddress?: string(name='IpAddress', description='The public IP address.', example='112.124.**.**'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AllocatePublicIpAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AllocatePublicIpAddressResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The instance to which you want to assign a public IP address must be in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  * *   If `OperationLocks` in the response of the DescribeInstances operation contains `"LockReason" : "security"` for an instance, the instance is [locked for security reasons](~~25695~~) and cannot be assigned a public IP address.
  * *   You can assign only one public IP address to an instance. If the instance already has a public IP address, the `AllocatedAlready` error code is returned.
  * *   After you assign a public IP address to an instance, you must restart the instance ([RebootInstance](~~25502~~)) or start the instance ([StartInstance](~~25500~~)) for the public IP address to take effect.
  * If an instance resides in a virtual private cloud (VPC), you can assign a public IP address to the instance or associate an elastic IP address (EIP) with the instance. For more information, see [AssociateEipAddress](~~2518064~~).
  * >  After you associate an EIP with an instance that resides in a VPC, you cannot assign a public IP address to the instance.
  *
 */
async function allocatePublicIpAddress(request: AllocatePublicIpAddressRequest): AllocatePublicIpAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AllocatePublicIpAddress', 'POST', '/', 'json', false, 'json', request);
}

model ApplyAutoSnapshotPolicyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  autoSnapshotPolicyId: string(name='autoSnapshotPolicyId', description='The ID of the automatic snapshot policy.', example='sp-bp14yziiuvu3s6jn****', position='Query'),
  diskIds: string(name='diskIds', description='The IDs of disks. The value is a JSON array that consists of disk IDs. Separate the disk IDs with commas (,).', example='["d-bp14k9cxvr5uzy54****", "d-bp1dtj8v7x6u08iw****", "d-bp1c0tyj9tfli2r8****"]', position='Query'),
  regionId: string(name='regionId', description='The region ID of the automatic snapshot policy and the disks. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model ApplyAutoSnapshotPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ApplyAutoSnapshotPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ApplyAutoSnapshotPolicyResponseBody(name='body'),
}

/**
  * *   Each disk can have only one automatic snapshot policy.
  * *   Each automatic snapshot policy can be applied to multiple disks.
  *
 */
async function applyAutoSnapshotPolicy(request: ApplyAutoSnapshotPolicyRequest): ApplyAutoSnapshotPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ApplyAutoSnapshotPolicy', 'POST', '/', 'json', false, 'json', request);
}

model AssignIpv6AddressesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.**** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  ipv6Address?: [ string ](name='Ipv6Address', description='The IPv6 addresses to assign to the ENI. Valid values of N: 1 to 10.

Example: Ipv6Address.1=2001:db8:1234:1a00::\\*\\*\\*\\*

>  You must specify `Ipv6Addresses.N` or `Ipv6AddressCount`, but not both.', example='2001:db8:1234:1a00::****', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the ENI. Valid values: 1 to 10.

>  You must specify `Ipv6Addresses.N` or `Ipv6AddressCount`, but not both.', example='1', position='Query'),
  ipv6Prefix?: [ string ](name='Ipv6Prefix', description='The IPv6 prefixes to assign to the ENI. Valid values of N: 1 to 10.

>  To assign IPv6 prefixes to the ENI, you must specify Ipv6Prefix.N or Ipv6PrefixCount, but not both.', position='Query'),
  ipv6PrefixCount?: int32(name='Ipv6PrefixCount', description='The number of IPv6 prefixes to assign to the ENI. Valid values: 1 to 10.

>  To assign IPv6 prefixes to the ENI, you must specify Ipv6Prefix.N or Ipv6PrefixCount, but not both.', example='hide', minimum=1, maximum=10, position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ENI ID.', example='eni-bp1iqejowblx6h8j****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AssignIpv6AddressesResponseBody = {
  ipv6PrefixSets?: {
    ipv6Prefix?: [ string ](name='Ipv6Prefix')
  }(name='Ipv6PrefixSets', description='The IPv6 prefixes of the ENI.'),
  ipv6Sets?: {
    ipv6Address?: [ string ](name='Ipv6Address')
  }(name='Ipv6Sets', description='The IPv6 addresses assigned to the ENI.'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ENI ID.', example='eni-bp1iqejowblx6h8j****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AssignIpv6AddressesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AssignIpv6AddressesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can specify IPv6 addresses in the CIDR block of the vSwitch to which the ENI is connected. You can also specify the number of IPv6 addresses that the system assigns to the ENI. Take note of the following items:
  * *   IPv6 must be enabled on the vSwitch to which the ENI is connected. For more information, see [Enable IPv6 for a vSwitch](~~98923~~).
  * *   The ENI must be in the Available (Available) or InUse (InUse) state.
  * *   If you want to assign IPv6 addresses to a primary ENI, make sure that the Elastic Compute Service (ECS) instance to which the ENI is attached is in the Running (Running) or Stopped (Stopped) state.
  * *   The maximum number of IPv6 addresses that can be assigned to an ENI varies based on the instance type of the instance to which the ENI is attached.
  *     *   If the ENI is in the Available (Available) state, up to 10 IPv6 addresses can be assigned to the ENI.
  *     *   If the ENI is attached to an ECS instance, the maximum number of IPv6 addresses that can be assigned to the ENI varies based on the instance type. For more information, see [Overview of instance families](~~25378~~).
  * *   After the operation is called, you can obtain the IPv6 addresses that are assigned to the ENI from the response.
  *
 */
async function assignIpv6Addresses(request: AssignIpv6AddressesRequest): AssignIpv6AddressesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AssignIpv6Addresses', 'POST', '/', 'json', false, 'json', request);
}

model AssignPrivateIpAddressesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  ipv4Prefix?: [ string ](name='Ipv4Prefix', description='The IPv4 prefixes to assign to the ENI. Valid values of N: 1 to 10.

>  To assign IPv4 prefixes to the ENI, you must specify the Ipv4Prefix.N or Ipv4PrefixCount parameter, but not both.', position='Query'),
  ipv4PrefixCount?: int32(name='Ipv4PrefixCount', description='The number of IPv4 prefixes to be randomly generated for the ENI. Valid values: 1 to 10.

>  To assign IPv4 prefixes to the ENI, you must specify the Ipv4Prefix.N or Ipv4PrefixCount parameter, but not both.', example='hide', minimum=1, maximum=10, position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  privateIpAddress?: [ string ](name='PrivateIpAddress', description='Secondary private IP address N to be automatically assigned from the CIDR block of the vSwitch that is connected to the ENI. Valid values of N:

*   When the ENI is in the Available (`Available`) state, the valid values of N are 1 to 50.
*   When the ENI is in the InUse (`InUse`) state, the valid values of N are subject to the instance type. For more information, see [Overview of instance families](~~25378~~).

To assign secondary private IP addresses to the ENI, you must specify `PrivateIpAddress.N` or `SecondaryPrivateIpAddressCount` but not both.', example='10.1.**.**', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  secondaryPrivateIpAddressCount?: int32(name='SecondaryPrivateIpAddressCount', description='The number of private IP addresses to be automatically assigned from the CIDR block of the vSwitch that is connected to the ENI.

To assign secondary private IP addresses to the ENI, you must specify `PrivateIpAddress.N` or `SecondaryPrivateIpAddressCount` but not both.', example='1', minimum=1, position='Query'),
}

model AssignPrivateIpAddressesResponseBody = {
  assignedPrivateIpAddressesSet?: {
    ipv4PrefixSet?: {
      ipv4Prefixes?: [ string ](name='Ipv4Prefixes')
    }(name='Ipv4PrefixSet', description='Details about the assigned IPv4 prefixes.'),
    networkInterfaceId?: string(name='NetworkInterfaceId', description='The ENI ID.', example='eni-bp125p95hhdhn3ot****'),
    privateIpSet?: {
      privateIpAddress?: [ string ](name='PrivateIpAddress')
    }(name='PrivateIpSet', description='The secondary private IP addresses that are assigned to the ENI.'),
  }(name='AssignedPrivateIpAddressesSet', description='Details about the ENI and the secondary private IP addresses that are assigned to the ENI.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AssignPrivateIpAddressesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AssignPrivateIpAddressesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The ENI to which you want to assign secondary private IP addresses must be in the Available (Available) or InUse (InUse) state.
  * *   When you assign private IP addresses to a primary ENI, the Elastic Compute Service (ECS) instance to which the ENI is attached must be in the Running (Running) or Stopped (Stopped) state.
  * *   When an ENI is in the Available state, you can assign up to 49 secondary private IP addresses to the ENI. When an ENI is attached to an instance, the number of secondary private IP addresses that can be assigned to the ENI varies based on the instance type. For more information, see [Overview of instance families](~~25378~~).
  * *   After the operation is called, you can obtain the assigned secondary private IP addresses from the response.
  *
 */
async function assignPrivateIpAddresses(request: AssignPrivateIpAddressesRequest): AssignPrivateIpAddressesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AssignPrivateIpAddresses', 'POST', '/', 'json', false, 'json', request);
}

model AssociateEipAddressRequest {
  allocationId: string(name='AllocationId', position='Query'),
  instanceId: string(name='InstanceId', position='Query'),
  instanceType?: string(name='InstanceType', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AssociateEipAddressResponseBody = {
  requestId?: string(name='RequestId'),
}

model AssociateEipAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AssociateEipAddressResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function associateEipAddress(request: AssociateEipAddressRequest): AssociateEipAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AssociateEipAddress', 'POST', '/', 'json', false, 'json', request);
}

model AssociateHaVipRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  haVipId: string(name='HaVipId', position='Query'),
  instanceId: string(name='InstanceId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AssociateHaVipResponseBody = {
  requestId?: string(name='RequestId'),
}

model AssociateHaVipResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AssociateHaVipResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function associateHaVip(request: AssociateHaVipRequest): AssociateHaVipResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AssociateHaVip', 'POST', '/', 'json', false, 'json', request);
}

model AttachClassicLinkVpcRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance that is deployed in the classic network. You can call the [DescribeInstances](~~25506~~) operation to query available instances.', example='i-bp1gtjxuuvwj17zr****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId: string(name='VpcId', description='The ID of the VPC for which the ClassicLink feature is enabled. You can call the [DescribeVpcs](~~35739~~) operation to query available VPCs.', example='vpc-bp1j4z1sr8zxu4l8u****', position='Query'),
}

model AttachClassicLinkVpcResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AttachClassicLinkVpcResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachClassicLinkVpcResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   The instance that you want to connect to a VPC must be in the **Running** or **Stopped** state.
  * *   The ClassicLink feature must be enabled for the destination VPC. For more information, see [Create a ClassicLink connection](~~65413~~).
  * *   The instance and the VPC must reside in the same region.
  *
 */
async function attachClassicLinkVpc(request: AttachClassicLinkVpcRequest): AttachClassicLinkVpcResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachClassicLinkVpc', 'POST', '/', 'json', false, 'json', request);
}

model AttachDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  bootable?: boolean(name='Bootable', description='Specifies whether to attach the disk as a system disk.

Default value: false.

>  You can set `Bootable` to true only if the instance does not have a system disk.', example='false', position='Query'),
  deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the disk when the instance is released.

*   true: releases the disk when the instance is released.
*   false: does not release the disk when the instance is released. The disk is retained as a pay-as-you-go data disk.

Default value: false.

When you specify this parameter, take note of the following items:

*   If `OperationLocks` in the DescribeInstances response contains `"LockReason" : "security"` for the instance to which the disk is attached, the instance is locked for security reasons. Regardless of whether you set `DeleteWithInstance` to `false`, the DeleteWithInstance setting is ignored, and the disk is released when the instance is released.
*   If you want to attach an `elastic ephemeral disk`, you must set `DeleteWithInstance` to `true`.
*   This parameter is unavailable for disks for which the multi-attach feature is enabled.', example='false', position='Query'),
  device?: string(name='Device', description='The device name of the disk.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='testDeviceName', position='Query'),
  diskId: string(name='DiskId', description='The ID of the disk. The disk specified by `DiskId` and the instance specified by `InstanceId` must reside in the same zone.

>  For more information about the limits on attaching a data disk and a system disk, see the "Usage notes" section of this topic.', example='d-bp1j4l5axzdy6ftk****', position='Query'),
  force?: boolean(name='Force', description='Specifies whether to forcefully attach the disk to the instance.

*   true
*   false

Default value: false.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance to which you want to attach the disk.', example='i-bp1dq5lozx5f4pmd****', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the SSH key pair that you bind to the Linux instance when you attach the system disk.

*   Windows instances do not support logons based on SSH key pairs. The `Password` parameter takes effect even if the KeyPairName parameter is specified.
*   For Linux instances, the username and password-based logon method is disabled by default.', example='KeyPairTestName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='The password that is set when you attach the system disk. The password is applicable only to the administrator and root users. The password must be 8 to 30 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. The following special characters are supported:

    ()`~!@#$%^&*-_+=|{}[]:;\\"<>,.?/

For Windows instances, passwords cannot start with a forward slash (/).

> If `Password` is configured, we recommend that you send requests over HTTPS to prevent password leaks.', example='EcsV587!', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AttachDiskResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AttachDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachDiskResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The disk must be in the **Unattached** (`Available`) state.
  * *   When you attach the disk as a data disk to an ECS instance, take note of the following items:
  *     *   The ECS instance must be in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  *     *   If the disk was separately purchased, the billing method of the disk must be pay-as-you-go.
  *     *   If the disk is a system disk that was detached from an ECS instance, no limits apply to the billing method of the disk.
  *     *   If the disk is an elastic ephemeral disk that was detached from an ECS instance, the disk can be attached only to the instance.
  * *   When you attach the disk as the system disk to an ECS instance, take note of the following items:
  *     *   The ECS instance must be the original instance from which the system disk was detached.
  *     *   The ECS instance must be in the **Stopped** (`Stopped`) state.
  *     *   Logon credentials must be configured.
  *     *   The disk cannot be an elastic ephemeral disk.
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query information about an ECS instance, the instance is locked for security reasons and no operations are allowed on the instance.
  *
 */
async function attachDisk(request: AttachDiskRequest): AttachDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachDisk', 'POST', '/', 'json', false, 'json', request);
}

model AttachInstanceRamRoleRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds: string(name='InstanceIds', description='The IDs of the instances. The value can be a JSON array that consists of up to 100 instance IDs. Separate the IDs with commas (,).', example='[“i-bp14ss25xca5ex1u****”, “i-bp154z5o1qjalfse****”, “i-bp10ws62o04ubhvi****”…]', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  policy?: string(name='Policy', description='The policy. The policy document must be 1 to 1,024 characters in length. When you attach an instance RAM role to one or more instances, you can specify an additional policy to further limit the permissions of the role. For more information, see [Policy overview](~~93732~~).', example='{"Statement": [{"Action": ["*"],"Effect": "Allow","Resource": ["*"]}],"Version":"1"}', position='Query'),
  ramRoleName: string(name='RamRoleName', description='The name of the instance RAM role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='testRamRoleName', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AttachInstanceRamRoleResponseBody = {
  attachInstanceRamRoleResults?: {
    attachInstanceRamRoleResult?: [ 
    {
      code?: string(name='Code', description='Indicates whether the instance RAM role was attached. If the instance RAM role was attached, 200 is returned. If the instance RAM role failed to be attached, any other value is returned. For more information, see the "Error codes" section.', example='200'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp10ws62o04ubhvi****'),
      message?: string(name='Message', description='Indicates whether the instance RAM role was attached. If the instance RAM role was attached, success is returned. If the instance RAM role failed to be attached, any other value is returned. For more information, see the "Error codes" section.', example='success'),
      success?: boolean(name='Success', description='Indicates whether the instance RAM role was attached.', example='true'),
    }
  ](name='AttachInstanceRamRoleResult')
  }(name='AttachInstanceRamRoleResults', description='Details about the results of attaching the instance RAM role.'),
  failCount?: int32(name='FailCount', description='The number of instances to which the instance RAM role failed to be attached.', example='0'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role.', example='testRamRoleName'),
  requestId?: string(name='RequestId', description='The request ID.', example='D9553E4C-6C3A-4D66-AE79-9835AF705639'),
  totalCount?: int32(name='TotalCount', description='The total number of instances to which you attempted to attach the instance RAM role.', example='1'),
}

model AttachInstanceRamRoleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachInstanceRamRoleResponseBody(name='body'),
}

async function attachInstanceRamRole(request: AttachInstanceRamRoleRequest): AttachInstanceRamRoleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachInstanceRamRole', 'POST', '/', 'json', false, 'json', request);
}

model AttachKeyPairRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds: string(name='InstanceIds', description='The IDs of instances to which you want to bind the SSH key pair. The value can be a JSON array that consists of up to 50 instance IDs. Separate multiple instance IDs with commas (,).', example='["i-bp1gtjxuuvwj17zr****", "i-bp17b7zrsbjwvmfy****", … "i-bp1h6jmbefj1ytos****"]', position='Query'),
  keyPairName: string(name='KeyPairName', description='The name of the SSH key pair.', example='testKeyPairName', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the SSH key pair. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model AttachKeyPairResponseBody = {
  failCount?: string(name='FailCount', description='The number of instances to which the SSH key pair fails to be bound.', example='0'),
  keyPairName?: string(name='KeyPairName', description='The name of the SSH key pair.', example='testKeyPairName'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  results?: {
    result?: [ 
    {
      code?: string(name='Code', description='The operation status code returned. 200 indicates that the operation was successful.', example='200'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-m5eg7be9ndloji64****'),
      message?: string(name='Message', description='The operation information returned. When the value of Code is 200, the value of Message is successful.', example='successful'),
      success?: string(name='Success', description='Indicates whether the request was successful.', example='true'),
    }
  ](name='Result')
  }(name='Results', description='An array that contains the results of the operation.'),
  totalCount?: string(name='TotalCount', description='The total number of instances to which the SSH key pair is bound.', example='2'),
}

model AttachKeyPairResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachKeyPairResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   SSH key pairs are not supported on Windows instances.
  * *   If an SSH key pair is bound to an instance, authentication by using the username and password is disabled for the instance.
  * *   If you bind an SSH key pair to an instance in the **running** state, you must call the [RebootInstance](~~25502~~) operation to restart the instance for the key pair to take effect.
  * *   If you bind an SSH key pair to an instance in the **stopped** state, you must call the [StartInstance](~~25500~~) operation to start the instance for the key pair to take effect.
  * *   If an instance is already bound to an SSH key pair, the new SSH key pair will replace the original one.
  *
 */
async function attachKeyPair(request: AttachKeyPairRequest): AttachKeyPairResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachKeyPair', 'POST', '/', 'json', false, 'json', request);
}

model AttachNetworkInterfaceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp16qstyvxj9gpqw****', position='Query'),
  networkCardIndex?: int32(name='NetworkCardIndex', description='The index of the network interface controller (NIC).

> The value of this parameter varies based on the instance family of the specified instance. If the instance type of the specified instance does not support NICs, leave this parameter empty. If the instance type of the specified instance supports NICs, set this parameter to a valid value. For information about the valid values of this parameter, see [Instance families](~~25378~~).', example='0', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp17pdijfczax1huji****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  trunkNetworkInstanceId?: string(name='TrunkNetworkInstanceId', description='The ID of the trunk ENI.

> This parameter is unavailable.', example='eni-f8zapqwj1v1j4ia3****', position='Query'),
  waitForNetworkConfigurationReady?: boolean(name='WaitForNetworkConfigurationReady', description='> This parameter is no longer supported.', example='null', position='Query'),
}

model AttachNetworkInterfaceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model AttachNetworkInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AttachNetworkInterfaceResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The ENI must be in the **Available** state. You can attach an ENI to only one instance that resides in the same zone and VPC as the ENI.``
  * *   The instance must be in the Running or Stopped state. When you attach ENIs to instances of specific instance types, make sure that the instances are in the Stopped state. For more information, see the "Instance types of the ECS instances that must be in the Stopped (Stopped) state" section in the [Bind an ENI](~~58503~~) topic.
  *     **
  *     **Note**If the last start time of the instance (including the start time of the instance if it is a new instance, the last restart time of the instance, and the last reactivation time of the instance) is before April 1st, 2018 and the instance is in the Running state, you must call the RebootInstance operation to restart the instance. If you do not call the RebootInstance operation to restart the instance, you cannot attach the ENI to the instance.
  * *   You can attach multiple ENIs to one instance. For more information, see [ENI overview](~~58496~~).
  * *   The vSwitch to which the ENI is connected must be in the same zone and VPC as the vSwitch to which the instance is connected.
  * *   This operation is an asynchronous operation. After you call this operation to attach an ENI, you can view the status or events of the ENI to check whether the ENI is attached. The following figure shows the transitions between the statuses of the ENI.
  * ![](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20221124/esgu/AttachNetworkInterface.jpg) If the ENI is in the Attaching state, the ENI attachment request is sent and the ENI is being attached to the specified instance. If the ENI is in the InUse state, the ENI is attached to the specified instance. If the ENI is in the Available state, the ENI failed to be attached.
  * **For examples on how to call this operation, see **[Attach an ENI](~~471550~~).
  *
 */
async function attachNetworkInterface(request: AttachNetworkInterfaceRequest): AttachNetworkInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AttachNetworkInterface', 'POST', '/', 'json', false, 'json', request);
}

model AuthorizeSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='This parameter is deprecated. Use `Permissions.N.Description` to specify the rule description.', example='This is description.', deprecated='true', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.DestCidrIp` to specify the destination IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='This parameter is deprecated. Use `Permissions.N.IpProtocol` to specify the transport layer protocol.', example='ALL', deprecated='true', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6SourceCidrIp` to specify the source IPv6 CIDR block.', example='2001:250:6000::***', deprecated='true', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6SourceCidrIp` to specify the source IPv6 CIDR block.', example='2001:250:6000::***', deprecated='true', position='Query'),
  nicType?: string(name='NicType', description='This parameter is deprecated. Use `Permissions.N.NicType` to specify the network interface type.', example='intranet', deprecated='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  permissions?: [ 
    {
      description?: string(name='Description', description='The description of security group rule N. The description must be 1 to 512 characters in length.

Valid values of N: 1 to 100.', example='This is description.'),
      destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of security group rule N. The value of this parameter is case-insensitive. Valid values:

*   TCP
*   UDP
*   ICMP
*   ICMPv6
*   GRE
*   ALL: All protocols are supported.

Valid values of N: 1 to 100.', example='ALL'),
      ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.

> This parameter is valid only when the source is ECS instances that reside in VPCs and support IPv6 CIDR blocks. You cannot specify both this parameter and the `DestCidrIp` parameter.', example='2001:250:6000::***'),
      ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

Valid values of N: 1 to 100.

> This parameter takes effect only if the sources are ECS instances that reside in VPCs and support IPv6 CIDR blocks. You cannot specify this parameter and `SourceCidrIp` at the same time.', example='2001:250:6000::***'),
      nicType?: string(name='NicType', description='The network interface controller (NIC) type of security group rule N when the security group is in the classic network. Valid values:

*   internet: public NIC.
*   intranet: internal NIC.

If the security group is in a VPC, this parameter is set to intranet by default and cannot be changed.

If you specify only DestGroupId when you configure access between security groups, this parameter must be set to intranet.

Default value: internet.

Valid values of N: 1 to 100.', example='intranet'),
      policy?: string(name='Policy', description='The action of security group rule N that determines whether to allow inbound access. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses. In this case, the request times out or the connection cannot be established.

Default value: accept.

Valid values of N: 1 to 100.', example='accept'),
      portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Specify a port range in the format of \\<Start port number>/\\<End port number>. Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

For more information, see [Typical applications of commonly used ports](~~40724~~).

Valid values of N: 1 to 100.', example='80/80'),
      priority?: string(name='Priority', description='The priority of security group rule N. A smaller value specifies a higher priority. Valid values: 1 to 100.

Default value: 1.

Valid values of N: 1 to 100.', example='1'),
      sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      sourceGroupId?: string(name='SourceGroupId', description='The ID of the source security group to be referenced in security group rule N.

*   At least one of `SourceGroupId`, `SourceCidrIp`, `Ipv6SourceCidrIp`, and `SourcePrefixListId` must be specified.
*   If `SourceGroupId` is specified but `SourceCidrIp` or `Ipv6SourceCidrIp` is not specified, `NicType` must be set to `intranet`.
*   If both `SourceGroupId` and `SourceCidrIp` are specified, `SourceCidrIp` takes precedence.

Valid values of N: 1 to 100.

Take note of the following items:

*   For advanced security groups, security groups cannot be used as authorization objects.
*   For each basic security group, up to 20 security groups can be used as authorization objects.', example='sg-bp67acfmxazb4p****'),
      sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='The Alibaba Cloud account that manages the source security group when you set a security group rule across accounts.

*   If you do not specify `SourceGroupOwnerAccount` and `SourceGroupOwnerId`, access permissions are configured for another security group managed by your account.
*   If you specify `SourceCidrIp`, `SourceGroupOwnerAccount` becomes invalid.

Valid values of N: 1 to 100.', example='test@aliyun.com'),
      sourceGroupOwnerId?: long(name='SourceGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the source security group when you set security group rule N across accounts.

*   If you do not specify `SourceGroupOwnerAccount` and `SourceGroupOwnerId`, access permissions are configured for another security group managed by your account.
*   If you specify `SourceCidrIp`, `SourceGroupOwnerAccount` is ignored.

Valid values of N: 1 to 100.', example='1234567890'),
      sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Specify a port range in the format of \\<Start port number>/\\<End port number>. Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='7000/8000'),
      sourcePrefixListId?: string(name='SourcePrefixListId', description='The ID of the source prefix list to which you want to control access. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

Valid values of N: 1 to 100.

Take note of the following items:

*   If a security group is in the classic network, you cannot reference prefix lists in the security group rules. For information about the limits on security groups and prefix lists, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota1~~).
*   If you specify `SourceCidrIp`, `Ipv6SourceCidrIp`, or `SourceGroupId`, this parameter is ignored.', example='pl-x1j1k5ykzqlixdcy****'),
    }
  ](name='Permissions', description='Security group rule N. Valid values of N: 1 to 100.', position='Query'),
  policy?: string(name='Policy', description='This parameter is deprecated. Use `Permissions.N.Policy` to specify whether to allow access.', example='accept', deprecated='true', position='Query'),
  portRange?: string(name='PortRange', description='This parameter is deprecated. Use `Permissions.N.PortRange` to specify the range of destination ports.', example='22/22', deprecated='true', position='Query'),
  priority?: string(name='Priority', description='This parameter is deprecated. Use `Permissions.N.Priority` to specify the rule priority.', example='1', deprecated='true', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4p****', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.SourceCidrIp` to specify the source IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  sourceGroupId?: string(name='SourceGroupId', description='This parameter is deprecated. Use `Permissions.N.SourceGroupId` to specify the ID of the source security group.', example='sg-bp67acfmxazb4p****', deprecated='true', position='Query'),
  sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='This parameter is deprecated. Use `Permissions.N.SourceGroupOwnerAccount` to specify the Alibaba Cloud account that manages the source security group.', example='test@aliyun.com', deprecated='true', position='Query'),
  sourceGroupOwnerId?: long(name='SourceGroupOwnerId', description='This parameter is deprecated. Use `Permissions.N.SourceGroupOwnerId` to specify the ID of the Alibaba Cloud account that manages the source security group.', example='1234567890', deprecated='true', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='This parameter is deprecated. Use `Permissions.N.SourcePortRange` to specify the range of source ports.', example='22/22', deprecated='true', position='Query'),
  sourcePrefixListId?: string(name='SourcePrefixListId', description='This parameter is deprecated. Use `Permissions.N.SourcePrefixListId` to specify the ID of the source prefix list.', example='pl-x1j1k5ykzqlixdcy****', deprecated='true', position='Query'),
}

model AuthorizeSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model AuthorizeSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AuthorizeSecurityGroupResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The total number of outbound and inbound rules in each security group cannot exceed 200. For more information, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota1~~).
  * *   The valid values of Priority range from 1 to 100. A smaller value indicates a higher priority.
  * *   When multiple security group rules have the same priority, drop rules take precedence.
  * *   The source can be a CIDR block that is specified by SourceCidrIp, Ipv6SourceCidrIp, or SourcePrefixListId. The source can also be Elastic Compute Service (ECS) instances in a security group that is specified by SourceGroupId.
  * *   You cannot reference security groups as sources or destinations in the rules of advanced security groups.
  * *   You can reference up to 20 security groups as sources or destinations in the rules of each basic security group.
  * *   If the specified security group rule already exists in the security group, the call is successful but no security group rule is created.
  * *   Parameters and their `Permissions.N`-prefixed counterparts cannot be specified at the same time. We recommend that you use the `Permissions.N`-prefixed parameters.
  * *   You can determine a security group rule by specifying one of the following groups of parameters. You cannot determine a security group rule by specifying only one parameter.
  *     *   Parameters used to specify an inbound security group rule that controls access from a specific CIDR block: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, and SourceCidrIp. For a security group of the Virtual Private Cloud (VPC) type, you must set NicType to intranet. For a security group of the classic network type, you can set NicType to either internet or intranet. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourceCidrIp=10.0.0.0/8
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=22/22
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Accept
  *             &<Common request parameters>
  *     *   Parameters used to determine an inbound security group rule that controls access from a security group: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, SourceGroupOwnerAccount, and SourceGroupId. In this case, you must set NicType to intranet. For mutual access between security groups in the classic network, you can allow or deny another security group within the same region access to your security group. The security group that is allowed access to your security group can belong to your own Alibaba Cloud account or another Alibaba Cloud account specified by SourceGroupOwnerAccount. For mutual access between security groups in VPCs, you can allow or deny another security group within the same VPC access to your security group. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourceGroupId=sg-1651FBB**
  *             &Permissions.1.SourceGroupOwnerAccount=test@aliyun.com
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=22/22
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Drop
  *             &<Common request parameters>
  *     *   Parameters used to determine an inbound security group rule that controls access from a prefix list: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, and SourcePrefixListId. In this case, prefix lists support only security groups in VPCs. NicType must be set to intranet. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourcePrefixListId=pl-x1j1k5ykzqlixdcy****
  *             &Permissions.1.SourceGroupOwnerAccount=test@aliyun.com
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=22/22
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Drop
  *             &<Common request parameters>
  * *   For information about examples on security group rule settings, see [Security groups for different use cases](~~25475~~) and [Security group quintuple rules](~~97439~~).
  *
 */
async function authorizeSecurityGroup(request: AuthorizeSecurityGroupRequest): AuthorizeSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AuthorizeSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model AuthorizeSecurityGroupEgressRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='This parameter is deprecated. Use `Permissions.N.Description` to specify the description of security group rule N.', example='This is description.', deprecated='true', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.DestCidrIp` to specify the destination IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  destGroupId?: string(name='DestGroupId', description='This parameter is deprecated. Use `Permissions.N.DestGroupId` to specify the ID of the destination security group.', example='sg-bp67acfmxazb4p****', deprecated='true', position='Query'),
  destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='This parameter is deprecated. Use `Permissions.N.DestGroupOwnerAccount` to specify the Alibaba Cloud account that manages the destination security group.', example='Test@aliyun.com', deprecated='true', position='Query'),
  destGroupOwnerId?: long(name='DestGroupOwnerId', description='This parameter is deprecated. Use `Permissions.N.DestGroupOwnerId` to specify the ID of the Alibaba Cloud account that manages the destination security group.', example='12345678910', deprecated='true', position='Query'),
  destPrefixListId?: string(name='DestPrefixListId', description='This parameter is deprecated. Use `Permissions.N.DestPrefixListId` to specify the ID of the destination prefix list.', example='pl-x1j1k5ykzqlixdcy****', deprecated='true', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='This parameter is deprecated. Use `Permissions.N.IpProtocol` to specify the transport layer protocol.', example='ALL', deprecated='true', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6DestCidrIp` to specify the destination IPv6 CIDR block.', example='2001:db8:1233:1a00::***', deprecated='true', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6SourceCidrIp` to specify the source IPv6 CIDR block.', example='2001:db8:1234:1a00::***', deprecated='true', position='Query'),
  nicType?: string(name='NicType', description='This parameter is deprecated. Use `Permissions.N.NicType` to specify the NIC type.', example='intranet', deprecated='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  permissions?: [ 
    {
      description?: string(name='Description', description='The description of security group rule N. The description must be 1 to 512 characters in length.

Valid values of N: 1 to 100.', example='This is description.'),
      destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      destGroupId?: string(name='DestGroupId', description='The ID of the destination security group to be referenced in security group rule N.

*   At least one of `DestGroupId`, `DestCidrIp`, `Ipv6DestCidrIp`, and `DestPrefixListId` must be configured.
*   If `DestGroupId` is configured but `DestCidrIp` is not configured, the value of `NicType` must be set to intranet.
*   If both `DestGroupId` and `DestCidrIp` are configured, the value of `DestCidrIp` prevails by default.

Valid values of N: 1 to 100.

Take note of the following items:

*   For advanced security groups, security groups cannot be used as authorization objects.
*   For each basic security group, a maximum of 20 security groups can be used as authorization objects.', example='sg-bp67acfmxazb4p****'),
      destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='The Alibaba Cloud account that manages the destination security group when you configure security group rule N across accounts.

*   If both `DestGroupOwnerAccount` and `DestGroupOwnerId` are not configured, the rule is created to control access to another security group within your Alibaba Cloud account.
*   If `DestCidrIp` is configured, `DestGroupOwnerAccount` is ignored.

Valid values of N: 1 to 100.', example='Test@aliyun.com'),
      destGroupOwnerId?: long(name='DestGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the destination security group when you configure security group rule N across accounts.

*   If both `DestGroupOwnerId` and `DestGroupOwnerAccount` are not configured, the rule is created to control access to another security group within your Alibaba Cloud account.
*   If `DestCidrIp` is configured, `DestGroupOwnerId` is ignored.

Valid values of N: 1 to 100.', example='12345678910'),
      destPrefixListId?: string(name='DestPrefixListId', description='The ID of the destination prefix list to be referenced in security group rule N. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

Take note of the following items:

*   If a security group is in the classic network, you cannot reference prefix lists in the security group rules. For information about the limits on security groups and prefix lists, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota1~~).
*   If you configured `DestCidrIp`, `Ipv6DestCidrIp`, or `DestGroupId`, DestPrefixListId is ignored.

Valid values of N: 1 to 100.', example='pl-x1j1k5ykzqlixdcy****'),
      ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of security group rule N. The value of this parameter is case-insensitive. Valid values:

*   TCP.
*   UDP.
*   ICMP.
*   ICMPv6.
*   GRE.
*   ALL: All protocols are supported.

Valid values of N: 1 to 100.', example='ALL'),
      ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

Valid values of N: 1 to 100.

> This parameter takes effect only when the destination is ECS instances that reside in VPCs and support IPv6 CIDR blocks. You cannot configure both this parameter and `DestCidrIp`.', example='2001:db8:1233:1a00::***'),
      ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.

> This parameter takes effect only when the source is ECS instances that reside in VPCs and support IPv6 CIDR blocks. You cannot configure both this parameter and `SourceCidrIp`.', example='2001:db8:1234:1a00::***'),
      nicType?: string(name='NicType', description='The network interface controller (NIC) type of security group rule N when the security group is in the classic network. Valid values:

*   internet: public NIC

*   intranet: internal NIC

    *   If the security group is in a VPC, this parameter is set to intranet by default and cannot be changed.
    *   If you configure only DestGroupId when you configure access between security groups, this parameter must be set to intranet.

Default value: internet.

Valid values of N: 1 to 100.', example='intranet'),
      policy?: string(name='Policy', description='The action of security group rule N that determines whether to allow outbound access. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses. In this case, the request times out or the connection cannot be established.

Default value: accept.

Valid values of N: 1 to 100.', example='accept'),
      portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

Valid values of N: 1 to 100.', example='80/80'),
      priority?: string(name='Priority', description='The priority of security group rule N. A smaller value indicates a higher priority. Valid values: 1 to 100.

Default value: 1.

Valid values of N: 1 to 100.', example='1'),
      sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='80/80'),
    }
  ](name='Permissions', description='The security group rules. Valid values of N: 1 to 100.', position='Query'),
  policy?: string(name='Policy', description='This parameter is deprecated. Use `Permissions.N.Policy` to specify whether to allow outbound access.', example='accept', deprecated='true', position='Query'),
  portRange?: string(name='PortRange', description='This parameter is deprecated. Use `Permissions.N.PortRange` to specify the range of destination ports.', example='80/80', deprecated='true', position='Query'),
  priority?: string(name='Priority', description='This parameter is deprecated. Use `Permissions.N.Priority` to specify the rule priority.', example='1', deprecated='true', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the source security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The security group ID.', example='sg-bp67acfmxazb4p****', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.SourceCidrIp` to specify the source IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='This parameter is deprecated. Use `Permissions.N.SourcePortRange` to specify the range of source ports.', example='80/80', deprecated='true', position='Query'),
}

model AuthorizeSecurityGroupEgressResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model AuthorizeSecurityGroupEgressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: AuthorizeSecurityGroupEgressResponseBody(name='body'),
}

/**
  * In the security group-related API documents, outbound traffic refers to the traffic that is sent by the source device and received at the destination device.
  * When you call this operation, take note of the following items:
  * *   The total number of inbound and outbound security group rules in each security group cannot exceed 200. For more information, see the "Security group limits" section in [](~~25412#SecurityGroupQuota1~~).
  * *   You can set Policy to accept or drop for each security group rule to allow or deny access.
  * *   The valid value of Priority ranges from 1 to 100. A smaller value indicates a higher priority.
  * *   When several security group rules have the same priority, drop rules take precedence.
  * *   The destination can be a CIDR block specified by DestCidrIp, Ipv6DestCidrIp, or DestPrefixListId or can be Elastic Compute Service (ECS) instances in a security group specified by DestGroupId.
  * *   For advanced security groups, security groups cannot be used as authorization objects.
  * *   For each basic security group, a maximum of 20 security groups can be used as authorization objects.
  * *   If the specified security group rule exists in the security group, the call is successful but no security group rule is created.
  * *   The `Permissions.N` prefix is added to some parameters to generate new parameters. Original parameters and corresponding parameters prefixed with Permissions.N cannot be configured together. We recommend that you use parameters prefixed with `Permissions.N`.
  * *   You can determine a security group rule by configuring one of the following groups of parameters. You cannot determine a security group rule by configuring only one parameter.
  *     *   Parameters used to specify a security group rule that controls access to a specified CIDR block: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, and DestCidrIp. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroupEgress
  *             &SecurityGroupId=sg-bp67acfmxazb4ph***
  *             &Permissions.1.IpProtocol=ICMP
  *             &Permissions.1.DestCidrIp=10.0.0.0/8
  *             &Permissions.1.PortRange=-1/-1
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Accept
  *             &<Common request parameters>
  *     *   Parameters used to specify a security group rule that controls access to a security group: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, DestGroupOwnerAccount, and DestGroupId. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroupEgress
  *             &SecurityGroupId=sg-bp67acfmxazb4ph***
  *             &Permissions.1.DestGroupId=sg-bp67acfmxazb4pi***
  *             &Permissions.1.DestGroupOwnerAccount=Test@aliyun.com
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=22/22
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Drop
  *             &<Common request parameters>
  *     *   Parameters used to specify a security group rule that controls access to a prefix list: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, and DestPrefixListId. In this case, prefix lists support only security groups in virtual private clouds (VPCs). NicType must be set to intranet. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=AuthorizeSecurityGroupEgress
  *             &SecurityGroupId=sg-bp67acfmxazb4ph***
  *             &Permissions.1.DestPrefixListId=pl-x1j1k5ykzqlixdcy****
  *             &Permissions.1.DestGroupOwnerAccount=Test@aliyun.com
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=22/22
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=Drop
  *             &<Common request parameters>
  *
 */
async function authorizeSecurityGroupEgress(request: AuthorizeSecurityGroupEgressRequest): AuthorizeSecurityGroupEgressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'AuthorizeSecurityGroupEgress', 'POST', '/', 'json', false, 'json', request);
}

model CancelAutoSnapshotPolicyRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  ownerId?: long(name='OwnerId', description='RAM用户的虚拟账号ID。', example='155780923770', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', description='资源主账号的账号名称。', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', description='资源主账号的ID，亦即UID。', example='155780923770', position='Query'),
  diskIds: string(name='diskIds', description='The IDs of the disks for which you want to disable the automatic snapshot policy. To disable the automatic snapshot policy for multiple disks, you can set this parameter to a JSON array that consists of multiple disk IDs, such as \\["dxxxxxxxxx", "dyyyyyyyyy", … "dzzzzzzzzz"]. Separate the disk IDs with commas (,).', example='["d-bp14k9cxvr5uzy54****", "d-bp1dtj8v7x6u08iw****", "d-bp1c0tyj9tfli2r8****"]', position='Query'),
  regionId: string(name='regionId', description='The region ID of the automatic snapshot policy and the disks. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model CancelAutoSnapshotPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CancelAutoSnapshotPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelAutoSnapshotPolicyResponseBody(name='body'),
}

async function cancelAutoSnapshotPolicy(request: CancelAutoSnapshotPolicyRequest): CancelAutoSnapshotPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelAutoSnapshotPolicy', 'POST', '/', 'json', false, 'json', request);
}

model CancelCopyImageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageId: string(name='ImageId', description='The ID of the image that is being copied.', example='m-bp1caf3yicx5jlfl****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image copy. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CancelCopyImageResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CancelCopyImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelCopyImageResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   After you cancel an image copy task, the image copy created in the destination region is deleted, and the copied image remains unchanged.
  * *   If the image copy task is complete, the CancelCopyImage operation fails, and an error is returned.
  *
 */
async function cancelCopyImage(request: CancelCopyImageRequest): CancelCopyImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelCopyImage', 'POST', '/', 'json', false, 'json', request);
}

model CancelImagePipelineExecutionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  executionId: string(name='ExecutionId', description='The ID of the image build task.', example='exec-5fb8facb8ed7427c****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image build task. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateTag?: [ 
    {
      key?: string(name='Key', description='>  This parameter is deprecated.', example='null'),
      value?: string(name='Value', description='>  This parameter is deprecated.', example='null'),
    }
  ](name='TemplateTag', description='> This parameter is deprecated.', position='Query'),
}

model CancelImagePipelineExecutionResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CancelImagePipelineExecutionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelImagePipelineExecutionResponseBody(name='body'),
}

/**
  * Before you call this operation, make sure that the image build task to be canceled is in the BUILDING, DISTRIBUTING, or RELEASING state.
  *
 */
async function cancelImagePipelineExecution(request: CancelImagePipelineExecutionRequest): CancelImagePipelineExecutionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelImagePipelineExecution', 'POST', '/', 'json', false, 'json', request);
}

model CancelPhysicalConnectionRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model CancelPhysicalConnectionResponseBody = {
  requestId?: string(name='RequestId'),
}

model CancelPhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelPhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function cancelPhysicalConnection(request: CancelPhysicalConnectionRequest): CancelPhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelPhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model CancelSimulatedSystemEventsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  eventId: [ string ](name='EventId', description='The IDs of simulated system events. You can specify up to 100 event IDs in a single request.', example='e-xhskHun1256****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CancelSimulatedSystemEventsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CancelSimulatedSystemEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelSimulatedSystemEventsResponseBody(name='body'),
}

async function cancelSimulatedSystemEvents(request: CancelSimulatedSystemEventsRequest): CancelSimulatedSystemEventsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelSimulatedSystemEvents', 'POST', '/', 'json', false, 'json', request);
}

model CancelTaskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the task. You can call the [DescribeTasks](~~25622~~) operation to query the list of task IDs.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  taskId: string(name='TaskId', description='The ID of the request.', example='t-bp198jigq7l0h5ac****', position='Query'),
}

model CancelTaskResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CancelTaskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CancelTaskResponseBody(name='body'),
}

async function cancelTask(request: CancelTaskRequest): CancelTaskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CancelTask', 'POST', '/', 'json', false, 'json', request);
}

model ConnectRouterInterfaceRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
}

model ConnectRouterInterfaceResponseBody = {
  requestId?: string(name='RequestId'),
}

model ConnectRouterInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ConnectRouterInterfaceResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function connectRouterInterface(request: ConnectRouterInterfaceRequest): ConnectRouterInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ConnectRouterInterface', 'POST', '/', 'json', false, 'json', request);
}

model ConvertNatPublicIpToEipRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance whose public IP address you want to convert into an EIP.', example='i-bp171jr36ge2ulvk****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ConvertNatPublicIpToEipResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ConvertNatPublicIpToEipResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ConvertNatPublicIpToEipResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * After a public IP address is converted into an EIP, the EIP is billed separately. Make sure that you fully understand the billing methods of EIPs. For more information, see [Billing overview](~~122035~~).
  * When you call this operation, make sure that the ECS instance meets the following requirements:
  * *   The instance is in the **Stopped** (`Stopped`) or **Running** (`Running`) state.
  * *   The instance has no EIPs associated.
  * *   The instance has no configuration change tasks that have not taken effect.
  * *   The public bandwidth of the instance is not 0 Mbit/s.
  * *   If the instance is a subscription instance, the billing method for network usage of the instance must be `pay-by-traffic`. The public IP address of a subscription instance that uses the `pay-by-bandwidth` billing method for network usage cannot be converted into an EIP. This requirement does not apply to pay-as-you-go instances. For more information, see [Change the billing method for network usage](~~178883~~).
  * *   If the instance is a subscription instance that resides in a VPC, the instance does not expire within 24 hours.
  *
 */
async function convertNatPublicIpToEip(request: ConvertNatPublicIpToEipRequest): ConvertNatPublicIpToEipResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ConvertNatPublicIpToEip', 'POST', '/', 'json', false, 'json', request);
}

model CopyImageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  destinationDescription?: string(name='DestinationDescription', description='The description of the image copy. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This is a description example.', position='Query'),
  destinationImageName?: string(name='DestinationImageName', description='The name of the new image. The name must be 2 to 128 characters in length. The name must start with a letter and cannot contain `http://` or `https://`. The name cannot start with `acs:` or `aliyun`. The name can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).', example='YourImageName', position='Query'),
  destinationRegionId?: string(name='DestinationRegionId', description='The ID of the destination region to which the source custom image is copied.', example='cn-shanghai', position='Query'),
  encryptAlgorithm?: string(name='EncryptAlgorithm', description='> This parameter is unavailable.', example='hide', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the new image.

*   true
*   false

Default value: false.', example='false', position='Query'),
  imageId: string(name='ImageId', description='The ID of the source custom image.', example='m-bp1h46wfpjsjastc****', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the key used to encrypt the image copy.', example='e522b26d-abf6-4e0d-b5da-04b7******3c', maxLength=64, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the source custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the new image. If you do not specify this parameter, the new image is assigned to the default resource group.

>  If you call the CopyImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbidden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CopyImage operation again.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the image copy. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `aliyun` or `acs:`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the image copy. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot start with `acs:`. It cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
}

model CopyImageResponseBody = {
  imageId?: string(name='ImageId', description='The ID of the image copy.', example='m-bp1h46wfpjsjastd****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CopyImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CopyImageResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * After you copy a custom image to the destination region, you can use the image copy (new image) to create ECS instances by calling the RunInstances operation or replace the system disks of instances by calling the ReplaceSystemDisk operation in the destination region.
  * Take note of the following items:
  * *   Only custom images that are in the `Available` state can be copied.
  * *   Custom images that you want to copy must belong to your Alibaba Cloud account or be shared to you by others, and cannot be copied across accounts.
  * *   When an image is being copied, the image cannot be deleted by calling the [DeleteImage](~~25537~~) operation. However, you can cancel the ongoing image copy task by calling the [CancelCopyImage](~~25539~~) operation.
  * *   A region can have only one ongoing image copy task at a time. Other image copy tasks queue up to run in sequence after the ongoing task is completed.
  * *   You can configure `ResourceGroupId` to specify the resource group to which to assign the new image. If you do not configure `ResourceGroupId`, the new image is assigned to the default resource group.
  *
 */
async function copyImage(request: CopyImageRequest): CopyImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CopyImage', 'POST', '/', 'json', false, 'json', request);
}

model CopySnapshotRequest {
  arn?: [ 
    {
      assumeRoleFor?: long(name='AssumeRoleFor', description='> This parameter is not publicly available.', example='0'),
      roleType?: string(name='RoleType', description='> This parameter is not publicly available.', example='null'),
      rolearn?: string(name='Rolearn', description='> This parameter is not publicly available.', example='null'),
    }
  ](name='Arn', description='>This parameter is currently in invitational preview and unavailable for public use.', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  destinationRegionId: string(name='DestinationRegionId', description='The ID of the destination region to which to copy the source snapshot.', example='us-east-1', position='Query'),
  destinationSnapshotDescription: string(name='DestinationSnapshotDescription', description='The description of the new snapshot. The description must be 2 to 256 characters in length and cannot start with http:// or https://.

This parameter is empty by default.', example='CopySnapshotDemo', position='Query'),
  destinationSnapshotName: string(name='DestinationSnapshotName', description='The name of the new snapshot. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

This parameter is left empty by default.', example='CopySnapshotDemo', position='Query'),
  destinationStorageLocationArn?: string(name='DestinationStorageLocationArn', description='>  This parameter is not publicly available.', example='null', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the new snapshot. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the customer master key (CMK) in Key Management Service (KMS) in the destination region.', example='0e478b7a-4262-4802-b8cb-00d3fb40****', maxLength=64, position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the source snapshot. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-chengdu', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='This parameter is not publicly available.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  retentionDays?: int32(name='RetentionDays', description='The retention period of the new snapshot. Unit: days. The new snapshot is automatically released when its retention period ends. Valid values: 1 to 65536.

This parameter is empty by default, which indicates that the snapshot is not automatically released.', example='60', position='Query'),
  snapshotId: string(name='SnapshotId', description='The ID of the source snapshot.', example='s-bp67acfmxazb4p****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the new snapshot. The tag key cannot be an empty string. It can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain http:// or https://.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the new snapshot. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='Tag', description='The tag key and value of the new snapshot.', position='Query'),
}

model CopySnapshotResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='C8B26B44-0189-443E-9816-D951F596****'),
  snapshotId?: string(name='SnapshotId', description='The ID of the new snapshot.', example='s-bp17441ohwka0yui****'),
}

model CopySnapshotResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CopySnapshotResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   New snapshots (snapshot copies) cannot be used to roll back the disks for which source snapshots (copied snapshots) were created.
  * *   Local snapshots cannot be copied.
  *
 */
async function copySnapshot(request: CopySnapshotRequest): CopySnapshotResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CopySnapshot', 'POST', '/', 'json', false, 'json', request);
}

model CreateActivationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  description?: string(name='Description', description='The description of the activation code. It must be 1 to 100 characters in length.', example='This is description.', position='Query'),
  instanceCount?: int32(name='InstanceCount', description='The maximum number of times that you can use the activation code to register managed instances. Valid values: 1 to 1000.

Default value: 10.', example='10', position='Query'),
  instanceName?: string(name='InstanceName', description='The default instance name prefix. The instance name prefix must be 2 to 50 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, periods (.), underscores (\\_), hyphens (-), and colons (:).

If you use the activation code that is created by calling this operation (CreateActivation) to register managed instances, the instances are assigned sequential names that are prefixed by the value of this parameter. You can also specify a new instance name to replace the assigned sequential name when you register a managed instance.

If you specify InstanceName when you register a managed instance, an instance name in the format of `<InstanceName>-<Number>` is generated. The number of digits in the \\<Number> value is determined by that in the `InstanceCount` value. Example: `001`. If you do not specify InstanceName, the hostname (Hostname) is used as the instance name.', example='test-InstanceName', position='Query'),
  ipAddressRange?: string(name='IpAddressRange', description='The IP addresses of hosts that can use the activation code. The value can be IPv4 addresses, IPv6 addresses, or CIDR blocks.', example='0.0.0.0/0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the activation code. Supported regions: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Ulanqab), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), China (Guangzhou), China (Chengdu), China (Hong Kong), Singapore, Japan (Tokyo), US (Silicon Valley), and US (Virginia).

You can all the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the activation code.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the activation code. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call [ListTagResources](~~110425~~).

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the activation code. Valid values of N: 1 to 20. The tag value can be an empty string.

It can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the activation code.', position='Query'),
  timeToLiveInHours?: long(name='TimeToLiveInHours', description='The validity period of the activation code. The activation code can no longer be used to register instances after the period expires. Unit: hours. Valid values: 1 to 876576, which represents a range of time from 1 hour to 100 years.

Default value: 4.', example='4', position='Query'),
}

model CreateActivationResponseBody = {
  activationCode?: string(name='ActivationCode', description='The value of the activation code. The value is returned only once after the CreateActivation operation is called and cannot be queried afterward. Properly save the return value.', example='a-hz0ch3SwhOlE1234+Xo32lAZC****'),
  activationId?: string(name='ActivationId', description='The ID of the activation code.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****'),
}

model CreateActivationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateActivationResponseBody(name='body'),
}

/**
  * After you use an activation code to register a server that is not provided by Alibaba Cloud as an Alibaba Cloud managed instance, you can use various online services of Alibaba Cloud, such as Cloud Assistant, CloudOps Orchestration Service (OOS), and Apsara Devops, on the managed instance. 
  * If a server is not provided by Alibaba Cloud, you can register the server as an Alibaba Cloud managed instance only if the server has Internet connectivity and runs an operating system of one of the following versions: 
  * - Alibaba Cloud Linux 2, Alibaba Cloud Linux 3, and later
  * - CentOS 6, CentOS 7, CentOS 8, and later
  * - Debian 8, Debian 9, Debian 10, and later
  * - Ubuntu 12, Ubuntu 14, Ubuntu 16, Ubuntu 18, and later
  * - CoreOS
  * - OpenSUSE
  * - Red Hat 5, Red Hat 6, Red Hat 7, and later
  * - SUSE Linux Enterprise Server (SLES) 11, SLES 12, SLES 15, and later
  * - Windows Server 2012, Windows Server 2016, Windows Server 2019, and later
  * You can have up to 5,000 activation codes per Alibaba Cloud region. When the number of activation codes exceeds 1,000, the usage of the activation codes must be greater than 50% before you can proceed to create more activation codes. 
  * >To query the usage of activation codes, go to the Cloud Assistant page in the Elastic Compute Service (ECS) console, click the Manage Instances tab, and then click Register Instance.
  *
 */
async function createActivation(request: CreateActivationRequest): CreateActivationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateActivation', 'POST', '/', 'json', false, 'json', request);
}

model CreateAutoProvisioningGroupRequest {
  launchConfiguration?: {
    arn?: [ 
      {
        assumeRoleFor?: long(name='AssumeRoleFor', description='This parameter is not publicly available.', example='123456789012****'),
        roleType?: string(name='RoleType', description='This parameter is not publicly available.', example='34458433936495****:alice'),
        rolearn?: string(name='Rolearn', description='This parameter is not publicly available.', example='acs:ram::123456789012****:role/adminrole'),
      }
    ](name='Arn', description='This parameter is unavailable for public use.'),
    autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the pay-as-you-go instance. Specify the time in the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in Coordinated Universal Time (UTC).

*   If the value of `ss` is not `00`, the start time is automatically rounded down to the nearest minute based on the value of `mm`.
*   The specified time must be at least 30 minutes later than the current time.
*   The specified time can be at most three years later than the current time.', example='2018-01-01T12:05:00Z'),
    creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in the [Overview of burstable instances](~~59977~~) topic.
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in the [Overview of burstable instances](~~59977~~) topic.

This parameter is empty by default.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='Standard'),
    dataDisk?: [ 
      {
        burstingEnabled?: boolean(name='BurstingEnabled'),
        category?: string(name='Category', description='The category of data disk N. Valid values of N: 1 to 16. Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD
*   cloud: basic disk

For I/O optimized instances, the default value is cloud_efficiency. For non-I/O optimized instances, the default value is cloud.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='cloud_ssd'),
        deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release data disk N when the instance to which the data disk is attached is released. Valid values:

*   true
*   false

Default value: true.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='true'),
        description?: string(name='Description', description='The description of data disk N. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='DataDisk_Description'),
        device?: string(name='Device', description='The mount point of data disk N. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='/dev/vd1'),
        diskName?: string(name='DiskName', description='The name of data disk N. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).

By default, this parameter is left empty.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='cloud_ssdData'),
        encryptAlgorithm?: string(name='EncryptAlgorithm'),
        encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt data disk N. Valid values:

*   true
*   false

Default value: false.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='false'),
        kmsKeyId?: string(name='KmsKeyId', description='The ID of the Key Management Service (KMS) key to use for data disk N. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
        performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as data disk N. The value of N in this parameter must be the same as the value of N in `LaunchConfiguration.DataDisk.N.Category`. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For information about ESSD performance levels, see [ESSDs](~~122389~~).

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='PL1'),
        provisionedIops?: long(name='ProvisionedIops'),
        size?: int32(name='Size', description='The size of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values if you set LaunchConfiguration.DataDisk.N.Category to cloud_efficiency: 20 to 32768.

*   Valid values if you set LaunchConfiguration.DataDisk.N.Category to cloud_ssd: 20 to 32768.

*   Valid values if you set LaunchConfiguration.DataDisk.N.Category to cloud_essd: vary based on the `LaunchConfiguration.DataDisk.N.PerformanceLevel` value.

    *   Valid values if you set LaunchConfiguration.DataDisk.N.PerformanceLevel to PL0: 40 to 32768.
    *   Valid values if you set LaunchConfiguration.DataDisk.N.PerformanceLevel to PL1: 20 to 32768.
    *   Valid values if you set LaunchConfiguration.DataDisk.N.PerformanceLevel to PL2: 461 to 32768.
    *   Valid values if you set LaunchConfiguration.DataDisk.N.PerformanceLevel to PL3: 1261 to 32768.

*   Valid values if you set LaunchConfiguration.DataDisk.N.Category to cloud: 5 to 2000.

>  The value of this parameter must be greater than or equal to the size of the snapshot specified by `LaunchConfiguration.DataDisk.N.SnapshotId`.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='20'),
        snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create data disk N. Valid values of N: 1 to 16.

After this parameter is specified, `LaunchConfiguration.DataDisk.N.Size` is ignored. The size of data disk N is the same as that of the snapshot specified by this parameter. Use snapshots created on or after July 15, 2013. Otherwise, an error is returned and your request is rejected.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='s-bp17441ohwka0yuh****'),
      }
    ](name='DataDisk', description='The cloud disks in the extended configurations of the launch template.'),
    deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set.', example='ds-bp1frxuzdg87zh4p****'),
    hostName?: string(name='HostName', description='The instance hostname. Take note of the following items:

*   The hostname cannot start or end with a period (.) or hyphen (-). The hostname cannot contain consecutive periods (.) or hyphens (-).
*   For Windows instances, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. It can contain letters, digits, and hyphens (-).
*   For instances that run other operating systems such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate a hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).
*   You cannot specify both `LaunchConfiguration.HostName` and `LaunchConfiguration.HostNames.N`. Otherwise, an error is returned.
*   When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='k8s-node-[1,4]-ecshost'),
    hostNames?: [ string ](name='HostNames', description='The hostname of instance N. You can use this parameter to specify different hostnames for multiple instances. Take note of the following items:

- This parameter takes effect only when `AutoProvisioningGroupType` is set to instant. 
- The value of N indicates the number of instances. Valid values of N: 1 to 1000. The value of N must be the same as the TotalTargetCapacity value. 
- The hostname cannot start or end with a period (.) or hyphen (-). The hostname cannot contain consecutive periods (.) or hyphens (-). 
- For Windows instances, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. The hostname can contain letters, digits, and hyphens (-). 
- For instances that run other operating systems such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate the hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-). 
- You cannot specify both `LaunchConfiguration.HostName` and `LaunchConfiguration.HostNames.N`. Otherwise, an error is returned. 
- When both LaunchTemplateId and LaunchConfiguration.* parameters are specified, LaunchTemplateId takes precedence.', example='ecs-host-01'),
    imageFamily?: string(name='ImageFamily', description='The name of the image family. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `aliyun` or `acs:`. The name cannot contain `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='hangzhou-daily-update'),
    imageId?: string(name='ImageId', description='The ID of the image to be used to create the instance. You can call the [DescribeImages](~~25534~~) operation to query available image resources. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='m-bp1g7004ksh0oeuc****'),
    instanceDescription?: string(name='InstanceDescription', description='The instance description. The description must be 2 to 256 characters in length. The description can contain letters and cannot start with `http://` or `https://`. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='Instance_Description'),
    instanceName?: string(name='InstanceName', description='The instance name. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

The default value of this parameter is the `InstanceId` value.

When you batch create instances, you can batch configure sequential names for the instances. For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='k8s-node-[1,4]-alibabacloud'),
    internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic

>  When the pay-by-traffic billing method for network usage is used, the maximum inbound and outbound bandwidth values are used as the upper limits of bandwidth instead of guaranteed performance specifications. When demands outstrip resource supplies, the maximum bandwidths may be limited. If you want guaranteed bandwidth for your instance, use the pay-by-bandwidth billing method.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='PayByTraffic'),
    internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the maximum outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of this parameter are 1 to 10 and the default value is 10.
*   When the maximum outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter are 1 to the value of `LaunchConfiguration.InternetMaxBandwidthOut`, and the default value is the value of `LaunchConfiguration.InternetMaxBandwidthOut`.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='10'),
    internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.

Default value: 0.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='10'),
    ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: The instance is I/O optimized.

For instances of retired instance types, the default value is none. For instances of other instance types, the default value is optimized.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='optimized'),
    keyPairName?: string(name='KeyPairName', description='The key pair name.

*   For Windows instances, this parameter is ignored. This parameter is empty by default.
*   By default, password-based logon is disabled for Linux instances.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='KeyPair_Name'),
    password?: string(name='Password', description='The instance password. The password must be 8 to 30 characters in length and contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. The password can contain the following special characters:

``( ) ` ~ ! @ # $ % ^ & * - _ + = | { }  ``: ; \\" < > , . ? /``  For Windows instances, the password cannot start with a forward slash (/). When both LaunchTemplateId and LaunchConfiguration.* parameters are specified, LaunchTemplateId takes precedence. `', example='EcsV587!'),
    passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password preset in the image. Valid values:

*   true: uses the password preset in the image.
*   false: does not use the password preset in the image.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='true'),
    ramRoleName?: string(name='RamRoleName', description='The name of the instance Resource Access Management (RAM) role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='RAM_Name'),
    resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the instance. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='rg-bp67acfmxazb4p****'),
    securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening. Valid values:

*   Active: enables security hardening. This value is applicable only to public images.
*   Deactive: disables security hardening. This value is applicable to all image types.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='Active'),
    securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the instance. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='sg-bp15ed6xe1yxeycg****'),
    securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups to which the new ECS instances belong.'),
    systemDisk?: {
      burstingEnabled?: boolean(name='BurstingEnabled'),
      encryptAlgorithm?: string(name='EncryptAlgorithm', description='The algorithm to use to encrypt system disk N. Valid values:

*   aes-256
*   sm4-128

Default value: aes-256.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='aes-256'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt system disk N. Valid values:

*   true
*   false

Default value: false.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='false'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key to use for system disk N.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      provisionedIops?: long(name='ProvisionedIops'),
    }(name='SystemDisk', description='The system disk information of instances. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.'),
    systemDiskCategory?: string(name='SystemDiskCategory', description='The category of the system disk. Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: enhanced SSD (ESSD)
*   cloud: basic disk

For non-I/O optimized instances of retired instance types, the default value is cloud. For other instances, the default value is cloud_efficiency.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='cloud_ssd'),
    systemDiskDescription?: string(name='SystemDiskDescription', description='The description of the system disk. The description must be 2 to 256 characters in length. The description can contain letters and cannot start with `http://` or `https://`.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='SystemDisk_Description'),
    systemDiskName?: string(name='SystemDiskName', description='The name of the system disk. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).

This parameter is empty by default.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='cloud_ssdSystem'),
    systemDiskPerformanceLevel?: string(name='SystemDiskPerformanceLevel', description='The performance level of the ESSD to be used as the system disk. Valid values:

*   PL0 (default): A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='PL0'),
    systemDiskSize?: int32(name='SystemDiskSize', description='The size of the system disk. Valid values: 20 to 500. Unit: GiB. The value must be at least 20 and greater than or equal to the size of the image specified by LaunchConfiguration.ImageId.

Default value: 40 or the size of the image specified by LaunchConfiguration.ImageId, whichever is greater.

When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='40'),
    tag?: [ 
      {
        key?: string(name='Key', description='The key of the tag. Valid values of N: 1 to 20. The tag key cannot be an empty string. It can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain `http://` or `https://`. If both the LaunchTemplateId and LaunchConfiguration.* parameters are specified, the LaunchTemplateId parameter takes precedence.', example='TestKey'),
        value?: string(name='Value', description='The value of the tag. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length. It cannot start with acs: or contain `http://` or `https://`. If both the LaunchTemplateId and LaunchConfiguration.* parameters are specified, the LaunchTemplateId parameter takes precedence.', example='TestValue'),
      }
    ](name='Tag', description='The tag in the extended configurations of the launch template.'),
    userData?: string(name='UserData', description='The instance user data. The user data must be encoded in Base64. The raw data can be up to 32 KB in size. When both LaunchTemplateId and LaunchConfiguration.\\* parameters are specified, LaunchTemplateId takes precedence.', example='ZWNobyBoZWxsbyBlY3Mh'),
  }(name='LaunchConfiguration', position='Query'),
  autoProvisioningGroupName?: string(name='AutoProvisioningGroupName', description='The name of the auto provisioning group. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='apg-test', position='Query'),
  autoProvisioningGroupType?: string(name='AutoProvisioningGroupType', description='The delivery type of the auto provisioning group. Valid values:

*   request: one-time asynchronous delivery. When the auto provisioning group is started, it attempts to asynchronously deliver an instance cluster that meets the target capacity only once. The group does not retry the operation regardless of whether all the instances are delivered.
*   instant: one-time synchronous delivery. When the auto provisioning group is started, it attempts to synchronously deliver an instance cluster that meets the target capacity only once. The list of delivered instances and the causes of delivery failures are returned in the response.
*   maintain: continuous delivery. When the auto provisioning group is started, it attempts to deliver an instance cluster that meets the target capacity, and monitors the real-time capacity. If the target capacity of the auto provisioning group is not reached, the auto provisioning group continues to create instances until the target capacity is reached.

Default value: maintain.', example='maintain', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  dataDiskConfig?: [ 
    {
      diskCategory?: string(name='DiskCategory', description='The category of data disk N. You can use this parameter to specify multiple disk categories, and the disk categories are prioritized in the order in which they are specified. If a specified disk category is unavailable, the system uses the next available disk category. Valid values:

- cloud_efficiency: ultra disk
- cloud_ssd: standard SSD
- cloud_essd: ESSD
- cloud: basic disk', example='cloud_efficiency'),
    }
  ](name='DataDiskConfig', description='The information of data disks on the instance.', position='Query'),
  defaultTargetCapacityType?: string(name='DefaultTargetCapacityType', description='The type of supplemental instances. When the sum of the `PayAsYouGoTargetCapacity` and `SpotTargetCapacity` values is smaller than the `TotalTargetCapacity` value, the auto provisioning group creates instances of the specified type to meet the total target capacity. Valid values:

*   PayAsYouGo: pay-as-you-go instances
*   Spot: preemptible instances.

Default value: Spot.', example='Spot', position='Query'),
  description?: string(name='Description', description='The description of the auto provisioning group.', example='testDescription', position='Query'),
  excessCapacityTerminationPolicy?: string(name='ExcessCapacityTerminationPolicy', description='Specifies whether to release scaled-in instances when the real-time capacity of the auto provisioning group exceeds the target capacity and the group is triggered to scale in. Valid values:

*   termination: releases the scaled-in instances in the auto provisioning group.
*   no-termination: only removes the scaled-in instances from the auto provisioning group but does not release the instances.

Default value: no-termination.', example='termination', position='Query'),
  hibernationOptionsConfigured?: boolean(name='HibernationOptionsConfigured', description='>This parameter is in invitational preview and is not publicly available.', example='false', position='Query'),
  launchTemplateConfig?: [ 
    {
      architectures?: [ string ](name='Architectures', description='The architectures of the instance types.'),
      burstablePerformance?: string(name='BurstablePerformance', description='Specifies whether to include burstable instance types. Valid values:

*   Exclude: does not include burstable instance types.
*   Include: includes burstable instance types.
*   Required: includes only burstable instance types.

Default value: Include.', example='Include'),
      cores?: [ int32 ](name='Cores', description='The number of vCPU cores of the instance type.'),
      excludedInstanceTypes?: [ string ](name='ExcludedInstanceTypes', description='The instance types that you want to exclude.'),
      instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The instance family level of the instance type in extended configuration N. This parameter is used to filter instance types. Valid values:

*   EntryLevel: entry level (shared instance types). Instance types of this level are the most cost-effective but may not provide stable computing performance. Instance types of this level are suitable for scenarios in which the CPU utilization is low. For more information, see [Shared instance families](~~108489~~).
*   EnterpriseLevel: enterprise level. Instance types of this level provide stable performance and dedicated resources and are suitable for scenarios that require high stability. For more information, see the [Overview of instance families](~~25378~~) topic.
*   CreditEntryLevel: credit entry level (burstable instance types). CPU credits are used to ensure computing performance. Instance types of this level are suitable for scenarios in which the CPU utilization is low but may fluctuate in specific cases. For more information, see [Overview of burstable instances](~~59977~~).

Valid values of N: 1 to 10.', example='EnterpriseLevel'),
      instanceType?: string(name='InstanceType', description='The instance type in extended configuration N. Valid values of N: 1 to 20. For more information about the valid values of this parameter, see [Instance families](~~25378~~).', example='ecs.g5.large'),
      maxPrice?: double(name='MaxPrice', description='The maximum price of preemptible instances in extended configuration N.

>  If you specify one or more other `LaunchTemplateConfig.N.*` parameters, you must also specify `LaunchTemplateConfig.N.MaxPrice`.', example='3'),
      maxQuantity?: int32(name='MaxQuantity', description='>  This parameter is in invitational preview and is not publicly available.', example='false'),
      memories?: [ float ](name='Memories', description='The memory sizes of the instance type.'),
      priority?: int32(name='Priority', description='The priority of extended configuration N. A value of 0 indicates the highest priority. Valid values: 0 to ∞.', example='1'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch in extended configuration N. The zone of the ECS instances created from the extended configuration is determined by the vSwitch.

>  If you specify one or more other `LaunchTemplateConfig.N.*` parameters, you must also specify `LaunchTemplateConfig.N.VSwitchId`.', example='vsw-sn5bsitu4lfzgc5o7****'),
      weightedCapacity?: double(name='WeightedCapacity', description='The weight of the instance type in extended configuration N. A greater weight indicates that a single instance has more computing power and fewer instances are required. The value must be greater than 0.

The weight is calculated based on the computing power of the specified instance type and the minimum computing power of a single instance in the cluster to be created by the auto provisioning group. For example, assume that the minimum computing power of a single instance is 8 vCPUs and 60 GiB of memory.

*   For an instance type with 8 vCPUs and 60 GiB of memory, you can set the weight to 1.
*   For an instance type with 16 vCPUs and 120 GiB of memory, you can set the weight to 2.', example='2'),
    }
  ](name='LaunchTemplateConfig', description='The extended configurations of the launch template.', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template associated with the auto provisioning group. You can call the [DescribeLaunchTemplates](~~73759~~) operation to query available launch templates. When both LaunchTemplateId and `LaunchConfiguration.*` parameters are specified, LaunchTemplateId takes precedence.', example='lt-bp1fgzds4bdogu03****', position='Query'),
  launchTemplateVersion?: string(name='LaunchTemplateVersion', description='The version of the launch template associated with the auto provisioning group. You can call the [DescribeLaunchTemplateVersions](~~73761~~) operation to query the versions of available launch templates.

Default value: the default version of the launch template.', example='1', position='Query'),
  maxSpotPrice?: float(name='MaxSpotPrice', description='The maximum price of preemptible instances in the auto provisioning group.

>  When both `MaxSpotPrice` and `LaunchTemplateConfig.N.MaxPrice` are specified, the smaller one of the two parameter values is used.', example='2', position='Query'),
  minTargetCapacity?: string(name='MinTargetCapacity', description='The minimum target capacity of the auto provisioning group. The value must be a positive integer. When you specify this parameter, take note of the following items:

- This parameter takes effect only when `AutoProvisioningGroupType` is set to instant. 
- If the number of instances that can be created in the current region is smaller than the value of this parameter, the operation cannot be called and no instances are created. 
- If the number of instances that can be created in the current region is greater than the value of this parameter, instances can be created based on the specified parameters.', example='20', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  payAsYouGoAllocationStrategy?: string(name='PayAsYouGoAllocationStrategy', description='The policy for creating pay-as-you-go instances. Valid values:

*   lowest-price: cost optimization policy. The auto provisioning group selects the lowest-priced instance type to create instances.
*   prioritized: priority-based policy. The auto provisioning group creates instances based on the priority specified by `LaunchTemplateConfig.N.Priority`.

Default value: lowest-price.', example='prioritized', position='Query'),
  payAsYouGoTargetCapacity?: string(name='PayAsYouGoTargetCapacity', description='The target capacity of pay-as-you-go instances in the auto provisioning group. The value must be less than or equal to the `TotalTargetCapacity` value.', example='30', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the auto provisioning group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the auto provisioning group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  spotAllocationStrategy?: string(name='SpotAllocationStrategy', description='The policy for creating preemptible instances. Valid values:

*   lowest-price: cost optimization policy. The auto provisioning group selects the lowest-priced instance type to create instances.
*   diversified: balanced distribution policy. The auto provisioning group creates instances in zones that are specified in extended configurations and then evenly distributes the instances across the zones.
*   capacity-optimized: capacity-optimized distribution policy. The auto provisioning group creates instances of the optimal instance types across the optimal zones based on resource availability.

Default value: lowest-price.', example='diversified', position='Query'),
  spotInstanceInterruptionBehavior?: string(name='SpotInstanceInterruptionBehavior', description='The operation to be performed on the preemptible instance when it is interrupted. Valid values:

*   stop: stops the preemptible instance.
*   terminate: releases the preemptible instance.

Default value: terminate.', example='terminate', position='Query'),
  spotInstancePoolsToUseCount?: int32(name='SpotInstancePoolsToUseCount', description='The number of preemptible instances of the lowest-priced instance type to be created by the auto provisioning group. This parameter takes effect when `SpotAllocationStrategy` is set to `lowest-price`.

The value must be smaller than the N value specified in `LaunchTemplateConfig.N`.', example='2', position='Query'),
  spotTargetCapacity?: string(name='SpotTargetCapacity', description='The target capacity of preemptible instances in the auto provisioning group. The value must be less than or equal to the `TotalTargetCapacity` value.', example='20', position='Query'),
  systemDiskConfig?: [ 
    {
      diskCategory?: string(name='DiskCategory', description='The category of the system disk. You can specify multiple disk categories, and the disk categories are prioritized in the order in which they are specified. If a specified disk category is unavailable, the system uses the next available disk category. Valid values:

- cloud_efficiency: ultra disk.
- cloud_ssd: standard SSD.
- cloud_essd: ESSD
- cloud: basic disk.', example='cloud_ssd'),
    }
  ](name='SystemDiskConfig', description='The information of system disks on the instance.', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the auto provisioning group.

Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the auto provisioning group.

Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the auto provisioning group.', position='Query'),
  terminateInstances?: boolean(name='TerminateInstances', description='Specifies whether to release instances in the auto provisioning group when the auto provisioning group is deleted. Valid values:

*   true: releases the instances.
*   false: retains the instances.

Default value: false.', example='true', position='Query'),
  terminateInstancesWithExpiration?: boolean(name='TerminateInstancesWithExpiration', description='Specifies whether to release instances in the auto provisioning group when the group expires. Valid values:

*   true: releases the instances.
*   false: only removes the instances from the auto provisioning group but does not release them.

Default value: false.', example='true', position='Query'),
  totalTargetCapacity: string(name='TotalTargetCapacity', description='The total target capacity of the auto provisioning group. The value must be a positive integer.

The total target capacity of the auto provisioning group must be greater than or equal to the sum of the target capacity of pay-as-you-go instances specified by `PayAsYouGoTargetCapacity` and the target capacity of preemptible instances specified by `SpotTargetCapacity`.', example='60', position='Query'),
  validFrom?: string(name='ValidFrom', description='The time at which to start the auto provisioning group. The period of time between this point in time and the point in time specified by `ValidUntil` is the validity period of the auto provisioning group.

Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

By default, an auto provisioning group is started immediately after it is created.', example='2019-04-01T15:10:20Z', position='Query'),
  validUntil?: string(name='ValidUntil', description='The time at which the auto provisioning group expires. The period of time between this point in time and the point in time specified by `ValidFrom` is the validity period of the auto provisioning group.

Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

Default value: 2099-12-31T23:59:59Z.', example='2019-06-01T15:10:20Z', position='Query'),
}

model CreateAutoProvisioningGroupResponseBody = {
  autoProvisioningGroupId?: string(name='AutoProvisioningGroupId', description='The ID of the auto provisioning group.', example='apg-sn54avj8htgvtyh8****'),
  launchResults?: {
    launchResult?: [ 
    {
      amount?: int32(name='Amount', description='The number of created instances.', example='1'),
      errorCode?: string(name='ErrorCode', description='The error code returned when the instance cannot be created.', example='InvalidParameter'),
      errorMsg?: string(name='ErrorMsg', description='The error message returned when the instance cannot be created.', example='Specific parameter is not valid.'),
      instanceIds?: {
        instanceId?: [ string ](name='InstanceId')
      }(name='InstanceIds', description='The IDs of created instances.'),
      instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.g5.large'),
      spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance for which you specify the maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is used as the bid price.', example='NoSpot'),
      zoneId?: string(name='ZoneId', description='The zone ID of the instance.', example='cn-hangzhou-g'),
    }
  ](name='LaunchResult')
  }(name='LaunchResults', description='The instances created by the auto provisioning group. The values of the parameters in this array are returned only when AutoProvisioningGroupType is set to `instant`.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='745CEC9F-0DD7-4451-9FE7-8B752F39****'),
}

model CreateAutoProvisioningGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAutoProvisioningGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   Auto Provisioning is a service that allows quick deployment of an instance cluster that consists of preemptible instances and pay-as-you-go instances. Auto Provisioning supports push-button deployment of instance clusters across different billing methods, instance families, and zones. For more information, see [Use auto provisioning group-related API operations to create multiple ECS instances at the same time](~~200772~~).
  * *   Auto Provisioning uses auto provisioning groups to schedule and maintain computing resources. You can use auto provisioning groups to obtain a steady supply of computing resources. This helps reduce the impact on compute capacity when preemptible instances are reclaimed.
  * *   Auto Provisioning is provided free of charge. However, you are charged for instance resources that are created in auto provisioning groups. For more information, see [Overview of preemptible instances](~~52088~~) and [Pay-as-you-go](~~40653~~).
  * *   When you specify both a launch template (`LaunchTemplateId`) and extended configurations (`LaunchConfiguration.*` parameters), LaunchTemplateId takes precedence.
  *
 */
async function createAutoProvisioningGroup(request: CreateAutoProvisioningGroupRequest): CreateAutoProvisioningGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateAutoProvisioningGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreateAutoSnapshotPolicyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  copiedSnapshotsRetentionDays?: int32(name='CopiedSnapshotsRetentionDays', description='The retention period of the snapshot copy in the destination region. Unit: days. Valid values:

*   \\-1: The snapshot copy is retained until it is deleted.
*   1 to 65535: The snapshot copy is retained for the specified number of days. After the retention period of the snapshot copy expires, the snapshot copy is automatically deleted.

Default value: -1.', example='30', position='Query'),
  copyEncryptionConfiguration?: {
    arn?: [ 
      {
        assumeRoleFor?: long(name='AssumeRoleFor', description='This parameter is not publicly available.', example='1000000000'),
        roleType?: string(name='RoleType', description='This parameter is not publicly available.', example='hide'),
        rolearn?: string(name='Rolearn', description='This parameter is not publicly available.', example='hide'),
      }
    ](name='Arn', description='This parameter is not publicly available.'),
    encrypted?: boolean(name='Encrypted', description='Specifies whether to enable cross-region snapshot replication and encryption. Valid values:

*   true
*   false

Default value: false.', example='false'),
    KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key used in cross-region snapshot replication and encryption.', example='0e478b7a-4262-4802-b8cb-00d3fb40826X'),
  }(name='CopyEncryptionConfiguration', description='The encryption parameters for cross-region snapshot replication.', position='Query'),
  enableCrossRegionCopy?: boolean(name='EnableCrossRegionCopy', description='Specifies whether to enable cross-region replication for snapshots.

*   true
*   false', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='rg-aek2kkmhmhs****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  storageLocationArn?: string(name='StorageLocationArn', description='> This parameter is not publicly available.', example='null', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the snapshot. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the snapshot. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://. The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the snapshot.', position='Query'),
  targetCopyRegions?: string(name='TargetCopyRegions', description='The destination region to which to copy the snapshot. You can specify only a single destination region.', example='["cn-hangzhou"]', position='Query'),
  autoSnapshotPolicyName?: string(name='autoSnapshotPolicyName', description='The name of the automatic snapshot policy. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

By default, this parameter is left empty.', example='TestName', position='Query'),
  regionId: string(name='regionId', description='The ID of the region in which to create the automatic snapshot policy. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  repeatWeekdays: string(name='repeatWeekdays', description='The days of the week on which to create automatic snapshots. Valid values: 1 to 7, which correspond to Monday to Sunday. 1 indicates Monday. Format description:

*   Set this parameter to a JSON-formatted array. For example, a value of \\["1"] specifies automatic snapshots to be created every Monday.
*   To schedule multiple automatic snapshots to be created in a week, you can specify multiple values. Separate the values with commas (,). You can specify a maximum of seven days. For example, a value of \\["1","3","5"] specifies automatic snapshots to be created every Monday, Wednesday, and Friday.', example='["1","2"]', position='Query'),
  retentionDays: int32(name='retentionDays', description='The retention period of the automatic snapshot. Unit: days. Valid values:

*   \\-1: The automatic snapshot is retained until it is deleted.
*   1 to 65535: The automatic snapshot is retained for the specified number of days. After the retention period of the automatic snapshot expires, the automatic snapshot is automatically deleted.

Default value: -1.', example='30', position='Query'),
  timePoints: string(name='timePoints', description='The points in time of the day at which to create automatic snapshots. The time must be in UTC+8. Unit: hours. Valid values: 0 to 23, which correspond to the 24 on-the-hour points in time from 00:00:00 to 23:00:00. 1 indicates 01:00:00. Format description:

*   Set this parameter to a JSON-formatted array. For example, a value of \\["1"] specifies automatic snapshots to be created at 01:00:00.
*   To schedule multiple automatic snapshots to be created in a day, you can specify multiple values. Separate the values with commas (,). You can specify a maximum of 24 points in time. For example, a value of \\["1","3","5"] specifies automatic snapshots to be created at 01:00:00, 03:00:00, and 05:00:00.', example='["0", "1", … "23"]', position='Query'),
}

model CreateAutoSnapshotPolicyResponseBody = {
  autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The automatic snapshot policy ID.', example='sp-bp12m37ccmxvbmi5****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateAutoSnapshotPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateAutoSnapshotPolicyResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * When you call this operation to create an automatic snapshot policy, you can specify the days of the week on which to create automatic snapshots, the retention period of the automatic snapshots, and whether to enable cross-region replication for the snapshots in the policy to meet your diverse data backup requirements. After the automatic snapshot policy is created, call the [ApplyAutoSnapshotPolicy](~~25531~~) operation to apply the policy to disks. If you want to modify the automatic snapshot policy, call the [ModifyAutoSnapshotPolicyEx](~~25529~~) operation.
  * Take note of the following items:
  * *   You can create up to 100 automatic snapshot policies per region for a single Alibaba Cloud account.
  * *   If an automatic snapshot is being created when the time scheduled for creating another automatic snapshot is due, the new snapshot task is skipped. This may occur when a disk contains a large volume of data. For example, you have scheduled snapshots to be created at 09:00:00, 10:00:00, 11:00:00, and 12:00:00 for a disk. The system starts to create a snapshot for the disk at 09:00:00. The process takes 80 minutes to complete because the disk contains a large volume of data and ends at 10:20:00. In this case, the system does not create a snapshot at 10:00, but creates a snapshot at 11:00.
  * *   For information about how to copy a snapshot from one region to another region, see the "Background information" section in [Copy a snapshot](~~159441~~).
  *
 */
async function createAutoSnapshotPolicy(request: CreateAutoSnapshotPolicyRequest): CreateAutoSnapshotPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateAutoSnapshotPolicy', 'POST', '/', 'json', false, 'json', request);
}

model CreateCapacityReservationRequest {
  privatePoolOptions?: {
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool to generate after the capacity reservation takes effect. Valid values:

*   Open: open private pool
*   Target: targeted private pool

Default value: Open.', example='Open'),
    name?: string(name='Name', description='The capacity reservation name. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='crpTestName'),
  }(name='PrivatePoolOptions', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  description?: string(name='Description', description='The description of the capacity reservation. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is empty by default.', example='This is description.', position='Query'),
  endTime?: string(name='EndTime', description='The time when the capacity reservation expires. Specify the time in the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC. For more information, see [ISO 8601](~~25696~~).', example='2021-10-30T06:32:00Z', position='Query'),
  endTimeType?: string(name='EndTimeType', description='The release mode of the capacity reservation. Valid values:

*   Limited: The capacity reservation is automatically released at a specified time. If you specify this parameter, you must specify the `EndTime` parameter.
*   Unlimited: The capacity reservation is manually released. The capacity reservation can be released anytime.', example='Unlimited', position='Query'),
  instanceAmount: int32(name='InstanceAmount', description='The total number of instances for which the capacity of an instance type is reserved.', example='2', minimum=1, position='Query'),
  instanceType: string(name='InstanceType', description='The instance type. You can create a capacity reservation to reserve the capacity of only one instance type. You can call the [DescribeInstanceTypes](~~25620~~) operation to query the instance types provided by ECS.', example='ecs.g6.xlarge', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='The operating system of the image used by the instance. This parameter corresponds to the `Platform` parameter of regional reserved instances. If the operating system of a capacity reservation matches the operating system of a regional reserved instance, you can apply the regional reserved instance to offset fees of the unused capacity of the capacity reservation. Valid values:

*   Windows: Windows Server operating system
*   Linux: Linux and UNIX-like operating system

Default value: Linux.

> This parameter is unavailable.', example='Linux', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the capacity reservation. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which you want to assign the capacity reservation.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The mode in which the capacity reservation takes effect. You can call the CreateCapacityReservation operation to create only immediate capacity reservations.

> If you do not specify this parameter, the capacity reservation immediately takes effect.', example='2021-10-30T05:32:00Z', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the capacity reservation. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the capacity reservation. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the capacity reservation.', position='Query'),
  zoneId: [ string ](name='ZoneId', description='The ID of the zone in which you want to create the capacity reservation. A capacity reservation can reserve resources within only one zone.', example='cn-hangzhou-h', position='Query'),
}

model CreateCapacityReservationResponseBody = {
  privatePoolOptionsId?: string(name='PrivatePoolOptionsId', description='The capacity reservation ID.', example='crp-bp67acfmxazb4****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateCapacityReservationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateCapacityReservationResponseBody(name='body'),
}

/**
  * When you create a capacity reservation, you can specify attributes such as a zone and an instance type. The system uses a private pool to reserve resources that match the specified attributes. For more information, see [Overview of Immediate Capacity Reservation](~~193633~~).
  * *   Currently, only immediate capacity reservations are supported. Immediate capacity reservations take effect immediately after you purchase them. After you purchase an immediate capacity reservation, you are charged for the specified instance type based on the pay-as-you-go billing method regardless of whether you use the capacity reservation to create pay-as-you-go instances. Billing stops when you manually release the capacity reservation or when the capacity reservation expires and is automatically released.
  *     *   You can call the [CreateInstance](~~25499~~) or [RunInstances](~~63440~~) operation to specify private pool attributes when you create instances. To modify the attributes of a private pool, you can call the [ModifyInstanceAttachmentAttributes](~~190006~~) operation. If an instance matches a private pool associated with a capacity reservation, you are charged based on the configurations of the instance such as the instance type, disks, and public bandwidth.
  *     *   Before you use a private pool associated with a capacity reservation to create pay-as-you-go instances, you are charged only for the specified instance type.
  * *   You can apply savings plans or regional reserved instances to offset hourly billing of unused immediate capacity reservations, and hourly fees of the instances that match the immediate capacity reservations. However, you cannot use zonal reserved instances to offset the hourly fees. We recommend that you purchase reserved instances or savings plans before you purchase immediate capacity reservations. This way, you can access resources free of charge within the coverage of the reserved instances or savings plans.
  * > You can call the CreateCapacityReservation operation to create only immediate capacity reservations. You can create immediate or scheduled capacity reservations in the Elastic Compute Service (ECS) console. For more information, see [Overview](~~193626#section-oil-qh5-xvx~~).
  *
 */
async function createCapacityReservation(request: CreateCapacityReservationRequest): CreateCapacityReservationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateCapacityReservation', 'POST', '/', 'json', false, 'json', request);
}

model CreateCommandRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandContent: string(name='CommandContent', description='The Base64-encoded content of the command. Take note of the following items:

*   The value must be Base64-encoded and cannot exceed 18 KB in size.

*   You can use custom parameters in the command content. To enable the custom parameter feature, you must set `EnableParameter` to true.

    *   Custom parameters are defined in the `{{}}` format. Within `{{}}`, the spaces and line feeds before and after the parameter names are ignored.
    *   You can specify up to 20 custom parameters.
    *   A custom parameter name can contain only letters, digits, underscores (\\_), and hyphens (-). The name is case-insensitive. The ACS:: prefix cannot be used to specify non-built-in environment parameters.
    *   Each custom parameter name can be up to 64 bytes in length.

*   You can specify built-in environment parameters as custom parameters in a command. When you run the command, Cloud Assistant automatically uses the environment parameter values for the custom parameters. You can specify the following built-in environment variables:

    *   `{{ACS::RegionId}}`: the region ID.

    *   `{{ACS::AccountId}}`: the UID of the Alibaba Cloud account.

    *   `{{ACS::InstanceId}}`: the instance ID. If you want to run the command on multiple instances and specify `{{ACS::InstanceId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following versions:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::InstanceName}}`: the instance name. If you want to run the command on multiple instances and specify `{{ACS::InstanceName}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following versions:

        *   Linux: 2.2.3.344
        *   Windows: 2.1.3.344

    *   `{{ACS::InvokeId}}`: the ID of the task. If you want to specify `{{ACS::InvokeId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following versions:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::CommandId}}`: the command ID. If you want to call the [RunCommand](~~141751~~) operation to run the command and specify `{{ACS::CommandId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following versions:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309', example='ZWNobyAxMjM=', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of the command content (CommandContent). Valid values:

*   PlainText: The command content is not encoded.
*   Base64: The command content is Base64-encoded.

Default value: Base64.

> If the specified value of this parameter is invalid, Base64 is used by default.', example='PlainText', position='Query'),
  description?: string(name='Description', description='The description of the command. The description supports all character sets and can be up to 512 characters in length.', example='testDescription', position='Query'),
  enableParameter?: boolean(name='EnableParameter', description='Specifies whether to use custom parameters in the command.

Default value: false.', example='false', position='Query'),
  name: string(name='Name', description='The name of the command. The name supports all character sets and can be up to 128 characters in length.', example='testName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the command.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20. The tag value can be an empty string.

It can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the command.', position='Query'),
  timeout?: long(name='Timeout', description='he maximum timeout period for the command execution on the instance. Unit: seconds. When a command that you created cannot be run, the command times out. When a command execution times out, Cloud Assistant Agent forcefully terminates the command process by canceling the PID. 

Default value: 60.', example='60', position='Query'),
  type: string(name='Type', description='The command type. Valid values:

*   RunBatScript: batch commands. These commands are applicable to Windows instances.
*   RunPowerShellScript: PowerShell commands. These commands are applicable to Windows instances.
*   RunShellScript: shell commands. These commands are applicable to Linux instances.', example='RunShellScript', position='Query'),
  workingDir?: string(name='WorkingDir', description='The execution path of the command on ECS instances. The value can be up to 200 characters in length.

Default values:

*   For Linux instance, the default value is the home directory of the root user, which is the `/root` directory.
*   For Windows instances, the default value is the directory where the Cloud Assistant Agent process resides, such as `C:\\Windows\\System32\\`.

>  If you set WorkingDir to a directory other than default ones, make sure that the directory exists on the instances.', example='/root/', position='Query'),
}

model CreateCommandResponseBody = {
  commandId?: string(name='CommandId', description='The ID of the command.', example='c-7d2a745b412b4601b2d47f6a768d****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateCommandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateCommandResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   You can create commands of the following types:
  *     *   Batch commands (RunBatScript), applicable to Windows instances
  *     *   PowerShell commands (RunPowerShellScript), applicable to Windows instances
  *     *   Shell commands (RunShellScript), applicable to Linux instances
  * *   You can specify the Timeout parameter to set the maximum timeout period for executions of a command on Elastic Compute Service (ECS) instances. If an execution times out, [Cloud Assistant Agent](~~64921~~) forcefully terminates the command process by canceling the process ID (PID) of the command.
  *     *   For a one-time task, when the execution times out, the state of the command ([InvokeRecordStatus](~~64845~~)) becomes Failed.
  *     *   For a scheduled task, take note of the following items:
  *         *   The timeout period takes effect on each execution.
  *         *   When an execution times out, the state ([InvokeRecordStatus](~~64845~~)) of the command becomes Failed.
  *         *   The timeout of one execution does not affect the subsequent executions.
  * *   You can retain up to 500 to 50,000 Cloud Assistant commands in each region. You can also apply for a quota increase. For information about how to query and increase quotas, see [Manage quotas](~~184116~~).
  * *   You can use WorkingDir to specify the execution directory of a Cloud Assistant command. For Linux instances, the default execution directory of Cloud Assistant commands is the home directory of the root user, which is `/root`. For Windows instances, the default execution directory of Cloud Assistant commands is the directory where the Cloud Assistant Agent process resides, such as `C:\\Windows\\System32`.
  * *   You can enable the custom parameter feature for a Cloud Assistant command by setting EnableParameter to true. When you set CommandContent, you can define custom parameters in the {{parameter}} format. Then, when the [InvokeCommand](~~64841~~) operation is called, the key-value pairs of custom parameters are passed in. For example, if a command is `echo {{name}}`, the Parameters parameter can be used to pass in the `<name, Jack>` key-value pair when the InvokeCommand operation is called. The name key of the custom parameter is automatically replaced by the paired Jack value to generate a new command. As a result, the `echo Jack` command is run.
  *
 */
async function createCommand(request: CreateCommandRequest): CreateCommandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateCommand', 'POST', '/', 'json', false, 'json', request);
}

model CreateDedicatedHostClusterRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostClusterName?: string(name='DedicatedHostClusterName', description='The name of the dedicated host cluster. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The name must start with a letter. The name cannot contain `http://` or `https://`.

This parameter is left empty by default.', example='myDDHCluster', position='Query'),
  description?: string(name='Description', description='The description of the dedicated host cluster. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is left empty by default.', example='This-is-my-DDHCluster', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including invalid AccessKey pairs, unauthorized RAM users, and missing parameter values. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the dedicated host cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the dedicated host cluster.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the dedicated host cluster. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the dedicated host cluster. Valid values of N: 1 to 20. The tag value cannot be an empty string. The tag value can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:` or `aliyun`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the dedicated host cluster.', position='Query'),
  zoneId: string(name='ZoneId', description='The ID of the zone in which to create the dedicated host cluster. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-f', position='Query'),
}

model CreateDedicatedHostClusterResponseBody = {
  dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp12wlf6bw0vz9v2****'),
  requestId?: string(name='RequestId', description='The request ID.', example='E2A664A6-2933-4C64-88AE-5033D003****'),
}

model CreateDedicatedHostClusterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDedicatedHostClusterResponseBody(name='body'),
}

async function createDedicatedHostCluster(request: CreateDedicatedHostClusterRequest): CreateDedicatedHostClusterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDedicatedHostCluster', 'POST', '/', 'json', false, 'json', request);
}

model CreateDemandRequest {
  amount: int32(name='Amount', description='The number of instances. Valid values: 1 to 100000.', example='2', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but make sure that the token is unique among different requests. The value of `ClientToken` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E', position='Query'),
  demandDescription?: string(name='DemandDescription', description='The description of the demand. The description must be 2 to 256 characters in length and cannot start with [http:// or https://](http://https://。).', example='k8s-node-demand-desc', position='Query'),
  demandName?: string(name='DemandName', description='The name of the demand. The name must be 2 to 128 characters in length. The name must start with a letter but cannot start with [http:// or https://](http://https://). It can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

The default value is the instance type name.', example='k8s-node-demand', position='Query'),
  endTime: string(name='EndTime', description='The end time of the subscription period. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-dd HH:mm:ss format. The time must be in UTC.

If the value of seconds (ss) is not 00, the time is automatically set to the beginning of the specified minute (mm). The value of EndTime is later than the value of Starttime. In most cases, the interval between the two times cannot be more than 10 days.', example='2019-12-10 12:05:00', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go. This is the default value.', example='PrePaid', position='Query'),
  instanceType: string(name='InstanceType', description='The instance type. See [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of an instance type, or see [Select instance types](~~58291~~) to learn how to select instance types.', example='ecs.c6.large', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period: int32(name='Period', description='The subscription period of the resource. Valid values:

*   Valid values when the value of PeriodUnit is Day: 1, 2, 3, 4, 5, and 6.
*   Valid values when the value of PeriodUnit is Week: 1, 2, 3, and 4.
*   Valid values when the value of PeriodUnit is Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit: string(name='PeriodUnit', description='The unit of the subscription period. Valid values:

*   Day
*   Week
*   Month. This is the default value.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', description='The start time of the subscription period. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-dd HH:mm:ss format. The time must be in UTC.

If the value of seconds (ss) is not 00, the time is automatically set to the beginning of the specified minute (mm). The value of EndTime must be later than the value of Starttime. In most cases, the interval between the two times cannot be more than 10 days.', example='2019-12-01 12:05:00', position='Query'),
  zoneId: string(name='ZoneId', description='The zone ID of the instance. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.

This parameter is empty by default. If you leave this parameter empty, the system randomly selects a zone.', example='cn-hangzhou-g', position='Query'),
}

model CreateDemandResponseBody = {
  demandId?: string(name='DemandId', description='The ID of the demand.', example='ed-bp11n21kq00sl71p****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateDemandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDemandResponseBody(name='body'),
}

/**
  * @deprecated
  * You can call this operation to file a demand for an ECS instance type. Alibaba Cloud provides the requested resources based on your demand.
  * You can file demands only for I/O optimized instance types and instances of the virtual private cloud (VPC) type.
  * > This operation is in internal preview and has not been officially released. We recommend that you do not call this operation.
  *
 */
// Deprecated
async function createDemand(request: CreateDemandRequest): CreateDemandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDemand', 'POST', '/', 'json', false, 'json', request);
}

model CreateDeploymentSetRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The description of the deployment set. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  deploymentSetName?: string(name='DeploymentSetName', description='The name of the deployment set. The name must be 2 to 128 characters in length and can contain Unicode characters under the Decimal Number category and the categories whose names contain Letter. The name can also contain colons (:), underscores (\\_), periods (.), and hyphens (-).', example='testDeploymentSetName', position='Query'),
  description?: string(name='Description', description='The emergency solution to use in the situation where instances in the deployment set cannot be evenly distributed to different zones due to resource insufficiency after the instances failover. Valid values:

*   CancelMembershipAndStart: removes the instances from the deployment set and starts the instances immediately after they are failed over.
*   KeepStopped: leaves the instances in the Stopped state and starts them after resources are replenished.

Default value: CancelMembershipAndStart.', example='testDescription', position='Query'),
  domain?: string(name='Domain', description='>  This parameter is deprecated.', example='Default', position='Query'),
  granularity?: string(name='Granularity', description='>  This parameter is deprecated.', example='host', position='Query'),
  groupCount?: long(name='GroupCount', description='The deployment strategy. Valid values:

*   Availability: high availability strategy.
*   AvailabilityGroup: high availability group strategy.

Default value: Availability.', example='1', position='Query'),
  onUnableToRedeployFailedInstance?: string(name='OnUnableToRedeployFailedInstance', description='The region ID of the deployment set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='CancelMembershipAndStart', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='Creates a deployment set in a specific region.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  strategy?: string(name='Strategy', description='The deployment strategy. Valid values:

*   Availability: high availability strategy
*   AvailabilityGroup: high availability group strategy
*   LowLatency: low latency strategy

Default value: Availability.', example='Availability', position='Query'),
}

model CreateDeploymentSetResponseBody = {
  deploymentSetId?: string(name='DeploymentSetId', example='ds-bp1frxuzdg87zh4pzq****'),
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateDeploymentSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDeploymentSetResponseBody(name='body'),
}

async function createDeploymentSet(request: CreateDeploymentSetRequest): CreateDeploymentSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDeploymentSet', 'POST', '/', 'json', false, 'json', request);
}

model CreateDiagnosticMetricSetRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  description?: string(name='Description', description='testDescription', example='The ID of the request.', maxLength=255, position='Query'),
  metricIds: [ string ](name='MetricIds', description='The ID of diagnostic metric.', position='Query'),
  metricSetName?: string(name='MetricSetName', description='my_dms', example='The IDs of diagnostic metrics. You can specify up to 100 diagnostic metric IDs.', maxLength=128, position='Query'),
  regionId: string(name='RegionId', description='The type of the resource.

Default value: instance.', example='cn-hangzhou', position='Query'),
  resourceType: string(name='ResourceType', description='The name of the diagnostic metric set.', example='instance', position='Query'),
}

model CreateDiagnosticMetricSetResponseBody = {
  metricSetId?: string(name='MetricSetId', example='dms-o7ymuutup5l*****'),
  requestId?: string(name='RequestId', description='The ID of the diagnostic metric set, which is the unique identifier of the set.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model CreateDiagnosticMetricSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDiagnosticMetricSetResponseBody(name='body'),
}

async function createDiagnosticMetricSet(request: CreateDiagnosticMetricSetRequest): CreateDiagnosticMetricSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDiagnosticMetricSet', 'POST', '/', 'json', false, 'json', request);
}

model CreateDiagnosticReportRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  endTime?: string(name='EndTime', description='The end of the reporting period. This parameter takes effect only for diagnostic metrics that do not need to be assessed by running Cloud Assistant commands in guest operating systems.', example='2022-07-11T14:00:00Z', position='Query'),
  metricSetId?: string(name='MetricSetId', description='The ID of the diagnostic metric set. If this parameter is left empty, the dms-instancedefault set is used, which is the default diagnostic metric set provided for Elastic Compute Service (ECS) instances.', example='dms-uf6i0tv2refv8wz*****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create a diagnostic report. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource.', example='i-uf6i0tv2refv8wz*****', position='Query'),
  startTime?: string(name='StartTime', description='The beginning of the reporting period. This parameter takes effect only for diagnostic metrics that do not need to be assessed by running Cloud Assistant commands in guest operating systems.', example='2022-07-11T12:00:00Z', position='Query'),
}

model CreateDiagnosticReportResponseBody = {
  reportId?: string(name='ReportId', description='The ID of the diagnostic report, which is the unique identifier of the report.', example='dr-uf6i0tv2refv8wz*****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model CreateDiagnosticReportResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDiagnosticReportResponseBody(name='body'),
}

async function createDiagnosticReport(request: CreateDiagnosticReportRequest): CreateDiagnosticReportResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDiagnosticReport', 'POST', '/', 'json', false, 'json', request);
}

model CreateDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  advancedFeatures?: string(name='AdvancedFeatures', description='This parameter is not publicly available.', example='hide', position='Query'),
  arn?: [ 
    {
      assumeRoleFor?: long(name='AssumeRoleFor', description='This parameter is not publicly available.', example='1000000000'),
      roleType?: string(name='RoleType', description='This parameter is not publicly available.', example='hide'),
      rolearn?: string(name='Rolearn', description='This parameter is not publicly available.', example='hide'),
    }
  ](name='Arn', description='This parameter is not publicly available.', position='Query'),
  burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature. Valid values:

*   true
*   false

>  This parameter is available only when DiskCategory is set to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~).', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is left empty by default.', example='testDescription', position='Query'),
  diskCategory?: string(name='DiskCategory', description='The category of the data disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD
*   cloud_auto: ESSD AutoPL disk
*   cloud_essd_entry: ESSD Entry disk
*   elastic_ephemeral_disk_standard: standard elastic ephemeral disk
*   elastic_ephemeral_disk_premium: premium elastic ephemeral disk

Default value: cloud.', example='cloud_ssd', position='Query'),
  diskName?: string(name='DiskName', description='The name of the disk. The name must be 2 to 128 characters in length and can contain letters and digits. The name can contain colons (:), underscores (\\_), periods (.), and hyphens (-).

This parameter is left empty by default.', example='testDiskName', position='Query'),
  encryptAlgorithm?: string(name='EncryptAlgorithm', description='This parameter is not publicly available.', example='hide', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the disk. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the subscription instance to which to attach the subscription disk.

*   If you specify an instance ID, the following parameters are ignored: ResourceGroupId, Tag.N.Key, Tag.N.Value, ClientToken, and KMSKeyId.
*   You cannot specify both ZoneId and InstanceId in a request.

This parameter is empty by default, which indicates that a pay-as-you-go disk is created in the region and zone specified by RegionId and ZoneId.', example='i-bp18pnlg1ds9rky4****', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key that is used for the disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40826X', maxLength=64, position='Query'),
  multiAttach?: string(name='MultiAttach', description='Specifies whether to enable the multi-attach feature for the disk. Valid values:

*   Disabled
*   Enabled Set the value to `Enabled` only for ESSDs.

Default value: Disabled.

>  Disks for which the multi-attach feature is enabled support only the pay-as-you-go billing method. When `MultiAttach` is set to Enabled, you cannot specify `InstanceId`. You can call the [AttachDisk](~~25515~~) operation to attach disks to instances after the disks are created. Disks for which the multi-attach feature is enabled can be attached only as data disks.', example='Disabled', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  performanceLevel?: string(name='PerformanceLevel', description='The performance level of the disk if the disk is an ESSD. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

Default value: PL1.

For information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1', position='Query'),
  provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}.

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.

>  This parameter is available only when DiskCategory is set to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~).', example='40000', minimum=0, position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the disk. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to add the disk.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  size?: int32(name='Size', description='The size of the disk. Unit: GiB. This parameter is required. Valid values:

*   Valid values when DiskCategory is set to cloud: 5 to 2000.

*   Valid values when DiskCategory is set to cloud_efficiency: 20 to 32768.

*   Valid values when DiskCategory is set to cloud_ssd: 20 to 32768.

*   Valid values when DiskCategory is set to cloud_essd: vary based on the `PerformanceLevel` value.

    *   Valid values when PerformanceLevel is set to PL0: 1 to 32768.
    *   Valid values when PerformanceLevel is set to PL1: 20 to 32768.
    *   Valid values when PerformanceLevel is set to PL2: 461 to 32768.
    *   Valid values when PerformanceLevel is set to PL3: 1261 to 32768.

*   Valid values when DiskCategory is set to cloud_auto: 1 to 32768.

*   Valid values when DiskCategory is set to cloud_essd_entry: 10 to 32768.

*   Valid values when DiskCategory is set to elastic_ephemeral_disk_standard: 64 to 8192.

*   Valid values when DiskCategory is set to elastic_ephemeral_disk_premium: 64 to 8192.

If `SnapshotId` is specified, the following limits apply to `SnapshotId` and `Size`:

*   If the size of the snapshot specified by `SnapshotId` is larger than the value of `Size`, the size of the created disk is equal to the specified snapshot size.
*   If the size of the snapshot specified by `SnapshotId` is smaller than the value of `Size`, the size of the created disk is equal to the value of `Size`.', example='2000', minimum=1, maximum=65536, position='Query'),
  snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create the disk. Snapshots that were created on or before July 15, 2013 cannot be used to create disks.

The following limits apply to `SnapshotId` and `Size`:

*   If the size of the snapshot specified by `SnapshotId` is larger than the value of `Size`, the size of the created disk is equal to the specified snapshot size.
*   If the size of the snapshot specified by `SnapshotId` is smaller than the value of `Size`, the size of the created disk is equal to the value of `Size`.
*   You cannot create elastic ephemeral disks from snapshots.', example='s-bp67acfmxazb4p****', position='Query'),
  storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster in which to create the disk. To create a disk in a specific dedicated block storage cluster, you must specify this parameter.

>  You can specify the storage set-related parameters (`StorageSetId` and `StorageSetPartitionNumber`) or the dedicated block storage cluster-related parameter (`StorageClusterId`), but not both. If you specify a storage set-related parameter and a dedicated block storage cluster-related parameter in a request, the request fails.', example='dbsc-j5e1sf2vaf5he8m2****', position='Query'),
  storageSetId?: string(name='StorageSetId', description='The ID of the storage set.

> You cannot specify storage set-related parameters (`StorageSetId` and `StorageSetPartitionNumber`) and the dedicated block storage cluster-related parameter (`StorageClusterId`) at the same time. Otherwise, the operation cannot be called.', example='ss-bp67acfmxazb4p****', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The number of partitions in the storage set. The value must be greater than or equal to 2 but cannot exceed the quota obtained by calling the [DescribeAccountAttributes](~~73772~~)operation.

Default value: 2.', example='3', minimum=1, position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the disk. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the disk. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the disk.', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which to create the pay-as-you-go disk.

*   If you do not specify InstanceId, you must specify ZoneId.
*   You cannot specify both ZoneId and InstanceId in a request.', example='cn-hangzhou-g', position='Query'),
}

model CreateDiskResponseBody = {
  diskId?: string(name='DiskId', description='The disk ID.', example='d-bp131n0q38u3a4zi****'),
  orderId?: string(name='OrderId', description='The order ID.

> The order ID is returned only when you create a subscription disk.', example='20413515388****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateDiskResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   You can enable the multi-attach (`MultiAttach`) feature when you create a disk. Before you enable the multi-attach feature, we recommend that you familiarize yourself with the feature and its limits. For more information, see [NVMe disks](~~256487~~) and [Enable multi-attach](~~262105~~).
  * *   You can create disks of the following disk categories: basic disks, ultra disks, standard SSDs, Enterprise SSDs (ESSDs), ESSD Entry disks, ESSD AutoPL disks, standard elastic ephemeral disks, and premium elastic ephemeral disks.
  * *   Before you can create a disk, you must complete real-name verification. Complete real-name verification on the [Real-name Verification](https://account.console.aliyun.com/#/auth/home) page in the Alibaba Cloud Management Console.
  * *   When you create disks, you may be charged for the resources used. We recommend that you familiarize yourself with the billing methods of Elastic Compute Service (ECS) resources before you create a disk. For more information, see [Billing overview](~~25398~~).
  * *   By default, `DeleteAutoSnapshot` is set to `true` when a disk is created. This indicates that the automatic snapshots of the disk are deleted when the disk is released. You can call the [ModifyDiskAttribute](~~25517~~) operation to change the parameter value.
  * *   If you do not specify a performance level when you create an ESSD, the performance level of the ESSD is automatically set to PL1. To change the performance level of the ESSD, you can call the [ModifyDiskSpec](~~123780~~) operation.
  * *   By default, `Portable` is set to `true` and the billing method is pay-as-you-go for a disk that is created by calling the CreateDisk operation.
  *
 */
async function createDisk(request: CreateDiskRequest): CreateDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateDisk', 'POST', '/', 'json', false, 'json', request);
}

model CreateElasticityAssuranceRequest {
  privatePoolOptions?: {
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool with which you want to associate the elasticity assurance. Valid values:

*   Open: open private pool.
*   Target: specified private pool.

Default value: Open.', example='Open'),
    name?: string(name='Name', description='The name of the elasticity assurance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='eapTestName'),
  }(name='PrivatePoolOptions', position='Query'),
  assuranceTimes?: string(name='AssuranceTimes', description='The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration.

Default value: Unlimited.', example='Unlimited', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that you want to use to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  description?: string(name='Description', description='The description of the elasticity assurance. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.

This parameter is empty by default.', example='This is description.', position='Query'),
  instanceAmount?: int32(name='InstanceAmount', description='The total number of instances for which to reserve capacity of an instance type.

Valid values: 1 to 1000.', example='2', minimum=1, position='Query'),
  instanceCpuCoreCount?: int32(name='InstanceCpuCoreCount', description='> This parameter is no longer used.', example='null', minimum=1, position='Query'),
  instanceType: [ string ](name='InstanceType', description='The instance type. An elasticity assurance can be created to reserve the capacity of a single instance type.', example='ecs.c6.xlarge', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The term of the elasticity assurance. The unit of the term is determined by the `PeriodUnit` value. Valid values:

*   When `PeriodUnit` is set to `Month`, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
*   When `PeriodUnit` is set to `Year`, the valid values are 1, 2, 3, 4, and 5.

Default value: 1.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the term of the elasticity assurance. Valid values:

*   Month
*   Year

Default value: Year.', example='Year', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the elasticity assurance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the elasticity assurance.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The time when the elasticity assurance takes effect. The default value is the time when the CreateElasticityAssurance operation is called to create the elasticity assurance. Specify the time in the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC. For more information, see [ISO 8601](~~25696~~).', example='2020-10-30T06:32:00Z', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the elasticity assurance. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the elasticity assurance. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot start with `acs:`. The tag value cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the elasticity assurance.', position='Query'),
  zoneId: [ string ](name='ZoneId', description='The ID of the zone in which to create the elasticity assurance. An elasticity assurance can be used to reserve resources within a single zone.', example='cn-hangzhou-h', position='Query'),
}

model CreateElasticityAssuranceResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.', example='1234567890'),
  privatePoolOptionsId?: string(name='PrivatePoolOptionsId', description='The elasticity assurance ID.', example='eap-bp67acfmxazb4****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateElasticityAssuranceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateElasticityAssuranceResponseBody(name='body'),
}

/**
  * Elasticity Assurance provides a new way to purchase and use resources with flexibility and assurance. It offers assured resource reservations for pay-as-you-go Elastic Compute Service (ECS) instances. For more information, see [Overview of Elasticity Assurance](~~193630~~).
  * *   Elasticity assurances are not refundable after purchase.
  * *   Elasticity assurances are applicable to only pay-as-you-go ECS instances.
  * *   Elasticity assurances support only the unlimited mode. Therefore, you can set `AssuranceTimes` only to `Unlimited`. Elasticity assurances in unlimited mode can be applied an unlimited number of times within their effective period and take effect immediately after they are purchased.
  *
 */
async function createElasticityAssurance(request: CreateElasticityAssuranceRequest): CreateElasticityAssuranceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateElasticityAssurance', 'POST', '/', 'json', false, 'json', request);
}

model CreateForwardEntryRequest {
  externalIp: string(name='ExternalIp', position='Query'),
  externalPort: string(name='ExternalPort', position='Query'),
  forwardTableId: string(name='ForwardTableId', position='Query'),
  internalIp: string(name='InternalIp', position='Query'),
  internalPort: string(name='InternalPort', position='Query'),
  ipProtocol: string(name='IpProtocol', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CreateForwardEntryResponseBody = {
  forwardEntryId?: string(name='ForwardEntryId'),
  requestId?: string(name='RequestId'),
}

model CreateForwardEntryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateForwardEntryResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createForwardEntry(request: CreateForwardEntryRequest): CreateForwardEntryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateForwardEntry', 'POST', '/', 'json', false, 'json', request);
}

model CreateHaVipRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  ipAddress?: string(name='IpAddress', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vSwitchId: string(name='VSwitchId', position='Query'),
}

model CreateHaVipResponseBody = {
  haVipId?: string(name='HaVipId'),
  requestId?: string(name='RequestId'),
}

model CreateHaVipResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateHaVipResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createHaVip(request: CreateHaVipRequest): CreateHaVipResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateHaVip', 'POST', '/', 'json', false, 'json', request);
}

model CreateHpcClusterRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate a client token. Make sure that a unique client token is used for each request. The **ClientToken** value can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the HPC cluster. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.

This parameter is empty by default.', example='testHPCDescription', position='Query'),
  name: string(name='Name', description='The name of the HPC cluster. The name must be 2 to 128 characters in length, and can contain letters, digits, underscores (\\_), and hyphens (-). The name must start with a letter but cannot start with `http://` or `https://`.', example='hpc-Cluster-01', position='Query'),
  ownerAccount?: string(name='OwnerAccount', description='RAM用户的账号登录名称。', example='ECSforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', description='RAM用户的虚拟账号ID。', example='1234567890', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the HPC cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', description='资源主账号的账号名称。', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', description='资源主账号的ID，亦即UID。', example='1234567890', position='Query'),
}

model CreateHpcClusterResponseBody = {
  hpcClusterId?: string(name='HpcClusterId', description='The ID of cluster.', example='hpc-pnlg1ds9rky4****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateHpcClusterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateHpcClusterResponseBody(name='body'),
}

async function createHpcCluster(request: CreateHpcClusterRequest): CreateHpcClusterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateHpcCluster', 'POST', '/', 'json', false, 'json', request);
}

model CreateImageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  architecture?: string(name='Architecture', description='The system architecture of the system disk. If you specify a data disk snapshot to create the system disk of the custom image, you must use Architecture to specify the system architecture of the system disk. Valid values:

*   i386
*   x86\\_64
*   arm64

Default value: x86\\_64.', example='x86_64', position='Query'),
  bootMode?: string(name='BootMode', description='The boot mode of the image. Valid values:

*   BIOS: Basic Input/Output System (BIOS)
*   UEFI: Unified Extensible Firmware Interface (UEFI)
*   UEFI-Preferred: BIOS and UEFI

>  Before you change the boot mode of an image, we recommend that you get familiar with the boot modes supported by the image to ensure that instances created from the image can start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview of image check](~~439819~~).

>  For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](~~2244655~~).', example='BIOS', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The value of **ClientToken** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The image description. The description must be 2 to 256 characters in length and cannot start with [http:// or https://.](http://https://。)', example='ImageTestDescription', position='Query'),
  detectionStrategy?: string(name='DetectionStrategy', description='The mode in which to check the custom image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.

>  This parameter is supported for most Linux and Windows operating system versions. For information about image check items and operating system limits for image check, see [Overview of image check](~~439819~~) and [Operating system limits for image check](~~475800~~).', example='Standard', position='Query'),
  diskDeviceMapping?: [ 
    {
      device?: string(name='Device', description='The device name of disk N in the custom image. Valid values:

*   For disks other than basic disks, such as standard SSDs, ultra disks, and enhanced SSDs (ESSDs), the valid values range from /dev/vda to /dev/vdz in alphabetical order.
*   For basic disks, the valid values range from /dev/xvda to /dev/xvdz in alphabetical order.', example='/dev/vdb'),
      diskType?: string(name='DiskType', description='The type of disk N in the custom image. You can specify this parameter to create the system disk of the custom image from a data disk snapshot. If you do not specify this parameter, the disk type is determined by the corresponding snapshot. Valid values:

*   system: system disk. You can specify only one snapshot to use to create the system disk in the custom image.
*   data: data disk. You can specify up to 16 snapshots to use to create data disks in the custom image.', example='system'),
      size?: int32(name='Size', description='The size of disk N in the custom image. Unit: GiB. The valid values and default value of DiskDeviceMapping.N.Size vary based on the value of DiskDeviceMapping.N.SnapshotId.

*   If no corresponding snapshot IDs are specified in the value of DiskDeviceMapping.N.SnapshotId, DiskDeviceMapping.N.Size has the following valid values and default values:

    *   For basic disks, the valid values range from 5 to 2000, and the default value is 5.
    *   For other disks, the valid values range from 20 to 32768, and the default value is 20.

*   If a corresponding snapshot ID is specified in the value of DiskDeviceMapping.N.SnapshotId, the value of DiskDeviceMapping.N.Size must be greater than or equal to the size of the specified snapshot. The default value of DiskDeviceMapping.N.Size is the size of the specified snapshot.', example='2000'),
      snapshotId?: string(name='SnapshotId', description='The ID of snapshot N to use to create the custom image.', example='s-bp17441ohwkdca0****'),
    }
  ](name='DiskDeviceMapping', description='The information about the custom image.', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with acs: or aliyun. The name cannot contain http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='hangzhou-daily-update', position='Query'),
  imageName?: string(name='ImageName', description='The name of the custom image. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='TestCentOS', position='Query'),
  imageVersion?: string(name='ImageVersion', description='The image version.

> If you specify an instance by configuring `InstanceId`, and the instance uses an Alibaba Cloud Marketplace image or a custom image that is created from an Alibaba Cloud Marketplace image, you must leave this parameter empty or set this parameter to the value of ImageVersion of the instance.', example='2017011017', position='Query'),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1g6zv0ce8oghu7****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='The operating system distribution for the system disk in the custom image. If you specify a data disk snapshot to create the system disk of the custom image, use Platform to specify the operating system distribution for the system disk. Valid values:

*   Aliyun
*   Anolis
*   CentOS
*   Ubuntu
*   CoreOS
*   SUSE
*   Debian
*   OpenSUSE
*   FreeBSD
*   RedHat
*   Kylin
*   UOS
*   Fedora
*   Fedora CoreOS
*   CentOS Stream
*   AlmaLinux
*   Rocky Linux
*   Gentoo
*   Customized Linux
*   Others Linux
*   Windows Server 2022
*   Windows Server 2019
*   Windows Server 2016
*   Windows Server 2012
*   Windows Server 2008
*   Windows Server 2003

Default value: Others Linux.', example='CentOS', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image that you want to create. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the custom image. If you do not specify this parameter, the image is assigned to the default resource group.

>  If you call the CreateImage operation as a Resource Access Management (RAM) user who does not have the permissions to manage the default resource group and do not specify `ResourceGroupId`, the `Forbbiden: User not authorized to operate on the specified resource` error message is returned. You must specify the ID of a resource group that the RAM user has the permissions to manage or grant the RAM user the permissions to manage the default resource group before you call the CreateImage operation again.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotId?: string(name='SnapshotId', description='The ID of the snapshot that you want to use to create the custom image.', example='s-bp17441ohwkdca0****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the custom image. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot start with `aliyun` or `acs:`. The tag key cannot contain `http://` or `https://`.', example='KeyTest'),
      value?: string(name='Value', description='The value of tag N of the custom image. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot start with `acs:`. The tag value cannot contain `http://` or `https://`.', example='ValueTest'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model CreateImageResponseBody = {
  imageId?: string(name='ImageId', description='The image ID.', example='m-bp146shijn7hujku****'),
  requestId?: string(name='RequestId', description='The request ID.', example='C8B26B44-0189-443E-9816-*******'),
}

model CreateImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateImageResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   You can use the created custom image only if the image is in the Available (Available) state.
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of an instance, the instance is locked for security reasons. No operations are allowed on the instance.
  * *   To optimize the image, we recommend that you specify DetectionStrategy when you create the image. For more information, see [Overview of image check](~~439819~~).
  * You can call the CreateImage operation to create a custom image by using one of the following methods. The following request parameters are sorted by priority: `InstanceId` > `DiskDeviceMapping` > `SnapshotId`. If your request contains two or more of these parameters, the custom image is created based on the parameter that has a higher priority.
  * *   **Method 1**: Create a custom image from an instance. You need to only specify the ID of the instance by using `InstanceId`. The instance must be in the Running (`Running`) or Stopped (`Stopped`) state. After you call the CreateImage operation, a snapshot is created for each disk of the instance. When you create a custom image from a running instance, cache data may not be written to disks. In this case, the data of the custom image may be slightly different from the data of the instance. We recommend that you stop instances by calling the [StopInstances](~~155372~~) operation before you create custom images from the instances.
  * *   **Method 2**: Create a custom image from the system disk snapshot of an instance. You need to only specify the ID of the system disk snapshot by using `SnapshotId`. The specified system disk snapshot must be created after July 15, 2013.
  * *   **Method 3**: Create a custom image from multiple disk snapshots. You must specify data mappings between the snapshots and the disks to be created by using the parameters that start with `DiskDeviceMapping`.
  * When you use Method 3 to create a custom image, take note of the following items:
  * *   You can specify only one snapshot to use to create the system disk in the custom image. The device name of the system disk must be /dev/xvda.
  * *   You can specify up to 16 snapshots to use to create data disks in the custom image. The device names of the data disks are unique and range from /dev/xvdb to /dev/xvdz in alphabetical order.
  * *   You can leave `SnapshotId` empty. In this case, an empty data disk with the specified size is created.
  * *   The specified disk snapshot must be created after July 15, 2013.
  *
 */
async function createImage(request: CreateImageRequest): CreateImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateImage', 'POST', '/', 'json', false, 'json', request);
}

model CreateImageComponentRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  componentType?: string(name='ComponentType', description='The type of the image component. Only image build components are supported. Set the value to Build.

Default value: Build.', example='Build', position='Query'),
  content?: string(name='Content', description='The content of the image component. The content consists of up to 127 commands.', example='RUN yum update -y', position='Query'),
  description?: string(name='Description', description='The description. The description must be 2 to 256 characters in length and cannot start with [http:// or https://](http://https://。).', example='This is description.', position='Query'),
  name?: string(name='Name', description='The component name. The name must be 2 to 128 characters in length. The name must start with a letter but cannot start with http:// or https://.[ ](http://https://。、、、（:）、（\\_）、（.）（-）。)The name can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

> If you do not configure `Name`, the return value of `ImageComponentId` is used.', example='testComponent', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  systemType?: string(name='SystemType', description='The operating system type supported by the image component. Only Linux is supported. Set the value to Linux.

Default value: Linux.', example='Linux', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model CreateImageComponentResponseBody = {
  imageComponentId?: string(name='ImageComponentId', description='The ID of the image component.', example='ic-bp67acfmxazb4p****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateImageComponentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateImageComponentResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   Only custom image components can be created.
  * *   The images must run Linux operating systems. This indicates that you must set `SystemType` to Linux.
  * *   You must set the image component type to image build component by setting the `ComponentType` parameter to Build.
  * *   You can use Dockerfile to edit the content of image components, and then pass the edited content into the `Content` parameter. The content size must not be greater than 16 KB. `FROM` commands cannot be used in image components. An image component supports up to 127 commands. For information about supported commands, see [Description of commands supported by Image Builder](~~200206~~).
  * You can use image components to create image templates in the Elastic Compute Service (ECS) console, but cannot call API operations to use image components to create image templates. For more information, see [Overview of Image Builder](~~197410~~).
  *
 */
async function createImageComponent(request: CreateImageComponentRequest): CreateImageComponentResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateImageComponent', 'POST', '/', 'json', false, 'json', request);
}

model CreateImagePipelineRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  addAccount?: [ long ](name='AddAccount', description='The IDs of Alibaba Cloud accounts to which to share the image that will be created based on the image template. You can specify up to 20 account IDs.', example='1234567890', position='Query'),
  baseImage: string(name='BaseImage', description='The source image.

*   If you set `BaseImageType` to IMAGE, set the BaseImage parameter to the ID of a custom image.
*   If you set `BaseImageType` to IMAGE_FAMILY, set the BaseImage parameter to the name of an image family.', example='m-bp67acfmxazb4p****', position='Query'),
  baseImageType: string(name='BaseImageType', description='The type of the source image. Valid values:

*   IMAGE: image
*   IMAGE_FAMILY: image family', example='IMAGE', position='Query'),
  buildContent?: string(name='BuildContent', description='The content of the image template. The content cannot exceed 16 KB in size and can contain up to 127 commands. For more information about the commands that are supported, see the "Usage notes" section of this topic.', example='FROM IMAGE:m-bp67acfmxazb4p****', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.**** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  deleteInstanceOnFailure?: boolean(name='DeleteInstanceOnFailure', description='Specifies whether to release the intermediate instance when the image cannot be created. Valid values:

*   true
*   false

Default value: true.

> If the intermediate instance cannot be started, the instance is released by default.', example='true', position='Query'),
  description?: string(name='Description', description='The description of the image template. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  imageName?: string(name='ImageName', description='The prefix of the image name. The prefix must be 2 to 64 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

The system generates the final complete image name that consists of the specified prefix and the ID of the build task (`ExecutionId`) in the format of `{ImageName}_{ExecutionId}`.', example='testImageName', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. You can call the [DescribeInstanceTypes](~~25620~~) to query instance types.

If you do not configure this parameter, an instance type that provides the fewest vCPUs and memory resources is automatically selected. This configuration is subject to resource availability of instance types. For example, the ecs.g6.large instance type is automatically selected. If available ecs.g6.large resources are insufficient, the ecs.g6.xlarge instance type is selected.', example='ecs.g6.large', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The size of the outbound public bandwidth for the intermediate instance. Unit: Mbit/s. Valid values: 0 to 100.

Default value: 0.', example='0', position='Query'),
  name?: string(name='Name', description='The name of the image template. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

> If you do not specify the `Name` parameter, the return value of `ImagePipelineId` is used.', example='testImagePipeline', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  systemDiskSize?: int32(name='SystemDiskSize', description='The system disk size of the intermediate instance. Unit: GiB. Valid values: 20 to 500.

Default value: 40.', example='40', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20. You cannot specify empty strings as tag keys. The tag key must be 1 to 128 characters in length and cannot contain `http://` or `https://`. It cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value must be 0 to 128 characters in length. It cannot start with `acs:` or contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the template.', position='Query'),
  toRegionId?: [ string ](name='ToRegionId', description='The IDs of regions to which you want to distribute the image that is created based on the image template. You can specify up to 20 region IDs.

If you do not specify this parameter, the image is created only in the current region.', example='cn-hangzhou', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch.

If you do not specify this parameter, a new VPC and vSwitch are created. Make sure that the VPC quota in your account is sufficient. For more information, see [Limits and quotas](~~27750~~).', example='vsw-bp67acfmxazb4p****', position='Query'),
}

model CreateImagePipelineResponseBody = {
  imagePipelineId?: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateImagePipelineResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateImagePipelineResponseBody(name='body'),
}

/**
  * You can use image templates to specify custom image content and create images across regions and accounts. When you call this operation, take note of the following items:
  * *   You can create only custom image templates.
  * *   You can configure only public, custom, or shared Linux images or image families as the source images when you create image templates.
  * *   When you use an image template to create an image, you must create an intermediate Elastic Compute Service (ECS) instance to help create the image. The intermediate instance is billed by using the pay-as-you-go billing method. For more information, see [Pay-as-you-go](~~40653~~).
  * For the `BuildContent` parameter that specifies the content of image templates, take note of the following items:
  * *   If the `BuildContent` value contains `FROM` commands, the `FROM` commands override the values of `BaseImageType` that specifies the type of the source images and `BaseImage` that specifies the source image.
  * *   If the `BuildContent` value does not contain `FROM` commands, the system creates a `FROM` command that consists of the `BaseImageType` and `BaseImage` values in the format of `<BaseImageType>:<BaseImage>` and adds the command to the first line of the template content.
  * *   You can use Dockerfile to edit the content of image templates and then pass the edited content into the `BuildContent` parameter. The content of an image template cannot exceed 16 KB in size and can contain up to 127 commands. For information about commands supported by image templates, see [Description of commands supported by Image Builder](~~200206~~).
  * You can use image components to create image templates in the ECS console, but cannot call API operations to use image components to create image templates. For more information, see [Overview of Image Builder](~~197410~~).
  *
 */
async function createImagePipeline(request: CreateImagePipelineRequest): CreateImagePipelineResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateImagePipeline', 'POST', '/', 'json', false, 'json', request);
}

model CreateInstanceRequest {
  hibernationOptions?: {
    configured?: boolean(name='Configured', description='>  This parameter is in invitational preview and is not publicly available.', example='false'),
  }(name='HibernationOptions', position='Query'),
  privatePoolOptions?: {
    id?: string(name='Id', description='The ID of the private pool. The ID of a private pool is the same as that of the elasticity assurance or capacity reservation for which the private pool is generated.', example='eap-bp67acfmxazb4****'),
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool to use to start the instance. A private pool is generated when an elasticity assurance or a capacity reservation takes effect. You can select a private pool to start instances. Valid values:

*   Open: open private pool. The system selects a matching open private pool to start the instance. If no matching open private pools are found, resources in the public pool are used. When you set this parameter to Open, you can leave the `PrivatePoolOptions.Id` parameter empty.
*   Target: specified private pool. The system uses the capacity in a specified private pool to start the instance. If the specified private pool is unavailable, the instance cannot be started. If you set this parameter to Target, you must specify the `PrivatePoolOptions.Id` parameter.
*   None: no private pool. The capacity in private pools is not used.

Default value: none.

In the following scenarios, the PrivatePoolOptions.MatchCriteria parameter can be set only to `None` or left empty:

*   Create a preemptible instance.
*   Create an instance in the classic network.
*   Create an instance on a dedicated host.', example='Open'),
  }(name='PrivatePoolOptions', position='Query'),
  systemDisk?: {
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud_essd: ESSD. If SystemDisk.Category is set to this value, you can use `SystemDisk.PerformanceLevel` to specify the performance level of the disk.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud: basic disk.

For non-I/O optimized instances of retired instance types, the default value is cloud. For other types of instances, the default value is cloud_efficiency.', example='cloud_ssd'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is empty by default.', example='TestDescription'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

This parameter is empty by default.', example='SystemDiskName'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD that is used as the system disk. Default value: PL1. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   Basic disks: 20 to 500.
*   Other disks: 20 to 2048.

The value of this parameter must be at least 20 and greater than or equal to the size of the image.

Default value: 40 or the size of the image, whichever is greater.', example='40'),
    storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster. If you want to use disks in a dedicated block storage cluster as system disks when you create instances, you need to specify this parameter.', example='dbsc-j5e1sf2vaf5he8m2****'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  affinity?: string(name='Affinity', description='Specifies whether to associate the instance on a dedicated host with the dedicated host. Valid values:

*   default: does not associate the instance with the dedicated host. When you start an instance that was stopped in economical mode, the instance is automatically deployed to another dedicated host in the automatic deployment resource pool if the available resources of the original dedicated host are insufficient.
*   host: associates the instance with the dedicated host. When you start an instance that was stopped in economical mode, the instance remains on the original dedicated host. If the available resources of the original dedicated host are insufficient, the instance cannot start.

Default value: default.', example='default', position='Query'),
  arn?: [ 
    {
      assumeRoleFor?: long(name='AssumeRoleFor', description='>  This parameter is in invitational preview and is not publicly available.', example='1234567890'),
      roleType?: string(name='RoleType', description='>  This parameter is in invitational preview and is not publicly available.', example='Primary'),
      rolearn?: string(name='Rolearn', description='>  This parameter is in invitational preview and is not publicly available.', example='acs:ram::123456789012****:role/adminrole'),
    }
  ](name='Arn', description='>  This parameter is in invitational preview and is not publicly available.', position='Query'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the instance. This parameter is valid only if `InstanceChargeType` is set to `PrePaid`. Valid values:

*   true: enables auto-renewal.
*   false: does not enable auto-renewal.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal period of the instance. This parameter is required if AutoRenew is set to true.

Valid values if PeriodUnit is set to Month: 1, 2, 3, 6, and 12.', example='2', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.**** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  clusterId?: string(name='ClusterId', description='The ID of the cluster in which to create the instance.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='c-bp67acfmxazb4p****', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: standard mode. For more information, see the "Standard mode" section in the [Overview of burstable instances](~~59977~~) topic.
*   Unlimited: unlimited mode. For more information, see the "Unlimited mode" section in the [Burstable instances](~~59977~~) topic.', example='Standard', position='Query'),
  dataDisk?: [ 
    {
      category?: string(name='Category', description='The category of data disk N. Valid values:

*   cloud_efficiency: ultra disk.

*   cloud_ssd: standard SSD.

*   cloud_essd: ESSD.

*   cloud: basic disk.

*   cloud_auto: ESSD AutoPL disk.

*   cloud_essd_entry: ESSD Entry disk.

    **

    **Note** This parameter can be set to `cloud_essd_entry` only when `InstanceType` is set to `ecs.u1` or `ecs.e`.

*   elastic_ephemeral_disk_standard: standard elastic ephemeral disk.

*   elastic_ephemeral_disk_premium: premium elastic ephemeral disk.

For I/O optimized instances, the default value is cloud_efficiency. For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release data disk N when the instance is released. Valid values:

*   true
*   false

Default value: true.', example='true'),
      description?: string(name='Description', description='The description of data disk N. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='TestDescription'),
      device?: string(name='Device', description='The mount point of data disk N.

>  This parameter is applicable to scenarios in which a full image is used to create instances. A full image is an image that contains an operating system, application software, and business data. For these scenarios, you can set the parameter to the mount point of data disk N contained in the full image and modify `DataDisk.N.Size` and `DataDisk.N.Category` to change the category and size of data disk N created based on the image.', example='/dev/xvdb'),
      diskName?: string(name='DiskName', description='The name of data disk N. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).', example='DataDiskName'),
      encryptAlgorithm?: string(name='EncryptAlgorithm', description='>  This parameter is not publicly available.', example='hide'),
      encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt data disk N. Valid values:

*   true
*   false

Default value: false.', example='false'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key to use for data disk N.', example='0e478b7a-4262-4802-b8cb-00d****', maxLength=64),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as data disk N. The value of N must be the same as that in `DataDisk.N.Category` when DataDisk.N.Category is set to cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL2'),
      size?: int32(name='Size', description='The size of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values when DataDisk.N.Category is set to cloud_efficiency: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_ssd: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_essd: vary based on the `DataDisk.N.PerformanceLevel` value.

    *   Valid values when DataDisk.N.PerformanceLevel is set to PL0: 1 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL1: 20 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL2: 461 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL3: 1261 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud: 5 to 2000.

>  The value of this parameter must be greater than or equal to the size of the snapshot specified by `DataDisk.N.SnapshotId`.', example='2000'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create data disk N. Valid values of N: 1 to 16.

*   If `DataDisk.N.SnapshotId` is specified, `DataDisk.N.Size` is ignored. The data disk is created based on the size of the specified snapshot.
*   Use snapshots created after July 15, 2013. Otherwise, an error is returned and your request is rejected.', example='s-bp17441ohwka0yuh****'),
      storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster to which data disk N belongs. If you want to use a disk in a dedicated block storage cluster as data disk N when you create the instance, you must specify this parameter.', example='dbsc-j5e1sf2vaf5he8m2****'),
    }
  ](name='DataDisk', description='The data disks.', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host on which to create the instance.

You can call the [DescribeDedicatedHosts](~~134242~~) operation to query the list of dedicated host IDs

If you specify `DedicatedHostId`, the `SpotStrategy` and `SpotPriceLimit` parameters are ignored. This is because preemptible instances cannot be created on dedicated hosts.', example='dh-bp67acfmxazb4p****', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', description='Specifies whether to enable release protection for the instance. This parameter indicates whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance.

*   true: enables release protection.
*   false (default): disables release protection.

>  This parameter is applicable only to pay-as-you-go instances. It can protect instances against manual releases, but not against automatic releases.', example='false', position='Query'),
  deploymentSetGroupNo?: int32(name='DeploymentSetGroupNo', description='The number of the deployment set group to which to deploy the instance. If the deployment set specified by the DeploymentSetId parameter uses the high availability group strategy (AvailabilityGroup), you can use the DeploymentSetGroupNo parameter to specify a deployment set group in the deployment set. Valid values: 1 to 7.', example='1', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which to deploy the instance.', example='ds-bp1brhwhoqinyjd6****', position='Query'),
  description?: string(name='Description', description='The description of the instance. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is empty by default.', example='InstanceTest', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and unavailable ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false (default): performs a dry run and performs the actual request. If the request passes the dry run, the operation is performed.', example='false', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the instance.

*   The hostname cannot start or end with a period (.) or hyphen (-). It cannot contain consecutive periods (.) or hyphens (-).
*   For a Windows instance, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. It can contain letters, digits, and hyphens (-).
*   For an instance that runs another type of operating system such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate the hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).', example='LocalHostName', position='Query'),
  hpcClusterId?: string(name='HpcClusterId', description='The ID of the high performance computing (HPC) cluster to which to assign the instance.', example='hpc-bp67acfmxazb4p****', position='Query'),
  httpEndpoint?: string(name='HttpEndpoint', description='Specifies whether to enable the access channel for instance metadata. Valid values:

*   enabled
*   disabled

Default value: enabled.

>  For more information about instance metadata, see [Overview of instance metadata](~~49122~~).', example='enabled', position='Query'),
  httpPutResponseHopLimit?: int32(name='HttpPutResponseHopLimit', description='>  This parameter is in invitational preview and is not publicly available.', example='0', position='Query'),
  httpTokens?: string(name='HttpTokens', description='Specifies whether to forcibly use the security hardening mode (IMDSv2) to access instance metadata. Valid values:

*   optional: does not forcefully use the security hardening mode (IMDSv2).
*   required: forcefully uses the security hardening mode (IMDSv2). After you set this parameter to required, you cannot access instance metadata in normal mode.

Default value: optional.

>  For more information about the modes of accessing instance metadata, see [Access mode of instance metadata](~~150575~~).', example='optional', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. You can set this parameter to obtain the latest available custom image from the specified image family to create the instance.

*   ImageFamily must be empty if `ImageId` is specified.
*   ImageFamily can be specified if `ImageId` is not specified.', example='hangzhou-daily-update', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image to use to create the instance. To use an Alibaba Cloud Marketplace image, you can view the `image ID` on the product page of the Alibaba Cloud Marketplace image. This parameter is required if you do not specify `ImageFamily` to obtain the latest available custom image from the specified image family.', example='ubuntu_18_04_64_20G_alibase_20190624.vhd', position='Query'),
  innerIpAddress?: string(name='InnerIpAddress', description='The internal IP address to assign to the instance.', example='192.168.**.**', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription. If you set this parameter to PrePaid, make sure that you have sufficient balance or credit in your account. Otherwise, an `InvalidPayMethod` error is returned.
*   PostPaid (default): pay-as-you-go.', example='PrePaid', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-). If you do not specify this parameter, the instance ID is used as the instance name by default.', example='2018-12-06T103200Z', position='Query'),
  instanceType: string(name='InstanceType', description='The instance type.

*   Instance type selection: See [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of instance types, or see [Best practices for instance type selection](~~58291~~) to learn about how to select instance types.
*   Query of available resources: Call the [DescribeAvailableResource](~~66186~~) operation to query resources available in a specific region or zone.', example='ecs.g6.large', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Default value: PayByTraffic. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic (default): pay-by-traffic

>  When the **pay-by-traffic** billing method is used for network usage, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidth values may be limited. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of this parameter are 1 to 10 and the default value is 10.
*   When the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter are 1 to the `InternetMaxBandwidthOut` value and the default value is the `InternetMaxBandwidthOut` value.', example='50', minimum=1, maximum=200, position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.

Default value: 0.', example='5', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: The ECS instance is I/O optimized.

For retired instance types, the default value is none. For more information, see [Retired instance types](~~55263~~).

For other instance types, the default value is optimized.', example='optimized', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.

>  For Windows instances, this parameter is ignored. This parameter is empty by default. The `Password` parameter takes effect even if the KeyPairName parameter is specified.', example='KeyPairTestName', position='Query'),
  nodeControllerId?: string(name='NodeControllerId', description='>  This parameter is in invitational preview and is not publicly available.', example='hide', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='The password of the instance. The password must be 8 to 30 characters in length and contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. The following special characters are supported:

    ( ) ` ~ ! @ # $ % ^ & * - _ + = | { } [ ] : ; \\" < > , . ? /

Take note of the following items:

*   For security reasons, we recommend that you use HTTPS to send requests if the Password parameter is specified.
*   Passwords of Windows instances cannot start with a forward slash (/).
*   Passwords cannot be set for instances that run specific types of operating systems such as Others Linux and Fedora CoreOS. For these instances, only key pairs can be set.', example='TestEcs123!', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password preset in the image. When you use this parameter, leave the Password parameter empty and make sure that the selected image has a password preset.', example='false', position='Query'),
  period?: int32(name='Period', description='The subscription period of the instance. The unit is specified by `PeriodUnit`. This parameter is valid and required only when `InstanceChargeType` is set to `PrePaid`. If `DedicatedHostId` is specified, the value of Period must not exceed the subscription period of the specified dedicated host. Valid values:

Valid values if PeriodUnit is set to Month: 1, 2, 3, 6, and 12.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period. Valid values:

Month

Default value: Month.', example='Month', position='Query'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address to assign to the instance. The private IP address must be an available IP address in the CIDR block of the specified vSwitch.', example='172.16.236.*', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance Resource Access Management (RAM) role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='RAMTestName', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the instance.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening. Valid values:

*   Active: enables security hardening. This value applies only to public images.
*   Deactive: disables security hardening. This value is applicable to all images.', example='Active', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the instance.', example='sg-bp15ed6xe1yxeycg****', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify an appropriate protection period based on your business requirements.

>  This parameter takes effect only if the SpotStrategy parameter is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1', minimum=0, maximum=6, position='Query'),
  spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance. The value can only be Terminate, which specifies that the instance is released.', example='Terminate', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the instance. The value is accurate to three decimal places. This parameter is valid only when `SpotStrategy` is set to `SpotWithPriceLimit`.', example='0.98', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. This parameter is valid only if you set `InstanceChargeType` to `PostPaid`. Valid values:

*   NoSpot (default): The instance is created as a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance for which you specify the maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is automatically used as the bid price. The market price can be up to the pay-as-you-go price.', example='NoSpot', position='Query'),
  storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp1j4i2jdf3owlhe****', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The maximum number of partitions in the storage set. Valid values: greater than or equal to 2.', example='2', minimum=1, position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the instance, disks, and primary elastic network interface (ENI). Valid values of N: 1 to 20. The tag key cannot be an empty string. It can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the instance, disks, and primary ENI. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with `acs:`. It cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  tenancy?: string(name='Tenancy', description='Specifies whether to create the instance on a dedicated host. Valid values:

*   default: creates the instance on a non-dedicated host.
*   host: creates the instance on a dedicated host. If you do not specify `DedicatedHostId`, Alibaba Cloud selects a dedicated host for the instance.

Default value: default.', example='default', position='Query'),
  useAdditionalService?: boolean(name='UseAdditionalService', description='Specifies whether to use the system configurations for virtual machines. Alibaba Cloud provides the Network Time Protocol (NTP) and Key Management Service (KMS) system configurations for Windows and the NTP and Yellowdog Updater, Modified (YUM) system configurations for Linux.', example='true', position='Query'),
  userData?: string(name='UserData', description='The user data of the instance. The user data must be encoded in Base64. The maximum size of raw data is 16 KB.', example='ZWNobyBoZWxsbyBlY3Mh', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the instance. This parameter is required when you create an instance in a VPC. You can call the [DescribeVSwitches](~~35748~~) operation to query available vSwitches.

>  If `VSwitchId` is specified, the zone specified by `ZoneId` must be the zone where the specified vSwitch resides. You can also leave `ZoneId` empty. Then, the system selects the zone where the specified vSwitch resides.', example='vsw-bp1s5fnvk4gn2tws0****', position='Query'),
  vlanId?: string(name='VlanId', description='The ID of the virtual LAN (VLAN).', example='10', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which to create the instance. You can call the [DescribeZones](~~25610~~) operation to query the zones in a specific region.

>  If `VSwitchId` is specified, the zone specified by `ZoneId` must be the zone where the specified vSwitch resides. You can also leave `ZoneId` empty. Then, the system selects the zone where the specified vSwitch resides.

This parameter is empty by default.', example='cn-hangzhou-g', position='Query'),
}

model CreateInstanceResponseBody = {
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
  orderId?: string(name='OrderId', description='The order ID. This parameter is returned only if `InstanceChargeType` is set to PrePaid.', example='1234567890'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  tradePrice?: float(name='TradePrice', description='The transaction price.', example='0.165'),
}

model CreateInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateInstanceResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * >  You can call the [DescribeAvailableResource](~~66186~~) operation to query available resources in a specific region or zone. If you want to batch create instances that automatically enter the Running state after they are created, we recommend that you call the [RunInstances](~~63440~~) operation.
  * Take note of the following items:
  * *   **Billing**:
  *     *   You must familiarize yourself with ECS billing methods before you create an instance because you may be charged for the resources used by the instance. For more information, see [Billing overview](~~25398~~).
  *     *   If you create a subscription instance (`PrePaid`), available coupons in your account are used by default.
  * *   **Instance type**:
  *     *   You can use the `IoOptimized` parameter to specify whether to create an I/O optimized instance.
  *     *   Instance type selection: See [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of instance types, or see [Best practices for instance type selection](~~58291~~) to learn about how to select instance types.
  *     *   Query of available resources: Call the [DescribeAvailableResource](~~66186~~) operation to query resources available in a specific region or zone.
  * >  If the `QuotaExceed.ElasticQuota` error is returned when you call this operation, it indicates that the maximum number of instances of the specified instance type in the region has been reached, or the maximum number of vCPUs for all instance types in a zone has been reached. You can go to the [ECS console](https://ecs.console.aliyun.com/?spm=a2c8b.12215451.favorites.decs.5e3a336aMGTtzy#/privileges/quota) or [Quota Center](https://quotas.console.aliyun.com/products/ecs/quotas) to request a quota increase.
  * *   **Image**:
  *     *   The image determines the system disk configurations of the new instance. The system disk of the new instance is a clone of the specified image.
  *     *   If you want to create instances with 512 MiB of memory, you cannot use Windows Server images except for Windows Server Semi-Annual Channel images.
  *     *   If you want to create instances with 4 GiB or more of memory, you cannot use 32-bit OS image.
  * *   **Network type**:
  *     *   Each instance that resides in a virtual private cloud (VPC) must be connected to only a single vSwitch.
  *     *   If `VSwitchId` is specified, the security group specified by `SecurityGroupId` and the vSwitch specified by `VSwitchId` must belong to the same VPC.
  *     *   The value of `PrivateIpAddress` varies based on the value of `VSwitchId`. `PrivateIpAddress` cannot be separately specified. If `VSwitchId` and `PrivateIpAddress` are specified, the IP address specified by `PrivateIpAddress` must be an idle IP address in the CIDR block of the specified vSwitch.
  * *   **Public bandwidth**:
  *     *   Starting November 27, 2020, the maximum bandwidth value that is available for you to create ECS instances or change ECS instance configurations is subject to the throttling policy of your account. To increase the bandwidth limit, submit a ticket. The throttling policy imposes the following constraints: In a single region, the total maximum bandwidth value of all instances that use the pay-by-traffic billing method for network usage cannot exceed 5 Gbit/s and the total maximum bandwidth value of all instances that use the pay-by-bandwidth billing method for network usage cannot exceed 50 Gbit/s.
  *     *   If you call the `CreateInstance` operation to create an instance, no public IP addresses are assigned to the instance. You can call the [AllocatePublicIpAddress](~~25544~~) operation to assign a public IP address to an instance.
  *     *   Network usage fees vary based on the settings of `InternetChargeType` and `InternetMaxBandwidthOut`.
  *     *   The value of `InternetMaxBandwidthIn` does not affect billing because inbound data traffic is free of charge.
  *     *   If `InternetChargeType` is set to PayByBandwidth, `InternetMaxBandwidthOut` specifies the fixed bandwidth. A fixed bandwidth is a specified amount of public bandwidth allocated to an instance that uses the pay-by-bandwidth billing method for network usage.
  *     *   If `InternetChargeType` is set to PayByTraffic, `InternetMaxBandwidthOut` specifies the peak bandwidth. A peak bandwidth is the maximum amount of public bandwidth that an instance can consume when the instance uses the pay-by-traffic billing method for network usage. Network usage costs are calculated based on the volume of network traffic.
  * *   **Security group**:
  *     *   If no security groups are available in the region where you want to create an instance, you must call the [CreateSecurityGroup](~~25553~~) operation to create a security group in that region first.
  *     *   The maximum number of instances that a security group can contain varies based on the security group type. For more information, see the "Security group limits" section in the [Limits](~~25412~~) topic.
  *     *   Instances in the same security group can communicate with each other over the internal network. By default, instances in different security groups cannot communicate with each other. You can allow communication between instances by allowing mutual access between the security groups to which the instances belong. For more information, see [AuthorizeSecurityGroup](~~25554~~) and [AuthorizeSecurityGroupEgress](~~25560~~).
  * *   **Storage**:
  *     *   The instance is assigned a system disk whose capacity varies based on the size of the specified image. The size of the system disk must be at least `20 GiB` and greater than or equal to the image size. For information about system disk categories, see the description of `SystemDisk.Category`.
  *     *   The system disk of an I/O optimized instance can only be an enhanced SSD (ESSD) (`cloud_essd`), a standard SSD (`cloud_ssd`), or an ultra disk (`cloud_efficiency`).
  *     *   The maximum size of a data disk varies based on the disk category. For more information, see the description of `DataDisk.N.Size`.
  *     *   Up to 16 data disks can be added to an instance. Mount points /dev/xvd\\[b-z] are automatically assigned to data disks in ascending alphanumeric order.
  * >  If the `QuotaExceed.DiskCapacity` error is returned when you call this operation, it indicates that the maximum capacity of the disks of the selected disk category in the specified zone has been reached. You can go to the [Quota Center](https://quotas.console.aliyun.com/products/disk/quotas) to query and request a quota increase.
  * *   **User data**: If the instance type supports user data, you can use the UserData parameter to pass in user data.[](~~49121~~) User data is encoded in Base64. We recommend that you do not pass in confidential information (such as passwords or private keys) in plaintext as user data. This is because the system does not encrypt `UserData` values when API requests are transmitted. If you must pass in confidential information, we recommend that you encrypt and encode the information in Base64 before you pass in the information. Then decode and decrypt the information in the same way within the instance.
  * *   **Others**: When you call API operations by using Alibaba Cloud CLI or SDKs, you must delete periods (.) from some request parameters before you use the parameters. For example, use `SystemDiskCategory` instead of `SystemDisk.Category` as a request parameter.
  *
 */
async function createInstance(request: CreateInstanceRequest): CreateInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateInstance', 'POST', '/', 'json', false, 'json', request);
}

model CreateKeyPairRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  keyPairName: string(name='KeyPairName', description='The name of the key pair. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testKeyPairName', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the key pair. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to add the key pair.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the key pair. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the key pair. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://. The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the key pair.', position='Query'),
}

model CreateKeyPairResponseBody = {
  keyPairFingerPrint?: string(name='KeyPairFingerPrint', description='The fingerprint of the key pair. The message-digest algorithm 5 (MD5) is used based on the public key fingerprint format defined in RFC 4716. For more information, see [RFC 4716](https://tools.ietf.org/html/rfc4716).', example='89:f0:ba:62:ac:b8:aa:e1:61:5e:fd:81:69:86:6d:6b:f0:c0:5a:**'),
  keyPairId?: string(name='KeyPairId', description='The ID of the key pair.', example='ssh-bp67acfmxazb4p****'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
  privateKeyBody?: string(name='PrivateKeyBody', description='The private key of the key pair. The private key is encoded with PEM in the PKCS#8 format.', example='MIIEpAIBAAKCAQEAtReyMzLIcBH78EV2zj****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateKeyPairResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateKeyPairResponseBody(name='body'),
}

/**
  * In addition to calling the CreateKeyPair operation to create a key pair, you can use a third-party tool to create a key pair and then call the [ImportKeyPair](~~51774~~) operation to upload the key pair to an Alibaba Cloud region.
  * Up to 500 key pairs can be created in each region. For more information, see the "SSH key pair limits" section in [Limits](~~25412~~).
  *
 */
async function createKeyPair(request: CreateKeyPairRequest): CreateKeyPairResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateKeyPair', 'POST', '/', 'json', false, 'json', request);
}

model CreateLaunchTemplateRequest {
  systemDisk?: {
    autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to the system disk.', example='sp-gc7c37d4ylw7mtnk****'),
    burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for the system disk. Valid values:

*   true
*   false', example='true'),
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud: basic disk.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud_essd: Enterprise SSD (ESSD). You can use `SystemDisk.PerformanceLevel` to set the performance level of the ESSD to use as the system disk.
*   cloud_auto: ESSD AutoPL disk.
*   cloud_essd_entry: ESSD Entry disk.

For non-I/O optimized instances of retired instance types, the default value is cloud. For other types of instances, the default value is cloud_efficiency.', example='cloud_ssd'),
    deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the system disk when the instance is released. Valid values:

*   true
*   false

Default value: true.', example='true'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testSystemDiskDescription'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testSystemDiskName'),
    encrypted?: string(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true
*   false

Default value: false.

>  If you create an instance in Hong Kong Zone D or Singapore Zone A, you cannot encrypt the system disk.', example='false'),
    iops?: int32(name='Iops', description='> This parameter is in invitational preview and is unavailable for general users.', example='null'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as the system disk. Default value: PL0. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL0'),
    provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk to use as the system disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}

> This parameter is available only if you set the SystemDisk.Category parameter to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   Valid values if you set SystemDisk.Category to cloud: 20 to 500.
*   Valid values if you set SystemDisk.Category to other disk categories: 20 to 2048.

The value of this parameter must be at least 20 and greater than or equal to the size of the image.', example='40'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the instance. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

*   If the value of `ss` is not `00`, the time is automatically rounded down to the nearest minute based on the value of `mm`.
*   The specified time must be at least 30 minutes later than the current time.
*   The specified time can be at most three years later than the current time.', example='2018-01-01T12:05:00Z', position='Query'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the instance. This parameter is valid only if `InstanceChargeType` is set to `PrePaid`. Valid values:

*   true
*   false

Default value: false.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal period of the instance. Valid values:

Valid values when PeriodUnit is set to Month: 1, 2, 3, 6, 12, 24, 36, 48, and 60.

Default value: 1.', example='1', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in [Overview of burstable instances](~~59977~~).
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in [Overview of burstable instances](~~59977~~).', example='Standard', position='Query'),
  dataDisk?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to data disk N.', example='sp-m5e7fa9ute44ssa****'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for data disk N. Valid values:

*   true
*   false', example='true'),
      category?: string(name='Category', description='The category of data disk N. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD
*   cloud_auto: ESSD AutoPL disk
*   cloud_essd_entry: ESSD Entry disk

For I/O optimized instances, the default value is cloud_efficiency. For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release data disk N when the instance is released. Valid values:

*   true
*   false

Default value: true.', example='true'),
      description?: string(name='Description', description='The description of data disk N. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testDataDiskDescription'),
      device?: string(name='Device', description='>  This parameter will be removed in the future. We recommend that you do not use this parameter to ensure future compatibility.', example='null'),
      diskName?: string(name='DiskName', description='The name of data disk N. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testDataDiskName'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt data disk N.', example='false'),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as data disk N. The value of N must be the same as that in `DataDisk.N.Category` when DataDisk.N.Category is set to cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1'),
      provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}.

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.

>  This parameter is available only if you set DataDisk.N.Category to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000'),
      size?: int32(name='Size', description='The size of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values if you set DataDisk.N.Category to cloud: 5 to 2000.

*   Valid values if you set DataDisk.N.Category to cloud_efficiency: 20 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_ssd: 20 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_essd: vary based on the value of `DataDisk.N.PerformanceLevel`.

    *   Valid values if you set DataDisk.N.PerformanceLevel to PL0: 1 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL1: 20 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL2: 461 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL3: 1261 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_auto: 1 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_essd_entry: 10 to 32768.

The value of this parameter must be greater than or equal to the size of the snapshot specified by `DataDisk.N.SnapshotId`.', example='2000'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create data disk N. Valid values of N: 1 to 16. If you specify `DataDisk.N.SnapshotId`, `DataDisk.N.Size` is ignored. The data disk is created with the size of the specified snapshot.

>  Use snapshots created on or after July 15, 2013. Otherwise, an error is returned and your request is rejected.', example='s-bp17441ohwka0yuh****'),
    }
  ](name='DataDisk', description='The data disks.', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', description='Specifies whether to enable release protection for the instance. This parameter specifies whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance. Valid values:

*   true
*   false

Default value: false.

>  This parameter is applicable only to pay-as-you-go instances. The release protection feature can protect instances against manual releases, but not against automatic releases.', example='false', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which to deploy the instance.', example='ds-bp1brhwhoqinyjd6****', position='Query'),
  description?: string(name='Description', description='The instance description. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testECSDescription', position='Query'),
  enableVmOsConfig?: boolean(name='EnableVmOsConfig', description='Specifies whether to enable the operating system configuration of the instance.

> This parameter will be removed in the future. To ensure future compatibility, we recommend that you use other parameters.', example='false', position='Query'),
  hostName?: string(name='HostName', description='The instance hostname.

*   The hostname cannot start or end with a period (.) or hyphen (-). It cannot contain consecutive periods (.) or hyphens (-).
*   For Windows instances, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. It can contain letters, digits, and hyphens (-).
*   For instances that run other operating systems such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate the hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).', example='testHostName', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image to use to create the instance. You can call the [DescribeImages](~~25534~~) operation to query available images.', example='win2008r2_64_ent_sp1_en-us_40G_alibase_20170915.vhd', position='Query'),
  imageOwnerAlias?: string(name='ImageOwnerAlias', description='The source of the image. Valid values:

*   system: public image provided by Alibaba Cloud.
*   self: custom image that you created.
*   others: shared image from another Alibaba Cloud account.
*   marketplace:[Alibaba Cloud Marketplace](https://marketplace.alibabacloud.com/) image. If Alibaba Cloud Marketplace images are available, you can use the images without the need to subscribe to the images. Take note of the billing details of Alibaba Cloud Marketplace images.', example='system', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription. If you set this parameter to PrePaid, make sure that your account has sufficient credits.Otherwise, an `InvalidPayMethod` error is returned.
*   PostPaid: pay-as-you-go.', example='PrePaid', position='Query'),
  instanceName?: string(name='InstanceName', description='The instance name. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-). The default value of this parameter is the `InstanceId` value.

When you create multiple ECS instances at a time, you can batch configure sequential names for the instances. The instance names can contain square brackets (\\[]) and commas (,). For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).', example='k8s-node-[1,4]-alibabacloud', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type of the instance. For more information, see [Instance families](~~25378~~). Alternatively, you can call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list.', example='ecs.g5.large', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidths may be limited. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of this parameter are 1 to 10 and the default value is 10.
*   When the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter are 1 to the `InternetMaxBandwidthOut` value and the default value is the `InternetMaxBandwidthOut` value.', example='10', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.', example='10', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether to create an I/O optimized instance. Valid values:

*   none: creates a non-I/O optimized instance.
*   optimized: creates an I/O optimized instance.', example='optimized', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the primary elastic network interface (ENI). Valid values: 1 to 10.', example='1', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair. This parameter is empty by default.

*   For Windows instances, this parameter is ignored The `Password` parameter takes effect even if the KeyPairName parameter is specified.
*   For Linux instances, the password-based logon method is disabled by default.', example='testKeyPairName', position='Query'),
  launchTemplateName: string(name='LaunchTemplateName', description='The name of the launch template. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testLaunchTemplateName', position='Query'),
  networkInterface?: [ 
    {
      description?: string(name='Description', description='The description of the secondary ENI. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`. The value of N in `NetworkInterface.N` cannot be greater than 1.', example='testEniDescription'),
      instanceType?: string(name='InstanceType', description='The type of ENI N. Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.

Valid values:

*   Primary
*   Secondary

Default value: Secondary.', example='ecs.g5.large'),
      networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you do not need to set this parameter.', example='testEniName'),
      networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the primary ENI. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.', example='Standard'),
      primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary IP address to assign to ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2.

    *   If the value of N is 1, you can configure a primary or secondary ENI. If this parameter is specified, `Amount` is set to a numeric value greater than 1, and NetworkInterface.N.InstanceType is set to Primary, the specified number of instances are created and consecutive primary IP addresses starting from the specified one are assigned to the instances. In this case, you cannot attach secondary ENIs to the instances.
    *   If the value of N is 2, you can configure a primary ENI and a secondary ENI. If this parameter is specified, `Amount` is set to a numeric value greater than 1, and NetworkInterface.N.InstanceType is set to Primary, you cannot set `NetworkInterface.2.InstanceType` to Secondary to attach a secondary ENI.

*   If `NetworkInterface.N.InstanceType` is set to `Primary`, this parameter is equivalent to `PrivateIpAddress`. You cannot specify both this parameter and `PrivateIpAddress`.

*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, the specified primary IP address is assigned to the secondary ENI. The default value is an IP address that is randomly selected from within the CIDR block of the vSwitch to which to connect the secondary ENI.

>  You can attach only a single secondary ENI when you create an instance. After the instance is created, you can call the [CreateNetworkInterface](~~58504~~) and [AttachNetworkInterface](~~58515~~) operations to attach more secondary ENIs.', example='192.168.**.**'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must set this parameter. In this case, this parameter is equivalent to `SecurityGroupId`. You cannot specify `SecurityGroupId`, `SecurityGroupIds.N`, or `NetworkInterface.N.SecurityGroupIds.N`.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, this parameter is optional. The default value is the ID of the security group to which to assign the instance.', example='sg-bp15ed6xe1yxeycg****'),
      securityGroupIds?: [ string ](name='SecurityGroupIds', description='The ID of security group N to which to assign ENI N.

*   Valid values of the first N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   The second N indicates that one or more security group IDs can be specified. The valid values of N vary based on the maximum number of security groups to which an instance can belong. For more information, see the [Security group limits](~~25412#SecurityGroupQuota1~~) section of the "Limits" topic.

Take note of the following items:

*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must specify this parameter or `NetworkInterface.N.SecurityGroupId`. In this case, this parameter is equivalent to `SecurityGroupIds.N`. You cannot specify `SecurityGroupId`, `SecurityGroupIds.N`, or `NetworkInterface.N.SecurityGroupId`.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, this parameter is optional. The default value is the ID of the security group to which to assign the instance.', example='sg-bp67acfmxazb4p****'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must set this parameter. In this case, this parameter is equivalent to `VSwitchId`. You cannot specify both NetworkInterface.N.VSwitchId and `VSwitchId`.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, this parameter is optional. The default value is the VSwitchId value.', example='vsw-bp1s5fnvk4gn2tws0****'),
    }
  ](name='NetworkInterface', description='The information of the ENIs.', position='Query'),
  networkType?: string(name='NetworkType', description='The network type of the instance. Valid values:

*   classic: classic network
*   vpc: VPC', example='vpc', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the preset password of the image.

> If you set the PasswordInherit parameter to true, make sure that you leave the Password parameter empty and the selected image has a preset password.', example='false', position='Query'),
  period?: int32(name='Period', description='The subscription duration of the instance. Unit: months. This parameter is valid and required only when `InstanceChargeType` is set to `PrePaid`. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period. Valid values:

Month (default)', example='Month', position='Query'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address to assign to the instance.

To assign a private IP address to an instance that resides in a VPC, make sure that the IP address is an idle IP address within the CIDR block of the vSwitch specified by the `VSwitchId` parameter.', example='10.1.**.**', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance Resource Access Management (RAM) role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='testRamRoleName', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the launch template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the instance, Elastic Block Storage (EBS) device, and elastic network interface (ENI).', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening for the operating system. Valid values:

*   Active: enables security hardening. This value is applicable only to public images.
*   Deactive: does not enable security hardening. This value is applicable to all images.', example='Deactive', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the instance. Instances in the same security group can communicate with each other. A security group can contain up to 1,000 instances.

> You cannot specify both the `SecurityGroupId` and `SecurityGroupIds.N` parameters.', example='sg-bp15ed6xe1yxeycg****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups to which to assign the instance. The valid values of N are based on the maximum number of security groups to which the instance can belong. For more information, see the "Security group limits" section in [Limits](~~25412~~).

> You cannot specify both the `SecurityGroupId` and `SecurityGroupIds.N` parameters.', example='sg-bp15ed6xe1yxeycg7****', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter takes effect only if SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the instance. The value is accurate to three decimal places. This parameter is valid only when the `SpotStrategy` parameter is set to `SpotWithPriceLimit`.', example='0.97', minimum=0, maximum=999999, position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. This parameter is valid only when the `InstanceChargeType` parameter is set to `PostPaid`. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is created as a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bidding price.', example='NoSpot', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the instance, EBS device, and ENI. Valid values of N: 1 to 20. The tag key cannot be an empty string. It can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the instance, EBS device, and ENI. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length. It cannot start with acs: or aliyun or contain [http:// or https://.](http://https://。)', example='TestValue'),
    }
  ](name='Tag', description='The tags of the launch template.', position='Query'),
  templateResourceGroupId?: string(name='TemplateResourceGroupId', description='The ID of the resource group to which the launch template belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  templateTag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the launch template. Valid values of N: 1 to 20. The tag key cannot be an empty string. It can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the launch template. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='TemplateTag', description='The tags to add to the launch template.', position='Query'),
  userData?: string(name='UserData', description='The user data of the instance. The user data must be encoded in Base64. The maximum size of raw data is 32 KB.', example='ZWNobyBoZWxsbyBlY3Mh', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the instance. This parameter is required if you specify the VpcId parameter.', example='vsw-bp1s5fnvk4gn2tws0****', position='Query'),
  versionDescription?: string(name='VersionDescription', description='The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testVersionDescription', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC).', example='vpc-bp12433upq1y5scen****', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which to create the instance.', example='cn-hangzhou-g', position='Query'),
}

model CreateLaunchTemplateResponseBody = {
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template.', example='lt-m5eiaupmvm2op9d****'),
  launchTemplateVersionNumber?: long(name='LaunchTemplateVersionNumber', description='The version number of the launch template.', example='2'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model CreateLaunchTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateLaunchTemplateResponseBody(name='body'),
}

/**
  * ## Description
  * Launch templates contain preset configurations used to create instances, such as the region, image ID, instance type, security group ID, and public bandwidth settings. If a specific parameter is not included in a launch template, you must manually specify the parameter when you use the launch template to create an instance.
  * After you create a launch template (`CreateLaunchTemplate`), its version number is set to 1 by default. You can create multiple versions (`CreateLaunchTemplateVersion`) for the launch template. Version numbers start from 1 and increment by one. If you do not specify a template version number when you use a launch template to create instances ([RunInstances](~~63440~~)), the default version is used.
  * When you call this operation, take note of the following items:
  * *   You can create up to 30 launch templates in each region. Each launch template can have up to 30 versions.
  * *   Most parameters in launch templates are optional. When you create a launch template, ECS does not verify the existence or validity of specified parameter values. The validity of the parameter values are verified only when you use the launch template to create instances.
  * *   If you set a specific parameter in a launch template, you cannot filter out this parameter when you use the launch template to create instances ([RunInstances](~~63440~~)). For example, if you set the `HostName` parameter to LocalHost in a launch template and do not set the `HostName` parameter when you call the `RunInstances` operation to create instances from the launch template, the created instance still has a hostname of `LocalHost`. If you want to overwrite the `LocalHost` value of HostName provided by the launch template, you can set `HostName` to MyHost or another value when you call the `RunInstances` operation.
  *
 */
async function createLaunchTemplate(request: CreateLaunchTemplateRequest): CreateLaunchTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateLaunchTemplate', 'POST', '/', 'json', false, 'json', request);
}

model CreateLaunchTemplateVersionRequest {
  systemDisk?: {
    autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to the system disk.', example='sp-bp1dgzpaxwc4load****'),
    burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature. Valid values:

*   true: encrypts the disk.
*   false: does not enable the performance burst feature.', example='true'),
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud: basic disk.
*   cloud_efficiency: ultra disk.
*   cloud_ssd: standard SSD.
*   cloud_auto: Enterprise SSD (ESSD) AutoPL disk.
*   cloud_essd: ESSD. You can use `SystemDisk.PerformanceLevel` to set the performance level of the ESSD to use as the system disk.
*   cloud_essd_entry: ESSD Entry disk.

For non-I/O optimized instances of retired instance types, the default value is cloud. For other types of instances, the default value is cloud_efficiency.', example='cloud_ssd'),
    deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the system disk when the instance is released. Valid values:

*   true
*   false

Default value: true.', example='true'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testSystemDiskDescription'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='cloud_ssdSystem'),
    encrypted?: string(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true
*   false

Default value: false

> You cannot encrypt system disks when you create instances in Hong Kong Zone D or Singapore Zone A.', example='false'),
    iops?: int32(name='Iops', description='>  This parameter is not publicly available.', example='30000'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to be used as the system disk. Default value: PL0. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL0'),
    provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk to use as data disk N. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}

> This parameter is available only if you set the Category parameter to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   Valid values if you set SystemDisk.Category to cloud: 20 to 500.
*   Valid values if you set SystemDisk.Category to other disk categories: 20 to 2048.

The value of this parameter must be at least 20 and greater than or equal to the size of the image.', example='40'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the instance. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

*   If the value of `ss` is not `00`, the time is automatically rounded down to the nearest minute based on the value of `mm`.
*   The specified time must be at least 30 minutes later than the current time.
*   The specified time can be at most three years later than the current time.', example='2018-01-01T12:05:00Z', position='Query'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the instance. This parameter is valid only if `InstanceChargeType` is set to `PrePaid`. Valid values:

*   true
*   false

Default value: false.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal period of the instance. Valid values:

Valid values when PeriodUnit is set to Month: 1, 2, 3, 6, 12, 24, 36, 48, and 60.

Default value: 1.', example='1', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in [Overview of burstable instances](~~59977~~).
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in [Overview of burstable instances](~~59977~~).', example='Standard', position='Query'),
  dataDisk?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to data disk N.', example='sp-bp67acfmxazb4p****'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for data disk N. Valid values:

*   true
*   false', example='true'),
      category?: string(name='Category', description='The category of data disk N. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_auto: ESSD AutoPL disk
*   cloud_essd: ESSD
*   cloud_essd_entry: ESSD Entry disk

For I/O optimized instances, the default value is cloud_efficiency. For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release data disk N when the instance is released. Valid values:

*   true
*   false

Default value: true.', example='true'),
      description?: string(name='Description', description='The description of data disk N. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testDataDiskDescription'),
      device?: string(name='Device', description='>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='null'),
      diskName?: string(name='DiskName', description='The name of data disk N. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testDataDiskName'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt data disk N.', example='false'),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as data disk N. The value of N must be the same as that in `DataDisk.N.Category` when DataDisk.N.Category is set to cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1'),
      provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}

>  This parameter is available only if you set DataDisk.N.Category to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000'),
      size?: int32(name='Size', description='The size of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values if you set DataDisk.N.Category to cloud: 5 to 2000.

*   Valid values if you set DataDisk.N.Category to cloud_efficiency: 20 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_ssd: 20 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_essd: vary based on the `DataDisk.N.PerformanceLevel` value.

    *   Valid values if you set DataDisk.N.PerformanceLevel to PL0: 1 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL1: 20 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL2: 461 to 32768.
    *   Valid values if you set DataDisk.N.PerformanceLevel to PL3: 1261 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_auto: 1 to 32768.

*   Valid values if you set DataDisk.N.Category to cloud_essd_entry: 10 to 32768.

The value of this parameter must be greater than or equal to the size of the snapshot specified by `DataDisk.N.SnapshotId`.', example='2000'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create data disk N. Valid values of N: 1 to 16. When `DataDisk.N.SnapshotId` is specified, `DataDisk.N.Size` is ignored. The data disk is created with the size of the specified snapshot.

Use snapshots created on or after July 15, 2013. Otherwise, an error is returned and your request is rejected.', example='s-bp17441ohwka0yuh****'),
    }
  ](name='DataDisk', description='The data disks.', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', description='Specifies whether to enable release protection for the instance. This parameter specifies whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance. Valid values:

*   true
*   false

Default value: false.

>  This parameter is applicable only to pay-as-you-go instances. The release protection feature can protect instances against manual releases, but not against automatic releases.', example='false', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which to deploy the instance.', example='ds-bp1brhwhoqinyjd6****', position='Query'),
  description?: string(name='Description', description='The description of the instance. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testDescription', position='Query'),
  enableVmOsConfig?: boolean(name='EnableVmOsConfig', description='Specifies whether to enable the operating system configuration of the instance.', example='false', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the instance.

*   The hostname cannot start or end with a period (.) or hyphen (-). It cannot contain consecutive periods (.) or hyphens (-).
*   For Windows instances, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. It can contain letters, digits, and hyphens (-).
*   For instances that run other operating systems such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate the hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).', example='testHostName', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image to use to create the Elastic Compute Service (ECS) instance. You can call the [DescribeImages](~~25534~~) operation to query available images.', example='win2008r2_64_ent_sp1_en-us_40G_alibase_20170915.vhd', position='Query'),
  imageOwnerAlias?: string(name='ImageOwnerAlias', description='The source of the image.

> This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='system', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription. If you set this parameter to PrePaid, make sure that your account has sufficient credits. Otherwise, an `InvalidPayMethod` error is returned.
*   PostPaid: pay-as-you-go', example='PrePaid', position='Query'),
  instanceName?: string(name='InstanceName', description='The instance name. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-). The default value of this parameter is the `InstanceId` value.

When you create multiple ECS instances at a time, you can batch configure sequential names for the instances. The instance names can contain square brackets (\\[]) and commas (,). For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).', example='k8s-node-[1,4]-alibabacloud', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. For more information, see [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list.', example='ecs.g5.large', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Default value: PayByTraffic. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidth values may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of this parameter are 1 to 10 and the default value is 10.
*   If the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter range from 1 to the `InternetMaxBandwidthOut` value and the default value is the `InternetMaxBandwidthOut` value.', example='50', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.', example='5', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether to create an I/O optimized instance. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: creates an I/O optimized instance.', example='optimized', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the primary elastic network interface (ENI). Valid values: 1 to 10.', example='1', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair to bind to the instance.

*   For Windows instances, this parameter is ignored The `Password` parameter is valid even if the KeyPairName parameter is specified.
*   For Linux instances, the password-based logon method is disabled by default.', example='testKeyPairName', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, call the [DescribeLaunchTemplates](~~73759~~) operation. You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='lt-m5eiaupmvm2op9d****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testLaunchTemplateName', position='Query'),
  networkInterface?: [ 
    {
      description?: string(name='Description', description='The description of the secondary ENI. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`. The value of N in `NetworkInterface.N` cannot be greater than 1.', example='testNetworkInterfaceDescription'),
      instanceType?: string(name='InstanceType', description='The type of ENI N. Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.

Valid values:

*   Primary
*   Secondary

Default value: Secondary.', example='ecs.g5.large'),
      networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the secondary ENI. The value of N in `NetworkInterface.N` cannot be greater than 1.', example='testNetworkInterfaceName'),
      networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the primary ENI. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.', example='Standard'),
      primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary private IP address of the secondary ENI. The value of N in `NetworkInterface.N` cannot be greater than 1.', example='192.168.**.**'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the secondary ENI. The security groups of the secondary ENI and of the instance must belong to the same VPC. The value of N in `NetworkInterface.N` cannot be greater than 1.

>  You cannot specify both `NetworkInterface.N.SecurityGroupId` and `NetworkInterface.N.SecurityGroupIds.N`.', example='sg-bp15ed6xe1yxeycg****'),
      securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of the security groups to which to assign the secondary ENI. The security group and the secondary ENI must belong to the same VPC. The valid values of N in `SecurityGroupIds.N` vary based on the maximum number of security groups to which a secondary ENI can belong. For more information, see the "Security group limits" section in [Limits](~~25412~~). The value of N in `NetworkInterface.N` cannot be greater than 1.

>  You cannot specify both `NetworkInterface.N.SecurityGroupId` and `NetworkInterface.N.SecurityGroupIds.N`.', example='sg-bp67acfmxazb4p****'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the secondary ENI. The instance and the secondary ENI must reside in the same zone of the same VPC, but they can be connected to different vSwitches. The value of N in `NetworkInterface.N` cannot be greater than 1.', example='vsw-bp1s5fnvk4gn2tws0****'),
    }
  ](name='NetworkInterface', description='The information of the elastic network interfaces (ENIs).', position='Query'),
  networkType?: string(name='NetworkType', description='The network type of the instance. Valid values:

*   classic: classic network
*   vpc: VPC', example='vpc', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password that is preconfigured in the image. Valid values:

*   true
*   false

Default value: false.

>  If you specify PasswordInherit, you must leave Password empty and make sure that a password is preconfigured for the image.', example='false', position='Query'),
  period?: int32(name='Period', description='The subscription period of the instance. Unit: months. This parameter is valid and required only when `InstanceChargeType` is set to `PrePaid`. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period. Valid values:

Month (default)', example='Month', position='Query'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address to assign to the instance.

To assign a private IP address to an instance of the VPC type, make sure that the IP address is an idle IP address within the CIDR block of the vSwitch specified by the `VSwitchId` parameter.', example='10.1.**.**', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance Resource Access Management (RAM) role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='testRamRoleName', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the instance.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening for the operating system. Valid values:

*   Active: Security hardening is enabled. This value is applicable only to public images.
*   Deactive: Security hardening is disabled. This value is available to all types of images.', example='Active', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the instance. Instances within the same security group can access each other.

> The `SecurityGroupId` parameter and the `SecurityGroupIds.N` parameter are mutually exclusive.', example='sg-bp15ed6xe1yxeycg****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The ID of security group N to which to assign the instance. The valid values of N depend on the maximum number of security groups to which the instance can belong. For more information, see [Quantity limits](~~25412~~).

> The `SecurityGroupId` parameter and the `SecurityGroupIds.N` parameter are mutually exclusive.', example='sg-bp15ed6xe1yxeycg7****', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter takes effect only if SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the preemptible instance. A maximum of three decimal places are allowed.', example='0.97', minimum=0, maximum=999999, position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The preemption policy for the pay-as-you-go instance. This parameter is valid only when the `InstanceChargeType` parameter is set to `PostPaid`. Default value: NoSpot. Valid values:

*   NoSpot: The instance is created as a pay-as-you-go instance.
*   SpotWithPriceLimit: The instances of the compute node are preemptible instances. These types of instances have a specified maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bid price.', example='NoSpot', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the instance, block storage devices, or primary ENI. Valid values of N: 1 to 5. The tag key cannot be an empty string. It can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the instance, block storage devices, or primary ENI. Valid values of N: 1 to 5. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the activation code.', position='Query'),
  userData?: string(name='UserData', description='The user data of the instance. The user data must be encoded in Base64. The maximum size of raw data is 32 KB.', example='ZWNobyBoZWxsbyBl****', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the instance. This parameter is required if you specify the VpcId parameter.', example='vsw-bp1s5fnvk4gn2tws0****', position='Query'),
  versionDescription?: string(name='VersionDescription', description='The description of the launch template version. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testVersionDescription', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC).', example='vpc-bp12433upq1y5scen****', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone to which the instance belongs.', example='cn-hangzhou-g', position='Query'),
}

model CreateLaunchTemplateVersionResponseBody = {
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, see [DescribeLaunchTemplates](~~73759~~).

You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='lt-bp1apo0bbbkuy0rj****'),
  launchTemplateVersionNumber?: long(name='LaunchTemplateVersionNumber', description='The version number of the launch template.', example='2'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DExxxxx'),
}

model CreateLaunchTemplateVersionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateLaunchTemplateVersionResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * If you want to modify the parameters of a launch template version, you can create another version with different parameter settings for the launch template. You can create up to 30 versions for each launch template.
  *
 */
async function createLaunchTemplateVersion(request: CreateLaunchTemplateVersionRequest): CreateLaunchTemplateVersionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateLaunchTemplateVersion', 'POST', '/', 'json', false, 'json', request);
}

model CreateNatGatewayRequest {
  bandwidthPackage: [ 
    {
      bandwidth?: int32(name='Bandwidth'),
      ipCount?: int32(name='IpCount'),
      zone?: string(name='Zone'),
    }
  ](name='BandwidthPackage', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  name?: string(name='Name', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId: string(name='VpcId', position='Query'),
}

model CreateNatGatewayResponseBody = {
  bandwidthPackageIds?: {
    bandwidthPackageId?: [ string ](name='BandwidthPackageId')
  }(name='BandwidthPackageIds'),
  forwardTableIds?: {
    forwardTableId?: [ string ](name='ForwardTableId')
  }(name='ForwardTableIds'),
  natGatewayId?: string(name='NatGatewayId'),
  requestId?: string(name='RequestId'),
}

model CreateNatGatewayResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateNatGatewayResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createNatGateway(request: CreateNatGatewayRequest): CreateNatGatewayResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateNatGateway', 'POST', '/', 'json', false, 'json', request);
}

model CreateNetworkInterfaceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  businessType?: string(name='BusinessType', description='> This parameter is no longer used.', example='null', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  connectionTrackingConfiguration?: {
    tcpClosedAndTimeWaitTimeout?: int32(name='TcpClosedAndTimeWaitTimeout', description='This parameter is not publicly available.'),
    tcpEstablishedTimeout?: int32(name='TcpEstablishedTimeout', description='This parameter is not publicly available.'),
    udpTimeout?: int32(name='UdpTimeout', description='This parameter is not publicly available.'),
  }(name='ConnectionTrackingConfiguration', description='This parameter is not publicly available.', position='Query'),
  deleteOnRelease?: boolean(name='DeleteOnRelease', description='Specifies whether to release the ENI when the associated instance is released. Valid values:

*   true
*   false', example='true', position='Query'),
  description?: string(name='Description', description='The description of the ENI. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

This parameter is empty by default.', example='testDescription', position='Query'),
  enhancedNetwork?: {
    enableSriov?: boolean(name='EnableSriov', description='This parameter is not publicly available.'),
  }(name='EnhancedNetwork', description='This parameter is not publicly available.', position='Query'),
  instanceType?: string(name='InstanceType', description='The type of the ENI. Valid values:

*   Secondary: secondary ENI.
*   Trunk: trunk ENI. This value is in invitational preview.

Default value: Secondary.', example='null', position='Query'),
  ipv4Prefix?: [ string ](name='Ipv4Prefix', description='IPv4 prefixes to assign to the ENI. Valid values of N: 1 to 10.

>  To assign IPv4 prefixes to the ENI, you must specify the Ipv4Prefix.N or Ipv4PrefixCount parameter, but not both.', position='Query'),
  ipv4PrefixCount?: int32(name='Ipv4PrefixCount', description='The number of IPv4 prefixes to assign to the ENI. Valid values: 1 to 10.

>  To assign IPv4 prefixes to the ENI, you must specify the Ipv4Prefix.N or Ipv4PrefixCount parameter, but not both.', example='hide', minimum=1, maximum=10, position='Query'),
  ipv6Address?: [ string ](name='Ipv6Address', description='IPv6 addresses to assign to the ENI. Valid values of N: 1 to 10.

Example: Ipv6Address.1=2001:db8:1234:1a00::\\*\\*\\*\\*

>  To assign IPv6 addresses to the ENI, you must specify the `Ipv6Addresses.N` or `Ipv6AddressCount` parameter, but not both.', example='2001:db8:1234:1a00::****', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the ENI. Valid values: 1 to 10.

>  To assign IPv6 addresses to the ENI, you must specify the `Ipv6Addresses.N` or `Ipv6AddressCount` parameter, but not both.', example='1', minimum=1, position='Query'),
  ipv6Prefix?: [ string ](name='Ipv6Prefix', description='IPv6 prefixes to assign to the ENI. Valid values of N: 1 to 10.

>  To assign IPv6 prefixes to the ENI, you must specify the Ipv6Prefix.N or Ipv6PrefixCount parameter, but not both.', position='Query'),
  ipv6PrefixCount?: int32(name='Ipv6PrefixCount', description='The number of IPv6 prefixes to assign to the ENI. Valid values: 1 to 10.

>  To assign IPv6 prefixes to the ENI, you must specify the Ipv6Prefix.N or Ipv6PrefixCount parameter, but not both.', example='hide', minimum=1, maximum=10, position='Query'),
  networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

This parameter is left empty by default.', example='testNetworkInterfaceName', position='Query'),
  networkInterfaceTrafficConfig?: {
    networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the ENI.', example='HighPerformance'),
    queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI.', example='8'),
    queuePairNumber?: int32(name='QueuePairNumber', description='The number of queues supported by the ERI.', example='8'),
    rxQueueSize?: int32(name='RxQueueSize', description='The receive (Rx) queue depth of the ENI.', example='8192'),
    txQueueSize?: int32(name='TxQueueSize', description='The transmit (Tx) queue depth of the ENI.', example='8192'),
  }(name='NetworkInterfaceTrafficConfig', description='The communication settings of the ENI.', position='Query'),
  networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the ENI. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.

>  ENIs in RDMA mode can be attached only to instances of the instance types that support ERIs. The number of ENIs in RDMA mode that are attached to an instance cannot exceed the maximum number of ENIs that the instance type supports. For more information, see [Overview of ECS instance families](~~25378~~) and [Configure eRDMA on an enterprise-level instance](~~336853~~).

Default value: Standard.', example='Standard', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary private IP address of the ENI.

The specified IP address must be an idle IP address within the CIDR block of the vSwitch with which to associate the ENI. If this parameter is not specified, an idle IP address is assigned from within the vSwitch CIDR block at random.', example='172.17.**.**', position='Query'),
  privateIpAddress?: [ string ](name='PrivateIpAddress', description='Secondary private IP addresses to assign to the ENI. The IP addresses must be idle IP addresses in the CIDR block of the vSwitch with which to associate the ENI. Valid values of N: 0 to 10.

>  To assign secondary private IP addresses to the ENI, you can specify the `PrivateIpAddress.N` or `SecondaryPrivateIpAddressCount` parameter, but not both.', example='172.17.**.**', position='Query'),
  queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI. Valid values: 1 to 2048.

When you attach the ENI to an instance, make sure that the value of this parameter is less than the maximum number of queues per ENI that is allowed for the instance type. To view the maximum number of queues per ENI allowed for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and then check the return value of `MaximumQueueNumberPerEni`.

This parameter is left empty by default. If you do not specify this parameter, the default number of queues per ENI for the instance type of an instance is used when you attach the ENI to the instance. To view the default number of queues per ENI for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and then check the return value of `SecondaryEniQueueNumber`.', example='1', minimum=1, position='Query'),
  queuePairNumber?: int32(name='QueuePairNumber', description='> This parameter is in invitational preview and is not publicly available.', example='22', position='Query'),
  regionId: string(name='RegionId', description='The region in which to create the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which you want to assign the ENI. You can call the [ListResourceGroups](~~158855~~) operation to query the most recent resource group list.', example='rg-bp67acfmxazb4ph****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  rxQueueSize?: int32(name='RxQueueSize', description='The receive (Rx) queue depth of the ENI.

Take note of the following items:

*   The Rx queue depth of an ENI must be the same as the Tx queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Rx queue depth yields higher inbound throughput but consumes more memory.', example='8192', position='Query'),
  secondaryPrivateIpAddressCount?: int32(name='SecondaryPrivateIpAddressCount', description='The number of private IP addresses to be assigned by ECS. Valid values: 1 to 49.', example='1', minimum=1, position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the ENI. The security group and the ENI must belong to the same VPC.

> You must specify `SecurityGroupId` or `SecurityGroupIds.N` but not both.', example='sg-bp1fg655nh68xyz9i****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of security groups to which to assign the ENI. The security groups and the ENI must belong to the same VPC. The valid values of N are determined based on the maximum number of security groups to which an ENI can be assigned. For more information, see [Limits](~~25412~~).

>  You must specify `SecurityGroupId` or `SecurityGroupIds.N` but not both.', example='sg-bp1fg655nh68xyz9i****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the ENI. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length. It cannot start with aliyun or acs: and cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the ENI. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the ENI.', position='Query'),
  txQueueSize?: int32(name='TxQueueSize', description='The transmit (Tx) queue depth of the ENI.

Take note of the following items:

*   The Tx queue depth of an ENI must be the same as the Rx queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Tx queue depth yields higher outbound throughput but consumes more memory.', example='8192', position='Query'),
  vSwitchId: string(name='VSwitchId', description='The ID of the vSwitch with which to associate the ENI. Private IP addresses are assigned to the ENI from within the CIDR block of the vSwitch.', example='vsw-bp1s5fnvk4gn2tws03****', position='Query'),
  visible?: boolean(name='Visible', description='> This parameter is no longer used.', example='null', position='Query'),
}

model CreateNetworkInterfaceResponseBody = {
  description?: string(name='Description', description='The description of the ENI.', example='testDescription'),
  ipv4PrefixSets?: {
    ipv4PrefixSet?: [ 
    {
      ipv4Prefix?: string(name='Ipv4Prefix', description='The IPv4 prefix assigned to the ENI.', example='hide'),
    }
  ](name='Ipv4PrefixSet')
  }(name='Ipv4PrefixSets', description='The IPv4 prefixes assigned to the ENI.'),
  ipv6PrefixSets?: {
    ipv6PrefixSet?: [ 
    {
      ipv6Prefix?: string(name='Ipv6Prefix', description='The IPv6 prefix assigned to the ENI.', example='hide'),
    }
  ](name='Ipv6PrefixSet')
  }(name='Ipv6PrefixSets', description='The IPv6 prefixes assigned to the ENI.'),
  ipv6Sets?: {
    ipv6Set?: [ 
    {
      ipv6Address?: string(name='Ipv6Address', description='The IPv6 address assigned to the ENI.', example='2001:db8:1234:1a00::****'),
    }
  ](name='Ipv6Set')
  }(name='Ipv6Sets', description='The IPv6 addresses assigned to the ENI.'),
  macAddress?: string(name='MacAddress', description='The media access control (MAC) address of the ENI.', example='00:16:3e:12:**:**'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp14v2sdd3v8htln****'),
  networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI.', example='my-eni-name'),
  ownerId?: string(name='OwnerId', description='The ID of the account to which the ENI belongs.', example='123456****'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the ENI.', example='172.17.**.**'),
  privateIpSets?: {
    privateIpSet?: [ 
    {
      primary?: boolean(name='Primary', description='Indicates whether the private IP address is the primary private IP address.', example='true'),
      privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the instance.', example='172.17.**.**'),
    }
  ](name='PrivateIpSet')
  }(name='PrivateIpSets', description='The private IP addresses.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ENI belongs.', example='rg-2ze88m67qx5z****'),
  securityGroupIds?: {
    securityGroupId?: [ string ](name='SecurityGroupId')
  }(name='SecurityGroupIds', description='The IDs of the security groups to which the ENI belongs.'),
  serviceID?: long(name='ServiceID', description='The ID of the distributor to which the ENI belongs.', example='12345678910'),
  serviceManaged?: boolean(name='ServiceManaged', description='Indicates whether the user of the ENI is an Alibaba Cloud service or a distributor.', example='true'),
  status?: string(name='Status', description='The state of the ENI.', example='Available'),
  tags?: {
    tag?: [ 
    {
      tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
    }
  ](name='Tag')
  }(name='Tags', description='The tags of the ENI.'),
  type?: string(name='Type', description='The type of the ENI.', example='Secondary'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the ENI is connected.', example='vsw-bp16usj2p27htro3****'),
  vpcId?: string(name='VpcId', description='The ID of the VPC to which the ENI belongs.', example='vpc-bp1j7w3gc1cexjqd****'),
  zoneId?: string(name='ZoneId', description='The zone ID of the ENI.', example='cn-hangzhou-e'),
}

model CreateNetworkInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateNetworkInterfaceResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   This operation is a synchronous operation. After an ENI is created, it immediately enters the Available (`Available`) state and can be attached to an Elastic Compute Service (ECS) instance.
  * *   If NetworkInterfaceId is empty in the response, no ENI is created. Call the operation again to create an ENI.
  * *   An ENI can be attached only to a single instance that resides in a virtual private cloud (VPC).
  * *   When an ENI is detached from an instance and attached to another instance, the attributes of the ENI remain unchanged and network traffic is redirected to the new instance.
  * *   When you call this operation to create an ENI, you can assign up to 49 secondary private IP addresses to the ENI.
  * *   If you want to assign IPv6 addresses when you create an ENI, make sure that IPv6 is enabled for the vSwitch with which you want to associate the ENI. For more information, see [What is an IPv6 gateway?](~~98896~~)
  * *   A quota is imposed on the number of ENIs that can be created per Alibaba Cloud region per account. You can view the quota in the ECS console. For more information, see [View and increase resource quotas](~~184115~~).
  * **For information about examples on how to call this operation, see** [Create an ENI](~~471552~~).
  *
 */
async function createNetworkInterface(request: CreateNetworkInterfaceRequest): CreateNetworkInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateNetworkInterface', 'POST', '/', 'json', false, 'json', request);
}

model CreateNetworkInterfacePermissionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  accountId: long(name='AccountId', description='The ID of the ENI.', example='1234567890', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The permission on the ENI. Set the value to InstanceAttach.

InstanceAttach: allows authorized users to attach the ENI to an ECS instance. The ENI and the ECS instance must reside in the same zone.', example='eni-bp14v2sdd3v8htln****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  permission: string(name='Permission', description='The ID of the request.', example='InstanceAttach', position='Query'),
  regionId: string(name='RegionId', description='The ID of the Alibaba Cloud partner (a certified ISV) or individual user.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CreateNetworkInterfacePermissionResponseBody = {
  networkInterfacePermission?: {
    accountId?: long(name='AccountId', description='The ID of the permission on the ENI.', example='1234567890'),
    networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of the Alibaba Cloud partner (a certified ISV).', example='eni-bp14v2sdd3v8htln****'),
    networkInterfacePermissionId?: string(name='NetworkInterfacePermissionId', description='The name of the Alibaba Cloud service.', example='eni-perm-bp1cs4lwn56lfb****'),
    permission?: string(name='Permission', description='The ID of the ENI.', example='InstanceAttach'),
    permissionState?: string(name='PermissionState', example='Granted'),
    serviceName?: string(name='ServiceName', description='The state of the permission on the ENI. Valid values:

*   Pending: The permission is being granted.
*   Granted: The permission is granted.
*   Revoking: The permission is being revoked.
*   Revoked: The permission is revoked.', example='Elastic Compute Service'),
  }(name='NetworkInterfacePermission', description='The permission on the ENI.'),
  requestId?: string(name='RequestId', description='Details about permissions on ENIs.', example='0FCD3DEF-63D3-4605-A818-805C8BD7DB87'),
}

model CreateNetworkInterfacePermissionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateNetworkInterfacePermissionResponseBody(name='body'),
}

async function createNetworkInterfacePermission(request: CreateNetworkInterfacePermissionRequest): CreateNetworkInterfacePermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateNetworkInterfacePermission', 'POST', '/', 'json', false, 'json', request);
}

model CreatePhysicalConnectionRequest {
  accessPointId: string(name='AccessPointId', position='Query'),
  circuitCode?: string(name='CircuitCode', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  lineOperator: string(name='LineOperator', position='Query'),
  name?: string(name='Name', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  peerLocation: string(name='PeerLocation', position='Query'),
  portType?: string(name='PortType', position='Query'),
  redundantPhysicalConnectionId?: string(name='RedundantPhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  type?: string(name='Type', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  bandwidth?: int32(name='bandwidth', position='Query'),
}

model CreatePhysicalConnectionResponseBody = {
  physicalConnectionId?: string(name='PhysicalConnectionId'),
  requestId?: string(name='RequestId'),
}

model CreatePhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreatePhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createPhysicalConnection(request: CreatePhysicalConnectionRequest): CreatePhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreatePhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model CreatePrefixListRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  addressFamily: string(name='AddressFamily', description='The IP address family. Valid values:

*   IPv4
*   IPv6', example='IPv4', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  description?: string(name='Description', description='The description of the prefix list. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  entry?: [ 
    {
      cidr: string(name='Cidr', description='The CIDR block in entry N. Valid values of N: 0 to 200. Take note of the following items:

*   The total number of entries cannot exceed the `MaxEntries` value.
*   CIDR block types are determined by the IP address family. You cannot combine IPv4 and IPv6 CIDR blocks in a single prefix list.
*   CIDR blocks must be unique across all entries in a prefix list. For example, you cannot specify 192.168.1.0/24 twice in the entries of the prefix list.
*   IP addresses are supported. The system converts IP addresses into CIDR blocks. For example, if you specify 192.168.1.100, the system converts it into the 192.168.1.100/32 CIDR block.
*   If an IPv6 CIDR block is used, the system converts it into the zero compression format and changes uppercase letters into lowercase ones. For example, if you specify 2001:0DB8:0000:0000:0000:0000:0000:0000/32, the system converts it into 2001:db8::/32.

For more information about CIDR blocks, see the [What is CIDR?](~~40637~~#title-gu4-uzk-12r) section in the "Network FAQ" topic.

This parameter is empty by default.', example='192.168.1.0/24'),
      description?: string(name='Description', description='The description in entry N. The description must be 2 to 32 characters in length and cannot start with `http://` or `https://`. Valid values of N: 0 to 200.', example='Description Sample 01'),
    }
  ](name='Entry', description='The details of entries in the prefix list.', position='Query'),
  maxEntries: int32(name='MaxEntries', description='The maximum number of entries that the prefix list can contain. Valid values: 1 to 200.', example='10', minimum=1, maximum=200, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListName: string(name='PrefixListName', description='The name of the prefix list. The name must be 2 to 128 characters in length, and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-). It must start with a letter and cannot start with `http://`, `https://`, `com.aliyun`, or `com.alibabacloud`.', example='PrefixListNameSample', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the prefix list.', example='cn-chengdu', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CreatePrefixListResponseBody = {
  prefixListId?: string(name='PrefixListId', description='The ID of the prefix list.', example='pl-x1j1k5ykzqlixdcy****'),
  requestId?: string(name='RequestId', description='The request ID.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model CreatePrefixListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreatePrefixListResponseBody(name='body'),
}

/**
  * *   A prefix list is a collection of network prefixes (CIDR blocks) and can be referenced to configure network rules for other resources. For more information, see [Overview](~~206223~~).
  * *   When you create a prefix list, take note of the following items:
  *     *   You must specify an IP address family (IPv4 or IPv6) for the prefix list, and cannot change the IP address family after the prefix list is created. You cannot combine IPv4 and IPv6 CIDR blocks in a single prefix list.
  *     *   You must specify the maximum number of entries that the prefix list can contain. You cannot modify the maximum number of entries after the prefix list is created.
  *     *   You can specify entries for the prefix list. Each entry consists of a CIDR block and the description for the CIDR block. The total number of entries cannot exceed the maximum number of entries that you specified.
  * *   For more information about the limits on prefix lists and other resources, see [Limits](~~25412~~).
  * *   You can create Resource Access Management (RAM) users and grant them minimum permissions. This eliminates the need to share the AccessKey pair of your Alibaba Cloud account with other users and reduces security risks for your enterprises. For information about how to grant permissions on prefix lists to RAM users, see [Grant a RAM user permissions on prefix lists](~~206175~~)
  *
 */
async function createPrefixList(request: CreatePrefixListRequest): CreatePrefixListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreatePrefixList', 'POST', '/', 'json', false, 'json', request);
}

model CreateRouteEntryRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  destinationCidrBlock: string(name='DestinationCidrBlock', position='Query'),
  nextHopId?: string(name='NextHopId', position='Query'),
  nextHopList?: [ 
    {
      nextHopId?: string(name='NextHopId'),
      nextHopType?: string(name='NextHopType'),
    }
  ](name='NextHopList', position='Query'),
  nextHopType?: string(name='NextHopType', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routeTableId: string(name='RouteTableId', position='Query'),
}

model CreateRouteEntryResponseBody = {
  requestId?: string(name='RequestId'),
}

model CreateRouteEntryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateRouteEntryResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createRouteEntry(request: CreateRouteEntryRequest): CreateRouteEntryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateRouteEntry', 'POST', '/', 'json', false, 'json', request);
}

model CreateRouterInterfaceRequest {
  accessPointId?: string(name='AccessPointId', position='Query'),
  autoPay?: boolean(name='AutoPay', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  healthCheckSourceIp?: string(name='HealthCheckSourceIp', position='Query'),
  healthCheckTargetIp?: string(name='HealthCheckTargetIp', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', position='Query'),
  name?: string(name='Name', position='Query'),
  oppositeAccessPointId?: string(name='OppositeAccessPointId', position='Query'),
  oppositeInterfaceId?: string(name='OppositeInterfaceId', position='Query'),
  oppositeInterfaceOwnerId?: string(name='OppositeInterfaceOwnerId', position='Query'),
  oppositeRegionId: string(name='OppositeRegionId', position='Query'),
  oppositeRouterId?: string(name='OppositeRouterId', position='Query'),
  oppositeRouterType?: string(name='OppositeRouterType', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', position='Query'),
  pricingCycle?: string(name='PricingCycle', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  role: string(name='Role', position='Query'),
  routerId: string(name='RouterId', position='Query'),
  routerType: string(name='RouterType', position='Query'),
  spec: string(name='Spec', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model CreateRouterInterfaceResponseBody = {
  orderId?: long(name='OrderId'),
  requestId?: string(name='RequestId'),
  routerInterfaceId?: string(name='RouterInterfaceId'),
}

model CreateRouterInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateRouterInterfaceResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createRouterInterface(request: CreateRouterInterfaceRequest): CreateRouterInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateRouterInterface', 'POST', '/', 'json', false, 'json', request);
}

model CreateSavingsPlanRequest {
  chargeType?: string(name='ChargeType', position='Query'),
  committedAmount?: string(name='CommittedAmount', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', position='Query'),
  offeringType?: string(name='OfferingType', position='Query'),
  period?: string(name='Period', position='Query'),
  periodUnit?: string(name='PeriodUnit', position='Query'),
  planType?: string(name='PlanType', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceId?: [ string ](name='ResourceId', position='Query'),
}

model CreateSavingsPlanResponseBody = {
  orderId?: string(name='OrderId'),
  requestId?: string(name='RequestId'),
  savingsPlanId?: string(name='SavingsPlanId'),
}

model CreateSavingsPlanResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSavingsPlanResponseBody(name='body'),
}

async function createSavingsPlan(request: CreateSavingsPlanRequest): CreateSavingsPlanResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSavingsPlan', 'POST', '/', 'json', false, 'json', request);
}

model CreateSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. **The token can contain only ASCII characters and cannot exceed 64 characters in length.** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the security group. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.

By default, this parameter is left empty.', example='testDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the security group belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupName?: string(name='SecurityGroupName', description='The name of the security group. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain Unicode characters under the Decimal Number category and the categories whose names contain Letter. The name can also contain colons (:), underscores (\\_), periods (.), and hyphens (-).', example='testSecurityGroupName', position='Query'),
  securityGroupType?: string(name='SecurityGroupType', description='The type of the security group. Valid values:

*   normal: basic security group.
*   enterprise: advanced security group. For more information, see [Advanced security groups](~~120621~~).', example='enterprise', position='Query'),
  serviceManaged?: boolean(name='ServiceManaged', description='This parameter is not publicly available.', example='false', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the security group.

Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the security group.

Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the security group.', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the VPC in which you want to create the security group.

> The VpcId parameter is required only if you want to create security groups of the VPC type. In regions that support the classic network, you can create security groups of the classic network type without the need to specify the VpcId parameter.', example='vpc-bp1opxu1zkhn00gzv****', position='Query'),
}

model CreateSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp1fg655nh68xyz9****'),
}

model CreateSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSecurityGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   You can create up to 100 security groups in a single Alibaba Cloud region.
  * *   To create a security group of the Virtual Private Cloud (VPC) type, you must specify VpcId.
  *
 */
async function createSecurityGroup(request: CreateSecurityGroupRequest): CreateSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreateSimulatedSystemEventsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  eventType: string(name='EventType', description='The type of the system event. Valid values:

*   SystemMaintenance.Reboot: The instance is restarted due to system maintenance.
*   SystemFailure.Reboot: The instance is restarted due to a system error.
*   InstanceFailure.Reboot: The instance is restarted due to an instance error.
*   SystemMaintenance.Stop: The instance is stopped due to system maintenance.
*   SystemMaintenance.Redeploy: The instance is redeployed due to system maintenance.
*   SystemFailure.Redeploy: The instance is redeployed due to a system error.
*   SystemFailure.Stop: The instance is stopped due to a system error.', example='SystemMaintenance.Reboot', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The IDs of the instances. You can specify up to 100 instance IDs.', example='i-bp1gtjxuuvwj17zr****', position='Query'),
  notBefore: string(name='NotBefore', description='The scheduled start time of the event. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

> For events that occur due to system errors or instance errors, the simulated events of such events enter the `Executing` state when the simulated events are created. The value of `NotBefore` is the time when the simulated events enter the `Executed` state.', example='2018-12-01T06:32:31Z', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model CreateSimulatedSystemEventsResponseBody = {
  eventIdSet?: {
    eventId?: [ string ](name='EventId')
  }(name='EventIdSet', description='The IDs of the simulated events.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model CreateSimulatedSystemEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSimulatedSystemEventsResponseBody(name='body'),
}

/**
  * You can use the ECS console, call [ECS API](~~63962~~) operations, or use CloudMonitor to view the scheduled simulated system events.
  * The following descriptions provide the lifecycle of a simulated system event:
  * *   Scheduled: The state of the simulated system event is automatically changed to Scheduled after it is scheduled.
  * *   Executed: The state of the simulated system event is automatically changed to Executed at the time specified by the NotBefore parameter if no manual intervention is involved.
  * *   Canceled: The state of the simulated system event is changed to Canceled if you cancel the event by calling the [CancelSimulatedSystemEvents](~~88808~~) operation.
  * *   Avoided: The state of the simulated system event generated from maintenance-triggered instance restart can be changed to Avoided if you restart the instance before the scheduled time of the simulated system event. The maintenance-triggered instance restart is indicated by the SystemMaintenance.Reboot value. For more information, see [RebootInstance](~~25502~~).
  *
 */
async function createSimulatedSystemEvents(request: CreateSimulatedSystemEventsRequest): CreateSimulatedSystemEventsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSimulatedSystemEvents', 'POST', '/', 'json', false, 'json', request);
}

model CreateSnapshotRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  category?: string(name='Category', description='The category of the snapshot. Valid values:

*   Standard: normal snapshot
*   Flash: local snapshot

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='Standard', position='Query'),
  clientToken?: string(name='ClientToken', description='The retention period of the snapshot. Valid values: 1 to 65536. Unit: days. The snapshot is automatically released when its retention period expires.

This parameter is empty by default, which indicates that the snapshot is not automatically released.', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The cloud disk ID.', example='testDescription', position='Query'),
  diskId: string(name='DiskId', description='Creates a snapshot for a disk.', example='d-bp1s5fnvk4gn2tws0****', position='Query'),
  instantAccess?: boolean(name='InstantAccess', description='Specifies whether to enable the instant access feature. Valid values:

*   true: enables the instant access feature. This feature can be enabled only for ESSDs.
*   false: does not enable the instant access feature. If InstantAccess is set to false, a normal snapshot is created.

Default value: false.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='false', position='Query'),
  instantAccessRetentionDays?: int32(name='InstantAccessRetentionDays', description='The validity period of the instant access feature. When the validity period ends, the feature is disabled and the instant access snapshot is automatically released. This parameter takes effect only when `InstantAccess` is set to true. Unit: days. Valid values: 1 to 65535.

By default, the value of this parameter is the same as that of `RetentionDays`.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='1', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The snapshot type. Valid values:

*   Standard: normal snapshot
*   Flash: local snapshot

> This parameter will be removed in the future. We recommend that you use the `InstantAccess` parameter to ensure future compatibility. This parameter and the `InstantAccess` parameter cannot be specified at the same time. For more information, see the "Description" section of this topic.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  retentionDays?: int32(name='RetentionDays', description='The snapshot name. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

The name cannot start with `auto` because snapshots whose names start with auto are recognized as automatic snapshots.', example='30', position='Query'),
  snapshotName?: string(name='SnapshotName', description='The name of the snapshot. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

It cannot start with `auto` because snapshots whose names start with auto are recognized as automatic snapshots.', example='testSnapshotName', position='Query'),
  storageLocationArn?: string(name='StorageLocationArn', description='The value of tag N that you want to add to the snapshot. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with acs: or contain [http:// or https://.](http://https://。)', example='null', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the snapshot. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the snapshot. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the snapshot.', position='Query'),
}

model CreateSnapshotResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  snapshotId?: string(name='SnapshotId', example='s-bp17441ohwka0yuh****'),
}

model CreateSnapshotResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSnapshotResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The local snapshot feature is replaced by the instant access feature. Take note of the following items:
  * *   If you have used the local snapshot feature before December 14, 2020, you can use the Category parameter.
  * *   If you have not used the local snapshot feature before December 14, 2020, new snapshots of your enhanced SSDs (ESSDs) at performance levels 0, 1, 2, and 3 (PL0, PL1, PL2, and PL3 ESSDs) and ESSD AutoPL disks are instantly available after creation without the need for additional configurations, regardless of whether the snapshots are manually or automatically created. The InstantAccess, InstantAccessRetentionDays, and DisableInstantAccess parameters in this operation that are related to the instant access feature no longer take effect. Available is added to the response parameters of the DescribeSnapshots and DescribeSnapshotGroup operations to indicate whether the snapshot is available.
  * In the following scenarios, you cannot create snapshots for a disk:
  * *   The number of manual snapshots of the disk has reached 256.
  * *   A snapshot is being created for the disk.
  * *   The Elastic Compute Service (ECS) instance to which the disk is attached has never been started.
  * *   The ECS instance to which the disk is attached is not in the **Stopped** (`Stopped`) or **Running** (`Running`) state.
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of the instance, the instance is locked for security reasons and all operations are prohibited on it.
  * When you create a snapshot, take note of the following items:
  * *   If a snapshot is being created, you cannot use this snapshot to create a custom image by calling the [CreateImage](~~25535~~) operation.
  * *   When a snapshot is being created for a disk that is attached to an ECS instance, do not change the instance state.
  * *   You can create snapshots for a disk that is in the **Expired** (`Expired`) state. If the release time scheduled for a disk arrives while a snapshot is being created for the disk, the snapshot is in the **Creating** (`Creating` state and is deleted when the disk is released.
  *
 */
async function createSnapshot(request: CreateSnapshotRequest): CreateSnapshotResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSnapshot', 'POST', '/', 'json', false, 'json', request);
}

model CreateSnapshotGroupRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  diskId?: [ string ](name='DiskId', description='The ID of cloud disk N for which you want to create snapshots. You can specify multiple cloud disk IDs across instances within the same zone. Valid values of N: 1 to 16. A single snapshot-consistent group can contain snapshots of up to 16 cloud disks whose total disk size does not exceed 32 TiB.

Take note of the following items:

*   You cannot specify both DiskId.N and `ExcludeDiskId.N` in the same request.
*   If `InstanceId` is set, you can use DiskId.N to specify only cloud disks attached to the instance specified by InstanceId, and you cannot use DiskId.N to specify cloud disks attached to multiple instances.', position='Query'),
  excludeDiskId?: [ string ](name='ExcludeDiskId', description='The ID of cloud disk N for which you do not want to create snapshots. If this parameter is specified, the created snapshot-consistent group does not contain snapshots of the cloud disk. Valid values of N: 1 to 16.

This parameter is empty by default, which indicates that snapshots are created for all the disks of the instance.

> You cannot specify ExcludeDiskId.N and `DiskId.N` in the same request.', example='d-j6cf7l0ewidb78lq****', position='Query'),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-j6ca469urv8ei629****', position='Query'),
  instantAccess?: boolean(name='InstantAccess', description='Specifies whether to enable the instant access feature. Valid values:

*   true
*   false

Default value: false.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='false', position='Query'),
  instantAccessRetentionDays?: int32(name='InstantAccessRetentionDays', description='The number of days for which the instant access feature is available. Unit: days. Valid values: 1 to 65535.

This parameter takes effect only when `InstantAccess` is set to true. The instant access feature is automatically disabled when the specified duration ends.

This parameter is left empty by default, which indicates that the instant access feature is automatically disabled for snapshots when the snapshots are released.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='1', position='Query'),
  name?: string(name='Name', description='The name of the snapshot-consistent group. The name must be 2 to 128 characters in length. The name can contain letters, digits, periods (.), underscores (\\_), hyphens (-), and colons (:). It must start with a letter and cannot start with `http://` or `https://`.', example='testName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the snapshot-consistent group belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  storageLocationArn?: string(name='StorageLocationArn', description='> This parameter is unavailable for public use.', example='null', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the snapshot-consistent group. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the snapshot-consistent group. Valid values of N: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length and cannot start with `acs:`. It cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
}

model CreateSnapshotGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='01ABBD93-1ABB-4D92-B496-1A3D20EC0697'),
  snapshotGroupId?: string(name='SnapshotGroupId', description='The ID of the snapshot-consistent group.', example='ssg-j6ciyh3k52qp7ovm****'),
}

model CreateSnapshotGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateSnapshotGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can specify `InstanceId` to create a snapshot-consistent group for disks on a specific (ECS instance. You can also specify `DiskId.N` to create a snapshot-consistent group for multiple disks on multiple ECS instances within the same zone.
  * >  You cannot specify both `DiskId.N` and `ExcludeDiskId.N` in the same request. If `InstanceId` is specified, you can use `DiskId.N` to specify only disks on the ECS instance specified by InstanceId and cannot use DiskId.N to specify disks across ECS instances.
  * Take note of the following items:
  * *   The disks for which you want to create a snapshot must be in the **In Use** (`In_use`) or **Unattached** (`Available`) state.
  *     *   If a disk is in the **In Use** (`In_use`) state, make sure that the ECS instance to which the disk is attached is in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  *     *   If a disk is in the **Unattached** (`Available`) state, make sure that the disk has been attached to ECS instances. Snapshots cannot be created for disks that have never been attached to an ECS instance.
  * *   Snapshot-consistent groups can be used to create snapshots only for enhanced SSDs (ESSDs).
  * *   A snapshot-consistent group can contain snapshots of up to 16 disks, including system disks and data disks, and cannot exceed 32 TiB in size.
  * *   Snapshots that you created are stored indefinitely until you delete the snapshots. We recommend that you delete unnecessary snapshots on a regular basis to prevent excess snapshot storage fees.
  * *   Snapshot-consistent groups cannot be created for disks for which multi-attach feature is enabled. If disks for which the multi-attach feature is enabled are attached to an ECS instance, specify the `ExcludeDiskId.N` parameter to exclude the disks.
  * For more information about the snapshot-consistent group feature, see [Create a snapshot-consistent group](~~199625~~).
  *
 */
async function createSnapshotGroup(request: CreateSnapshotGroupRequest): CreateSnapshotGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateSnapshotGroup', 'POST', '/', 'json', false, 'json', request);
}

model CreateStorageSetRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the storage set. The description must be 2 to 256 characters in length and cannot start with [http:// or https://](http://https://。).', example='testDescription', position='Query'),
  maxPartitionNumber?: int32(name='MaxPartitionNumber', description='The maximum number of partitions supported by the storage set. The value must be greater than or equal to 2 but cannot exceed the quota that you obtained by calling the [DescribeAccountAttributes](~~73772~~) operation.

Default value: 2.', example='10', minimum=2, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the storage set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  storageSetName?: string(name='StorageSetName', description='The name of the storage set. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). The name must start with a letter and cannot start with [http:// or https:// ](http://https://。、（:）、（\\_）（-）。).', example='testStorageSetName', position='Query'),
  zoneId: string(name='ZoneId', description='The zone ID of the storage set. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-g', position='Query'),
}

model CreateStorageSetResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4p****'),
}

model CreateStorageSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateStorageSetResponseBody(name='body'),
}

/**
  * A storage set can distribute disks or Shared Block Storage devices to different locations. You can specify the number of partitions in a storage set. A larger number of partitions indicate more discrete distribution of disks or Shared Block Storage devices.
  * When you call this operation, take note of the following items:
  * *   The number of storage sets that you can create in a region is limited. You can call the [DescribeAccountAttributes](~~73772~~) operation to query the limit.
  * *   The number of partitions in a zone is limited. You can call the [DescribeAccountAttributes](~~73772~~) operation to query the limit.
  *
 */
async function createStorageSet(request: CreateStorageSetRequest): CreateStorageSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateStorageSet', 'POST', '/', 'json', false, 'json', request);
}

model CreateVSwitchRequest {
  cidrBlock: string(name='CidrBlock', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vSwitchName?: string(name='VSwitchName', position='Query'),
  vpcId: string(name='VpcId', position='Query'),
  zoneId: string(name='ZoneId', position='Query'),
}

model CreateVSwitchResponseBody = {
  requestId?: string(name='RequestId'),
  vSwitchId?: string(name='VSwitchId'),
}

model CreateVSwitchResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateVSwitchResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createVSwitch(request: CreateVSwitchRequest): CreateVSwitchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateVSwitch', 'POST', '/', 'json', false, 'json', request);
}

model CreateVirtualBorderRouterRequest {
  circuitCode?: string(name='CircuitCode', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  localGatewayIp?: string(name='LocalGatewayIp', position='Query'),
  name?: string(name='Name', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  peerGatewayIp?: string(name='PeerGatewayIp', position='Query'),
  peeringSubnetMask?: string(name='PeeringSubnetMask', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vbrOwnerId?: long(name='VbrOwnerId', position='Query'),
  vlanId: int32(name='VlanId', position='Query'),
}

model CreateVirtualBorderRouterResponseBody = {
  requestId?: string(name='RequestId'),
  vbrId?: string(name='VbrId'),
}

model CreateVirtualBorderRouterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateVirtualBorderRouterResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createVirtualBorderRouter(request: CreateVirtualBorderRouterRequest): CreateVirtualBorderRouterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateVirtualBorderRouter', 'POST', '/', 'json', false, 'json', request);
}

model CreateVpcRequest {
  cidrBlock?: string(name='CidrBlock', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vpcName?: string(name='VpcName', position='Query'),
}

model CreateVpcResponseBody = {
  requestId?: string(name='RequestId'),
  routeTableId?: string(name='RouteTableId'),
  vRouterId?: string(name='VRouterId'),
  vpcId?: string(name='VpcId'),
}

model CreateVpcResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CreateVpcResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function createVpc(request: CreateVpcRequest): CreateVpcResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CreateVpc', 'POST', '/', 'json', false, 'json', request);
}

model DeactivateRouterInterfaceRequest {
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
}

model DeactivateRouterInterfaceResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeactivateRouterInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeactivateRouterInterfaceResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deactivateRouterInterface(request: DeactivateRouterInterfaceRequest): DeactivateRouterInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeactivateRouterInterface', 'POST', '/', 'json', false, 'json', request);
}

model DeleteActivationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  activationId: string(name='ActivationId', description='The ID of the request.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the activation code.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteActivationResponseBody = {
  activation?: {
    activationId?: string(name='ActivationId', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****'),
    creationTime?: string(name='CreationTime', description='The number of instances that were deregistered.', example='2021-01-20T06:00:00Z'),
    deregisteredCount?: int32(name='DeregisteredCount', description='The maximum number of times that the activation code can be used to register managed instances.', example='0'),
    description?: string(name='Description', description='The number of registered instances.', example='This is description.'),
    instanceCount?: int32(name='InstanceCount', description='The description of the activation code.', example='1'),
    instanceName?: string(name='InstanceName', description='The IP addresses of hosts that are allowed to use the activation code.', example='test-InstanceName'),
    ipAddressRange?: string(name='IpAddressRange', description='The validity period of the activation code. Unit: hours.', example='0.0.0.0/0'),
    registeredCount?: int32(name='RegisteredCount', description='The default instance name prefix.', example='0'),
    timeToLiveInHours?: long(name='TimeToLiveInHours', description='The ID of the activation code.', example='4'),
  }(name='Activation', description='The time when the activation code was created.'),
  requestId?: string(name='RequestId', description='Details of the activation code and its usage information.', example='4ECEEE12-56F1-4FBC-9AB1-890F74942176'),
}

model DeleteActivationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteActivationResponseBody(name='body'),
}

/**
  * $.parameters[4].schema.description
  *
 */
async function deleteActivation(request: DeleteActivationRequest): DeleteActivationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteActivation', 'POST', '/', 'json', false, 'json', request);
}

model DeleteAutoProvisioningGroupRequest {
  autoProvisioningGroupId: string(name='AutoProvisioningGroupId', description='The ID of the auto provisioning group.', example='apg-bpuf6jel2bbl62wh13****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the auto provisioning group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  terminateInstances?: boolean(name='TerminateInstances', description='Specifies whether to release instances in the auto provisioning group. Valid values:

*   true
*   false

>  By default, this parameter inherits the value of `TerminateInstances` that you specified when you call the `CreateAutoProvisioningGroup` operation to create an auto provisioning group. You can also change the value of `TerminateInstances` when you call the DeleteAutoProvisioningGroup operation to delete the auto provisioning group.', example='true', position='Query'),
}

model DeleteAutoProvisioningGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='B48A12CD-1295-4A38-A8F0-0E92C937****'),
}

model DeleteAutoProvisioningGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAutoProvisioningGroupResponseBody(name='body'),
}

async function deleteAutoProvisioningGroup(request: DeleteAutoProvisioningGroupRequest): DeleteAutoProvisioningGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteAutoProvisioningGroup', 'POST', '/', 'json', false, 'json', request);
}

model DeleteAutoSnapshotPolicyRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
  autoSnapshotPolicyId: string(name='autoSnapshotPolicyId', description='The ID of the automatic snapshot policy. You can call the [DescribeAutoSnapshotPolicyEx](~~25530~~) operation to query the available automatic snapshot policies.', example='sp-bp14yziiuvu3s6jn****', position='Query'),
  regionId: string(name='regionId', description='The region ID of the automatic snapshot policy. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
}

model DeleteAutoSnapshotPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteAutoSnapshotPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteAutoSnapshotPolicyResponseBody(name='body'),
}

async function deleteAutoSnapshotPolicy(request: DeleteAutoSnapshotPolicyRequest): DeleteAutoSnapshotPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteAutoSnapshotPolicy', 'POST', '/', 'json', false, 'json', request);
}

model DeleteBandwidthPackageRequest {
  bandwidthPackageId: string(name='BandwidthPackageId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteBandwidthPackageResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteBandwidthPackageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteBandwidthPackageResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteBandwidthPackage(request: DeleteBandwidthPackageRequest): DeleteBandwidthPackageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteBandwidthPackage', 'POST', '/', 'json', false, 'json', request);
}

model DeleteCommandRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandId: string(name='CommandId', example='c-4d34302d02424c5c8e10281e3a31****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='$.parameters[1].schema.enumValueTitles', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteCommandResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteCommandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteCommandResponseBody(name='body'),
}

async function deleteCommand(request: DeleteCommandRequest): DeleteCommandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteCommand', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDedicatedHostClusterRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostClusterId: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp12wlf6am0vz9v2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteDedicatedHostClusterResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='11B55F58-D3A4-4A9B-9596-342420D02FF8'),
}

model DeleteDedicatedHostClusterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDedicatedHostClusterResponseBody(name='body'),
}

async function deleteDedicatedHostCluster(request: DeleteDedicatedHostClusterRequest): DeleteDedicatedHostClusterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDedicatedHostCluster', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDemandRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value that is unique among different requests. The `ClientToken` value can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E', position='Query'),
  demandId: string(name='DemandId', description='The ID of the requirement.', example='ed-bp11n21kq00sl71p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  reason?: string(name='Reason', description='The reason for deleting the filing form. Enter details.', example='test-reason', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the filed instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteDemandResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteDemandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDemandResponseBody(name='body'),
}

/**
  * @deprecated
  * >  This operation is in internal preview and has not been officially released. We recommend that you avoid using this operation.
  *
 */
// Deprecated
async function deleteDemand(request: DeleteDemandRequest): DeleteDemandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDemand', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDeploymentSetRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  deploymentSetId: string(name='DeploymentSetId', description='The ID of the deployment set. You cannot delete a deployment set if the deployment set contains instances.', example='ds-bp1g5ahlkal88d7x****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the deployment set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteDeploymentSetResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteDeploymentSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDeploymentSetResponseBody(name='body'),
}

async function deleteDeploymentSet(request: DeleteDeploymentSetRequest): DeleteDeploymentSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDeploymentSet', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDiagnosticMetricSetsRequest {
  metricSetIds: [ string ](name='MetricSetIds', description='The ID of diagnostic metric set.', position='Query'),
  regionId: string(name='RegionId', description='The IDs of diagnostic metric sets. You can specify up to 10 set IDs.', example='cn-hangzhou', position='Query'),
}

model DeleteDiagnosticMetricSetsResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DeleteDiagnosticMetricSetsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDiagnosticMetricSetsResponseBody(name='body'),
}

async function deleteDiagnosticMetricSets(request: DeleteDiagnosticMetricSetsRequest): DeleteDiagnosticMetricSetsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDiagnosticMetricSets', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDiagnosticReportsRequest {
  resourceOwnerId?: long(name='ResourceOwnerId', position='Host'),
  regionId: string(name='RegionId', description='The region ID of the diagnostic report. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reportIds: [ string ](name='ReportIds', description='The IDs of diagnostic reports. You can specify up to 100 report IDs.', position='Query'),
}

model DeleteDiagnosticReportsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DeleteDiagnosticReportsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDiagnosticReportsResponseBody(name='body'),
}

/**
  * You can call this operation to delete the diagnostic reports that are no longer needed.
  *
 */
async function deleteDiagnosticReports(request: DeleteDiagnosticReportsRequest): DeleteDiagnosticReportsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDiagnosticReports', 'POST', '/', 'json', false, 'json', request);
}

model DeleteDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskId: string(name='DiskId', description='The ID of the disk that you want to release.', example='d-bp14k9cxvr5uzy5****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteDiskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteDiskResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   Manual snapshots of the disk are retained.
  * *   You can call the [ModifyDiskAttribute](~~25517~~) operation to configure whether to retain automatic snapshots of the disk or release the snapshots along with the disk. We recommend that you delete the snapshots that are no longer needed to maintain a sufficient quota for new automatic snapshots.
  * *   The disk must be in the Unattached (Available) state.
  * *   If the specified DiskId parameter does not exist, the request is ignored.
  *
 */
async function deleteDisk(request: DeleteDiskRequest): DeleteDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteDisk', 'POST', '/', 'json', false, 'json', request);
}

model DeleteForwardEntryRequest {
  forwardEntryId: string(name='ForwardEntryId', position='Query'),
  forwardTableId: string(name='ForwardTableId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteForwardEntryResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteForwardEntryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteForwardEntryResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteForwardEntry(request: DeleteForwardEntryRequest): DeleteForwardEntryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteForwardEntry', 'POST', '/', 'json', false, 'json', request);
}

model DeleteHaVipRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  haVipId: string(name='HaVipId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteHaVipResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteHaVipResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteHaVipResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteHaVip(request: DeleteHaVipRequest): DeleteHaVipResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteHaVip', 'POST', '/', 'json', false, 'json', request);
}

model DeleteHpcClusterRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The **ClientToken** value must contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  hpcClusterId: string(name='HpcClusterId', description='The ID of the HPC cluster.', example='hpc-cxvr5uzy54j0ya****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='EcsforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the HPC cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='EcsforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
}

model DeleteHpcClusterResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteHpcClusterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteHpcClusterResponseBody(name='body'),
}

async function deleteHpcCluster(request: DeleteHpcClusterRequest): DeleteHpcClusterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteHpcCluster', 'POST', '/', 'json', false, 'json', request);
}

model DeleteImageRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  force?: boolean(name='Force', description='Specifies whether to forcefully delete the custom image. Valid values:

*   true: forcefully deletes the custom image, regardless of whether the image is being used by other instances.
*   false: verifies that the image is not being used by other instances and then deletes the image.

Default value: false.', example='false', position='Query'),
  imageId: string(name='ImageId', description='The ID of the image. If the specified custom image does not exist, the request is ignored.', example='m-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='ECSforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', description='RAM用户的虚拟账号ID。', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', description='资源主账号的账号名称。', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', description='资源主账号的ID，亦即UID。', example='155780923770', position='Query'),
}

model DeleteImageResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteImageResponseBody(name='body'),
}

async function deleteImage(request: DeleteImageRequest): DeleteImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteImage', 'POST', '/', 'json', false, 'json', request);
}

model DeleteImageComponentRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageComponentId: string(name='ImageComponentId', description='The ID of the image component.', example='ic-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image component. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteImageComponentResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteImageComponentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteImageComponentResponseBody(name='body'),
}

/**
  * Only custom image components can be deleted.
  *
 */
async function deleteImageComponent(request: DeleteImageComponentRequest): DeleteImageComponentResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteImageComponent', 'POST', '/', 'json', false, 'json', request);
}

model DeleteImagePipelineRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imagePipelineId: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteImagePipelineResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteImagePipelineResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteImagePipelineResponseBody(name='body'),
}

/**
  * If an image build task based on an image template is in the BUILDING, DISTRIBUTING, RELEASING, or CANCELLING state, you cannot delete the image template. You can delete the image template only when the image build task is in the SUCCESS, FAILED, or CANCELLED state. You can call the DescribeImagePipelineExecutions operation to query the details of an image build task.
  *
 */
async function deleteImagePipeline(request: DeleteImagePipelineRequest): DeleteImagePipelineResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteImagePipeline', 'POST', '/', 'json', false, 'json', request);
}

model DeleteInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and unavailable ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false (default): performs a dry run and performs the actual request. If the request passes the dry run, the instance is released.', example='false', position='Query'),
  force?: boolean(name='Force', description='Specifies whether to forcefully release the instance in the **Running** (`Running`) state. Valid values:

*   true: forcefully releases the instance in the **Running** (`Running`) state. This operation is equivalent to the power-off operation. Cache data that is not written to persistent storage will be lost.
*   false: normally releases the instance. This value take effects only if the instance is in the **Stopped** (`Stopped`) state.

Default value: false.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp1g6zv0ce8oghu7****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  terminateSubscription?: boolean(name='TerminateSubscription', description='Specifies whether to release the expired subscription instance. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
}

model DeleteInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteInstanceResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   After an ECS instance is released, all the physical resources used by the instance are recycled. Relevant data is erased and cannot be restored.
  * *   When you release an ECS instance, take note of the following items for the disks attached to the instance:
  *     *   The disks for which `DeleteWithInstance` is set to false are retained as pay-as-you-go disks after the instance is released.
  *     *   The disks for which `DeleteWithInstance` is set to true are released along with the instance.
  *     *   For disks for which `DeleteAutoSnapshot` is set to false, the automatic snapshots of the disks are retained after the instance is released.
  *     *   For disks for which `DeleteAutoSnapshot` is set to true, the automatic snapshots of the disks are released along with the instance.
  *     *   Manual snapshots of the disks are retained.
  *     *   If `OperationLocks` in the response contains `"LockReason" : "security"` when you query the information of the instance, the instance is locked for security reasons. In this case, even if `DeleteWithInstance` is set to `false` for the disks that are attached to the instance, the system ignores the DeleteWithInstance value and releases the disks along with the instance. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  *
 */
async function deleteInstance(request: DeleteInstanceRequest): DeleteInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteInstance', 'POST', '/', 'json', false, 'json', request);
}

model DeleteInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. **The token can contain only ASCII characters and cannot exceed 64 characters in length.** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run without performing the actual request. Default value: false. Valid values:

*   true: performs only a dry run. The system checks whether your AccessKey pair is valid, whether RAM users are granted permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DRYRUN.SUCCESS error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  force?: boolean(name='Force', description='Specifies whether to forcefully release the instance that is in the **Running** (`Running`) state. Default value: false. Valid values:

*   true: forcefully releases the instance that is in the **Running** (`Running`) state. When the Force parameter is set to true, this operation is equivalent to a power-off operation. Temporary data in the memory and storage of the instance is erased and cannot be restored.
*   false: normally releases the instance. This value is valid only for instances that are in the **Stopped** (`Stopped`) state.', example='false', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The IDs of instances. You can specify up to 100 instance IDs in a single request.', example='i-bp1g6zv0ce8oghu7****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  terminateSubscription?: boolean(name='TerminateSubscription', description='Specifies whether to release an expired subscription instance.

Default value: false.', example='false', position='Query'),
}

model DeleteInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='7B7813C6-57BF-41XX-B12B-F172F65A6046'),
}

model DeleteInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   After an ECS instance is released, all the physical resources used by the instance are recycled. Relevant data is erased and cannot be restored.
  * *   When you release an ECS instance, take note of the following items for the disks attached to the instance:
  *     *   The disks for which `DeleteWithInstance` is set to false are retained as pay-as-you-go disks after the instance is released.
  *     *   The disks for which `DeleteWithInstance` is set to true are released along with the instance.
  *     *   If `DeleteAutoSnapshot` is set to false for a disk attached to the instance, the automatic snapshots of the disk are retained when the instance is released.
  *     *   If `DeleteAutoSnapshot` is set to true for a disk attached to the instance, the automatic snapshots of the disk are released along with the instance.
  *     *   Manual snapshots of the disks are retained.
  *     *   If `OperationLocks` in the response contains `"LockReason" : "security"` when you query the information of the instance, the instance is locked for security reasons. In this case, even if `DeleteWithInstance` is set to `false` for the disks that are attached to the instance, the system ignores the DeleteWithInstance value and releases the disks along with the instance. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  *
 */
async function deleteInstances(request: DeleteInstancesRequest): DeleteInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteInstances', 'POST', '/', 'json', false, 'json', request);
}

model DeleteKeyPairsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  keyPairNames: string(name='KeyPairNames', description='The names of SSH key pairs. The value can be a JSON array that consists of up to 100 SSH key pair names. Separate the names with commas (,).

>  Before you delete an SSH key pair, you can call the [DescribeKeyPairs](~~51773~~) operation to query existing key pairs.', example='["skp-bp67acfmxazb41****", "skp-bp67acfmxazb42****", … "skp-bp67acfmxazb4p3***"]', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteKeyPairsResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteKeyPairsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteKeyPairsResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   After an SSH key pair is deleted, you cannot query the SSH key pair by calling the [DescribeKeyPairs](~~51773~~) operation.
  * *   If an SSH key pair is bound to one or more Elastic Compute Service (ECS) instances, the SSH key pair cannot be deleted.
  *
 */
async function deleteKeyPairs(request: DeleteKeyPairsRequest): DeleteKeyPairsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteKeyPairs', 'POST', '/', 'json', false, 'json', request);
}

model DeleteLaunchTemplateRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, see [DescribeLaunchTemplates](~~73759~~).

You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='lt-bp1apo0bbbkuy0rj****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template.

You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='testLaunchTemplateName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the launch template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteLaunchTemplateResponseBody = {
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, see [DescribeLaunchTemplates](~~73759~~).

You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='lt-bp1apo0bbbkuy0rj****'),
  launchTemplateVersionNumbers?: {
    versionNumbers?: [ long ](name='versionNumbers')
  }(name='LaunchTemplateVersionNumbers', description='The versions of the deleted launch template.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteLaunchTemplateResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteLaunchTemplateResponseBody(name='body'),
}

async function deleteLaunchTemplate(request: DeleteLaunchTemplateRequest): DeleteLaunchTemplateResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteLaunchTemplate', 'POST', '/', 'json', false, 'json', request);
}

model DeleteLaunchTemplateVersionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  deleteVersion: [ long ](name='DeleteVersion', description='The version numbers of the launch template.', example='2', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, call the [DescribeLaunchTemplates](~~73759~~) operation.', example='lt-bp1apo0bbbkuy0rj****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template.', example='testLaunchTemplateName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the launch template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteLaunchTemplateVersionResponseBody = {
  launchTemplateVersions?: {
    launchTemplateVersion?: [ 
    {
      launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template.', example='lt-m5eiaupmvm2op9d****'),
      launchTemplateVersionNumber?: long(name='LaunchTemplateVersionNumber', description='The version number of the launch template.', example='2'),
    }
  ](name='LaunchTemplateVersion')
  }(name='LaunchTemplateVersions', description='The versions of the launch template.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteLaunchTemplateVersionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteLaunchTemplateVersionResponseBody(name='body'),
}

async function deleteLaunchTemplateVersion(request: DeleteLaunchTemplateVersionRequest): DeleteLaunchTemplateVersionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteLaunchTemplateVersion', 'POST', '/', 'json', false, 'json', request);
}

model DeleteNatGatewayRequest {
  natGatewayId: string(name='NatGatewayId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteNatGatewayResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteNatGatewayResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteNatGatewayResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteNatGateway(request: DeleteNatGatewayRequest): DeleteNatGatewayResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteNatGateway', 'POST', '/', 'json', false, 'json', request);
}

model DeleteNetworkInterfaceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp14v2sdd3v8htln****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteNetworkInterfaceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='F3CD6886-D8D0-4FEE-B93E-1B73239673DE'),
}

model DeleteNetworkInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteNetworkInterfaceResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The ENI to be deleted must be in the Available state.
  * *   If the ENI to be deleted is attached to an Elastic Compute Service (ECS) instance, you must detach the ENI from the instance before you can delete the ENI. To detach the ENI, you can call the [DetachNetworkInterface](~~58514~~) operation.
  * *   After an ENI is deleted, the following situations occur:
  *     *   All private IP addresses (including primary and secondary private IP addresses) of the ENI are automatically released.
  *     *   The ENI is automatically removed from all security groups.
  * *   The DeleteNetworkInterface operation is an asynchronous operation. After this operation is called to delete an ENI, you can check the status or events of the ENI to determine whether the ENI is deleted. The following figure shows the transitions between the states of the ENI.![](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20221208/xual/DeleteNetworkInterface.jpg)
  *     *   If the ENI is in the Deleting state, the ENI deletion request is sent and the ENI is being deleted.
  *     *   If the ENI is not found, the ENI is deleted.
  *     *   If the ENI is stuck in the Deleting state, the ENI fails to be deleted. You can re-initiate the request to delete the ENI.
  * **For information about examples on how to call the DeleteNetworkInterface operation, see **[Delete an ENI](~~471553~~).
  *
 */
async function deleteNetworkInterface(request: DeleteNetworkInterfaceRequest): DeleteNetworkInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteNetworkInterface', 'POST', '/', 'json', false, 'json', request);
}

model DeleteNetworkInterfacePermissionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  force?: boolean(name='Force', position='Query'),
  networkInterfacePermissionId: string(name='NetworkInterfacePermissionId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeleteNetworkInterfacePermissionResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteNetworkInterfacePermissionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteNetworkInterfacePermissionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteNetworkInterfacePermission(request: DeleteNetworkInterfacePermissionRequest): DeleteNetworkInterfacePermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteNetworkInterfacePermission', 'POST', '/', 'json', false, 'json', request);
}

model DeletePhysicalConnectionRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeletePhysicalConnectionResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeletePhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeletePhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deletePhysicalConnection(request: DeletePhysicalConnectionRequest): DeletePhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeletePhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model DeletePrefixListRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListId: string(name='PrefixListId', description='The ID of the prefix list.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the prefix list. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-chengdu', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeletePrefixListResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model DeletePrefixListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeletePrefixListResponseBody(name='body'),
}

/**
  * If a prefix list is associated with resources, you cannot delete the prefix list. You must disassociate the prefix list from the resources before you delete the prefix list. You can call the [DescribePrefixListAssociations](~~204724~~) operation to query resources that are associated with a specific prefix list.
  *
 */
async function deletePrefixList(request: DeletePrefixListRequest): DeletePrefixListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeletePrefixList', 'POST', '/', 'json', false, 'json', request);
}

model DeleteRouteEntryRequest {
  destinationCidrBlock: string(name='DestinationCidrBlock', position='Query'),
  nextHopId?: string(name='NextHopId', position='Query'),
  nextHopList?: [ 
    {
      nextHopId?: string(name='NextHopId'),
      nextHopType?: string(name='NextHopType'),
    }
  ](name='NextHopList', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routeTableId: string(name='RouteTableId', position='Query'),
}

model DeleteRouteEntryResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteRouteEntryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteRouteEntryResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteRouteEntry(request: DeleteRouteEntryRequest): DeleteRouteEntryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteRouteEntry', 'POST', '/', 'json', false, 'json', request);
}

model DeleteRouterInterfaceRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model DeleteRouterInterfaceResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteRouterInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteRouterInterfaceResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteRouterInterface(request: DeleteRouterInterfaceRequest): DeleteRouterInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteRouterInterface', 'POST', '/', 'json', false, 'json', request);
}

model DeleteSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The security group ID. You can call the [DescribeSecurityGroups](~~25556~~) operation to query the security group ID.', example='sg-bp1fg655nh68xyz9****', position='Query'),
}

model DeleteSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DeleteSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSecurityGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   Before you delete a security group, make sure that the security group does not contain instances and is not referenced by other security groups. Otherwise, the DeleteSecurityGroup request fails. You can call the [DescribeSecurityGroupReferences](~~57320~~) operation to query the reference details of the security group.
  * *   If the InvalidOperation.DeletionProtection error code is returned when you call the DeleteSecurityGroup operation to delete a security group or if a deletion protection-related message appears when you delete a security group in the Elastic Compute Service (ECS) console, the deletion protection feature is enabled for the security group. When you create a Container Service for Kubernetes (ACK) cluster, the deletion protection feature is enabled for an associated security group to prevent accidental deletion. You cannot manually disable the deletion protection feature for the security group. The deletion protection feature can be automatically disabled only after the ACK cluster is deleted. For more information, see [Disable deletion protection for a security group](~~353191~~).
  *
 */
async function deleteSecurityGroup(request: DeleteSecurityGroupRequest): DeleteSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model DeleteSnapshotRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  force?: boolean(name='Force', description='Specifies whether to force delete the snapshot that has been used to create disks. Valid values:

*   true: force deletes the snapshot. After the snapshot is force deleted, the disks created from the snapshot cannot be re-initialized.
*   false: does not force delete the snapshot.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotId: string(name='SnapshotId', description='The snapshot ID.', example='s-bp1c0doj0taqyzzl****', position='Query'),
}

model DeleteSnapshotResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteSnapshotResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSnapshotResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   If the snapshot does not exist, the request is ignored.
  * *   If the snapshot has been used to create custom images, the snapshot cannot be deleted. You need to call the [DeleteImage](~~25537~~) operation to delete the custom images before you can delete the snapshot.
  * *   If the snapshot has been used to create disks and `Force` is not specified or is set to `false`, the snapshot cannot be deleted directly. If you want to delete the snapshot, set `Force` to true to forcibly delete the snapshot. The disks created from the snapshot cannot be re-initialized after the snapshot is forcibly deleted.
  *
 */
async function deleteSnapshot(request: DeleteSnapshotRequest): DeleteSnapshotResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSnapshot', 'POST', '/', 'json', false, 'json', request);
}

model DeleteSnapshotGroupRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the snapshot-consistent group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotGroupId: string(name='SnapshotGroupId', description='The ID of the snapshot-consistent group. You can call the [DescribeSnapshotGroups](~~210940~~) operation to query the IDs of one or more snapshot-consistent groups.', example='ssg-j6c9lpuyxo2uxxny****', position='Query'),
}

model DeleteSnapshotGroupResponseBody = {
  operationProgressSet?: {
    operationProgress?: [ 
    {
      errorCode?: string(name='ErrorCode', description='The error code. This parameter is empty when the operation is successful.

For information about error codes and error messages, visit the [API error center](https://error-center.aliyun.com/status/product/Ecs).', example='400'),
      errorMsg?: string(name='ErrorMsg', description='The error message. This parameter is empty when the operation is successful.

For information about error codes and error messages, visit the [API error center](https://error-center.aliyun.com/status/product/Ecs).', example='testErrorMsg'),
      operationStatus?: string(name='OperationStatus', description='Indicates whether the operation was successful. If the operation was successful, a value of Success is returned. If the operation failed, an error code and an error message are returned.', example='Success'),
      relatedItemSet?: {
        relatedItem?: [ 
        {
          name?: string(name='Name', description='The name of the resource.', example='SnapshotId'),
          value?: string(name='Value', description='The ID of the resource.', example='s-j6c9lpuyxo2uxxnx****'),
        }
      ](name='RelatedItem')
      }(name='RelatedItemSet', description='Details about the resources.'),
    }
  ](name='OperationProgress')
  }(name='OperationProgressSet', description='Details about the delete operation.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='6EDE885A-FDC1-4FAE-BC44-6EACAEA6CC6E'),
}

model DeleteSnapshotGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteSnapshotGroupResponseBody(name='body'),
}

/**
  * If you have custom images that were created from a disk snapshot contained in a snapshot-consistent group, the disk snapshot is retained when the snapshot-consistent group is deleted. Before you can delete the disk snapshot, you must call the [DeleteImage](~~25537~~) operation to delete the custom images. After the custom images are deleted, you can call the [DeleteSnapshot](~~25525~~) operation to delete the disk snapshot.
  *
 */
async function deleteSnapshotGroup(request: DeleteSnapshotGroupRequest): DeleteSnapshotGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteSnapshotGroup', 'POST', '/', 'json', false, 'json', request);
}

model DeleteStorageSetRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The value of **ClientToken** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='hide', position='Query'),
  ownerId?: long(name='OwnerId', example='111', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the storage set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='hide', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='111', position='Query'),
  storageSetId: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4p****', position='Query'),
}

model DeleteStorageSetResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DeleteStorageSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteStorageSetResponseBody(name='body'),
}

async function deleteStorageSet(request: DeleteStorageSetRequest): DeleteStorageSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteStorageSet', 'POST', '/', 'json', false, 'json', request);
}

model DeleteVSwitchRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vSwitchId: string(name='VSwitchId', position='Query'),
}

model DeleteVSwitchResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteVSwitchResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteVSwitchResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteVSwitch(request: DeleteVSwitchRequest): DeleteVSwitchResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteVSwitch', 'POST', '/', 'json', false, 'json', request);
}

model DeleteVirtualBorderRouterRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vbrId: string(name='VbrId', position='Query'),
}

model DeleteVirtualBorderRouterResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteVirtualBorderRouterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteVirtualBorderRouterResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteVirtualBorderRouter(request: DeleteVirtualBorderRouterRequest): DeleteVirtualBorderRouterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteVirtualBorderRouter', 'POST', '/', 'json', false, 'json', request);
}

model DeleteVpcRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId: string(name='VpcId', position='Query'),
}

model DeleteVpcResponseBody = {
  requestId?: string(name='RequestId'),
}

model DeleteVpcResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeleteVpcResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function deleteVpc(request: DeleteVpcRequest): DeleteVpcResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeleteVpc', 'POST', '/', 'json', false, 'json', request);
}

model DeregisterManagedInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The managed instance ID.', example='mi-hz01axdfas****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the managed instance. Supported regions: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Ulanqab), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), China (Guangzhou), China (Chengdu), China (Hong Kong), Singapore, Japan (Tokyo), US (Silicon Valley), and US (Virginia).

You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DeregisterManagedInstanceResponseBody = {
  instance?: {
    activationId?: string(name='ActivationId', description='The activation code ID.', example='4ECEEE12-56F1-4FBC-9AB1-890F7494****'),
    agentVersion?: string(name='AgentVersion', description='The version number of Cloud Assistant Agent.', example='2.2.0.102'),
    hostname?: string(name='Hostname', description='The hostname of the managed instance.', example='test-Hostname'),
    instanceId?: string(name='InstanceId', description='The managed instance ID.', example='mi-hz01axdfas****'),
    instanceName?: string(name='InstanceName', description='The name of the managed instance.', example='test-InstanceName-001'),
    internetIp?: string(name='InternetIp', description='The public IP address of the managed instance.', example='47.8.**.**'),
    intranetIp?: string(name='IntranetIp', description='The internal IP address of the managed instance.', example='10.0.**.**'),
    invocationCount?: long(name='InvocationCount', description='The number of times that Cloud Assistant tasks were executed on the managed instance.', example='2'),
    lastInvokedTime?: string(name='LastInvokedTime', description='The time when the Cloud Assistant task was last executed.', example='2021-01-20T09:00:40Z'),
    machineId?: string(name='MachineId', description='The machine code of the managed instance.', example='e03231b37ab14e53b5795ad625fc****'),
    osType?: string(name='OsType', description='The operating system type of the managed instance.', example='linux'),
    osVersion?: string(name='OsVersion', description='The version information about the operating system.', example='Linux_#38~18.04.1-Ubuntu SMP Wed Jan 6 18:26:30 UTC 2021_x86_64'),
    registrationTime?: string(name='RegistrationTime', description='The time when the managed instance was registered.', example='2021-01-20T08:57:56Z'),
    resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the managed instance belongs.', example='rg-123******'),
  }(name='Instance', description='The managed instance.'),
  requestId?: string(name='RequestId', description='The request ID.', example='4ECEEE12-56F1-4FBC-9AB1-890F74942176'),
}

model DeregisterManagedInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DeregisterManagedInstanceResponseBody(name='body'),
}

async function deregisterManagedInstance(request: DeregisterManagedInstanceRequest): DeregisterManagedInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DeregisterManagedInstance', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAccessPointsRequest {
  filter?: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  type?: string(name='Type', position='Query'),
}

model DescribeAccessPointsResponseBody = {
  accessPointSet?: {
    accessPointType?: [ 
    {
      accessPointId?: string(name='AccessPointId'),
      attachedRegionNo?: string(name='AttachedRegionNo'),
      description?: string(name='Description'),
      hostOperator?: string(name='HostOperator'),
      location?: string(name='Location'),
      name?: string(name='Name'),
      status?: string(name='Status'),
      type?: string(name='Type'),
    }
  ](name='AccessPointType')
  }(name='AccessPointSet'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeAccessPointsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAccessPointsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeAccessPoints(request: DescribeAccessPointsRequest): DescribeAccessPointsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAccessPoints', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAccountAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  attributeName?: [ string ](name='AttributeName', description='The type of resource quota N. Valid values of N: 1 to 8. Valid values:

*   instance-network-type: available network types

*   max-security-groups: the maximum number of security groups

*   max-elastic-network-interfaces: the maximum number of ENIs

*   max-postpaid-instance-vcpu-count: the maximum number of vCPUs for pay-as-you-go instances

*   max-spot-instance-vcpu-count: the maximum number of vCPUs for preemptible instances

*   used-postpaid-instance-vcpu-count: the number of vCPUs that have been allocated to pay-as-you-go instances

*   used-spot-instance-vcpu-count: the number of vCPUs that have been allocated to preemptible instances

*   max-postpaid-yundisk-capacity: the maximum capacity of pay-as-you-go data disks(This value is deprecated)

*   used-postpaid-yundisk-capacity: the capacity of pay-as-you-go disks that have been created(This value is deprecated)

*   max-dedicated-hosts: the maximum number of dedicated hosts

*   supported-postpaid-instance-types: the instance types of pay-as-you-go I/O optimized instances

*   max-axt-command-count: the maximum number of Cloud Assistant commands

*   max-axt-invocation-daily: the maximum number of Cloud Assistant command executions per day

*   real-name-authentication: whether the account has passed the real-name verification

    **

    **Note**You must pass the real-name verification before you create an ECS instance in the Chinese mainland regions.

*   max-cloud-assistant-activation-count: the maximum number of activation codes that can be created to use to register managed instances

This parameter is empty by default.', example='max-security-groups', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which the resource resides.', example='cn-hangzhou-b', position='Query'),
}

model DescribeAccountAttributesResponseBody = {
  accountAttributeItems?: {
    accountAttributeItem?: [ 
    {
      attributeName?: string(name='AttributeName', description='The type of the resource quota in the specified region. Valid values:

*   instance-network-type: available network types
*   max-security-groups: the maximum number of security groups
*   max-elastic-network-interfaces: the maximum number of ENIs
*   max-postpaid-instance-vcpu-count: the maximum number of vCPUs for pay-as-you-go instances
*   max-spot-instance-vcpu-count: the maximum number of vCPUs for preemptible instances
*   used-postpaid-instance-vcpu-count: the number of vCPUs that have been allocated to pay-as-you-go instances
*   used-spot-instance-vcpu-count: the number of vCPUs that have been allocated to preemptible instances
*   max-postpaid-yundisk-capacity: the maximum capacity of pay-as-you-go data disks(This value is deprecated)
*   used-postpaid-yundisk-capacity: the capacity of pay-as-you-go disks that have been created(This value is deprecated)
*   max-dedicated-hosts: the maximum number of dedicated hosts
*   supported-postpaid-instance-types: the instance types of pay-as-you-go I/O optimized instances
*   max-axt-command-count: the maximum number of Cloud Assistant commands
*   max-axt-invocation-daily: the maximum number of Cloud Assistant command executions per day
*   real-name-authentication: whether the account has passed the real-name verification
*   max-cloud-assistant-activation-count: the maximum number of activation codes that can be created to use to register managed instances', example='max-security-groups'),
      attributeValues?: {
        valueItem?: [ 
        {
          count?: int32(name='Count', description='The number of privilege attributes in the account.', example='3'),
          diskCategory?: string(name='DiskCategory', description='The data disk category. Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: enhanced SSD (ESSD)', example='cloud_ssd'),
          expiredTime?: string(name='ExpiredTime', description='The expiration time of a privilege. This parameter is returned only when the account privilege has an expiration time. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-01-01T12:30:00Z'),
          instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance.', example='PrePaid'),
          instanceType?: string(name='InstanceType', description='The type of the instance.', example='ecs.g5.large'),
          value?: string(name='Value', description='The value of the resource quota in the specified region. Valid values:

The values returned for the resource quotas to which the following AttributeName values correspond are 0 or positive integers:

*   max-security-groups
*   max-elastic-network-interfaces
*   max-postpaid-instance-vcpu-count
*   max-spot-instance-vcpu-count
*   used-postpaid-instance-vcpu-count
*   used-spot-instance-vcpu-count
*   max-postpaid-yundisk-capacity(This value is deprecated)
*   used-postpaid-yundisk-capacity(This value is deprecated)
*   max-dedicated-hosts
*   max-axt-command-count
*   max-axt-invocation-daily
*   max-cloud-assistant-activation-count

When the AttributeName parameter is set to supported-postpay-instance-types, an instance type is returned. For more information, see [Instance families](~~25378~~).

When the AttributeName parameter is set to real-name-authentications, one of the following values is returned:

*   yes
*   none
*   unnecessary

When the AttributeName parameter is set to instance-network-type, one of the following values is returned:

*   vpc
*   classic', example='800'),
          zoneId?: string(name='ZoneId', description='The ID of the zone in which the resource resides.', example='cn-hangzhou-b'),
        }
      ](name='ValueItem')
      }(name='AttributeValues', description='The specific values of resource quotas.'),
    }
  ](name='AccountAttributeItem')
  }(name='AccountAttributeItems', description='Details about account privileges specified by AccountAttributeItem in the specified region.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='8CE45CD5-31FB-47C2-959D-CA8144CE****'),
}

model DescribeAccountAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAccountAttributesResponseBody(name='body'),
}

/**
  * After you [create](https://account.alibabacloud.com/register/intl_register.htm) an Alibaba Cloud account, you can create a specific number of ECS instances in different regions within the account. For more information, see [Limits](~~25412~~).
  * You can apply for a quota increase in the [Quota Center console](https://quotas.console.aliyun.com/products).
  *
 */
async function describeAccountAttributes(request: DescribeAccountAttributesRequest): DescribeAccountAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAccountAttributes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeActivationsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  activationId?: string(name='ActivationId', description='The ID of the activation code.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****', position='Query'),
  instanceName?: string(name='InstanceName', description='The default instance name prefix.', example='test-InstanceName', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. Supported regions: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), and China (Hong Kong).

You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the activation code belongs.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the activation code. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag can be returned. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags can be returned. To query more than 1,000 resources that have specified tags, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the activation code. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the activation code.', position='Query'),
}

model DescribeActivationsResponseBody = {
  activationList?: [ 
    {
      activationId?: string(name='ActivationId', description='The ID of the activation code.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****'),
      creationTime?: string(name='CreationTime', description='The time when the activation code was created.', example='2021-01-20T06:00:00Z'),
      deregisteredCount?: int32(name='DeregisteredCount', description='The number of instances that were deregistered.', example='1'),
      description?: string(name='Description', description='The description of the activation code.', example='This is description.'),
      disabled?: boolean(name='Disabled', description='Indicates whether the activation code is disabled.', example='false'),
      instanceCount?: int32(name='InstanceCount', description='The maximum number of times that the activation code can be used to register managed instances.', example='1'),
      instanceName?: string(name='InstanceName', description='The default instance name prefix.', example='test-InstanceName'),
      ipAddressRange?: string(name='IpAddressRange', description='The IP addresses of hosts that are allowed to use the activation code.', example='0.0.0.0/0'),
      registeredCount?: int32(name='RegisteredCount', description='The number of instances that were registered.', example='1'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the activation code belongs.', example='rg-123******'),
      tags?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the activation code.', example='owner'),
          tagValue?: string(name='TagValue', description='The tag value of the activation code.', example='zhangsan'),
        }
      ](name='Tags', description='The tags of the activation code.'),
      timeToLiveInHours?: long(name='TimeToLiveInHours', description='The validity period of the activation code. Unit: hours.', example='4'),
    }
  ](name='ActivationList', description='The activation codes and their usage information.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2****'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='4ECEEE12-56F1-4FBC-9AB1-890F74625134'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeActivationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeActivationsResponseBody(name='body'),
}

/**
  * You can use one of the following methods to check the responses:
  * - Method 1: When you call the DescribeActivations operation to retrieve the first page of results during a paged query, use MaxResults to specify the maximum number of entries to return in the call. The return value of NextToken is a pagination token, which you can use in the next request to retrieve a new page of results. When you call the DescribeActivations operation to retrieve a new page of results, set NextToken to the NextToken value returned in the previous call and use MaxResults to specify the maximum number of entries to return in this call.
  * - Method 2: Use PageSize to specify the number of entries to return on each page, and then use PageNumber to specify the number of the page to return. You can use only one of the preceding methods. If you specify MaxResults or NextToken, the PageSize and PageNumber request parameters do not take effect and the TotalCount response parameter is invalid.
  *
 */
async function describeActivations(request: DescribeActivationsRequest): DescribeActivationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeActivations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAutoProvisioningGroupHistoryRequest {
  autoProvisioningGroupId: string(name='AutoProvisioningGroupId', description='The ID of the auto provisioning group.', example='apg-bp67acfmxazb4p****', position='Query'),
  endTime?: string(name='EndTime', description='The end of the time range of the queried data. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-06-20T15:10:20Z', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='123456', position='Query'),
  ownerId?: long(name='OwnerId', example='123456', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page. Pages start from page 1.

Default value: 1', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page. Maximum value: 100.

Default value: 10.', example='5', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the auto provisioning group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='123456', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='123456', position='Query'),
  startTime?: string(name='StartTime', description='The beginning of the time range of the queried data. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-04-01T15:10:20Z', position='Query'),
}

model DescribeAutoProvisioningGroupHistoryResponseBody = {
  autoProvisioningGroupHistories?: {
    autoProvisioningGroupHistory?: [ 
    {
      activityDetails?: {
        activityDetail?: [ 
        {
          detail?: string(name='Detail', description='The execution details of instance creation performed by the single scheduling task.', example='New ECS instances "i-bp67acfmxazb4p****, i-bp67acfmxazb5p****" created.'),
          status?: string(name='Status', description='The execution status of instance creation performed by the single scheduling task. Valid values:

*   Successful: Instances are created.
*   Failed: Instances failed to be created.
*   InProgress: Instances are being created.
*   Warning: Some instances are created.', example='Successful'),
        }
      ](name='ActivityDetail')
      }(name='ActivityDetails', description='An array consisting of ActivityDetail data.'),
      lastEventTime?: string(name='LastEventTime', description='The execution time of the last instance creation performed by the single scheduling task.', example='2019-04-01T15:10:20Z'),
      startTime?: string(name='StartTime', description='The start time of executing the single scheduling task.', example='2019-04-01T15:10:20Z'),
      status?: string(name='Status', description='The execution status of the single scheduling task. Valid values:

*   prepare: The scheduling task is being executed.
*   success: The scheduling task is executed.
*   failed: The scheduling task failed to be executed.', example='success'),
      taskId?: string(name='TaskId', description='The ID of the scheduling task.', example='apg-task-bp67acfmxazb4p****'),
    }
  ](name='AutoProvisioningGroupHistory')
  }(name='AutoProvisioningGroupHistories', description='An array consisting of AutoProvisioningGroupHistory data.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B48A12CD-1295-4A38-A8F0-0E92C937****'),
  totalCount?: int32(name='TotalCount', description='The number of queried scheduling tasks in the auto provisioning group.', example='10'),
}

model DescribeAutoProvisioningGroupHistoryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAutoProvisioningGroupHistoryResponseBody(name='body'),
}

async function describeAutoProvisioningGroupHistory(request: DescribeAutoProvisioningGroupHistoryRequest): DescribeAutoProvisioningGroupHistoryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAutoProvisioningGroupHistory', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAutoProvisioningGroupInstancesRequest {
  autoProvisioningGroupId: string(name='AutoProvisioningGroupId', description='The ID of the auto provisioning group.', example='apg-uf6jel2bbl62wh13****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='123456', position='Query'),
  ownerId?: long(name='OwnerId', example='123456', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the auto provisioning group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='123456', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='123456', position='Query'),
}

model DescribeAutoProvisioningGroupInstancesResponseBody = {
  instances?: {
    instance?: [ 
    {
      CPU?: int32(name='CPU', description='The number of vCPUs.', example='2'),
      creationTime?: string(name='CreationTime', description='The time when the instance was created.', example='2017-12-10T04:04Z'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4p****'),
      instanceType?: string(name='InstanceType', description='The instance type of the ECS instance.', example='ecs.g5.large'),
      ioOptimized?: boolean(name='IoOptimized', description='Indicates whether the instance is I/O optimized.', example='true'),
      isSpot?: boolean(name='IsSpot', description='Indicates whether the instance is a preemptible instance.', example='true'),
      memory?: int32(name='Memory', description='The memory size of the instance. Unit: MiB.', example='1024'),
      networkType?: string(name='NetworkType', description='The network type of the instance. Valid values:

*   vpc
*   classic', example='vpc'),
      osType?: string(name='OsType', description='The operating system type of the instance. Valid values:

*   windows
*   linux', example='linux'),
      regionId?: string(name='RegionId', description='The region ID of the instance.', example='cn-hangzhou'),
      status?: string(name='Status', description='The status of the instance.', example='Running'),
      zoneId?: string(name='ZoneId', description='The zone ID of the instance.', example='cn-hangzhou-g'),
    }
  ](name='Instance')
  }(name='Instances', description='An array consisting of Instance data.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B48A12CD-1295-4A38-A8F0-0E92C937****'),
  totalCount?: int32(name='TotalCount', description='The number of queried instances in the auto provisioning group.', example='2'),
}

model DescribeAutoProvisioningGroupInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAutoProvisioningGroupInstancesResponseBody(name='body'),
}

async function describeAutoProvisioningGroupInstances(request: DescribeAutoProvisioningGroupInstancesRequest): DescribeAutoProvisioningGroupInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAutoProvisioningGroupInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAutoProvisioningGroupsRequest {
  autoProvisioningGroupId?: [ string ](name='AutoProvisioningGroupId', description='The ID of the auto provisioning group. You can specify up to 20 IDs.', example='apg-sn54avj8htgvtyh8****', position='Query'),
  autoProvisioningGroupName?: string(name='AutoProvisioningGroupName', description='The name of the auto provisioning group.', example='testAutoProvisioningGroupName', position='Query'),
  autoProvisioningGroupStatus?: [ string ](name='AutoProvisioningGroupStatus', description='The status of the auto provisioning group.', example='active', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='2', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the auto provisioning group.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the auto provisioning group belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N that is added to the auto provisioning group.

Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N that is added to the auto provisioning group.

Valid values of N: 1 to 20. The tag value can be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='Tag', description='The tags that are added to the auto provisioning group.', position='Query'),
}

model DescribeAutoProvisioningGroupsResponseBody = {
  autoProvisioningGroups?: {
    autoProvisioningGroup?: [ 
    {
      autoProvisioningGroupId?: string(name='AutoProvisioningGroupId', description='The ID of the auto provisioning group.', example='apg-sn54avj8htgvtyh8****'),
      autoProvisioningGroupName?: string(name='AutoProvisioningGroupName', description='The name of the auto provisioning group.', example='EcsDocTest'),
      autoProvisioningGroupType?: string(name='AutoProvisioningGroupType', description='The delivery type of the auto provisioning group. Valid values:

*   request: one-time delivery. When the auto provisioning group is started, it delivers instances only once. If the instances fail to be delivered, the auto provisioning group does not retry the delivery.
*   maintain: continuous delivery. When the auto provisioning group is started, it attempts to deliver instances that meet the target capacity and monitors the real-time capacity. If the target capacity of the auto provisioning group is not reached, the auto provisioning group continues to create instances until the target capacity is reached.', example='maintain'),
      creationTime?: string(name='CreationTime', description='The time when the auto provisioning group was created.', example='2019-04-01T15:10:20Z'),
      excessCapacityTerminationPolicy?: string(name='ExcessCapacityTerminationPolicy', description='Indicates whether to release the scaled-in instances when the real-time capacity of the auto provisioning group exceeds the target capacity and the group is triggered to scale in. Valid values:

*   termination: releases the scaled-in instances.
*   no-termination: only removes the scaled-in instances from the auto provisioning group but does not release the instances.', example='termination'),
      launchTemplateConfigs?: {
        launchTemplateConfig?: [ 
        {
          instanceType?: string(name='InstanceType', description='The instance type that is specified in the extended configuration.', example='ecs.g5.large'),
          maxPrice?: float(name='MaxPrice', description='The maximum price of the instance type specified in the extended configuration.', example='3'),
          priority?: float(name='Priority', description='The priority of the instance type specified in the extended configuration. A value of 0 indicates the highest priority.', example='1'),
          vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch specified in the extended configuration.', example='vsw-sn5bsitu4lfzgc5o7****'),
          weightedCapacity?: float(name='WeightedCapacity', description='The weight of the instance type specified in the extended configuration.', example='2'),
        }
      ](name='LaunchTemplateConfig')
      }(name='LaunchTemplateConfigs', description='Details about the extended configurations.'),
      launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template associated with the auto provisioning group.', example='lt-bp1fgzds4bdogu03****'),
      launchTemplateVersion?: string(name='LaunchTemplateVersion', description='The version of the launch template associated with the auto provisioning group.', example='1'),
      maxSpotPrice?: float(name='MaxSpotPrice', description='The maximum price of preemptible instances in the auto provisioning group.

>  When both the MaxSpotPrice and LaunchTemplateConfig.N.MaxPrice parameters are specified, the smaller one of the two parameter values is used.

The LaunchTemplateConfig.N.Priority parameter is set when the auto provisioning group is created, and cannot be modified.', example='2'),
      payAsYouGoOptions?: {
        allocationStrategy?: string(name='AllocationStrategy', description='The policy for creating pay-as-you-go instances. Valid values:

*   lowest-price: cost optimization policy. This policy indicates that lowest-cost instance types are used to create instances.
*   prioritized: priority-based policy. This policy indicates that instances are created based on the priority specified by the LaunchTemplateConfig.N.Priority parameter.

>  The LaunchTemplateConfig.N.Priority parameter is set when the auto provisioning group is created, and cannot be modified.', example='prioritized'),
      }(name='PayAsYouGoOptions', description='The policies related to pay-as-you-go instances.'),
      regionId?: string(name='RegionId', description='The region ID of the auto provisioning group.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the auto provisioning group belongs.', example='rg-bp67acfmxazb4p****'),
      spotOptions?: {
        allocationStrategy?: string(name='AllocationStrategy', description='The policy for creating preemptible instances. Valid values:

*   lowest-price: cost optimization policy. This policy indicates that the lowest-priced instance type is used to create instances.
*   diversified: balanced distribution policy. This policy indicates that instances are created evenly across multiple zones specified in the extended configuration.', example='diversified'),
        instanceInterruptionBehavior?: string(name='InstanceInterruptionBehavior', description='The action to be performed after the excess preemptible instances are stopped. Valid values:

*   stop: retains the excess preemptible instances in the stopped state.
*   terminate: releases the excess preemptible instances.', example='stop'),
        instancePoolsToUseCount?: int32(name='InstancePoolsToUseCount', description='The number of instances that the auto provisioning group creates by selecting the instance type of the lowest price.

>  This parameter is set when the auto provisioning group is created, and cannot be modified.', example='2'),
      }(name='SpotOptions', description='The policy related to preemptible instances.'),
      state?: string(name='State', description='The overall status of instance scheduling in the auto provisioning group. Valid values:

*   fulfilled: Scheduling was complete and the instances were delivered.
*   pending-fulfillment: The instances were being created.
*   pending-termination: The instances were being removed.
*   error: An exception occurred during scheduling and the instances were not delivered.', example='fulfilled'),
      status?: string(name='Status', description='The status of the auto provisioning group. Valid values:

*   submitted: The auto provisioning group was created but did not execute scheduling tasks.
*   active: The auto provisioning group was executing scheduling tasks.
*   deleted: The auto provisioning group was deleted.
*   delete-running: The auto provisioning group was being deleted.
*   modifying: The auto provisioning group was being modified.', example='submitted'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of tag N that is added to the auto provisioning group.

Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of tag N that is added to the auto provisioning group.

Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags that are added to the auto provisioning group.'),
      targetCapacitySpecification?: {
        defaultTargetCapacityType?: string(name='DefaultTargetCapacityType', description='The type of supplemental instances. When the sum of the `PayAsYouGoTargetCapacity` and `SpotTargetCapacity` values is less than the `TotalTargetCapacity` value, the auto provisioning group creates instances of the specified billing method to meet the target capacity. Valid values:

*   PayAsYouGo: pay-as-you-go instances.
*   Spot: preemptible instances.', example='Spot'),
        payAsYouGoTargetCapacity?: float(name='PayAsYouGoTargetCapacity', description='The target capacity of pay-as-you-go instances that the auto provisioning group provisions.', example='30'),
        spotTargetCapacity?: float(name='SpotTargetCapacity', description='The target capacity of preemptible instances that the auto provisioning group provisions.', example='20'),
        totalTargetCapacity?: float(name='TotalTargetCapacity', description='The target capacity of the auto provisioning group. The capacity consists of the following parts:

*   PayAsYouGoTargetCapacity
*   SpotTargetCapacity
*   The supplemental capacity besides instance capacities specified by PayAsYouGoTargetCapacity and SpotTargetCapacity.', example='60'),
      }(name='TargetCapacitySpecification', description='The settings of the target capacity of the auto provisioning group.'),
      terminateInstances?: boolean(name='TerminateInstances', description='Indicates whether to release instances in the auto provisioning group when the auto provisioning group is deleted. Valid values:

*   true: releases the instances.
*   false: only removes the instances from the auto provisioning group but does not release the instances.', example='false'),
      terminateInstancesWithExpiration?: boolean(name='TerminateInstancesWithExpiration', description='Indicates whether to release instances in the auto provisioning group when the group expires. Valid values:

*   true: releases the instances.
*   false: only removes the instances from the auto provisioning group but does not release the instances.', example='true'),
      validFrom?: string(name='ValidFrom', description='The time at which the auto provisioning group is started. The provisioning group is effective until the point in time specified by `ValidUntil`.', example='2019-04-01T15:10:20Z'),
      validUntil?: string(name='ValidUntil', description='The time at which the auto provisioning group expires. The period of time between this point in time and the point in time specified by the `ValidFrom` parameter is the validity period of the auto provisioning group.', example='2019-06-01T15:10:20Z'),
    }
  ](name='AutoProvisioningGroup')
  }(name='AutoProvisioningGroups', description='Details about the auto provisioning groups.'),
  pageNumber?: int32(name='PageNumber', description='The number of the page returned.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='745CEC9F-0DD7-4451-9FE7-8B752F39****'),
  totalCount?: int32(name='TotalCount', description='The number of queried auto provisioning groups.', example='10'),
}

model DescribeAutoProvisioningGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAutoProvisioningGroupsResponseBody(name='body'),
}

async function describeAutoProvisioningGroups(request: DescribeAutoProvisioningGroupsRequest): DescribeAutoProvisioningGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAutoProvisioningGroups', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAutoSnapshotPolicyExRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy.', example='sp-bp67acfmxazb4ph****', position='Query'),
  autoSnapshotPolicyName?: string(name='AutoSnapshotPolicyName', description='The name of the automatic snapshot policy.', example='TestName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the automatic snapshot policy. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

> Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-aek2kkmhmhs****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the automatic snapshot policy. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the automatic snapshot policy. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://. The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the automatic snapshot policy.', position='Query'),
}

model DescribeAutoSnapshotPolicyExResponseBody = {
  autoSnapshotPolicies?: {
    autoSnapshotPolicy?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy.', example='sp-bp67acfmxazb4ph****'),
      autoSnapshotPolicyName?: string(name='AutoSnapshotPolicyName', description='The name of the automatic snapshot policy.', example='testAutoSnapshotPolicyName'),
      copiedSnapshotsRetentionDays?: int32(name='CopiedSnapshotsRetentionDays', description='>  This parameter is in invitational preview and is not publicly available.', example='0'),
      copyEncryptionConfiguration?: {
        encrypted?: boolean(name='Encrypted', description='Whether to enable encryption for cross-region snapshot replication. Valid values:

*   true
*   false

Default value: false.', example='false'),
        KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key used to encrypt snapshots in cross-region snapshot replication.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      }(name='CopyEncryptionConfiguration', description='Encryption configurations for cross-region snapshot replication.'),
      creationTime?: string(name='CreationTime', description='The time when the automatic snapshot policy was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddThh:mm:ssZ format. The time is displayed in UTC.', example='2019-12-10T16:00Z'),
      diskNums?: int32(name='DiskNums', description='The number of disks to which the automatic snapshot policy is applied.', example='1'),
      enableCrossRegionCopy?: boolean(name='EnableCrossRegionCopy', description='>  This parameter is in invitational preview and is not publicly available.', example='false'),
      regionId?: string(name='RegionId', description='The region ID of the automatic snapshot policy.', example='cn-hangzhou'),
      repeatWeekdays?: string(name='RepeatWeekdays', description='The days of the week on which to create automatic snapshots. Valid values: 1 to 7, which correspond to the days of the week. For example, 1 indicates Monday. One or more days can be specified.', example='["6"]'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-aek2kkmhmhs****'),
      retentionDays?: int32(name='RetentionDays', description='The retention period of the automatic snapshots. Unit: days. Valid values:

*   \\-1: Automatic snapshots are retained until they are deleted.
*   1 to 65536: Auto snapshots are retained for the specified number of days. After the retention period of auto snapshots expires, the auto snapshots are automatically deleted.', example='7'),
      status?: string(name='Status', description='The status of the automatic snapshot policy. Valid values:

*   Normal: The automatic snapshot policy is normal.
*   Expire: The automatic snapshot policy cannot be used because your account has overdue payments.', example='Normal'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the automatic snapshot policy.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the automatic snapshot policy.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the automatic snapshot policy.'),
      targetCopyRegions?: string(name='TargetCopyRegions', description='>  This parameter is in invitational preview and is not publicly available.', example='test'),
      timePoints?: string(name='TimePoints', description='The points in time of the day at which to create automatic snapshots.

The time is displayed in UTC+8. Unit: hours. Valid values: 0 to 23, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, 1 indicates 01:00:00. Multiple points in time can be specified.

The parameter value is a JSON array that contains up to 24 points in time separated by commas (,). Example: `["0", "1", ... "23"]`.', example='["1"]'),
      type?: string(name='Type', description='The type of the automatic snapshot policy. Valid values:

*   Custom: user-defined snapshot policy.
*   System: system-defined snapshot policy.', example='Custom'),
      volumeNums?: int32(name='VolumeNums', description='The number of extended volumes to which the automatic snapshot policy is applied.', example='2'),
    }
  ](name='AutoSnapshotPolicy')
  }(name='AutoSnapshotPolicies', description='Details about the automatic snapshot policies.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of automatic snapshot policies', example='1'),
}

model DescribeAutoSnapshotPolicyExResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAutoSnapshotPolicyExResponseBody(name='body'),
}

async function describeAutoSnapshotPolicyEx(request: DescribeAutoSnapshotPolicyExRequest): DescribeAutoSnapshotPolicyExResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAutoSnapshotPolicyEx', 'POST', '/', 'json', false, 'json', request);
}

model DescribeAvailableResourceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  cores?: int32(name='Cores', description='The number of vCPUs of the instance type. For more information, see [Instance families](~~25378~~).

The Cores parameter takes effect only when the DestinationResource parameter is set to InstanceType.', example='2', position='Query'),
  dataDiskCategory?: string(name='DataDiskCategory', description='The category of the data disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: ESSD
*   cloud_auto: ESSD AutoPL disk', example='cloud_ssd', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****', position='Query'),
  destinationResource: string(name='DestinationResource', description='The resource type to query. Valid values:

*   Zone: zone.
*   IoOptimized: I/O optimized resource.
*   InstanceType: instance type.
*   SystemDisk: system disk.
*   DataDisk: data disk.
*   Network: network type.
*   ddh: dedicated host.

For more information about how to configure the DestinationResource parameter, see the **Description** section of this topic.', example='InstanceType', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the resource. For more information, see [Billing overview](~~25398~~). Valid values:

*   PrePaid: subscription.
*   PostPaid: pay-as-you-go.

Default value: PostPaid.', example='PrePaid', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance types. For more information, see [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list.

For more information about how to configure the InstanceType parameter, see the **Description** section of this topic.', example='ecs.g5.large', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is an I/O optimized instance. Valid values:

*   none: The instance is a non-I/O optimized instance.
*   optimized: The instance is an I/O optimized instance.

Default value: optimized.', example='optimized', position='Query'),
  memory?: float(name='Memory', description='The memory size of the instance type. Unit: GiB. For more information, see [Instance families](~~25378~~).

The Memory parameter takes effect only when the DestinationResource parameter is set to InstanceType.', example='8.0', position='Query'),
  networkCategory?: string(name='NetworkCategory', description='The network type of the cluster. Valid values:

*   vpc
*   classic', example='vpc', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region for which to query resources. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance.
*   disk: cloud disk.
*   reservedinstance: reserved instance.
*   ddh: dedicated host.', example='instance', position='Query'),
  scope?: string(name='Scope', description='The scope of the reserved instance. Valid values:

*   Region: regional.
*   Zone: zonal.', example='Region', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter takes effect only if SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1', minimum=0, maximum=6, position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for pay-as-you-go instances. Valid values:

*   NoSpot: The instance is a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price is automatically used as the bid price. The market price can be up to the pay-as-you-go price.

Default value: NoSpot.

The SpotStrategy parameter takes effect only when the InstanceChargeType parameter is set to PostPaid.', example='NoSpot', position='Query'),
  systemDiskCategory?: string(name='SystemDiskCategory', description='The category of the system disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: Enterprise SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk

Default value: cloud_efficiency.

>  This parameter must be specified when ResourceType is set to instance and DestinationResource is set to DataDisk. If you do not specify this parameter, the default value takes effect.', example='cloud_ssd', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone where the instance resides.

This parameter is empty by default. When this parameter is empty, the system returns resources that match the other criteria in all zones within the region specified by `RegionId`.', example='cn-hangzhou-e', position='Query'),
}

model DescribeAvailableResourceResponseBody = {
  availableZones?: {
    availableZone?: [ 
    {
      availableResources?: {
        availableResource?: [ 
        {
          supportedResources?: {
            supportedResource?: [ 
            {
              max?: int32(name='Max', description='The maximum disk capacity.

This parameter takes effect only if DestinationResource is set to SystemDisk or DataDisk.', example='2'),
              min?: int32(name='Min', description='The minimum disk capacity.

This parameter takes effect only if DestinationResource is set to SystemDisk or DataDisk.', example='1'),
              status?: string(name='Status', description='The status of the resource. Valid values:

*   Available
*   SoldOut', example='Available'),
              statusCategory?: string(name='StatusCategory', description='The resource category based on the stock level. Valid values:

*   WithStock: Resources are in sufficient stock.
*   ClosedWithStock: Resources are in insufficient stock. We recommend that you use other resources that are in sufficient stock.
*   WithoutStock: Resources are out of stock and will be replenished. We recommend that you use other resources that are in sufficient stock.
*   ClosedWithoutStock: Resources are out of stock and will not be replenished. We recommend that you use other resources that are in sufficient stock.', example='WithStock'),
              unit?: string(name='Unit', description='The unit of the disk capacity.

This parameter takes effect only if DestinationResource is set to SystemDisk or DataDisk.', example='null'),
              value?: string(name='Value', description='The resource.', example='ecs.d1ne.xlarge'),
            }
          ](name='SupportedResource')
          }(name='SupportedResources', description='The information about the resources.'),
          type?: string(name='Type', description='The resource type. Valid values:

*   Zone: zone
*   IoOptimized: I/O optimized resource
*   InstanceType: instance type
*   SystemDisk: system disk
*   DataDisk: data disk
*   Network: network type
*   ddh: dedicated host', example='InstanceType'),
        }
      ](name='AvailableResource')
      }(name='AvailableResources', description='The resources that are available in the zone.'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
      status?: string(name='Status', description='The status of resources in the zone. Valid values:

*   Available
*   SoldOut', example='Available'),
      statusCategory?: string(name='StatusCategory', description='The resource category based on the stock level in the zone. Valid values:

*   WithStock: Resources are in sufficient stock.
*   ClosedWithStock: Resources are in insufficient stock. We recommend that you use other resources that are in sufficient stock.
*   WithoutStock: Resources are out of stock and will be replenished. We recommend that you use other resources that are in sufficient stock.
*   ClosedWithoutStock: Resources are out of stock and will not be replenished. We recommend that you use other resources that are in sufficient stock.', example='WithStock'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-e'),
    }
  ](name='AvailableZone')
  }(name='AvailableZones', description='Details about the zones in which resources are available.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='0041D94C-FB92-4C49-B115-259DA1C*****'),
}

model DescribeAvailableResourceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeAvailableResourceResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The value of `DestinationResource` determines whether you need to specify additional parameters. When you select a value in the following chain for DestinationResource, the more to the right the selected value is ordered, the more parameters you must specify.
  * *   Sequence: `Zone > IoOptimized > InstanceType = Network = ddh > SystemDisk > DataDisk`
  * *   Examples:
  *     *   If you set `DestinationResource` to `DataDisk`, take note of the following items:
  *         *   If you set `ResourceType` to `disk` to query the categories of data disks that are not attached to ECS instances, you do not need to specify `InstanceType`.
  *         *   If you set `ResourceType` to `instance` to query the categories of data disks that are purchased together with ECS instances, you must specify `InstanceType` and `SystemDiskCategory` due to instance type-specific limits on system disks and data disks.
  *     *   If you set `DestinationResource` to `SystemDisk` and `ResourceType` to `instance`, you must specify `InstanceType` due to instance type-specific limits on system disks.
  *     *   If you set `DestinationResource` to `InstanceType`, we recommend that you specify `IoOptimized` and `InstanceType`.
  *     *   If you want to query the available ecs.g5.large resources in all zones of the China (Hangzhou) region, set `RegionId to cn-hangzhou, DestinationResource to InstanceType, IoOptimized to optimized, and InstanceType to ecs.g5.large`.
  *     *   If you want to query the zones where ecs.g5.large resources are available in the China (Hangzhou) region, set `RegionId to cn-hangzhou, DestinationResource to Zone, IoOptimized to optimized, and InstanceType to ecs.g5.large`.
  *
 */
async function describeAvailableResource(request: DescribeAvailableResourceRequest): DescribeAvailableResourceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeAvailableResource', 'POST', '/', 'json', false, 'json', request);
}

model DescribeBandwidthLimitationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. For more information, see [Billing overview](~~25398~~). Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go

Default value: PostPaid.', example='PostPaid', position='Query'),
  instanceType: string(name='InstanceType', description='The instance type. For information about the values, see [Overview of ECS instance families](~~25378~~).', example='ecs.g5.large', position='Query'),
  operationType?: string(name='OperationType', description='Specifies the operation for which to query the maximum public bandwidth. Valid values:

*   Upgrade: upgrades the public bandwidth.
*   Downgrade: downgrades the public bandwidth.
*   Create: creates an ECS instance.

Default value: Create.', example='Upgrade', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId?: string(name='ResourceId', description='The resource ID.

>  This parameter is required when the OperationType parameter is set to Upgrade or Downgrade.', example='i-bp67acfmxazb4ph***', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. Valid values:

*   NoSpot: The instance is a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance for which you can specify the maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is automatically used as the bid price. The market price can be up to the pay-as-you-go price.

Default value: NoSpot.

>  The SpotStrategy parameter takes effect only when the InstanceChargeType parameter is set to PostPaid.', example='NoSpot', position='Query'),
}

model DescribeBandwidthLimitationResponseBody = {
  bandwidths?: {
    bandwidth?: [ 
    {
      internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth
*   PayByTraffic', example='PayByTraffic'),
      max?: int32(name='Max', description='The maximum public bandwidth.', example='100'),
      min?: int32(name='Min', description='The minimum public bandwidth.', example='0'),
      unit?: string(name='Unit', description='The unit of the public bandwidth.', example='Mbps'),
    }
  ](name='Bandwidth')
  }(name='Bandwidths', description='Details about the maximum public bandwidth.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DescribeBandwidthLimitationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeBandwidthLimitationResponseBody(name='body'),
}

async function describeBandwidthLimitation(request: DescribeBandwidthLimitationRequest): DescribeBandwidthLimitationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeBandwidthLimitation', 'POST', '/', 'json', false, 'json', request);
}

model DescribeBandwidthPackagesRequest {
  bandwidthPackageId?: string(name='BandwidthPackageId', position='Query'),
  natGatewayId?: string(name='NatGatewayId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeBandwidthPackagesResponseBody = {
  bandwidthPackages?: {
    bandwidthPackage?: [ 
    {
      bandwidth?: string(name='Bandwidth'),
      bandwidthPackageId?: string(name='BandwidthPackageId'),
      businessStatus?: string(name='BusinessStatus'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      ISP?: string(name='ISP'),
      instanceChargeType?: string(name='InstanceChargeType'),
      internetChargeType?: string(name='InternetChargeType'),
      ipCount?: string(name='IpCount'),
      name?: string(name='Name'),
      natGatewayId?: string(name='NatGatewayId'),
      publicIpAddresses?: {
        publicIpAddresse?: [ 
        {
          allocationId?: string(name='AllocationId'),
          ipAddress?: string(name='IpAddress'),
        }
      ](name='PublicIpAddresse')
      }(name='PublicIpAddresses'),
      regionId?: string(name='RegionId'),
      status?: string(name='Status'),
      zoneId?: string(name='ZoneId'),
    }
  ](name='BandwidthPackage')
  }(name='BandwidthPackages'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeBandwidthPackagesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeBandwidthPackagesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeBandwidthPackages(request: DescribeBandwidthPackagesRequest): DescribeBandwidthPackagesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeBandwidthPackages', 'POST', '/', 'json', false, 'json', request);
}

model DescribeCapacityReservationInstancesRequest {
  privatePoolOptions?: {
    id: string(name='Id', description='The token used to start the next query.', example='crp-bp67acfmxazb4****'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  maxResults?: int32(name='MaxResults', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The ID of the capacity reservation.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The number of entries per page.

Maximum value: 100.

Default value: 10.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeCapacityReservationInstancesResponseBody = {
  capacityReservationItem?: {
    instanceIdSet?: [ 
    {
      instanceId?: string(name='InstanceId', example='i-bp67acfmxazb4****'),
    }
  ](name='InstanceIdSet')
  }(name='CapacityReservationItem', description='The instance ID.'),
  maxResults?: int32(name='MaxResults', description='Details about the instances that match the capacity reservation.', example='10'),
  nextToken?: string(name='NextToken', description='The request ID.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The total number of entries returned.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The maximum number of entries returned per page.', example='10'),
}

model DescribeCapacityReservationInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCapacityReservationInstancesResponseBody(name='body'),
}

async function describeCapacityReservationInstances(request: DescribeCapacityReservationInstancesRequest): DescribeCapacityReservationInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeCapacityReservationInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeCapacityReservationsRequest {
  privatePoolOptions?: {
    ids?: string(name='Ids', description='The IDs of capacity reservations. The value can be a JSON array that consists of up to 100 capacity reservation IDs. Separate the IDs with commas (,).', example='["crp-bp1gubrkqutenqdd****", "crp-bp67acfmxazb5****"]'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PostPaid: pay-as-you-go.
*   PrePaid: subscription.

Default value: PostPaid.', example='PostPaid', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.c6.large', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of the NextToken parameter.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='The operating system of the instance. Valid values:

*   windows: Windows operating systems.
*   linux: Linux operating systems.
*   all: all operating system types.

Default value: all.', example='linux', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the capacity reservation. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the capacity reservation belongs. If you specify this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

> Resources in the default resource group are displayed in the response regardless of whether you specify this parameter.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The state of the capacity reservation. Valid values:

*   All: All states.
*   Pending: The capacity reservation is being initialized. Scheduled capacity reservations enter the Pending state after they are created.
*   Preparing: The capacity reservation is being prepared. Scheduled capacity reservations are in the Preparing state while resources are being provisioned.
*   Prepared: The capacity reservation is to take effect. After resources are provisioned, scheduled capacity reservations remain in the Prepared state until they take effect.
*   Active: The capacity reservation is in effect.
*   Released: The capacity reservation has been released manually or automatically when it expired.

Default value: Active.', example='Active', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20.

If you specify a single tag to query resources, up to 1,000 resources with this tag are returned in the response. If you specify multiple tags to query resources, up to 1,000 resources with all these tags are returned in the response. To query more than 1,000 resources with the specified tags, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the capacity reservation.', example='cn-hangzhou-h', position='Query'),
}

model DescribeCapacityReservationsResponseBody = {
  capacityReservationSet?: {
    capacityReservationItem?: [ 
    {
      allocatedResources?: {
        allocatedResource?: [ 
        {
          availableAmount?: int32(name='AvailableAmount', description='The number of available instances.', example='2'),
          capacityReservationUsages?: {
            capacityReservationUsage?: [ 
            {
              accountId?: string(name='AccountId', description='The ID of the Alibaba Cloud account.', example='105909559088****'),
              serviceName?: string(name='ServiceName', description='The name of the Alibaba Cloud service.', example='maxcompute.aliyuncs.com'),
              usedAmount?: int32(name='UsedAmount', description='The number of instances that are used by the Alibaba Cloud account or service.', example='20'),
            }
          ](name='CapacityReservationUsage')
          }(name='CapacityReservationUsages', description='Details of instance usage.'),
          instanceType?: string(name='InstanceType', description='The instance type of the instances.', example='ecs.c6.large'),
          totalAmount?: int32(name='TotalAmount', description='The total number of instances for which the capacity of an instance type is reserved.', example='2'),
          usedAmount?: int32(name='UsedAmount', description='The number of instances that have used the capacity reservation.', example='2'),
          zoneId?: string(name='zoneId', description='The zone ID.', example='cn-hangzhou-h'),
        }
      ](name='AllocatedResource')
      }(name='AllocatedResources', description='Details of the allocated resources.'),
      capacityReservationOwnerId?: string(name='CapacityReservationOwnerId', description='The ID of the capacity reservation owner.', example='100************7'),
      description?: string(name='Description', description='The description of the capacity reservation.', example='This is description.'),
      endTime?: string(name='EndTime', description='The time when the capacity reservation expires.', example='2021-02-19T03:02Z'),
      endTimeType?: string(name='EndTimeType', description='The release mode of the capacity reservation. Valid values:

*   Limited: The capacity reservation is automatically released at a specified time.
*   Unlimited: The capacity reservation is manually released. You can release the capacity reservation anytime.', example='Unlimited'),
      instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instances created by using the capacity reservation. Valid values:

*   PostPaid: pay-as-you-go.
*   PrePaid: subscription.', example='PostPaid'),
      platform?: string(name='Platform', description='The operating system type of the instances created by using the capacity reservation. Valid values:

*   windows
*   linux', example='linux'),
      privatePoolOptionsId?: string(name='PrivatePoolOptionsId', description='The ID of the capacity reservation.', example='crp-bp1gubrkqutenqdd****'),
      privatePoolOptionsMatchCriteria?: string(name='PrivatePoolOptionsMatchCriteria', description='The type of the private pool generated after the capacity reservation takes effect. Valid values:

*   Open: open private pool.
*   Target: targeted private pool.', example='Open'),
      privatePoolOptionsName?: string(name='PrivatePoolOptionsName', description='The name of the capacity reservation.', example='crpTestName'),
      regionId?: string(name='RegionId', description='The region ID of the capacity reservation.', example='cn-hangzhou'),
      reservedInstanceId?: string(name='ReservedInstanceId', description='The ID of the reserved instance used with the capacity reservation.', example='ri-bpzhex2ulpzf53****'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the capacity reservation belongs.', example='rg-bp67acfmxazb4p****'),
      savingPlanId?: string(name='SavingPlanId', description='The ID of the savings plan used with the capacity reservation.', example='spn-c29b5e18pJMT****'),
      startTime?: string(name='StartTime', description='The time when the capacity reservation takes effect.', example='2021-02-19T02:01Z'),
      startTimeType?: string(name='StartTimeType', description='The mode in which the capacity reservation takes effect. Valid values:

*   Now: The capacity reservation takes effect immediately after it is created.
*   Later: The capacity reservation takes effect at a specified time.', example='Now'),
      status?: string(name='Status', description='The status of the capacity reservation. Valid values:

*   Pending: The capacity reservation is being initialized.
*   Preparing: The capacity reservation is being prepared.
*   Prepared: The capacity reservation is to take effect.
*   Active: The capacity reservation is in effect.
*   Released: The capacity reservation has been released manually or automatically when it expired.', example='Active'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags that are added to the capacity reservation.'),
      timeSlot?: string(name='TimeSlot', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
    }
  ](name='CapacityReservationItem')
  }(name='CapacityReservationSet', description='Details of the capacity reservations.'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries returned per page.', example='10'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0a****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeCapacityReservationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCapacityReservationsResponseBody(name='body'),
}

async function describeCapacityReservations(request: DescribeCapacityReservationsRequest): DescribeCapacityReservationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeCapacityReservations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeClassicLinkInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The instance ID. You can specify a maximum of 100 instance IDs in a single request. Separate the instance IDs with commas (,).', example='i-bp1a5zr3u7nq9cxh****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: string(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: string(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId?: string(name='VpcId', description='The VPC ID. The ClassicLink feature must be enabled for the specified VPC. For more information, see [Establish a ClassicLink connection](~~65413~~).', example='vpc-bp1vwnn14rqpyiczj****', position='Query'),
}

model DescribeClassicLinkInstancesResponseBody = {
  links?: {
    link?: [ 
    {
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-test'),
      vpcId?: string(name='VpcId', description='The VPC ID.', example='vpc-test'),
    }
  ](name='Link')
  }(name='Links', description='The details of the ClassicLink connections between the instances reside in the classic network and VPCs.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of ClassicLink connections.', example='2'),
}

model DescribeClassicLinkInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeClassicLinkInstancesResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   This operation applies only to instances that reside in the classic network.
  * *   You can query a maximum of 100 instances that reside in the classic network at a time.
  * *   At least one of the `VpcId` and `InstanceId` parameters must be configured.
  *
 */
async function describeClassicLinkInstances(request: DescribeClassicLinkInstancesRequest): DescribeClassicLinkInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeClassicLinkInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeCloudAssistantSettingsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  settingType: [ string ](name='SettingType', description='The Cloud Assistant configurations.', position='Query'),
}

model DescribeCloudAssistantSettingsResponseBody = {
  agentUpgradeConfig?: {
    allowedUpgradeWindows?: {
      allowedUpgradeWindow?: [ string ](name='AllowedUpgradeWindow')
    }(name='AllowedUpgradeWindows', description='The time windows during which Cloud Assistant Agent can be upgraded.'),
    enabled?: boolean(name='Enabled', description='Indicates whether custom upgrade is enabled for Cloud Assistant Agent. If the value is false or empty, an upgrade attempt is performed for Cloud Assistant Agent every 30 minutes.', example='true'),
    timeZone?: string(name='TimeZone', description='The time zone of the time windows.', example='Asia/Shanghai'),
  }(name='AgentUpgradeConfig', description='The configurations for upgrading Cloud Assistant Agent.'),
  ossDeliveryConfigs?: {
    ossDeliveryConfig?: [ 
    {
      bucketName?: string(name='BucketName', description='The name of the OSS bucket.', example='example-bucket'),
      deliveryType?: string(name='DeliveryType', description='The type of items to be delivered. Valid values:

*   SessionManager: session records.
*   Invocation: task execution records.', example='SessionManager'),
      enabled?: boolean(name='Enabled', description='Indicates whether to deliver the specified items to OSS.', example='false'),
      encryptionAlgorithm?: string(name='EncryptionAlgorithm', description='The OSS encryption algorithm. Valid values:

*   AES256
*   SM4', example='AES256'),
      encryptionKeyId?: string(name='EncryptionKeyId', description='The ID of the customer master key (CMK) when EncryptionType is set to KMS.', example='a807****7a70e'),
      encryptionType?: string(name='EncryptionType', description='The OSS encryption method. Valid values:

*   Inherit: the encryption method used by the specified bucket.
*   OssManaged: server-side encryption by using OSS-managed keys (SSE-OSS).
*   KMS: server-side encryption with Key Management Service (SSE-KMS).', example='Inherit'),
      prefix?: string(name='Prefix', description='The prefix of the OSS bucket directory.', example='sessionmanager/audit'),
    }
  ](name='OssDeliveryConfig')
  }(name='OssDeliveryConfigs', description='The configurations for delivering items to Object Storage Service (OSS).'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  slsDeliveryConfigs?: {
    slsDeliveryConfig?: [ 
    {
      deliveryType?: string(name='DeliveryType', description='The type of items to be delivered. Valid values:

*   SessionManager: session records.
*   Invocation: task execution records.', example='SessionManager'),
      enabled?: boolean(name='Enabled', description='Indicates whether to deliver the specified items to Simple Log Service.', example='false'),
      logstoreName?: string(name='LogstoreName', description='The name of the Logstore.', example='example-logstore'),
      projectName?: string(name='ProjectName', description='The name of the Simple Log Service project.', example='example-project'),
    }
  ](name='SlsDeliveryConfig')
  }(name='SlsDeliveryConfigs', description='The configurations for delivering items to Simple Log Service.'),
}

model DescribeCloudAssistantSettingsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCloudAssistantSettingsResponseBody(name='body'),
}

async function describeCloudAssistantSettings(request: DescribeCloudAssistantSettingsRequest): DescribeCloudAssistantSettingsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeCloudAssistantSettings', 'POST', '/', 'json', false, 'json', request);
}

model DescribeCloudAssistantStatusRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: [ string ](name='InstanceId', description='The instance ID.', example='i-bp1iudwa5b1tqa****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. If you specify **InstanceId**, this parameter does not take effect.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  OSType?: string(name='OSType', description='The operating system type of the instance. Valid values:

*   Windows
*   Linux
*   FreeBSD', example='Windows', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page. If you specify **InstanceId**, this parameter does not take effect. Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call [DescribeRegions](~~25609~~) to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeCloudAssistantStatusResponseBody = {
  instanceCloudAssistantStatusSet?: {
    instanceCloudAssistantStatus?: [ 
    {
      activeTaskCount?: long(name='ActiveTaskCount', description='The number of tasks that Cloud Assistant was running on the instance.', example='0'),
      cloudAssistantStatus?: string(name='CloudAssistantStatus', description='Indicates whether Cloud Assistant is running on the instance. Valid values:

*   true: Heartbeats are detected in the last 2 minutes.
*   false: No heartbeats are detected in the last 2 minutes.', example='true'),
      cloudAssistantVersion?: string(name='CloudAssistantVersion', description='The version number of Cloud Assistant Agent. This parameter is empty if Cloud Assistant Agent is not installed or is not running on the instance.', example='2.2.0.106'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1iudwa5b1tqa****'),
      invocationCount?: long(name='InvocationCount', description='The number of tasks that Cloud Assistant completed on the instance.', example='2'),
      lastHeartbeatTime?: string(name='LastHeartbeatTime', description='The last heartbeat time of Cloud Assistant. The value is updated every minute on average. The interval can be 55, 60, or 65 seconds.', example='2021-03-15T09:00:00Z'),
      lastInvokedTime?: string(name='LastInvokedTime', description='The time when commands were last run.', example='2021-03-15T08:00:00Z'),
      OSType?: string(name='OSType', description='The operating system type of the instance. Valid values:

*   Windows
*   Linux
*   FreeBSD', example='Linux'),
      supportSessionManager?: boolean(name='SupportSessionManager', description='Indicates whether Cloud Assistant supports Session Manager on the instance. If Session Manager is not supported, the version of Cloud Assistant Agent is outdated. Update Cloud Assistant Agent to the latest version.

To support Session Manager, the version of Cloud Assistant Agent cannot be earlier than the following versions:

*   Linux: 2.2.3.189
*   Windows: 2.1.3.189', example='true'),
    }
  ](name='InstanceCloudAssistantStatus')
  }(name='InstanceCloudAssistantStatusSet', description='Details about the installation status of Cloud Assistant on the instances.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: long(name='TotalCount', description='The total number of instances.', example='1'),
}

model DescribeCloudAssistantStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCloudAssistantStatusResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   Before you run commands on or send files to instances, especially new instances, we recommend that you query the status of Cloud Assistant on the instances by calling this operation and checking the return value of CloudAssistantStatus. Run commands on or send files to the instances only when the return value is true.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeCloudAssistantStatus operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeCloudAssistantStatus operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries to return on each page and then use `PageNumber` to specify the number of the page to return. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  *
 */
async function describeCloudAssistantStatus(request: DescribeCloudAssistantStatusRequest): DescribeCloudAssistantStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeCloudAssistantStatus', 'POST', '/', 'json', false, 'json', request);
}

model DescribeClustersRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeClustersResponseBody = {
  clusters?: {
    cluster?: [ 
    {
      clusterId?: string(name='ClusterId'),
    }
  ](name='Cluster')
  }(name='Clusters'),
  requestId?: string(name='RequestId'),
}

model DescribeClustersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeClustersResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeClusters(request: DescribeClustersRequest): DescribeClustersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeClusters', 'POST', '/', 'json', false, 'json', request);
}

model DescribeCommandsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandId?: string(name='CommandId', description='The ID of the command.', example='c-hz01272yr52****', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of the `CommandContent` and `Output` values in the response. Valid values:

*   PlainText: returns the original command content and command output.
*   Base64: returns the Base64-encoded command content and command output.

Default value: Base64.', example='PlainText', position='Query'),
  description?: string(name='Description', description='The description of the command.

If you specify `Provider`, fuzzy search is supported by default.

If you do not specify `Provider`, prefix-based fuzzy search is supported. For example, if you specify `test*`, all commands whose descriptions start with `test` are queried.', example='testDescription', position='Query'),
  latest?: boolean(name='Latest', description='Specifies whether to query only the latest version of common commands when common commands are queried. This parameter does not affect the query for private commands.

*   true: queries only the latest version of common commands.
*   false: queries all versions of common commands.

Default value: false.', example='true', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  name?: string(name='Name', description='The name of the command.

If you specify `Provider`, fuzzy search is supported by default.

If you do not specify `Provider`, prefix-based fuzzy search is supported. For example, if you specify `command*`, all commands whose names start with `command` are queried.', example='testName', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  provider?: string(name='Provider', description='The provider of the common command. Take note of the following items:

*   If you do not specify this parameter, all the commands that you created are queried.

*   If you set this parameter to `AlibabaCloud`, all the common commands provided by Alibaba Cloud are queried.

*   If you set this parameter to a specific provider, all the common commands provided by the provider are queried. Examples:

    *   If you set `Provider` to AlibabaCloud.ECS.GuestOS, all the common commands provided by `AlibabaCloud.ECS.GuestOS` are queried.
    *   If you set `Provider` to AlibabaCloud.ECS.GuestOSDiagnose, all the common commands provided by `AlibabaCloud.ECS.GuestOSDiagnose` are queried.', example='AlibabaCloud', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the command belongs.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the command. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the command. Valid values of N: 1 to 20. The tag value can be an empty string.

It can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
  type?: string(name='Type', description='The type of the command. Valid values:

*   RunBatScript: batch command, applicable to Windows instances
*   RunPowerShellScript: PowerShell command, applicable to Windows instances
*   RunShellScript: shell command, applicable to Linux instances', example='RunShellScript', position='Query'),
}

model DescribeCommandsResponseBody = {
  commands?: {
    command?: [ 
    {
      category?: string(name='Category', description='The category of the common command.', example='“”'),
      commandContent?: string(name='CommandContent', description='The content of the command, which is Base64-encoded.

*   If ContentEncoding is set to PlainText in the request, the original command content is returned.
*   If ContentEncoding is set to Base64 in the request, the Base64-encoded command content is returned.', example='Y2QgL3Jvb3Q='),
      commandId?: string(name='CommandId', description='The command ID.', example='c-hz01272yr52****'),
      creationTime?: string(name='CreationTime', description='The time when the command was created.', example='2020-11-17T06:52Z'),
      description?: string(name='Description', description='The description of the command.', example='testDescription'),
      enableParameter?: boolean(name='EnableParameter', description='Indicates whether the custom parameter feature is enabled for the command.', example='true'),
      invokeTimes?: int32(name='InvokeTimes', description='The number of tasks created by using the command.', example='2'),
      latest?: boolean(name='Latest', description='Indicates whether the common command is of the latest version. If multiple common commands from the same provider (`Provider`) belong to the same category and have the same name, these commands are different versions of the same command. This parameter is not returned for the Cloud Assistant commands that you created.', example='true'),
      name?: string(name='Name', description='The name of the command.', example='testName'),
      parameterDefinitions?: {
        parameterDefinition?: [ 
        {
          defaultValue?: string(name='DefaultValue', description='The default value of the custom parameter.', example='https://aliyun-client-assist.oss-accelerate.aliyuncs.com/linux/aliyun_assist_latest.rpm'),
          description?: string(name='Description', description='The description of the custom parameter.', example='Download path of the Cloud Assistant Agent installation package.'),
          parameterName?: string(name='ParameterName', description='The name of the custom parameter.', example='DownloadUrl'),
          possibleValues?: {
            possibleValue?: [ string ](name='PossibleValue')
          }(name='PossibleValues', description='The valid values of the custom parameter of the enumeration type.'),
          required?: boolean(name='Required', description='Indicates whether the custom parameter is required. Valid values:

*   true
*   false

Default value: false.', example='true'),
        }
      ](name='ParameterDefinition')
      }(name='ParameterDefinitions', description='The custom parameters.'),
      parameterNames?: {
        parameterName?: [ string ](name='ParameterName')
      }(name='ParameterNames', description='The custom parameter names that are parsed from the command content specified when the command was created. If the custom parameter feature is disabled, an empty list is returned.'),
      provider?: string(name='Provider', description='The provider of the common command.', example='AlibabaCloud.ECS.GuestOS'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the command belongs.', example='rg-123******'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the command.', example='owner'),
          tagValue?: string(name='TagValue', description='The tag value of the command.', example='zhangsan'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the command.'),
      timeout?: long(name='Timeout', description='The timeout period. Unit: seconds.', example='3600'),
      type?: string(name='Type', description='The type of the command.', example='RunShellScript'),
      version?: int32(name='Version', description='The version of the common command. If multiple common commands from the same provider (`Provider`) belong to the same category and have the same name, these commands are different versions of the same command. This parameter is not returned for the Cloud Assistant commands that you created.', example='1'),
      workingDir?: string(name='WorkingDir', description='The execution path of the command.', example='/home/'),
    }
  ](name='Command')
  }(name='Commands', description='The queried commands.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  totalCount?: long(name='TotalCount', description='The total number of commands.', example='5'),
}

model DescribeCommandsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeCommandsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   If you specify only `Action` and `RegionId`, all available commands (`CommandId`) that you created in the specified region are queried by default.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeCommands operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeCommands operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries to return on each page and then use `PageNumber` to specify the number of the page to return. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  *
 */
async function describeCommands(request: DescribeCommandsRequest): DescribeCommandsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeCommands', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDedicatedHostAutoRenewRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostIds: string(name='DedicatedHostIds', description='The ID of the dedicated host. You can specify up to 100 subscription dedicated host IDs. Separate multiple IDs with commas (,).', example='dh-bp165p6xk2tlw61e****,dh-bp1f9vxmno****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the dedicated host resides.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeDedicatedHostAutoRenewResponseBody = {
  dedicatedHostRenewAttributes?: {
    dedicatedHostRenewAttribute?: [ 
    {
      autoRenewEnabled?: boolean(name='AutoRenewEnabled', description='Indicates whether auto-renewal is enabled. Valid values:

*   true
*   false', example='false'),
      autoRenewWithEcs?: string(name='AutoRenewWithEcs', description='Indicates whether the dedicated host is automatically renewed if a subscription ECS instance it hosts, after being automatically renewed, has a new expiration time that is later than that of the dedicated host. Valid values:

*   AutoRenewWithEcs: The dedicated host is automatically renewed along with the ECS instance.
*   StopRenewWithEcs: The dedicated host is not automatically renewed along with the ECS instance.', example='StopRenewWithEcs'),
      dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****'),
      duration?: int32(name='Duration', description='The auto-renewal period.', example='0'),
      periodUnit?: string(name='PeriodUnit', description='The unit of the auto-renewal duration. Valid values:

*   Week
*   Month', example='Month'),
      renewalStatus?: string(name='RenewalStatus', description='Indicates whether the subscription dedicated host is automatically renewed. Valid values:

*   AutoRenewal: The dedicated host is automatically renewed.
*   Normal: The dedicated host is not automatically renewed, but renewal notifications are sent.
*   NotRenewal: The dedicated host is not automatically renewed, and no expiration notification is sent. Alibaba Cloud sends only a non-renewal notice three days before the host expires. If the renewal status of a dedicated host is NotRenewal, you can change the value to Normal and then call [RenewDedicatedHosts](~~93287~~) to manually renew the dedicated host, or directly change the value to AutoRenewal.', example='Normal'),
    }
  ](name='DedicatedHostRenewAttribute')
  }(name='DedicatedHostRenewAttributes', description='The array that consists of dedicated host auto-renewal attributes.'),
  requestId?: string(name='RequestId', description='The request ID.', example='04F0F334-1335-436C-A1D7-6C044FE73368'),
}

model DescribeDedicatedHostAutoRenewResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDedicatedHostAutoRenewResponseBody(name='body'),
}

async function describeDedicatedHostAutoRenew(request: DescribeDedicatedHostAutoRenewRequest): DescribeDedicatedHostAutoRenewResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDedicatedHostAutoRenew', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDedicatedHostClustersRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostClusterIds?: string(name='DedicatedHostClusterIds', description='The IDs of dedicated host clusters. The value can be a JSON array that consists of up to 100 dedicated host cluster IDs in the format of `["dc-xxxxxxxxx", "dc-yyyyyyyyy", ... "dc-zzzzzzzzz"]`. Separate the IDs with commas (,).', example='["dc-bp12wlf6am0vz9v2****", "dc-bp12wlf6am0vz9v3****"]', position='Query'),
  dedicatedHostClusterName?: string(name='DedicatedHostClusterName', description='The name of the dedicated host cluster.', example='myDDHCluster', position='Query'),
  lockReason?: string(name='LockReason', description='>  This parameter is unavailable for use.', example='null', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='5', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the dedicated host cluster belongs. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='>  This parameter is unavailable for use.', example='null', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the dedicated host cluster. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.

If you specify a single tag to query resources, up to 1,000 resources to which the tag is added are returned. If you specify multiple tags to query resources, up to 1,000 resources to which all specified tags are added are returned. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the dedicated host cluster. Valid values of N: 1 to 20. The tag value cannot be an empty string. The tag value can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:` or `aliyun`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the dedicated host cluster.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the dedicated host cluster. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-f', position='Query'),
}

model DescribeDedicatedHostClustersResponseBody = {
  dedicatedHostClusters?: {
    dedicatedHostCluster?: [ 
    {
      dedicatedHostClusterCapacity?: {
        availableInstanceTypes?: {
          availableInstanceType?: [ 
          {
            availableInstanceCapacity?: int32(name='AvailableInstanceCapacity', description='The available capacity of the ECS instance type.', example='0'),
            instanceType?: string(name='InstanceType', description='The ECS instance type.', example='ecs.c6.26xlarge'),
          }
        ](name='AvailableInstanceType')
        }(name='AvailableInstanceTypes', description='The available capacity of the Elastic Compute Service (ECS) instance types in the dedicated host cluster.'),
        availableMemory?: int32(name='AvailableMemory', description='The size of available memory. Unit: GiB', example='4'),
        availableVcpus?: int32(name='AvailableVcpus', description='The number of available vCPUs.', example='2'),
        localStorageCapacities?: {
          localStorageCapacity?: [ 
          {
            availableDisk?: int32(name='AvailableDisk', description='The available capacity of the local disk. Unit: GiB', example='20'),
            dataDiskCategory?: string(name='DataDiskCategory', description='The category of data disks. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: Enterprise SSD (ESSD)', example='cloud'),
            totalDisk?: int32(name='TotalDisk', description='The total capacity of the local disk. Unit: GiB', example='40'),
          }
        ](name='LocalStorageCapacity')
        }(name='LocalStorageCapacities', description='The local storage capacity.'),
        totalMemory?: int32(name='TotalMemory', description='The total memory size. Unit: GiB', example='8'),
        totalVcpus?: int32(name='TotalVcpus', description='The total number of vCPUs.', example='4'),
      }(name='DedicatedHostClusterCapacity', description='The capacity of the dedicated host cluster.'),
      dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp12wlf6am0vz9v2****'),
      dedicatedHostClusterName?: string(name='DedicatedHostClusterName', description='The name of the dedicated host cluster.', example='myDDHCluster'),
      dedicatedHostIds?: {
        dedicatedHostId?: [ string ](name='DedicatedHostId')
      }(name='DedicatedHostIds', description='The IDs of dedicated hosts in the dedicated host cluster.'),
      description?: string(name='Description', description='The description of the dedicated host cluster.', example='This-is-my-DDHCluster'),
      regionId?: string(name='RegionId', description='The region ID of the dedicated host cluster.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the dedicated host cluster belongs.', example='rg-bp67acfmxazb4p****'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the dedicated host cluster.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the dedicated host cluster.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the dedicated host cluster.'),
      zoneId?: string(name='ZoneId', description='The zone ID of the dedicated host cluster.', example='cn-hangzhou-f'),
    }
  ](name='DedicatedHostCluster')
  }(name='DedicatedHostClusters', description='Details about the dedicated host clusters.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='5'),
  requestId?: string(name='RequestId', description='The request ID.', example='214A2187-B06F-4E49-A081-4D053466A8C7'),
  totalCount?: int32(name='TotalCount', description='The total number of dedicated host clusters.', example='2'),
}

model DescribeDedicatedHostClustersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDedicatedHostClustersResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can specify multiple request parameters to filter query results. Specified request parameters have logical AND relations. Only the specified parameters are included in the filter conditions. However, if `DedicatedHostClusterIds` is set to an empty JSON array (`[]`), this parameter is regarded as a valid filter condition and an empty result is returned.
  *
 */
async function describeDedicatedHostClusters(request: DescribeDedicatedHostClustersRequest): DescribeDedicatedHostClustersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDedicatedHostClusters', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDedicatedHostTypesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostType?: string(name='DedicatedHostType', description='The dedicated host type. For more information, see [Dedicated host types](~~68564~~).', example='ddh.sn1ne', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  supportedInstanceTypeFamily?: string(name='SupportedInstanceTypeFamily', description='The ECS instance family supported by the dedicated host type.', example='ecs.sn1ne', position='Query'),
}

model DescribeDedicatedHostTypesResponseBody = {
  dedicatedHostTypes?: {
    dedicatedHostType?: [ 
    {
      cores?: int32(name='Cores', description='The number of cores per physical CPU.', example='2'),
      cpuOverCommitRatioRange?: string(name='CpuOverCommitRatioRange', description='The supported CPU overcommit ratio range.', example='1-5'),
      dedicatedHostType?: string(name='DedicatedHostType', description='The dedicated host type.', example='ddh.sn1ne'),
      GPUSpec?: string(name='GPUSpec', description='The GPU model.', example='gpu'),
      localStorageAmount?: int32(name='LocalStorageAmount', description='The number of local disks on a dedicated host.', example='0'),
      localStorageCapacity?: long(name='LocalStorageCapacity', description='The capacity of a local disk. Unit: GiB.', example='0'),
      localStorageCategory?: string(name='LocalStorageCategory', description='The category of local disks.', example='local'),
      memorySize?: float(name='MemorySize', description='The memory size. Unit: GiB.', example='112.0'),
      physicalGpus?: int32(name='PhysicalGpus', description='The number of physical GPUs.', example='2'),
      sockets?: int32(name='Sockets', description='The number of physical CPUs.', example='2'),
      supportCpuOverCommitRatio?: boolean(name='SupportCpuOverCommitRatio', description='Indicates whether the CPU overcommit ratio settings are supported.', example='true'),
      supportedInstanceTypeFamilies?: {
        supportedInstanceTypeFamily?: [ string ](name='SupportedInstanceTypeFamily')
      }(name='SupportedInstanceTypeFamilies', description='The ECS instance families supported by the dedicated host type.'),
      supportedInstanceTypesList?: {
        supportedInstanceTypesList?: [ string ](name='SupportedInstanceTypesList')
      }(name='SupportedInstanceTypesList', description='The ECS instance types supported by the dedicated host type.'),
      totalVcpus?: int32(name='TotalVcpus', description='The total number of vCPUs.', example='56'),
      totalVgpus?: int32(name='TotalVgpus', description='The total number of vGPUs.', example='10'),
    }
  ](name='DedicatedHostType')
  }(name='DedicatedHostTypes', description='Details about the dedicated host types.'),
  requestId?: string(name='RequestId', description='The request ID.', example='5FE5FF06-3A33-4658-8495-6445FC54E327'),
}

model DescribeDedicatedHostTypesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDedicatedHostTypesResponseBody(name='body'),
}

async function describeDedicatedHostTypes(request: DescribeDedicatedHostTypesRequest): DescribeDedicatedHostTypesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDedicatedHostTypes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDedicatedHostsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp12wlf6am0vz9v2****', position='Query'),
  dedicatedHostIds?: string(name='DedicatedHostIds', description='The IDs of dedicated hosts. You can specify up to 100 dedicated host IDs in a single request. Separate the IDs with commas (,).', example='["dh-bp165p6xk2tlw61e****", "dh-bp1f9vxmno7emy96****"]', position='Query'),
  dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host.', example='MyDDHTestName', position='Query'),
  dedicatedHostType?: string(name='DedicatedHostType', description='The dedicated host type. You can call the [DescribeDedicatedHostTypes](~~134240~~) operation to query the most recent list of dedicated host types.', example='ddh.g5', position='Query'),
  lockReason?: string(name='LockReason', description='The reason why the dedicated host is locked. Valid values:

*   financial: The dedicated host is locked due to overdue payments.
*   security: The dedicated host is locked due to security reasons.', example='financial', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. If you specify this parameter, both MaxResults and NextToken are used for a paged query.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='e71d8a535bd9cc11', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of entries per page.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the dedicated host belongs. When this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

> Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-aek3b6jzp66****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  socketDetails?: string(name='SocketDetails', description='Specifies whether to display socket information. Valid values:

*   true
*   false', example='true', position='Query'),
  status?: string(name='Status', description='The service state of the dedicated host. Valid values:

*   Available: The dedicated host is running normally.
*   UnderAssessment: The dedicated host is available but has potential risks that may cause the ECS instances on the dedicated host to fail.
*   PermanentFailure: The dedicated host encounters permanent failures and is unavailable.
*   TempUnavailable: The dedicated host is temporarily unavailable.
*   Redeploying: The dedicated host is being restored.

Default value: Available.', example='Available', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the dedicated host. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the dedicated host. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the dedicated host.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the dedicated host. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-g', position='Query'),
}

model DescribeDedicatedHostsResponseBody = {
  dedicatedHosts?: {
    dedicatedHost?: [ 
    {
      actionOnMaintenance?: string(name='ActionOnMaintenance', description='The policy used to migrate the ECS instances deployed on the dedicated host when the dedicated host fails. Valid values:

*   Migrate: The instances are migrated to another physical machine. Instances that are not in the Stopped state when the dedicated host fails are restarted.
*   Stop: The instances are stopped. If the dedicated host cannot be repaired, the instances are migrated to another physical machine and then restarted.

If the dedicated host has cloud disks attached, the default value is Migrate. If the dedicated host has local disks attached, the default value is Stop.', example='Migrate'),
      autoPlacement?: string(name='AutoPlacement', description='Indicates whether the dedicated host is added to the resource pool for automatic deployment. Valid values:

*   on: The dedicated host is added to the resource pool for automatic deployment.
*   off: The dedicated host is not added to the resource pool for automatic deployment.

For information about automatic deployment, see the "Automatic deployment" section in [Functions and features](~~118938~~).', example='on'),
      autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the dedicated host. The time follows the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mmZ` format. The time is displayed in UTC.', example='2017-01-01T12:00Z'),
      capacity?: {
        availableLocalStorage?: int32(name='AvailableLocalStorage', description='The amount of available space on the local disks. Unit: GiB', example='65'),
        availableMemory?: float(name='AvailableMemory', description='The amount of available memory. Unit: GiB.', example='25'),
        availableVcpus?: int32(name='AvailableVcpus', description='The number of available vCPUs.', example='5'),
        availableVgpus?: int32(name='AvailableVgpus', description='The number of available vGPUs.', example='2'),
        localStorageCategory?: string(name='LocalStorageCategory', description='The category of local disks.', example='i2'),
        socketCapacities?: {
          socketCapacity?: [ 
          {
            availableMemory?: float(name='AvailableMemory', description='The amount of available memory. Unit: GiB.', example='65'),
            availableVcpu?: int32(name='AvailableVcpu', description='The number of available vCPUs.', example='64'),
            socketId?: int32(name='SocketId', description='The socket ID.', example='1'),
            totalMemory?: float(name='TotalMemory', description='The total amount of memory. Unit: GiB.', example='128'),
            totalVcpu?: int32(name='TotalVcpu', description='The total number of vCPUs.', example='128'),
          }
        ](name='SocketCapacity')
        }(name='SocketCapacities', description='The socket capacities.'),
        totalLocalStorage?: int32(name='TotalLocalStorage', description='The total capacity of local disks. Unit: GiB.', example='512'),
        totalMemory?: float(name='TotalMemory', description='The total amount of memory. Unit: GiB.', example='1024'),
        totalVcpus?: int32(name='TotalVcpus', description='The total number of vCPUs.', example='56'),
        totalVgpus?: int32(name='TotalVgpus', description='The total number of vGPUs.', example='10'),
      }(name='Capacity', description='The performance specifications of the dedicated host.'),
      chargeType?: string(name='ChargeType', description='The billing method of the dedicated host.', example='Prepaid'),
      cores?: int32(name='Cores', description='The number of physical cores per CPU.', example='3'),
      cpuOverCommitRatio?: float(name='CpuOverCommitRatio', description='The CPU overcommit ratio.Valid values: 1 to 5.', example='1'),
      creationTime?: string(name='CreationTime', description='The time when the dedicated host was created. The time follows the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mmZ` format. The time is displayed in UTC.', example='2018-01-01T12:00Z'),
      dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster to which the dedicated host belongs.', example='dc-bp12wlf6am0vz9v2****'),
      dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****'),
      dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host.', example='MyDDHTestName'),
      dedicatedHostOwnerId?: long(name='DedicatedHostOwnerId', description='The ID of the dedicated host owner.', example='100************7'),
      dedicatedHostType?: string(name='DedicatedHostType', description='The type of the dedicated host.', example='ddh.g5'),
      description?: string(name='Description', description='The description of the dedicated host.', example='this-is-my-DDH'),
      expiredTime?: string(name='ExpiredTime', description='The expiration time of the subscription dedicated host. The time follows the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mmZ` format. The time is displayed in UTC.', example='2019-01-01T12:00Z'),
      GPUSpec?: string(name='GPUSpec', description='The GPU model.', example='gpu'),
      hostDetailInfo?: {
        serialNumber?: string(name='SerialNumber', description='This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='null'),
      }(name='HostDetailInfo', description='This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.'),
      instances?: {
        instance?: [ 
        {
          instanceId?: string(name='InstanceId', description='The ID of the ECS instance.', example='i-bp14ot0ykf8w13a1****'),
          instanceOwnerId?: long(name='InstanceOwnerId', description='The ID of the ECS instance owner.', example='128************0'),
          instanceType?: string(name='InstanceType', description='The instance type of the ECS instance that was created on the dedicated host.', example='ecs.g5.large'),
          socketId?: string(name='SocketId', description='The ID of the socket to which the ECS instance belongs.', example='0,1'),
        }
      ](name='Instance')
      }(name='Instances', description='The ECS instances that were created on the dedicated host.'),
      machineId?: string(name='MachineId', description='The machine code of the dedicated host.', example='12aaa123456ff19dec12345d3026e****'),
      networkAttributes?: {
        slbUdpTimeout?: int32(name='SlbUdpTimeout', description='The timeout period of the UDP session that is established between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Only 60 is returned.', example='60'),
        udpTimeout?: int32(name='UdpTimeout', description='The timeout period of the UDP session that is established between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Only 60 is returned.', example='60'),
      }(name='NetworkAttributes', description='The network attributes of the dedicated host.'),
      operationLocks?: {
        operationLock?: [ 
        {
          lockReason?: string(name='LockReason', description='The reason why the dedicated host was locked. Valid values:

*   financial: The dedicated host was locked due to overdue payments.
*   security: The dedicated host was locked due to security reasons.', example='financial'),
        }
      ](name='OperationLock')
      }(name='OperationLocks', description='The reasons why the resources of the dedicated host were locked.'),
      physicalGpus?: int32(name='PhysicalGpus', description='The number of physical GPUs.', example='10'),
      regionId?: string(name='RegionId', description='The region ID of the dedicated host.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the dedicated host belongs.', example='rg-aek3b6jzp66****'),
      saleCycle?: string(name='SaleCycle', description='The unit of the subscription duration. Valid values:

*   Month
*   Year', example='Month'),
      schedulerOptions_managedPrivateSpaceId?: string(name='SchedulerOptions.ManagedPrivateSpaceId'),
      sockets?: int32(name='Sockets', description='The number of physical CPUs.', example='5'),
      status?: string(name='Status', description='The status of the dedicated host. Valid values:

*   Available: The dedicated host is running as expected.
*   UnderAssessment: The dedicated host is available but has potential risks that may cause the ECS instances on the dedicated host to fail.
*   PermanentFailure: The dedicated host has permanent failures and is unavailable.', example='Available'),
      supportedCustomInstanceTypeFamilies?: {
        supportedCustomInstanceTypeFamily?: [ string ](name='SupportedCustomInstanceTypeFamily')
      }(name='SupportedCustomInstanceTypeFamilies', description='The custom ECS instance families that are supported by the dedicated host.'),
      supportedInstanceTypeFamilies?: {
        supportedInstanceTypeFamily?: [ string ](name='SupportedInstanceTypeFamily')
      }(name='SupportedInstanceTypeFamilies', description='The ECS instance families that are supported by the dedicated host.'),
      supportedInstanceTypesList?: {
        supportedInstanceTypesList?: [ string ](name='SupportedInstanceTypesList')
      }(name='SupportedInstanceTypesList', description='The ECS instance types that are supported by the dedicated host.'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the dedicated host.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the dedicated host.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the dedicated host.'),
      zoneId?: string(name='ZoneId', description='The zone ID of the dedicated host.', example='cn-hangzhou-g'),
    }
  ](name='DedicatedHost')
  }(name='DedicatedHosts', description='Details about the dedicated hosts.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists. If the return value of this parameter is empty when you specify MaxResults and NextToken for a paged query, no more results are to be returned.', example='e71d8a535bd9cc11'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='5'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='7654525A-9964-4ABB-8BCD-98F8835E809A'),
  totalCount?: int32(name='TotalCount', description='The total number of dedicated hosts.', example='3'),
}

model DescribeDedicatedHostsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDedicatedHostsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can use one of the following methods to query the information about dedicated hosts:
  * *   Specify `DedicatedHostIds` to query the details of specified dedicated hosts.
  * *   Specify `DedicatedHostClusterId` to query the details of dedicated hosts in a dedicated host cluster.
  *
 */
async function describeDedicatedHosts(request: DescribeDedicatedHostsRequest): DescribeDedicatedHostsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDedicatedHosts', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDemandsRequest {
  demandId?: string(name='DemandId', description='The ID of the demand. If this parameter is specified, other optional request parameters are ignored.', example='ed-bp11n21kq00sl71p****', position='Query'),
  demandStatus?: [ string ](name='DemandStatus', description='The status of the demand or filed resources. Valid values:

*   Creating: The demand is being created.
*   Active: The filed resources are being supplied.
*   Expired: The demand has expired.
*   Finished: The filed resources are consumed.
*   Refused: The demand is rejected. To view the reason for rejection, see the `Comment` parameter in the response.
*   Cancelled: The demand is canceled.', example='Active', position='Query'),
  demandType?: string(name='DemandType', description='The source of the instance. Valid values:

*   Custom: filed on your own.
*   System (default): filed by Alibaba Cloud.', example='Custom', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values: Valid values:

*   true: performs only a dry run. The system checks whether your AccessKey pair is valid, whether RAM users are granted required permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
*   false (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PostPaid: pay-as-you-go.
*   PrePaid: subscription.', example='PostPaid', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.g6.xlarge', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family of the instance.', example='ecs.g6', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='> This parameter is not publicly available.', example='TestKey'),
      value?: string(name='Value', description='> This parameter is not publicly available.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the resource. You can call the [DescribeZones](~~25610~~) operation to query the most recent region list.', example='cn-hangzhou-g', position='Query'),
}

model DescribeDemandsResponseBody = {
  demands?: {
    demand?: [ 
    {
      availableAmount?: int32(name='AvailableAmount', description='The number of available instances.', example='10'),
      comment?: string(name='Comment', description='The feedback on the rejected demands.', example='test-for-comment'),
      deliveringAmount?: int32(name='DeliveringAmount', description='The number of instances to be delivered.', example='20'),
      demandDescription?: string(name='DemandDescription', description='The description of the demand.', example='test-DemandDescription'),
      demandId?: string(name='DemandId', description='The ID of the demand.', example='ed-bp11n21kq00sl71p****'),
      demandName?: string(name='DemandName', description='The name of the demand.', example='k8s-node-demand'),
      demandStatus?: string(name='DemandStatus', description='The status of the demand or filed resources. Valid values:

*   Creating: The demand is being created.
*   Active: The filed resources are being supplied.
*   Expired: The demand has expired.
*   Finished: The filed resources are consumed.
*   Refused: The demand is rejected. To view the reason for rejection, see the `Comment` parameter.
*   Cancelled: The demand is canceled. After the demand is canceled, the delivery status of the resources becomes invalid.', example='Active'),
      demandTime?: string(name='DemandTime', description='The time when the demand was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-02-26T12:00:00Z'),
      endTime?: string(name='EndTime', description='The expected end time for the purchase of the filed resources. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-03-03T15:00:00Z'),
      instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the filed resources. Valid values:

*   Prepaid: subscription.
*   Postpaid: pay-as-you-go.', example='Prepaid'),
      instanceType?: string(name='InstanceType', description='The instance type of the filed instance.', example='ecs.g6.xlarge'),
      instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family of the filed instance.', example='ecs.g6'),
      period?: int32(name='Period', description='The usage duration of the filed resources.', example='3'),
      periodUnit?: string(name='PeriodUnit', description='The unit of the usage duration of the filed resources. Valid values:

*   Hour
*   Day
*
*   Month', example='Month'),
      startTime?: string(name='StartTime', description='The expected start time for the purchase of the filed resources. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-02-27T12:00:00Z'),
      supplyInfos?: {
        supplyInfo?: [ 
        {
          amount?: int32(name='Amount', description='The number of delivered instances.', example='30'),
          privatePoolId?: string(name='PrivatePoolId', description='需求单对应的私有池ID。', example='crp-bp1fv8sbhelbzjwx****'),
          supplyEndTime?: string(name='SupplyEndTime', description='The end of the time range during which the filed resources are delivered and available. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-03-03T15:00:00Z'),
          supplyStartTime?: string(name='SupplyStartTime', description='The beginning of the time range during which the filed resources are delivered and available. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-03-01T14:00:00Z'),
          supplyStatus?: string(name='SupplyStatus', description='The delivery status of the filed resource. Valid values:

*   Delivered: The filed resource is delivered.
*   Delivering: The filed resource is being delivered.', example='Delivering'),
        }
      ](name='SupplyInfo')
      }(name='SupplyInfos', description='The delivery status of the filed resources.'),
      totalAmount?: int32(name='TotalAmount', description='The number of filed instances.', example='50'),
      usedAmount?: int32(name='UsedAmount', description='The number of consumed instances.', example='20'),
      zoneId?: string(name='ZoneId', description='The ID of the zone where the filed resource resides.', example='cn-hangzhou-g'),
    }
  ](name='Demand')
  }(name='Demands', description='The demands in the region.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The number of queried demands.', example='6'),
}

model DescribeDemandsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDemandsResponseBody(name='body'),
}

/**
  * @deprecated
  * You can call this operation to query the details of resources that you filed with Alibaba Cloud, including the types, delivery status, and consumption details of the resources.
  * By default, the demands for I/O optimized instances of the Virtual Private Cloud (VPC) type are queried.
  * For information about how to create (CreateDemand), modify (ModifyDemand), and delete (DeleteDemand) demands for ECS resources, contact your account manager.
  *
 */
// Deprecated
async function describeDemands(request: DescribeDemandsRequest): DescribeDemandsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDemands', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDeploymentSetSupportedInstanceTypeFamilyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  strategy?: string(name='Strategy', description='The deployment strategy. Valid values:

*   Availability: high availability strategy
*   AvailabilityGroup: high availability group strategy
*   LowLatency: low latency strategy

Default value: Availability.', example='Availability', position='Query'),
}

model DescribeDeploymentSetSupportedInstanceTypeFamilyResponseBody = {
  instanceTypeFamilies?: string(name='InstanceTypeFamilies', description='The instance families that support deployment sets.', example='ecs.i2g,ecs.i1,ecs.i2ne,ecs.i2gne'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B7DB-A3DC7DE1****'),
}

model DescribeDeploymentSetSupportedInstanceTypeFamilyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDeploymentSetSupportedInstanceTypeFamilyResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * For information about instance families, see [Overview of instance families](~~25378~~).
  *
 */
async function describeDeploymentSetSupportedInstanceTypeFamily(request: DescribeDeploymentSetSupportedInstanceTypeFamilyRequest): DescribeDeploymentSetSupportedInstanceTypeFamilyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDeploymentSetSupportedInstanceTypeFamily', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDeploymentSetsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  deploymentSetIds?: string(name='DeploymentSetIds', description='The IDs of deployment sets. The value can be a JSON array that consists of up to 100 deployment set IDs in the format of `["ds-xxxxxxxxx", "ds-yyyyyyyyy", … "ds-zzzzzzzzz"]`. Separate multiple deployment set IDs with commas (,).', example='["ds-bp67acfmxazb4ph****", "ds-bp67acfmxazb4pi****", … "ds-bp67acfmxazb4pj****"]', position='Query'),
  deploymentSetName?: string(name='DeploymentSetName', description='The name of the deployment set. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testDeploymentSetName', position='Query'),
  domain?: string(name='Domain', description='> The parameter is deprecated.', example='null', position='Query'),
  granularity?: string(name='Granularity', description='> The parameter is deprecated.', example='null', position='Query'),
  networkType?: string(name='NetworkType', description='> The parameter is deprecated.', example='null', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 50.

Default value: 10.', example='10', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the deployment set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  strategy?: string(name='Strategy', description='The deployment strategy. Valid values:

*   Availability: high availability strategy.
*   AvailabilityGroup: high availability group strategy.', example='Availability', position='Query'),
}

model DescribeDeploymentSetsResponseBody = {
  deploymentSets?: {
    deploymentSet?: [ 
    {
      capacities?: {
        capacity?: [ 
        {
          availableAmount?: int32(name='AvailableAmount', description='The number of ECS instances that can be added to the deployment set within the zone.', example='18'),
          usedAmount?: int32(name='UsedAmount', description='The number of ECS instances that belong to the zone in the deployment set.', example='2'),
          zoneId?: string(name='ZoneId', description='The ID of the zone. Only the zone IDs of existing ECS instances in the deployment set are returned.', example='cn-hangzhou-i'),
        }
      ](name='Capacity')
      }(name='Capacities', description='Details of the capacities of the deployment set. This parameter is valid only when the deployment set contains Elastic Compute Service (ECS) instances. The value contains the capacities of the deployment set in different zones.'),
      creationTime?: string(name='CreationTime', description='The time when the deployment set was created.', example='2021-12-07T06:01:46Z'),
      deploymentSetDescription?: string(name='DeploymentSetDescription', description='The description of the deployment set.', example='testDeploymentSetDescription'),
      deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set.', example='ds-bp67acfmxazb4ph****'),
      deploymentSetName?: string(name='DeploymentSetName', description='The name of the deployment set.', example='testDeploymentSetName'),
      deploymentStrategy?: string(name='DeploymentStrategy', description='The deployment strategy. The value of this response parameter is that of the `Strategy` request parameter.', example='Availability'),
      domain?: string(name='Domain', description='The deployment domain.', example='default'),
      granularity?: string(name='Granularity', description='The deployment granularity.', example='host'),
      groupCount?: int32(name='GroupCount', description='The number of deployment set groups in the deployment set.

>  This parameter is valid only when the Strategy request parameter is set to AvailabilityGroup.', example='3'),
      instanceAmount?: int32(name='InstanceAmount', description='The number of instances in the deployment set.', example='3'),
      instanceIds?: {
        instanceId?: [ string ](name='InstanceId')
      }(name='InstanceIds', description='The IDs of the instances in the deployment set.'),
      strategy?: string(name='Strategy', description='The deployment strategy.', example='LooseDispersion'),
    }
  ](name='DeploymentSet')
  }(name='DeploymentSets', description='Details about the deployment sets.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='1'),
  regionId?: string(name='RegionId', description='The region ID of the deployment set.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of deployment sets returned.', example='1'),
}

model DescribeDeploymentSetsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDeploymentSetsResponseBody(name='body'),
}

async function describeDeploymentSets(request: DescribeDeploymentSetsRequest): DescribeDeploymentSetsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDeploymentSets', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDiagnosticMetricSetsRequest {
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return on each page. Maximum value: 100.

Default value:

*   If this parameter is left empty, the default value is 10.
*   If this parameter is set to a value greater than 100, the default value is 100.', example='10', minimum=1, maximum=100, position='Query'),
  metricSetIds?: [ string ](name='MetricSetIds', description='The ID of diagnostic metric set N.', position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the `NextToken` value returned in the last call to the DescribeDiagnosticMetricSets operation. Leave this parameter empty the first time you call this operation.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the diagnostic metric set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceType?: string(name='ResourceType', description='The resource type supported by the diagnostic metric set.', example='instance', position='Query'),
  type?: string(name='Type', description='The type of the diagnostic metric set. Valid values:

*   User: user-defined diagnostic metric set
*   Common: common diagnostic metric set

Default value: user.', example='User', position='Query'),
}

model DescribeDiagnosticMetricSetsResponseBody = {
  metricSets?: [ 
    {
      description?: string(name='Description', description='The description of the diagnostic metric set.', example='connection issue diagnostics'),
      metricIds?: [ string ](name='MetricIds', description='The IDs of the diagnostic metrics.'),
      metricSetId?: string(name='MetricSetId', description='The ID of the diagnostic metric set.', example='dms-bp17p0qwtr72zmu*****'),
      metricSetName?: string(name='MetricSetName', description='The name of the diagnostic metric set.', example='connection issue diagnostics'),
      resourceType?: string(name='ResourceType', description='The resource type supported by the diagnostic metric set.', example='instance'),
      type?: string(name='Type', description='The type of the diagnostic metric set. Valid values:

*   User: user-defined diagnostic metric set
*   Common: common diagnostic metric set', example='User'),
    }
  ](name='MetricSets', description='A collection of diagnostic metrics.'),
  nextToken?: string(name='NextToken', description='The query token returned in this call.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DescribeDiagnosticMetricSetsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDiagnosticMetricSetsResponseBody(name='body'),
}

async function describeDiagnosticMetricSets(request: DescribeDiagnosticMetricSetsRequest): DescribeDiagnosticMetricSetsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDiagnosticMetricSets', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDiagnosticMetricsRequest {
  body?: string(name='body', position='Host'),
  maxResults?: int32(name='MaxResults', description='The ID of the request.', example='10', minimum=1, maximum=100, position='Query'),
  metricIds?: [ string ](name='MetricIds', description='The ID of diagnostic metric.', position='Query'),
  nextToken?: string(name='NextToken', description='The maximum number of entries to return on each page. Maximum value: 100.

Default value:

*   If this parameter is left empty, the default value is 10.
*   If this parameter is set to a value greater than 100, the default value is 100.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The IDs of diagnostic metrics.', example='cn-hangzhou', position='Query'),
  resourceType?: string(name='ResourceType', description='The query token. Set the value to the `NextToken` value returned in the last call to the DescribeDiagnosticMetrics operation. Leave this parameter empty the first time you call this operation.', example='instance', position='Query'),
}

model DescribeDiagnosticMetricsResponseBody = {
  metrics?: [ 
    {
      description?: string(name='Description', description='CPU diagnostic', example='The resource type supported by the diagnostic metric.'),
      guestMetric?: boolean(name='GuestMetric', description='The operating system type supported by the diagnostic metric. Valid values:

*   Windows
*   Linux
*   All: both Windows and Linux', example='true'),
      metricCategory?: string(name='MetricCategory', description='The description of the diagnostic metric.', example='CPU'),
      metricId?: string(name='MetricId', description='The name of the diagnostic metric.', example='GuestOS.WinFirewall'),
      metricName?: string(name='MetricName', description='CPU diagnostic', example='The category of the diagnostic metric.'),
      resourceType?: string(name='ResourceType', description='Indicates whether the diagnostic metric needs to be assessed by running a Cloud Assistant command in a guest operating system.', example='instance'),
      supportedOperatingSystem?: string(name='SupportedOperatingSystem', example='ALL'),
    }
  ](name='Metrics', description='The ID of the diagnostic metric.'),
  nextToken?: string(name='NextToken', description='The list of diagnostic metrics.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The query token returned in this call.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DescribeDiagnosticMetricsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDiagnosticMetricsResponseBody(name='body'),
}

async function describeDiagnosticMetrics(request: DescribeDiagnosticMetricsRequest): DescribeDiagnosticMetricsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDiagnosticMetrics', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDiagnosticReportAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  regionId: string(name='RegionId', description='The region ID of the diagnostic report. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reportId: string(name='ReportId', description='The ID of the diagnostic report.', example='dr-i-uf6i0tv2refv8wz*****', position='Query'),
}

model DescribeDiagnosticReportAttributesResponseBody = {
  attributes?: string(name='Attributes', description='The extended attributes of the diagnostic report.', example='{
    "OfflineDiagReportStatus":"CONFIRMED"
}'),
  creationTime?: string(name='CreationTime', description='The time when the diagnostic report was created.', example='2022-07-11T12:00:00Z'),
  endTime?: string(name='EndTime', description='The end of the reporting period of the diagnostic report. The value is the EndTime value that was passed in when you called the [CreateDiagnosticReport](~~442490~~) operation to create the diagnostic report.', example='2022-07-11T14:00:00Z'),
  finishedTime?: string(name='FinishedTime', description='The time when the diagnostic report was complete.', example='2022-07-11T14:00:00Z'),
  metricResults?: {
    metricResult?: [ 
    {
      issues?: {
        issue?: [ 
        {
          additional?: string(name='Additional', description='The additional data about the diagnosed issue. The value is a JSON string.', example='{
  "TotalPercent": 95,
  "TopUtilizationProcesses": [
    {
      "Pid": "1223",
      "CommandName": "/usr/bin/mem.py",
      "PhysicalMemoryPercent": 50
    }
  ]
}'),
          issueId?: string(name='IssueId', description='The ID of the diagnosed issue, which is the unique identifier of the issue.', example='GuestOS.CPU.HighUtiliz*****'),
          occurrenceTime?: string(name='OccurrenceTime', description='The time when the diagnosed issue occurred.', example='2022-07-11T14:00:00Z'),
          severity?: string(name='Severity', description='The severity level of the diagnosed issue. Valid values:

*   Info: Diagnostic information was recorded and may be related to exceptions.
*   Warn: Diagnostic information was recorded and may indicate potential exceptions.
*   Critical: Critical exceptions were detected.', example='Info'),
        }
      ](name='Issue')
      }(name='Issues', description='The diagnosed issues.'),
      metricCategory?: string(name='MetricCategory', description='The category of the diagnostic metric.', example='CPU'),
      metricId?: string(name='MetricId', description='The ID of the diagnostic metric.', example='GuestOS.WinFirewall'),
      severity?: string(name='Severity', description='The severity level of the diagnostic metric. Valid values:

*   Unknown: The diagnostic has not started, failed to run, or exited unexpectedly without a diagnosis.
*   Normal: No exceptions were detected.
*   Info: Diagnostic information was recorded and may be related to exceptions.
*   NotSupport: The version of the guest operating system does support diagnosing the metric.
*   Warn: Diagnostic information was recorded and may indicate potential exceptions.
*   Critical: Critical exceptions were detected.', example='Normal'),
      status?: string(name='Status', description='The state of the diagnostic metric. Valid values:

*   InProgress.
*   Finished.
*   Failed.', example='Finished'),
    }
  ](name='MetricResult')
  }(name='MetricResults', description='The results of all diagnostic metrics in the diagnostic metric set.'),
  metricSetId?: string(name='MetricSetId', description='The ID of the diagnostic metric set.', example='dms-bp17p0qwtr72zmu*****'),
  reportId?: string(name='ReportId', description='The ID of the diagnostic report, which is the unique identifier of the report.', example='dr-uf6i0tv2refv8wz*****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  resourceId?: string(name='ResourceId', description='The resource ID.', example='i-uf6i0tv2refv8wz*****'),
  resourceType?: string(name='ResourceType', description='The type of the resource. ResourceType can only be set to instance, which indicates that only instances are supported.', example='instance'),
  severity?: string(name='Severity', description='The severity level of the diagnostic report. The value of this parameter is determined by the highest severity level of all diagnostic metrics. Valid values:

*   Unknown: The diagnostic has not started, failed to run, or exited unexpectedly without a diagnosis.
*   Normal: No exceptions were detected.
*   Info: Diagnostic information was recorded and may be related to exceptions.
*   Warn: Diagnostic information was recorded and may indicate potential exceptions.
*   Critical: Critical exceptions were detected.', example='Normal'),
  startTime?: string(name='StartTime', description='The beginning of the reporting period of the diagnostic report. The value is the StartTime value that was passed in when you called the [CreateDiagnosticReport](~~442490~~) operation to create the diagnostic report.', example='2022-07-11T12:00:00Z'),
  status?: string(name='Status', description='The state of the diagnostic report. Valid values:

*   InProgress: The diagnostic is in progress.
*   Finished: The diagnostic is complete.
*   Failed: The diagnostic failed.', example='Finished'),
}

model DescribeDiagnosticReportAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDiagnosticReportAttributesResponseBody(name='body'),
}

async function describeDiagnosticReportAttributes(request: DescribeDiagnosticReportAttributesRequest): DescribeDiagnosticReportAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDiagnosticReportAttributes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDiagnosticReportsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return on each page. Maximum value: 100.

Default value:

*   If this parameter is left empty, the default value is 10.
*   If this parameter is set to a value greater than 100, the default value is 100.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the `NextToken` value returned in the last call to the DescribeDiagnosticReports operation. Leave this parameter empty the first time you call this operation.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the diagnostic report. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reportIds?: [ string ](name='ReportIds', description='The IDs of diagnostic reports. You can specify up to 100 report IDs.', position='Query'),
  resourceIds?: [ string ](name='ResourceIds', description='The IDs of resources. You can specify up to 100 resource IDs.', position='Query'),
  severity?: string(name='Severity', description='The severity level of the diagnostic report. Valid values:

* Unknown: The diagnostic has not started, failed to run, or exited unexpectedly without a diagnosis.
* Normal: No exceptions are detected.
* Info: Diagnostic information is recorded and may be related to exceptions.
* Warn: Diagnostic information is recorded and may indicate exceptions.
* Critical: Critical exceptions are detected.', example='Normal', position='Query'),
  status?: string(name='Status', description='The state of the diagnostic report. Valid values:

*   InProgress: The diagnostic is in progress.
*   Failed: The diagnostic failed.
*   Finished: The diagnostic is complete.', example='Finished', position='Query'),
}

model DescribeDiagnosticReportsResponseBody = {
  nextToken?: string(name='NextToken', description='The query token returned in this call.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  reports?: {
    report?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the diagnostic report was created.', example='2022-07-11T12:00:00Z'),
      endTime?: string(name='EndTime', description='The end of the reporting period of the diagnostic report. The value is the EndTime value that was passed in when you called the [CreateDiagnosticReport](~~442490~~) operation to create the diagnostic report.', example='2022-07-11T14:00:00Z'),
      finishedTime?: string(name='FinishedTime', description='The time when the diagnostic was complete.', example='2022-07-11T14:00:00Z'),
      issues?: {
        issue?: [ 
        {
          issueId?: string(name='IssueId', description='The unique ID of the diagnosed issue.', example='GuestOS.CPU.HighUtiliz*****'),
          metricCategory?: string(name='MetricCategory', description='The category of the diagnostic metric.', example='ECSService.GuestOS'),
          metricId?: string(name='MetricId', description='The ID of the diagnostic metric.', example='GuestOS.WinFirewall'),
          severity?: string(name='Severity', description='The severity level of the diagnostic metric. Valid values:

*   Info: Diagnostic information was recorded and may be related to exceptions.
*   Warn: Diagnostic information was recorded and may indicate exceptions.
*   Critical: Critical exceptions were detected.', example='Info'),
        }
      ](name='Issue')
      }(name='Issues', description='The list of issues.'),
      metricSetId?: string(name='MetricSetId', description='The ID of the diagnostic metric set.', example='dms-bp17p0qwtr72zmu*****'),
      reportId?: string(name='ReportId', description='The ID of the diagnostic report.', example='dr-uf6i0tv2refv8wz*****'),
      resourceId?: string(name='ResourceId', description='The ID of the resource.', example='i-uf6i0tv2refv8wz*****'),
      resourceType?: string(name='ResourceType', description='The type of the resource.', example='instance'),
      severity?: string(name='Severity', description='The severity level of the diagnostic report. Valid values:

*   Unknown: The diagnostic has not started, failed to run, or exited unexpectedly without a diagnosis.
*   Normal: No exceptions were detected.
*   Info: Diagnostic information was recorded and may be related to exceptions.
*   Warn: Diagnostic information was recorded and may indicate exceptions.
*   Critical: Critical exceptions were detected.', example='Normal'),
      startTime?: string(name='StartTime', description='The beginning of the reporting period of the diagnostic report. The value is the StartTime value that was passed in when you called the [CreateDiagnosticReport](~~442490~~) operation to create the diagnostic report.', example='2022-07-11T12:00:00Z'),
      status?: string(name='Status', description='The state of the diagnostic report.', example='Finished'),
    }
  ](name='Report')
  }(name='Reports', description='The list of reports.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DescribeDiagnosticReportsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDiagnosticReportsResponseBody(name='body'),
}

async function describeDiagnosticReports(request: DescribeDiagnosticReportsRequest): DescribeDiagnosticReportsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDiagnosticReports', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDiskMonitorDataRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskId: string(name='DiskId', description='The disk ID.', example='d-bp1bq5g3dxxo1x4o****', position='Query'),
  endTime: string(name='EndTime', description='The end of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2014-07-23T12:09:00Z', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The interval at which to retrieve the monitoring data. Unit: seconds. Valid values:

*   60
*   600
*   3600

Default value: 60.', example='60', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', description='The beginning of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2014-07-23T12:07:00Z', position='Query'),
}

model DescribeDiskMonitorDataResponseBody = {
  monitorData?: {
    diskMonitorData?: [ 
    {
      BPSRead?: int32(name='BPSRead', description='The read bandwidth of the disk. Unit: byte/s.', example='0'),
      BPSTotal?: int32(name='BPSTotal', description='The total read and write bandwidth of the disk. Unit: byte/s.', example='204'),
      BPSWrite?: int32(name='BPSWrite', description='The write bandwidth of the disk. Unit: byte/s.', example='204'),
      diskId?: string(name='DiskId', description='The ID of the disk.', example='d-bp1bq5g3dxxo1x4o****'),
      IOPSRead?: int32(name='IOPSRead', description='The number of read I/O operations per second on the disk.', example='0'),
      IOPSTotal?: int32(name='IOPSTotal', description='The total number of read and write I/O operations per second on the disk.', example='0'),
      IOPSWrite?: int32(name='IOPSWrite', description='The number of write I/O operations per second on the disk.', example='0'),
      latencyRead?: int32(name='LatencyRead', description='The read latency of the disk. Unit: microseconds.', example='0'),
      latencyWrite?: int32(name='LatencyWrite', description='The write latency of the disk. Unit: microseconds.', example='0'),
      timeStamp?: string(name='TimeStamp', description='The timestamp of the monitoring data. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2014-07-23T12:07:00Z'),
    }
  ](name='DiskMonitorData')
  }(name='MonitorData', description='The monitoring data of the disk.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of returned monitoring data entries.', example='3'),
}

model DescribeDiskMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDiskMonitorDataResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can query the following monitoring data of a disk: the read IOPS, write IOPS, read bandwidth (byte/s), write bandwidth (byte/s), read latency (microseconds), and write latency (microseconds).
  * Take note of the following items:
  * *   You can query the monitoring data only of the disks that are in the In Use (`In_use`) state. For more information, see [Disk states](~~25689~~).
  *     **
  *     **Note** Some information may be missing from the monitoring data of a disk because the disk is not in the In Use (`In_use`) state and the system cannot obtain the relevant information.
  * *   Up to 400 monitoring data entries can be returned at a time. Make sure that the `TotalCount` value does not exceed 400. The value is calculated by using the following formula: `TotalCount = (EndTime - StartTime)/Period`. If the TotalCount value is greater than 400, the `InvalidParameter.TooManyDataQueried` error is returned.
  * *   You can query the monitoring data in the last 30 days. If the value of `StartTime` is more than 30 days earlier than the current time, an error is returned.
  *
 */
async function describeDiskMonitorData(request: DescribeDiskMonitorDataRequest): DescribeDiskMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDiskMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDisksRequest {
  filter?: [
    {
      key?: string(name='Key', description='The key of filter 1 used to query resources. Set the value to `CreationStartTime`. You can specify a time by setting both `Filter.1.Key` and `Filter.1.Value` to query resources that were created after the specified time.', example='CreationStartTime'),
      value?: string(name='Value', description='The value of filter 1 used to query resources. Set the value to a time. If you specify this parameter, you must also specify the `Filter.1.Key` parameter. Specify the time in the `yyyy-MM-ddTHH:mmZ` format. The time must be in UTC.', example='2017-12-05T22:40Z'),
    }
  ](name='Filter', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  additionalAttributes?: [ string ](name='AdditionalAttributes', description='The attribute value. Set the value to IOPS, which indicates the maximum IOPS of the disk.', example='IOPS', position='Query'),
  autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that is applied to the cloud disk.', example='sp-m5e2w2jutw8bv31****', position='Query'),
  category?: string(name='Category', description='The category of the disk. Valid values:

*   all: all disk categories
*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: Enterprise SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk
*   local_ssd_pro: I/O-intensive local disk
*   local_hdd_pro: throughput-intensive local disk
*   cloud_essd_entry: ESSD Entry disk
*   elastic_ephemeral_disk_standard: standard elastic ephemeral disk
*   elastic_ephemeral_disk_premium: premium elastic ephemeral disk
*   ephemeral: retired local disk
*   ephemeral_ssd: retired local SSD

Default value: all.', example='all', position='Query'),
  deleteAutoSnapshot?: boolean(name='DeleteAutoSnapshot', description='Specifies whether to delete the automatic snapshots of the cloud disk after the disk is released.

*   true
*   false

Default value: false', example='false', position='Query'),
  deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether the disk is released when the associated instance is released. Valid values:

*   true: The disk is released when the associated instance is released.
*   false: The disk is retained as a pay-as-you-go data disk when the associated instance is released.

Default value: false.', example='false', position='Query'),
  diskChargeType?: string(name='DiskChargeType', description='The billing method of the disk. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go', example='PostPaid', position='Query'),
  diskIds?: string(name='DiskIds', description='The IDs of cloud disks, local disks, or elastic ephemeral disks. The value is a JSON array that consists of up to 100 disk IDs. Separate the disk IDs with commas (,).', example='["d-bp67acfmxazb4p****", "d-bp67acfmxazb4g****", … "d-bp67acfmxazb4d****"]', position='Query'),
  diskName?: string(name='DiskName', description='The name of the disk. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).', example='testDiskName', position='Query'),
  diskType?: string(name='DiskType', description='The type of the disk. Valid values:

*   all: system disk and data disk
*   system: system disk
*   data: data disk

Default value: all.

>  Elastic ephemeral disks cannot be used as system disks.', example='all', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run without performing the actual request. Valid values:

*   true: performs only a dry run. The systems checks whether your AccessKey pair is valid, whether RAM users are granted permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false', example='false', position='Query'),
  enableAutoSnapshot?: boolean(name='EnableAutoSnapshot', description='Specifies whether to enable the automatic snapshot policy feature for the cloud disk.

*   true
*   false

> By default, the automatic snapshot policy feature is enabled for cloud disks that are already created. Additionally, only the automatic snapshot policy needs to be applied to a cloud disk before you can use the automatic snapshot policy.', example='true', position='Query'),
  enableAutomatedSnapshotPolicy?: boolean(name='EnableAutomatedSnapshotPolicy', description='Specifies whether an automatic snapshot policy is applied to the cloud disk.

*   true: An automatic snapshot policy is applied to the cloud disk.
*   false: No automatic snapshot policy is applied to the cloud disk.

Default value: false', example='false', position='Query'),
  enableShared?: boolean(name='EnableShared', description='Specifies whether the disk is a Shared Block Storage device.', example='false', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether to query only encrypted cloud disks.

*   true: queries only encrypted cloud disks.
*   false: does not query encrypted cloud disks.

Default value: false', example='false', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the Elastic Compute Service (ECS) instance to which the disk is attached.', example='i-bp67acfmxazb4q****', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key that is used by the cloud disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****', position='Query'),
  lockReason?: string(name='LockReason', description='The reason why the disk is locked. Valid values:

*   financial: The disk is locked due to overdue payments.
*   security: The disk is locked due to security reasons.
*   recycling: The preemptible instance is locked and pending release.
*   dedicatedhostfinancial: The instance is locked due to overdue payments for the dedicated host.', example='recycling', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. Valid values: 10 to 500.

Default value:

*   If you do not specify this parameter or you set this parameter to a value less than 10, the default value is 10.
*   If you set this parameter to a value greater than 500, the default value is 500.', example='50', minimum=1, maximum=500, position='Query'),
  multiAttach?: string(name='MultiAttach', description='Specifies whether the multi-attach feature is enabled for the disk. Valid values:

*   Disabled: The multi-attach feature is not enabled for the disk.
*   Enabled: The multi-attach feature is enabled for the disk.
*   LegacyShared: Shared Block Storage devices are queried.

The multi-attach feature is available to select users. To use this feature, [submit a ticket](https://workorder-intl.console.aliyun.com/console.htm#/ticket/list).', example='Disabled', position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the `NextToken` value that was returned in the last call to this operation.

For more information about how to check the responses returned by this operation, see the preceding "Description" section.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return per page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  portable?: boolean(name='Portable', description='Specifies whether the disk is removable. Valid values:

*   true: The disk is removable. A removable disk can independently exist and can be attached to or detached from an instance within the same zone.
*   false: The disk is not removable. A disk that is not removable cannot independently exist or be attached to or detached from an instance within the same zone.

The `Portable` attribute of the following types of disks is `false`, and these types of disks share the same lifecycle with their associated instances:

*   Local disks
*   Local SSDs
*   Subscription data disks', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the disk. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the disk belongs. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of the value specified for this parameter.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotId?: string(name='SnapshotId', description='The ID of the snapshot from which you create the cloud disk.', example='s-bp67acfmxazb4p****', position='Query'),
  status?: string(name='Status', description='The status of the disk. For more information, see [Disk states](~~25689~~). Valid values:

*   In_use
*   Available
*   Attaching
*   Detaching
*   Creating
*   ReIniting
*   All

Default value: All.', example='All', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the disk. Valid values of N: 1 to 20.

If you specify a single tag to query resources, up to 1,000 resources to which the tag is added are returned. If you specify multiple tags to query resources, up to 1,000 resources to which all specified tags are added are returned. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the disk. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the disk.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-g', position='Query'),
}

model DescribeDisksResponseBody = {
  disks?: {
    disk?: [ 
    {
      attachedTime?: string(name='AttachedTime', description='The time when the disk was last attached. The time follows the ISO 8601 standard in the yyyy-MM-ddThh:mmZ format. The time is displayed in UTC.', example='2021-06-07T06:08:56Z'),
      attachments?: {
        attachment?: [ 
        {
          attachedTime?: string(name='AttachedTime', description='The time when the disk was attached. The time is displayed in UTC.', example='2021-06-07T06:08:56Z'),
          device?: string(name='Device', description='The device name of the disk.', example='/dev/xvda'),
          instanceId?: string(name='InstanceId', description='The ID of the instance to which the disk is attached.', example='i-bp67acfmxazb4q****'),
        }
      ](name='Attachment')
      }(name='Attachments', description='The attachment information of the disk. The value is an array that consists of the `Attachment` values. This value is not returned when you query Shared Block Storage devices.'),
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy that is applied to the cloud disk.', example='sp-bp67acfmxazb4p****'),
      bdfId?: string(name='BdfId', description='This parameter is in invitational preview and is not publicly available.', example='null'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Indicates whether the performance burst feature is enabled. Valid values:

*   true
*   false

This parameter is available only if you set `Category` to `cloud_auto`. For more information, see [ESSD AutoPL disks](~~368372~~).', example='false'),
      category?: string(name='Category', description='The category of the disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: ESSD
*   cloud_auto: ESSD AutoPL disk
*   local_ssd_pro: I/O-intensive local disk
*   local_hdd_pro: throughput-intensive local disk
*   cloud_essd_entry: ESSD Entry disk
*   elastic_ephemeral_disk_standard: standard elastic ephemeral disk
*   elastic_ephemeral_disk_premium: premium static ephemeral disk
*   ephemeral: retired local disk
*   ephemeral_ssd: retired local SSD', example='cloud_ssd'),
      creationTime?: string(name='CreationTime', description='The time when the disk was created.', example='2021-06-07T06:08:54Z'),
      deleteAutoSnapshot?: boolean(name='DeleteAutoSnapshot', description='Indicates whether the automatic snapshots of the cloud disk are deleted when the cloud disk is released. Valid values:

*   true: The automatic snapshots of the cloud disk are deleted when the disk is released.
*   false: The automatic snapshots of the cloud disk are retained when the disk is released.

Snapshots that were created in the ECS console or by calling the [CreateSnapshot](~~25524~~) operation are retained and not affected by this parameter.', example='false'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Indicates whether the disk is released when the instance to which the disk is attached is released. Valid values:

*   true: The disk is released when the associated instance is released.
*   false: The disk is retained when the associated instance is released.', example='true'),
      description?: string(name='Description', description='The description of the disk.', example='testDescription'),
      detachedTime?: string(name='DetachedTime', description='The time when the disk was last detached.', example='2021-06-07T21:01:22Z'),
      device?: string(name='Device', description='The device name of the disk on the instance to which the disk is attached. Example: /dev/xvdb. Take note of the following items:

*   This parameter has a value only when the `Status` value is `In_use` or `Detaching`.
*   This parameter is empty for cloud disks for which the multi-attach feature is enabled. You can query the attachment information of the cloud disk based on the returned list of `Attachment` objects.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='/dev/xvdb'),
      diskChargeType?: string(name='DiskChargeType', description='The billing method of the disk. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go', example='PrePaid'),
      diskId?: string(name='DiskId', description='The ID of the disk.', example='d-bp18um4r4f2fve24****'),
      diskName?: string(name='DiskName', description='The name of the disk.', example='testDiskName'),
      enableAutoSnapshot?: boolean(name='EnableAutoSnapshot', description='Indicates whether the automatic snapshot policy feature is enabled for the disk.', example='false'),
      enableAutomatedSnapshotPolicy?: boolean(name='EnableAutomatedSnapshotPolicy', description='Indicates whether an automatic snapshot policy is applied to the cloud disk.', example='false'),
      encrypted?: boolean(name='Encrypted', description='Indicates whether the cloud disk is encrypted.', example='false'),
      expiredTime?: string(name='ExpiredTime', description='The time when the subscription disk expires.', example='2021-07-07T16:00Z'),
      IOPS?: int32(name='IOPS', description='The maximum number of read and write operations per second.', example='4000'),
      IOPSRead?: int32(name='IOPSRead', description='The maximum number of read operations per second.', example='2000'),
      IOPSWrite?: int32(name='IOPSWrite', description='The maximum number of write operations per second.', example='2000'),
      imageId?: string(name='ImageId', description='The ID of the image that was used to create the instance. This parameter is empty unless the cloud disk was created from an image. The value of this parameter remains unchanged throughout the lifecycle of the cloud disk.', example='m-bp13aqm171qynt3u***'),
      instanceId?: string(name='InstanceId', description='The ID of the instance to which the disk is attached. Take note of the following items:

*   This parameter has a value only when the `Status` value is `In_use` or `Detaching`.
*   This parameter is empty for cloud disks for which the multi-attach feature is enabled. You can query the attachment information of the cloud disk based on the returned `Attachment` objects.', example='i-bp67acfmxazb4q****'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key that is used for the cloud disk.', example='0e478b7a-4262-4802-b8cb-00d3fb408***'),
      mountInstanceNum?: int32(name='MountInstanceNum', description='The number of instances to which the Shared Block Storage device is attached.', example='1'),
      mountInstances?: {
        mountInstance?: [ 
        {
          attachedTime?: string(name='AttachedTime', description='The time when the disk was attached. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2017-12-05T2340:00Z'),
          device?: string(name='Device', description='The mount point of the disk.', example='/dev/xvda'),
          instanceId?: string(name='InstanceId', description='The ID of the instance to which the disk is attached.', example='i-bp1j4i2jdf3owlhe****'),
        }
      ](name='MountInstance')
      }(name='MountInstances', description='The attachment information of the Shared Block Storage device.'),
      multiAttach?: string(name='MultiAttach', description='Indicates whether the multi-attach feature is enabled for the cloud disk.', example='Disabled'),
      operationLocks?: {
        operationLock?: [ 
        {
          lockReason?: string(name='LockReason', description='The reason why the disk was locked.', example='security'),
        }
      ](name='OperationLock')
      }(name='OperationLocks', description='The reasons why the disk was locked.'),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.', example='PL0'),
      placement?: {
        zoneIds?: string(name='ZoneIds', description='The IDs of the zones in which data is stored.', example='cn-hangzhou-b
cn-hangzhou-j'),
      }(name='Placement', description='The locations in which data is stored.'),
      portable?: boolean(name='Portable', description='Indicates whether the disk is removable.', example='false'),
      productCode?: string(name='ProductCode', description='The product code of the disk in Alibaba Cloud Marketplace.', example='jxsc000204'),
      provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × *Capacity - Baseline IOPS}. Baseline IOPS = min{1,800 + 50 × *Capacity, 50,000}

This parameter is available only if you set `Category` to `cloud_auto`. For more information, see [ESSD AutoPL disks](~~368372~~).', example='40000'),
      regionId?: string(name='RegionId', description='The ID of the region to which the disk belongs.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the disk belongs.', example='rg-bp67acfmxazb4p****'),
      serialNumber?: string(name='SerialNumber', description='The serial number of the disk.', example='bp18um4r4f2fve2****'),
      size?: int32(name='Size', description='The size of the disk. Unit: GiB.', example='60'),
      sourceSnapshotId?: string(name='SourceSnapshotId', description='The ID of the snapshot that was used to create the cloud disk.

This parameter is empty unless the cloud disk was created from a snapshot. The value of this parameter remains unchanged throughout the lifecycle of the cloud disk.', example='s-bp67acfmxazb4p****'),
      status?: string(name='Status', description='The status of the disk. Valid values:

*   In_use
*   Available
*   Attaching
*   Detaching
*   Creating
*   ReIniting', example='In_use'),
      storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster to which the cloud disk belongs. If your cloud disk belongs to the public block storage cluster, an empty value is returned.', example='dbsc-j5e1sf2vaf5he8m2****'),
      storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-i-bp1j4i2jdf3owlhe****'),
      storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The maximum number of partitions in the storage set.', example='11'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the disk.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the disk.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the disk.'),
      throughput?: int32(name='Throughput', description='The amount of data that can be transferred per second. Unit: MB/s.', example='100'),
      throughputRead?: int32(name='ThroughputRead', description='The amount of data that can be read per second. Unit: MB/s.', example='100'),
      throughputWrite?: int32(name='ThroughputWrite', description='The amount of data that can be written per second. Unit: MB/s.', example='100'),
      type?: string(name='Type', description='The type of the disk. Valid values:

*   system: system disk
*   data: data disk', example='system'),
      zoneId?: string(name='ZoneId', description='The ID of the zone to which the disk belongs.', example='cn-hangzhou-i'),
    }
  ](name='Disk')
  }(name='Disks', description='The details about the disks.'),
  nextToken?: string(name='NextToken', description='The returned pagination token which can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2****'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='15'),
}

model DescribeDisksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDisksResponseBody(name='body'),
}

/**
  * ### [](#)Usage notes
  * *   You can specify multiple request parameters such as `RegionId`, `ZoneId`, `DiskIds`, and `InstanceId` as filters. The specified parameters are evaluated by using the "AND" operator. If you specify more than one filter, the records that match all filters are returned.
  * *   The value of `DiskIds` is a JSON array. If you do not specify DiskIds, the parameter is not used as a filter condition. If you set `DiskIds` to an empty JSON array, the parameter is regarded as a valid filter, and an empty result is returned.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: Use `NextToken` to specify the pagination token. Set the value to the `NextToken` value that is obtained from the previous query. Then, use `MaxResults` to specify the maximum number of entries to return on each page.
  *     *   Method 2: Use `PageSize` to specify the number of entries to return on each page, and then use `PageNumber` to specify the number of the page to return.
  *     You can use only one of the preceding methods. If a large number of entries are to be returned, we recommend that you use Method 1. If `NextToken` is specified, `PageSize` and `PageNumber` do not take effect and `TotalCount` in the response is invalid.
  * *   You can attach a disk for which the multi-attach feature is enabled to multiple instances. You can query the attachment information of the disk based on the `Attachment` values in the response.
  * When you call an API operation by using Alibaba Cloud CLI, you must specify request parameter values of different data types in the required formats. For more information, see [Parameter format overview](~~110340~~).
  *
 */
async function describeDisks(request: DescribeDisksRequest): DescribeDisksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDisks', 'POST', '/', 'json', false, 'json', request);
}

model DescribeDisksFullStatusRequest {
  eventTime?: {
    end?: string(name='End', description='The end of the time range to query occurred events.

Specify the time in the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC.', example='2018-05-08T02:48:52Z'),
    start?: string(name='Start', description='The beginning of the time range to query occurred events.

Specify the time in the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC.', example='2018-05-06T02:43:10Z'),
  }(name='EventTime', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskId?: [ string ](name='DiskId', description='The ID of EBS device N. Valid values of N: 1 to 100.', example='d-bp67acfmxazb4p****', position='Query'),
  eventId?: [ string ](name='EventId', description='The ID of event N. Valid values of N: 1 to 100.', example='e-bp67acfmxazb4p****', position='Query'),
  eventType?: string(name='EventType', description='The event type of the EBS device. Valid values:

*   Degraded: The performance of the EBS device is degraded.
*   SeverelyDegraded: The performance of the EBS device is severely degraded.
*   Stalled: The performance of the EBS device is severely affected.
*   ErrorDetected: The local disk is damaged.', example='Stalled', position='Query'),
  healthStatus?: string(name='HealthStatus', description='The health status of the EBS device. Valid values:

*   Impaired: The EBS device is damaged.
*   Warning: The performance of the EBS device is degraded.
*   Initializing: The EBS device is being initialized.
*   InsufficientData: The status cannot be determined due to insufficient data.
*   NotApplicable: The EBS device cannot be used.', example='Warning', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1. The value must be a positive integer.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the EBS device. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the EBS device belongs. If you configure this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.', example='rg-aek2kkmhmhs****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The lifecycle status of the EBS device. For more information, see [Disk status](~~25689~~). Valid values:

*   In_use: The EBS device is in use.
*   Available: The EBS device can be attached.
*   Attaching: The EBS device is being attached.
*   Detaching: The EBS device is being detached.
*   Creating: The EBS device is being created.
*   ReIniting: The EBS device is being initialized.', example='Available', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the EBS device. A key-value pair consists of a key specified by the Tag.N.Key parameter and a value specified by the `Tag.N.Value` parameter. The two parameters are associated with each other. Valid values of N: 1 to 20.

Up to 1,000 resources with the specified tags can be returned in the response.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the EBS device. A key-value pair consists of a key specified by the `Tag.N.Key` parameter and a value specified by the Tag.N.Value parameter. The two parameters are associated with each other. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the EBS device.', position='Query'),
}

model DescribeDisksFullStatusResponseBody = {
  diskFullStatusSet?: {
    diskFullStatusType?: [ 
    {
      device?: string(name='Device', description='The name of the EBS device that is attached to an instance. Example: /dev/xvdb.

This parameter has a value only when the value of `Status` is `In_use`.

> This parameter will be deprecated in the future. To ensure future compatibility, we recommend that you do not use this parameter.', example='null'),
      diskEventSet?: {
        diskEventType?: [ 
        {
          eventEndTime?: string(name='EventEndTime', description='The time when the event ended.', example='2018-05-06T02:48:52Z'),
          eventId?: string(name='EventId', description='The ID of the event.', example='e-bp67acfmxazb4p****'),
          eventTime?: string(name='EventTime', description='The time when the event occurred.', example='2018-05-08T02:43:10Z'),
          eventType?: {
            code?: int32(name='Code', description='The code of the event type.', example='7'),
            name?: string(name='Name', description='The name of the event type. Valid values:

*   Degraded: The performance of the EBS device is degraded.
*   SeverelyDegraded: The performance of the EBS device is severely degraded.
*   Stalled: The performance of the EBS device is severely affected.
*   ErrorDetected: The local disk is damaged.', example='Stalled'),
          }(name='EventType', description='The type of the event.'),
          impactLevel?: string(name='ImpactLevel', description='The impact level of the event.', example='100'),
        }
      ](name='DiskEventType')
      }(name='DiskEventSet', description='The events about the EBS device.'),
      diskId?: string(name='DiskId', description='The EBS device ID.', example='d-bp67acfmxazb4p****'),
      healthStatus?: {
        code?: int32(name='Code', description='The code of the health status of the EBS device.', example='128'),
        name?: string(name='Name', description='The name of the health status of the EBS device.', example='Impaired'),
      }(name='HealthStatus', description='The health status of the EBS device.'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
      status?: {
        code?: int32(name='Code', description='The code of the lifecycle status of the EBS device.', example='129'),
        name?: string(name='Name', description='The name of the lifecycle status of the EBS device.', example='Available'),
      }(name='Status', description='The lifecycle status of the EBS device.'),
    }
  ](name='DiskFullStatusType')
  }(name='DiskFullStatusSet', description='The collection of full status information of the EBS devices.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of EBS devices for which full status information is returned.', example='2'),
}

model DescribeDisksFullStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeDisksFullStatusResponseBody(name='body'),
}

/**
  * *   The full status information about an EBS device includes the lifecycle status specified by the `Status` parameter, health status specified by the `HealthStatus` parameter, and event type specified by the `EventType` parameter of the EBS device. You can filter the results based on these parameters.
  * *   The release time, scheduled execution time, and actual execution time of each EBS device event are identical. If you specify a period of time by using the `EventTime.Start` and `EventTime.End` parameters, all events that occurred within this period are queried. You can query events that occurred within the last seven days.
  *
 */
async function describeDisksFullStatus(request: DescribeDisksFullStatusRequest): DescribeDisksFullStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeDisksFullStatus', 'POST', '/', 'json', false, 'json', request);
}

model DescribeEipAddressesRequest {
  filter?: [
    {
      key?: string(name='Key'),
      value?: string(name='Value'),
    }
  ](name='Filter', position='Query'),
  allocationId?: string(name='AllocationId', position='Query'),
  associatedInstanceId?: string(name='AssociatedInstanceId', position='Query'),
  associatedInstanceType?: string(name='AssociatedInstanceType', position='Query'),
  chargeType?: string(name='ChargeType', position='Query'),
  eipAddress?: string(name='EipAddress', position='Query'),
  ISP?: string(name='ISP', position='Query'),
  lockReason?: string(name='LockReason', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', position='Query'),
}

model DescribeEipAddressesResponseBody = {
  eipAddresses?: {
    eipAddress?: [ 
    {
      allocationId?: string(name='AllocationId'),
      allocationTime?: string(name='AllocationTime'),
      bandwidth?: string(name='Bandwidth'),
      chargeType?: string(name='ChargeType'),
      eipBandwidth?: string(name='EipBandwidth'),
      expiredTime?: string(name='ExpiredTime'),
      instanceId?: string(name='InstanceId'),
      instanceType?: string(name='InstanceType'),
      internetChargeType?: string(name='InternetChargeType'),
      ipAddress?: string(name='IpAddress'),
      operationLocks?: {
        lockReason?: [ 
        {
          lockReason?: string(name='LockReason'),
        }
      ](name='LockReason')
      }(name='OperationLocks'),
      regionId?: string(name='RegionId'),
      status?: string(name='Status'),
    }
  ](name='EipAddress')
  }(name='EipAddresses'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeEipAddressesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeEipAddressesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeEipAddresses(request: DescribeEipAddressesRequest): DescribeEipAddressesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeEipAddresses', 'POST', '/', 'json', false, 'json', request);
}

model DescribeEipMonitorDataRequest {
  allocationId: string(name='AllocationId', position='Query'),
  endTime: string(name='EndTime', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', position='Query'),
}

model DescribeEipMonitorDataResponseBody = {
  eipMonitorDatas?: {
    eipMonitorData?: [ 
    {
      eipBandwidth?: int32(name='EipBandwidth'),
      eipFlow?: int32(name='EipFlow'),
      eipPackets?: int32(name='EipPackets'),
      eipRX?: int32(name='EipRX'),
      eipTX?: int32(name='EipTX'),
      timeStamp?: string(name='TimeStamp'),
    }
  ](name='EipMonitorData')
  }(name='EipMonitorDatas'),
  requestId?: string(name='RequestId'),
}

model DescribeEipMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeEipMonitorDataResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeEipMonitorData(request: DescribeEipMonitorDataRequest): DescribeEipMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeEipMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeElasticityAssuranceInstancesRequest {
  privatePoolOptions?: {
    id: string(name='Id', description='The ID of the elasticity assurance.', example='eap-bp67acfmxazb4****'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The token used to start the query. Set the value to the NextToken value obtained from the response to the preceding request.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the elasticity assurance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeElasticityAssuranceInstancesResponseBody = {
  elasticityAssuranceItem?: {
    instanceIdSet?: [ 
    {
      instanceId?: string(name='InstanceId', description='The instance ID', example='i-bp67acfmxazb4****'),
    }
  ](name='InstanceIdSet')
  }(name='ElasticityAssuranceItem', description='Details about the instances that match and use the elasticity assurance.'),
  maxResults?: int32(name='MaxResults', description='The number of entries returned per page.', example='10'),
  nextToken?: string(name='NextToken', description='The token used to start the next query.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='2'),
}

model DescribeElasticityAssuranceInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeElasticityAssuranceInstancesResponseBody(name='body'),
}

/**
  * When an elasticity assurance expires, data about the association between the instances and the private pool generated by the elasticity assurance becomes invalid. When you call this operation to query the expired elasticity assurance, no value is returned.
  *
 */
async function describeElasticityAssuranceInstances(request: DescribeElasticityAssuranceInstancesRequest): DescribeElasticityAssuranceInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeElasticityAssuranceInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeElasticityAssurancesRequest {
  privatePoolOptions?: {
    ids?: string(name='Ids', description='The IDs of the elasticity assurances. The value can be a JSON array that consists of up to 100 elasticity assurance IDs. Separate the IDs with commas (,).', example='["eap-bp67acfmxazb4****", "eap-bp67acfmxazb5****"]'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Set the value to PostPaid. Only pay-as-you-go instances can be created by using elasticity assurances.

Default value: PostPaid.', example='PostPaid', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.c6.large', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='> This parameter is deprecated.', example='null', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the elasticity assurances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. If you configure this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

> Resources in the default resource group are displayed in the response regardless of whether you configure this parameter.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The status of the elasticity assurances. Valid values:

*   All
*   Preparing
*   Prepared
*   Active
*   Released

Default value: Active.', example='Active', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20.

If you specify a tag to query resources, up to 1,000 resources with this tag are returned in the response. If you specify multiple tags to query resources, up to 1,000 resources with all these tags are returned in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the elasticity assurances.', example='cn-hangzhou-h', position='Query'),
}

model DescribeElasticityAssurancesResponseBody = {
  elasticityAssuranceSet?: {
    elasticityAssuranceItem?: [ 
    {
      allocatedResources?: {
        allocatedResource?: [ 
        {
          instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.c6.large'),
          totalAmount?: int32(name='TotalAmount', description='The total number of instances for which capacity of an instance type is reserved.', example='2'),
          usedAmount?: int32(name='UsedAmount', description='The number of instances that have used the elasticity assurance.', example='2'),
          zoneId?: string(name='zoneId', description='The zone ID.', example='cn-hangzhou-h'),
        }
      ](name='AllocatedResource')
      }(name='AllocatedResources', description='Details about the allocated resources.'),
      description?: string(name='Description', description='The description of the elasticity assurance.', example='This is description.'),
      endTime?: string(name='EndTime', description='The time when the elasticity assurance expires.', example='2021-12-03T16:00Z'),
      instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. The value can be only PostPaid. Only pay-as-you-go instances can be created by using elasticity assurances.', example='PostPaid'),
      latestStartTime?: string(name='LatestStartTime', description='> This parameter is not publicly available.', example='null'),
      privatePoolOptionsId?: string(name='PrivatePoolOptionsId', description='The ID of the elasticity assurance.', example='eap-bp1ir35kqtn8ywci****'),
      privatePoolOptionsMatchCriteria?: string(name='PrivatePoolOptionsMatchCriteria', description='The type of the private pool associated with the elasticity assurance. Valid values:

*   Open: open private pool
*   Target: specific private pool', example='Target'),
      privatePoolOptionsName?: string(name='PrivatePoolOptionsName', description='The name of the elasticity assurance.', example='eapTestName'),
      regionId?: string(name='RegionId', description='The region ID of the elasticity assurance.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp67acfmxazb4p****'),
      startTime?: string(name='StartTime', description='The time when the elasticity assurance takes effect.', example='2020-12-03T05:25Z'),
      startTimeType?: string(name='StartTimeType', description='Indicates when the elasticity assurance takes effect. Valid values:

*   Now: The elasticity assurance takes effect immediately after it is created.
*   Later: The elasticity assurance takes effect at a specified time.', example='Now'),
      status?: string(name='Status', description='The status of the elasticity assurance. Valid values:

*   Preparing
*   Prepared
*   Active
*   Released', example='Active'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of the tag.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of the tag.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the elasticity assurance.'),
      totalAssuranceTimes?: string(name='TotalAssuranceTimes', description='The total number of times that the elasticity assurance is applied.', example='Unlimited'),
      usedAssuranceTimes?: int32(name='UsedAssuranceTimes', description='> This parameter is not publicly available.', example='0'),
    }
  ](name='ElasticityAssuranceItem')
  }(name='ElasticityAssuranceSet', description='Details about the elasticity assurances.'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries returned per page.', example='10'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeElasticityAssurancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeElasticityAssurancesResponseBody(name='body'),
}

async function describeElasticityAssurances(request: DescribeElasticityAssurancesRequest): DescribeElasticityAssurancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeElasticityAssurances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeEniMonitorDataRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  endTime: string(name='EndTime', description='The end of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2018-05-21T12:22:00Z', position='Query'),
  eniId?: string(name='EniId', description='The secondary ENI ID. By default, all secondary ENIs that are bound to the specified instance are queried.', example='eni-bp19da36d6xdwey****', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance to which the secondary ENI is bound.', example='i-bp1a5zr3u7nq9cx****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The interval at which to retrieve monitoring data. Unit: seconds. Valid values:

*   60
*   600
*   3600

Default value: 60.', example='60', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', description='The beginning of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2018-05-21T12:19:00Z', position='Query'),
}

model DescribeEniMonitorDataResponseBody = {
  monitorData?: {
    eniMonitorData?: [ 
    {
      dropPacketRx?: string(name='DropPacketRx', description='The number of received packets that were dropped by the secondary ENI over the internal network.', example='0'),
      dropPacketTx?: string(name='DropPacketTx', description='The number of sent packets that were dropped by the secondary ENI over the internal network.', example='0'),
      eniId?: string(name='EniId', description='The ID of the secondary ENI.', example='eni-bp19da36d6xdwey****'),
      intranetRx?: string(name='IntranetRx', description='The average rate at which the secondary ENI received data over the internal network. Unit: Kbit/s.', example='0'),
      intranetTx?: string(name='IntranetTx', description='The average rate at which the secondary ENI sent data over the internal network. Unit: Kbit/s.', example='0'),
      packetRx?: string(name='PacketRx', description='The number of packets received by the secondary ENI over the internal network.', example='0'),
      packetTx?: string(name='PacketTx', description='The number of packets sent by the secondary ENI over the internal network.', example='0'),
      timeStamp?: string(name='TimeStamp', description='The timestamp of the monitoring data. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2018-05-21T03:22:00Z'),
    }
  ](name='EniMonitorData')
  }(name='MonitorData', description='The monitoring data of the secondary ENI.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='4'),
}

model DescribeEniMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeEniMonitorDataResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The monitoring data of a secondary ENI includes the amount of traffic sent and received over the internal network, the number of packets sent and received by the secondary ENI, and the number of sent and received packets that are dropped by the secondary ENI. Specific information may be missing from the returned monitoring data. This may be because the system cannot obtain the relevant information. For example, if the instance to which the secondary ENI is attached is in the Stopped state or if the secondary ENI is not attached to an instance and is in the Available state, the monitoring data of the secondary ENI cannot be obtained. Take note of the following items:
  * *   Up to 400 monitoring data entries can be returned at a time. Make sure that the `TotalCount` value does not exceed 400. The value is calculated by using the following formula: `TotalCount = (EndTime - StartTime)/Period`. If the TotalCount value is greater than 400, the `InvalidParameter.TooManyDataQueried` error is returned.
  * *   You can query the monitoring data in the last 30 days. If the value of `StartTime` is more than 30 days earlier than the current time, an error is returned.
  *
 */
async function describeEniMonitorData(request: DescribeEniMonitorDataRequest): DescribeEniMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeEniMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeForwardTableEntriesRequest {
  forwardEntryId?: string(name='ForwardEntryId', position='Query'),
  forwardTableId: string(name='ForwardTableId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeForwardTableEntriesResponseBody = {
  forwardTableEntries?: {
    forwardTableEntry?: [ 
    {
      externalIp?: string(name='ExternalIp'),
      externalPort?: string(name='ExternalPort'),
      forwardEntryId?: string(name='ForwardEntryId'),
      forwardTableId?: string(name='ForwardTableId'),
      internalIp?: string(name='InternalIp'),
      internalPort?: string(name='InternalPort'),
      ipProtocol?: string(name='IpProtocol'),
      status?: string(name='Status'),
    }
  ](name='ForwardTableEntry')
  }(name='ForwardTableEntries'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeForwardTableEntriesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeForwardTableEntriesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeForwardTableEntries(request: DescribeForwardTableEntriesRequest): DescribeForwardTableEntriesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeForwardTableEntries', 'POST', '/', 'json', false, 'json', request);
}

model DescribeHaVipsRequest {
  filter: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeHaVipsResponseBody = {
  haVips?: {
    haVip?: [ 
    {
      associatedEipAddresses?: {
        associatedEipAddresse?: [ string ](name='associatedEipAddresse')
      }(name='AssociatedEipAddresses'),
      associatedInstances?: {
        associatedInstance?: [ string ](name='associatedInstance')
      }(name='AssociatedInstances'),
      createTime?: string(name='CreateTime'),
      description?: string(name='Description'),
      haVipId?: string(name='HaVipId'),
      ipAddress?: string(name='IpAddress'),
      masterInstanceId?: string(name='MasterInstanceId'),
      regionId?: string(name='RegionId'),
      status?: string(name='Status'),
      vSwitchId?: string(name='VSwitchId'),
      vpcId?: string(name='VpcId'),
    }
  ](name='HaVip')
  }(name='HaVips'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeHaVipsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeHaVipsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeHaVips(request: DescribeHaVipsRequest): DescribeHaVipsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeHaVips', 'POST', '/', 'json', false, 'json', request);
}

model DescribeHpcClustersRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The page number.

Pages start from page 1.

Default value: 1.', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  hpcClusterIds?: string(name='HpcClusterIds', description='The number of entries per page.

Maximum value: 100.

Default value: 10.', example='["hpc-xxxxxxxxx", "hpc-yyyyyyyyy", … "hpc-zzzzzzzzz"]', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of entries per page.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The request ID.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The IDs of HPC clusters. The value is a JSON array that consists of up to 100 HPC cluster IDs. Separate the HPC cluster IDs with commas (,).', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeHpcClustersResponseBody = {
  hpcClusters?: {
    hpcCluster?: [ 
    {
      description?: string(name='Description', example='testDescription'),
      hpcClusterId?: string(name='HpcClusterId', description='The description of the HPC cluster.', example='hpc-bp1a5zr3u7nq9cx****'),
      name?: string(name='Name', example='testName'),
    }
  ](name='HpcCluster')
  }(name='HpcClusters', description='The name of the HPC cluster.'),
  pageNumber?: int32(name='PageNumber', description='Details about the HPC clusters. The value is an array that consists of the information of each HPC cluster.', example='1'),
  pageSize?: int32(name='PageSize', description='The page number.', example='10'),
  requestId?: string(name='RequestId', description='The total number of HPC clusters.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The ID of the HPC cluster.', example='2'),
}

model DescribeHpcClustersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeHpcClustersResponseBody(name='body'),
}

async function describeHpcClusters(request: DescribeHpcClustersRequest): DescribeHpcClustersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeHpcClusters', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImageComponentsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageComponentId?: [ string ](name='ImageComponentId', description='The IDs of image components. Valid values of N: 1 to 20.', example='ic-bp67acfmxazb4p****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page. Valid values: 1 to 500.

Default value: 50.', example='50', minimum=1, maximum=500, position='Query'),
  name?: string(name='Name', description='The name of the image component. You must specify an exact name to search for the image component.', example='testComponent', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.', example='AAAAAdDWBF2****', position='Query'),
  owner?: string(name='Owner', description='The type of the image component. Valid values:

*   SELF: the custom component that you created.
*   ALIYUN: the system component provided by Alibaba Cloud.', example='SELF', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image component. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the image component.', position='Query'),
}

model DescribeImageComponentsResponseBody = {
  imageComponent?: {
    imageComponentSet?: [ 
    {
      componentType?: string(name='ComponentType', description='The type of the image component.', example='Build'),
      content?: string(name='Content', description='The content of the image component.', example='RESTART'),
      creationTime?: string(name='CreationTime', description='The time when the image component was created.', example='2020-11-24T06:00:00Z'),
      description?: string(name='Description', description='The description of the image component.', example='This is description.'),
      imageComponentId?: string(name='ImageComponentId', description='The ID of the image component.', example='ic-bp67acfmxazb4p****'),
      name?: string(name='Name', description='The name of the image component.', example='testComponent'),
      owner?: string(name='Owner', description='The type of the image component. Valid values:

*   SELF: the custom component that you created.
*   ALIYUN: the system component provided by Alibaba Cloud.', example='SELF'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the image component belongs.', example='rg-bp67acfmxazb4p****'),
      systemType?: string(name='SystemType', description='The type of the operating system supported by the image component.', example='Linux'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of the tag.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of the tag.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the image component.'),
    }
  ](name='ImageComponentSet')
  }(name='ImageComponent', description='Details about the image components.'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page.', example='50'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. For information about how to use the returned value, see the "Usage notes" section of this topic.', example='AAAAAdDWBF2****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of image components returned.', example='1'),
}

model DescribeImageComponentsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImageComponentsResponseBody(name='body'),
}

/**
  * You can use `NextToken` to configure the query token. Set the value to the `NextToken` value that is returned in the previous call to the DescribeImageComponents operation. Then, use `MaxResults` to specify the maximum number of entries to return on each page.
  *
 */
async function describeImageComponents(request: DescribeImageComponentsRequest): DescribeImageComponentsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImageComponents', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImageFromFamilyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageFamily: string(name='ImageFamily', description='The name of the image family. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), and hyphens (-). It must start with a letter and cannot start with http://, https://, acs:, or aliyun.', example='hangzhou-daily-update', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeImageFromFamilyResponseBody = {
  image?: {
    architecture?: string(name='Architecture', description='The image architecture. Valid values:

*   i386
*   x86\\_64', example='x86_64'),
    creationTime?: string(name='CreationTime', description='The time when the image was created.', example='2018-01-10T01:01:10Z'),
    description?: string(name='Description', description='The description of the image.', example='testDescription'),
    diskDeviceMappings?: {
      diskDeviceMapping?: [ 
      {
        device?: string(name='Device', description='The device name of the disk. Example: /dev/xvdb.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='/dev/xvdb'),
        format?: string(name='Format', description='The format of the image.', example='qcow2'),
        importOSSBucket?: string(name='ImportOSSBucket', description='The OSS bucket that contains the imported image file.', example='testEcsImport'),
        importOSSObject?: string(name='ImportOSSObject', description='The OSS object corresponding to the imported image file.', example='imageImport'),
        size?: string(name='Size', description='The size of the disk. Unit: GiB.', example='80'),
        snapshotId?: string(name='SnapshotId', description='The ID of the snapshot.', example='s-bp17ot2q7x72ggtw****'),
        type?: string(name='Type', description='The type of the image.', example='custom'),
      }
    ](name='DiskDeviceMapping')
    }(name='DiskDeviceMappings', description='The mappings between the disks and snapshots under the image.'),
    imageFamily?: string(name='ImageFamily', description='The name of the image family.', example='testImageFamily'),
    imageId?: string(name='ImageId', description='The ID of the image.', example='m-bp1g7004ksh0oeuc****'),
    imageName?: string(name='ImageName', description='The name of the image.', example='testImageName'),
    imageOwnerAlias?: string(name='ImageOwnerAlias', description='The alias of the image owner. Valid values:

- system: public images provided by Alibaba Cloud
- self: your custom images
- others: shared images from other Alibaba Cloud accounts
- marketplace: Alibaba Cloud Marketplace images', example='self'),
    imageVersion?: string(name='ImageVersion', description='The version of the image.', example='2'),
    isCopied?: boolean(name='IsCopied', description='Indicates whether the image is a copy of another image.', example='false'),
    isSelfShared?: string(name='IsSelfShared', description='Indicates whether the image has been shared to other Alibaba Cloud accounts.', example='true'),
    isSubscribed?: boolean(name='IsSubscribed', description='Indicates whether you have subscribed to the image corresponding to the specified product code.', example='false'),
    isSupportCloudinit?: boolean(name='IsSupportCloudinit', description='Indicates whether the image supports cloud-init.', example='true'),
    isSupportIoOptimized?: boolean(name='IsSupportIoOptimized', description='Indicates whether the image can be used on I/O optimized instances.', example='true'),
    OSName?: string(name='OSName', description='The name of the operating system.', example='Alibaba Cloud Linux 2.1903'),
    OSType?: string(name='OSType', description='The type of the operating system. Valid values:

- windows
- linux', example='linux'),
    platform?: string(name='Platform', description='The platform of the operating system.', example='Aliyun'),
    productCode?: string(name='ProductCode', description='The product code of the Alibaba Cloud Marketplace image.', example='jxsc00****'),
    progress?: string(name='Progress', description='The image creation progress. Unit: percent (%).', example='100'),
    size?: int32(name='Size', description='The size of the image. Unit: GiB.', example='80'),
    status?: string(name='Status', description='The status of the image. Valid values:

- UnAvailable: The image is unavailable.
- Available: The image is available.
- Creating: The image is being created.
- CreateFailed: The image failed to be created.', example='Available'),
    tags?: {
      tag?: [ 
      {
        tagKey?: string(name='TagKey', description='The tag key of the image.', example='TestKey'),
        tagValue?: string(name='TagValue', description='The tag value of the image.', example='TestValue'),
      }
    ](name='Tag')
    }(name='Tags', description='An array that consists of Tag data.'),
    usage?: string(name='Usage', description='Indicates whether the image has been used to create ECS instances. Valid values:

- instance: The image has been used to create one or more ECS instances.
- none: The image has not been used to create ECS instances.', example='none'),
  }(name='Image', description='The image information.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeImageFromFamilyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImageFromFamilyResponseBody(name='body'),
}

/**
  * ## Description
  * *   This API operation only returns the available custom images that are newly created in the specified image family. Public images, Alibaba Cloud Marketplace images, community images, or shared images are not queried.
  * *   If no available custom images exist in the specified image family, the response is empty.
  *
 */
async function describeImageFromFamily(request: DescribeImageFromFamilyRequest): DescribeImageFromFamilyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImageFromFamily', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImagePipelineExecutionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  executionId?: string(name='ExecutionId', description='The ID of the image creation task.', example='exec-5fb8facb8ed7427c****', position='Query'),
  imagePipelineId?: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. Valid values: 1 to 500.

Default value: 50.', example='50', minimum=1, maximum=500, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The status of the image creation task. You can specify multiple values. Separate the values with commas (,). Example: `BUILDING,DISTRIBUTING`. Valid values:

*   BUILDING
*   DISTRIBUTING
*   RELEASING
*   SUCCESS
*   FAILED
*   CANCELLING
*   CANCELLED

> If you want to query the image creation tasks in all states, specify all values.', example='BUILDING', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='> This parameter is not publicly available.', example='null'),
      value?: string(name='Value', description='> This parameter is not publicly available.', example='null'),
    }
  ](name='Tag', description='> This parameter is not publicly available.', position='Query'),
}

model DescribeImagePipelineExecutionsResponseBody = {
  imagePipelineExecution?: {
    imagePipelineExecutionSet?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the image creation task was created.', example='2020-11-24T06:00:00Z'),
      executionId?: string(name='ExecutionId', description='The ID of the image creation task.', example='exec-5fb8facb8ed7427c****'),
      imageId?: string(name='ImageId', description='The ID of the image.', example='m-bp67acfmxazb4p****'),
      imagePipelineId?: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****'),
      message?: string(name='Message', description='The data returned.', example='Create transition vpc "vpc-2ze70rc7093j9idu6****" success!'),
      modifiedTime?: string(name='ModifiedTime', description='The last modification time of the image creation task.', example='2020-11-25T06:00:00Z'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp67acfmxazb4p****'),
      status?: string(name='Status', description='The status of the image creation task. Valid values:

*   BUILDING
*   DISTRIBUTING
*   RELEASING
*   SUCCESS
*   FAILED
*   CANCELLING
*   CANCELLED', example='BUILDING'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='> This parameter is not publicly available.', example='null'),
          tagValue?: string(name='TagValue', description='> This parameter is not publicly available.', example='null'),
        }
      ](name='Tag')
      }(name='Tags', description='> This parameter is not publicly available.'),
    }
  ](name='ImagePipelineExecutionSet')
  }(name='ImagePipelineExecution', description='Details of the image creation task.'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.', example='50'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists. For information about how to use the returned value, see the "Usage notes" section in this topic.', example='AAAAAdDWBF2****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of returned image components.', example='1'),
}

model DescribeImagePipelineExecutionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImagePipelineExecutionsResponseBody(name='body'),
}

/**
  * *   The image template that is specified by the `ImagePipelineId` parameter cannot be a deleted image template. When an image template is deleted, the corresponding image creation task is deleted.
  * *   You must specify `ImagePipelineId` or `ExecutionId`.
  * *   You can configure the query token by using the `NextToken` parameter. Set the value of NextToken to the value of `NextToken` that was returned the last time you called the `DescribeImagePipelineExecutions` operation. Then, use the `MaxResults` parameter to specify the maximum number of entries to return on each page to query the details of the image creation task.
  *
 */
async function describeImagePipelineExecutions(request: DescribeImagePipelineExecutionsRequest): DescribeImagePipelineExecutionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImagePipelineExecutions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImagePipelinesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imagePipelineId?: [ string ](name='ImagePipelineId', description='The IDs of image templates. Valid values of N: 1 to 20.', example='ip-2ze5tsl5bp6nf2b3****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page. Valid values: 1 to 500.

Default value: 50.', example='50', minimum=1, maximum=500, position='Query'),
  name?: string(name='Name', description='The name of the image template.', example='testImagePipeline', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the image template.', position='Query'),
}

model DescribeImagePipelinesResponseBody = {
  imagePipeline?: {
    imagePipelineSet?: [ 
    {
      addAccounts?: {
        addAccount?: [ string ](name='AddAccount')
      }(name='AddAccounts', description='The IDs of Alibaba Cloud accounts to which to share the image that will be created based on the image template.'),
      baseImage?: string(name='BaseImage', description='The source image.

*   When `BaseImageType` is set to IMAGE, the value of this parameter is the ID of a custom image.
*   When `BaseImageType` is set to IMAGE_FAMILY, the value of this parameter is the name of an image family.', example='m-bp67acfmxazb4p****'),
      baseImageType?: string(name='BaseImageType', description='The type of the source image. Valid values:

*   IMAGE: custom image
*   IMAGE_FAMILY: image family', example='IMAGE'),
      buildContent?: string(name='BuildContent', description='The content of the image template.', example='FROM IMAGE:m-bp67acfmxazb4p****'),
      creationTime?: string(name='CreationTime', description='The time when the image template was created.', example='2020-11-24T06:00:00Z'),
      deleteInstanceOnFailure?: boolean(name='DeleteInstanceOnFailure', description='Indicates whether to release the intermediate instance when the image fails to be created.', example='true'),
      description?: string(name='Description', description='The description of the image template.', example='This is description.'),
      imageName?: string(name='ImageName', description='The name prefix of the image to be created based on the image template.', example='testImageName'),
      imagePipelineId?: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****'),
      instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.g6.large'),
      internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The size of the outbound public bandwidth for the intermediate instance. Unit: Mbit/s.', example='0'),
      name?: string(name='Name', description='The name of the image template.', example='testImagePipeline'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp67acfmxazb4p****'),
      systemDiskSize?: int32(name='SystemDiskSize', description='The system disk size of the intermediate instance. Unit: GiB', example='40'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of the tag.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of the tag.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the image template.'),
      toRegionIds?: {
        toRegionId?: [ string ](name='ToRegionId')
      }(name='ToRegionIds', description='The IDs of regions to which to distribute the image that will be created based on the image template.'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch in the virtual private cloud (VPC).', example='vsw-bp67acfmxazb4p****'),
    }
  ](name='ImagePipelineSet')
  }(name='ImagePipeline', description='Details about the image templates.'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page.', example='50'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. For information about how to use the return value, see the "Usage notes" section of this topic.', example='AAAAAdDWBF2****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of image templates returned.', example='1'),
}

model DescribeImagePipelinesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImagePipelinesResponseBody(name='body'),
}

/**
  * You can use `NextToken` to configure the query token. Set the value to the `NextToken` value that is returned in the previous call to the `DescribeImagePipelines` operation. Then, use `MaxResults` to specify the maximum number of entries to return on each page.
  *
 */
async function describeImagePipelines(request: DescribeImagePipelinesRequest): DescribeImagePipelinesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImagePipelines', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImageSharePermissionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageId: string(name='ImageId', description='The ID of the custom image.', example='m-bp1caf3yicx5jlfl****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeImageSharePermissionResponseBody = {
  accounts?: {
    account?: [ 
    {
      aliyunId?: string(name='AliyunId', description='The ID of the Alibaba Cloud account.', example='1234567890'),
      sharedTime?: string(name='SharedTime', description='The time when the image was shared. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2023-01-01T12:05:00Z'),
    }
  ](name='Account')
  }(name='Accounts', description='The Alibaba Cloud accounts.'),
  imageId?: string(name='ImageId', description='The ID of the custom image.', example='m-bp1caf3yicx5jlfl****'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  regionId?: string(name='RegionId', description='The region ID of the custom image.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  shareGroups?: {
    shareGroup?: [ 
    {
      group?: string(name='Group', description='The shared group.', example='all'),
    }
  ](name='ShareGroup')
  }(name='ShareGroups', description='The shared groups.'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeImageSharePermissionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImageSharePermissionResponseBody(name='body'),
}

async function describeImageSharePermission(request: DescribeImageSharePermissionRequest): DescribeImageSharePermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImageSharePermission', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImageSupportInstanceTypesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  actionType?: string(name='ActionType', description='The scenario in which you want to use the image. Valid values:

- CreateEcs (default): instance creation
- ChangeOS: replacement of the system disk or operating system', example='CreateEcs', position='Query'),
  filter?: [ 
    {
      key?: string(name='Key', description='Filter N used to filter instance types.', example='imageId'),
      value?: string(name='Value', description='The ID of the image.', example='m-o6w3gy99qf89rkga****'),
    }
  ](name='Filter', description='The number of vCPUs of the instance type.', position='Query'),
  imageId?: string(name='ImageId', description='The region ID of the image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='m-o6w3gy99qf89rkga****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='Details about the instance types that are supported by the image.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeImageSupportInstanceTypesResponseBody = {
  imageId?: string(name='ImageId', description='The key of filter N. Only the image ID can be used to filter instance types. Valid values:

*   imagId: image ID
*   filter: image ID', example='m-o6w3gy99qf89rkga****'),
  instanceTypes?: {
    instanceType?: [ 
    {
      cpuCoreCount?: int32(name='CpuCoreCount', description='The number of vCPUs of the instance type.', example='1'),
      instanceTypeFamily?: string(name='InstanceTypeFamily', description='DescribeImageSupportInstanceTypes', example='ecs.t1'),
      instanceTypeId?: string(name='InstanceTypeId', description='Queries the instance types supported by an image.', example='ecs.t1.xsmall'),
      memorySize?: float(name='MemorySize', description='The memory size of the instance type. Unit: GiB.', example='1024'),
    }
  ](name='InstanceType')
  }(name='InstanceTypes', description='{
    "RequestId": "CF661E2D-4AFE-4BCD-959A-A65E14416B44",
    "RegionId": "cn-hangzhou",
    "ImageId": "ubuntu_16_0402_64_20G_alibase_20180409.vhd",
    "InstanceTypes": {
        "InstanceType": [{
            "InstanceTypeId": "ecs.t1.xsmall",
            "CpuCoreCount": 1,
            "MemorySize": 0.5,
            "InstanceTypeFamily": "ecs.t1"
        },
        {
            "InstanceTypeId": "ecs.t1.small",
            "CpuCoreCount": 1,
            "MemorySize": 1,
            "InstanceTypeFamily": "ecs.t1"
        }]
    }
}'),
  regionId?: string(name='RegionId', description='{
    "RequestId": "CF661E2D-4AFE-4BCD-959A-A65E14416B44",
    "RegionId": "cn-hangzhou",
    "ImageId": "ubuntu_16_0402_64_20G_alibase_20180409.vhd",
    "InstanceTypes": {
        "InstanceType": [{
            "InstanceTypeId": "ecs.t1.xsmall",
            "CpuCoreCount": 1,
            "MemorySize": 0.5,
            "InstanceTypeFamily": "ecs.t1"
        },
        {
            "InstanceTypeId": "ecs.t1.small",
            "CpuCoreCount": 1,
            "MemorySize": 1,
            "InstanceTypeFamily": "ecs.t1"
        }]
    }
}', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeImageSupportInstanceTypesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImageSupportInstanceTypesResponseBody(name='body'),
}

async function describeImageSupportInstanceTypes(request: DescribeImageSupportInstanceTypesRequest): DescribeImageSupportInstanceTypesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImageSupportInstanceTypes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeImagesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  actionType?: string(name='ActionType', description='The scenario in which the image is used. Valid values:

*   CreateEcs: instance creation
*   ChangeOS: replacement of the system disk or OS', example='CreateEcs', position='Query'),
  architecture?: string(name='Architecture', description='The architecture of the image. Valid values:

*   i386
*   x86\\_64
*   arm64', example='i386', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run without performing the actual request.

*   true: performs only a dry run. The system checks whether your AccessKey pair is valid, whether RAM users are granted required permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  filter?: [ 
    {
      key?: string(name='Key', description='The key of the filter condition used to query resources. Valid values:

*   If you set this parameter to `CreationStartTime`, you can query the resources that were created after the point in time specified by the `Filter.N.Value` value.
*   If you set this parameter to `CreationEndTime`, you can query the resources that were created before the point in time as specified by the `Filter.N.Value` value.', example='CreationStartTime'),
      value?: string(name='Value', description='The value of filter N used to query resources. When you specify this parameter, you must also specify `Filter.N.Key`. Make sure the time is in the `yyyy-MM-ddTHH:mmZ` format and in UTC.', example='2017-12-05T22:40Z'),
    }
  ](name='Filter', description='The list of filter conditions used to query resources.', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. You can set this parameter to query images of the specified image family.

This parameter is empty by default.

>  For information about image families that are associated with Alibaba Cloud official images, see [Overview of public images](~~108393~~).', example='hangzhou-daily-update', position='Query'),
  imageId?: string(name='ImageId', description='The image IDs.', example='m-bp1g7004ksh0oeuc****', position='Query'),
  imageName?: string(name='ImageName', description='The image name.', example='testImageName', position='Query'),
  imageOwnerAlias?: string(name='ImageOwnerAlias', description='The image source. Valid values:

*   system: images that are provided by Alibaba Cloud and are not released in Alibaba Cloud Marketplace, which are different from public images in the Elastic Compute Service (ECS) console.

*   self: your custom images

*   others: shared images (images shared by other Alibaba Cloud accounts) and community images (publicly available custom images that are published by other Alibaba Cloud accounts). Take note of the following items:

    *   To query community images, you must set IsPublic to true.
    *   To query shared images, you must set IsPublic to false or leave IsPublic empty.

*   marketplace: images released by Alibaba Cloud or independent software vendors (ISVs) in the Alibaba Cloud Marketplace, which must be purchased together with ECS instances. Take note of the billing details of the images.

This parameter is empty by default.

> By default, this parameter is empty, which indicates that the following images are queried: public images provided by Alibaba Cloud, custom images in your repository, shared images from other Alibaba Cloud accounts, and community images that are published by other Alibaba Cloud accounts.', example='self', position='Query'),
  imageOwnerId?: long(name='ImageOwnerId', description='The ID of the Alibaba Cloud account to which the image belongs. This parameter takes effect only when you query shared images or community images.', example='1234567890', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type for which the image can be used.', example='ecs.g5.large', position='Query'),
  isPublic?: boolean(name='IsPublic', description='Specifies whether to query published community images. Valid values:

*   true: queries published community images. When you set this parameter to true, you must set ImageOwnerAlias to others.
*   false: queries image types other than the community images type. The specific image types to be queried are determined by the ImageOwnerAlias value.

Default value: false.', example='false', position='Query'),
  isSupportCloudinit?: boolean(name='IsSupportCloudinit', description='Specifies whether the image supports cloud-init.', example='true', position='Query'),
  isSupportIoOptimized?: boolean(name='IsSupportIoOptimized', description='Specifies whether the image can be used on I/O optimized instances.', example='true', position='Query'),
  OSType?: string(name='OSType', description='The operating system type of the image. Valid values:

*   windows
*   linux', example='linux', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='1', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the custom image belongs. If you specify this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be returned.

> Resources in the default resource group are displayed in the response regardless of whether you specify this parameter.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  showExpired?: boolean(name='ShowExpired', description='Specifies whether the subscription image has expired.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='false', position='Query'),
  snapshotId?: string(name='SnapshotId', description='The ID of the snapshot used to create the custom image.', example='s-bp17ot2q7x72ggtw****', position='Query'),
  status?: string(name='Status', description='The status of the image. By default, if you do not specify this parameter, only images in the Available state are returned. Valid values:

*   Creating: The image is being created.
*   Waiting: The image is waiting to be processed.
*   Available: The image is available.
*   UnAvailable: The image is unavailable.
*   CreateFailed: The image fails to be created.
*   Deprecated: The image is deprecated.

Default value: Available. You can specify multiple values for this parameter. Separate the values with commas (,).', example='Available', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The tag N key of the image. Valid values of N: 1 to 20.

Up to 1,000 resources that match the specified tags can be returned in the response. To query more than 1,000 resources that match the specified tags, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The tag value of the image. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags list.', position='Query'),
  usage?: string(name='Usage', description='Specifies whether the image is running on an Elastic Compute Service (ECS) instance. Valid values:

*   instance: The image is already in use and running on an ECS instance.
*   none: The image is idle.', example='instance', position='Query'),
}

model DescribeImagesResponseBody = {
  images?: {
    image?: [ 
    {
      architecture?: string(name='Architecture', description='The architecture of the image. Valid values:

*   i386
*   x86\\_64
*   arm64', example='x86_64'),
      bootMode?: string(name='BootMode', description='The boot mode of the image. Valid values:

*   BIOS: Basic Input/Output System (BIOS)
*   UEFI: Unified Extensible Firmware Interface (UEFI)', example='BIOS'),
      creationTime?: string(name='CreationTime', description='The time when the image was created.', example='2019-11-15T06:07:05Z'),
      description?: string(name='Description', description='The description of the image.', example='Archive log for Oracle'),
      detectionOptions?: {
        items?: {
          item?: [ 
          {
            name?: string(name='Name', description='The name of the check item.', example='Nvme'),
            riskCode?: string(name='RiskCode', description='The risk that the check item may have.', example='NVMe.NotInstallded'),
            riskLevel?: string(name='RiskLevel', description='The severity of the risk that the check item of the imported custom image has. If the check item is at risk, this parameter is returned. If the check item is not at risk, this parameter is not returned.

Valid values:

*   High: The check item is a high-risk item that may affect the startup of the instance. We recommend that you handle the risk.
*   Medium: The check item is a medium-risk item that may affect the startup performance or configurations of the instance. We recommend that you handle the risk.', example='High'),
            value?: string(name='Value', description='The result of the check item.', example='Supported'),
          }
        ](name='Item')
        }(name='Items', description='The check items.'),
        status?: string(name='Status', description='The state of the image check task. Valid values:

*   Processing
*   Finished', example='Processing'),
      }(name='DetectionOptions', description='Details about the check performed on the image.'),
      diskDeviceMappings?: {
        diskDeviceMapping?: [ 
        {
          device?: string(name='Device', description='The device name of the disk. Example: /dev/xvdb.

>  This parameter will be removed in the future. To ensure compatibility, we recommend that you use other parameters.', example='/dev/xvda'),
          format?: string(name='Format', description='The format of the image.', example='qcow2'),
          importOSSBucket?: string(name='ImportOSSBucket', description='The Object Storage Service (OSS) bucket that contains the imported image file.', example='testEcsImport'),
          importOSSObject?: string(name='ImportOSSObject', description='The OSS object that corresponds to the imported image file.', example='imageImport'),
          progress?: string(name='Progress', description='The progress of the image copy task.', example='32%'),
          remainTime?: int32(name='RemainTime', description='The remaining time of the image copy task. Unit: seconds.', example='233'),
          size?: string(name='Size', description='The size of the disk. Unit: GiB.', example='60'),
          snapshotId?: string(name='SnapshotId', description='The ID of the snapshot.', example='s-bp17ot2q7x72ggtw****'),
          type?: string(name='Type', description='The type of the image.', example='system'),
        }
      ](name='DiskDeviceMapping')
      }(name='DiskDeviceMappings', description='The mappings between disks and snapshots in the image.'),
      features?: {
        nvmeSupport?: string(name='NvmeSupport', description='Indicates whether the image supports the Non-Volatile Memory Express (NVMe) protocol. Valid values:

*   supported: The image supports the NVMe protocol. Instances created from the image also support the NVMe protocol.
*   unsupported: The image does not support the NVMe protocol. Instances created from the image do not support the NVMe protocol.', example='supported'),
      }(name='Features', description='The attributes of the image.'),
      imageFamily?: string(name='ImageFamily', description='The name of the image family.', example='hangzhou-daily-update'),
      imageId?: string(name='ImageId', description='The ID of the image.', example='m-bp1g7004ksh0oeuc****'),
      imageName?: string(name='ImageName', description='The name of the image.', example='testImageName'),
      imageOwnerAlias?: string(name='ImageOwnerAlias', description='The source of the image. Valid values:

*   system: a public image provided by Alibaba Cloud
*   self: a custom image that you created
*   others: a shared image from another Alibaba Cloud account or a community image published by another Alibaba Cloud account
*   marketplace: an Alibaba Cloud Marketplace image', example='self'),
      imageOwnerId?: long(name='ImageOwnerId', description='The ID of the Alibaba Cloud account to which the image belongs. This parameter takes effect only if you query shared images or community images.', example='1234567890'),
      imageVersion?: string(name='ImageVersion', description='The version of the image.', example='2'),
      isCopied?: boolean(name='IsCopied', description='Indicates whether the image is a copy of another image.', example='false'),
      isPublic?: boolean(name='IsPublic', description='Indicates whether the image is publicly available. Publicly available images include public images provided by Alibaba Cloud and custom images published as community images. Valid values:

*   true: The image is publicly available.
*   false: The image is publicly unavailable.', example='false'),
      isSelfShared?: string(name='IsSelfShared', description='Indicates whether the custom image was shared to other Alibaba Cloud accounts.', example='true'),
      isSubscribed?: boolean(name='IsSubscribed', description='Indicates whether you accepted the Terms of Service of the image service that corresponds to the product code.', example='false'),
      isSupportCloudinit?: boolean(name='IsSupportCloudinit', description='Indicates whether the image supports cloud-init.', example='true'),
      isSupportIoOptimized?: boolean(name='IsSupportIoOptimized', description='Indicates whether the image can be used on I/O optimized instances.', example='true'),
      loginAsNonRootSupported?: boolean(name='LoginAsNonRootSupported', description='Indicates whether the image supports logons of non-root users. Valid values:

*   true: The image supports logons of non-root users.
*   false: The image does not support logons of non-root users.', example='false'),
      OSName?: string(name='OSName', description='The display name of the operating system in Chinese.', example='Windows Server 2016 Datacenter Edition 64-bit (Simplified Chinese)'),
      OSNameEn?: string(name='OSNameEn', description='The display name of the operating system in English.', example='Windows Server  2016 Data Center Edition 64bit Chinese Edition'),
      OSType?: string(name='OSType', description='The type of the operating system. Valid values:

*   windows
*   linux', example='windows'),
      platform?: string(name='Platform', description='The operating system platform.', example='Windows Server 2016'),
      productCode?: string(name='ProductCode', description='The Alibaba Cloud Marketplace product code of the image.', example='test000****'),
      progress?: string(name='Progress', description='The creation progress of the image. Unit: percent (%).', example='100%'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the image belongs.', example='rg-bp67acfmxazb4p****'),
      size?: int32(name='Size', description='The size of the image. Unit: GiB.', example='60'),
      status?: string(name='Status', description='The state of the image. Valid values:

*   UnAvailable: The image is unavailable.
*   Available: The image is available.
*   Creating: The image is being created.
*   CreateFailed: The image failed to be created.', example='Available'),
      supplierName?: string(name='SupplierName', description='The name of the supplier that published the community image.', example='TestName'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the image.', example='DTS'),
          tagValue?: string(name='TagValue', description='The tag value of the image.', example='Oracle'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the image.'),
      usage?: string(name='Usage', description='Indicates whether the image was used to create ECS instances. Valid values:

*   instance: The image was used to create one or more ECS instances.
*   none: The image was not used to create ECS instances.', example='none'),
    }
  ](name='Image')
  }(name='Images', description='The information of the images.'),
  pageNumber?: int32(name='PageNumber', description='The page number returned.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  regionId?: string(name='RegionId', description='The region ID of the image.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='66189103-EDB2-43E2-BB60-BFF2B62F4EB8'),
  totalCount?: int32(name='TotalCount', description='The total number of images.', example='1'),
}

model DescribeImagesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeImagesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   You can query your custom images, public images provided by Alibaba Cloud, Alibaba Cloud Marketplace images, and shared images from other Alibaba Cloud accounts.
  * *   This is a paginated query. The response contains the total number of available images and the images on the returned page. By default,10 entries are displayed on each page.
  * *   When you call an API operation by using Alibaba Cloud CLI, you must specify request parameter values of different data types in the required formats. For more information, see [Parameter formats](~~110340~~).
  * *   If you set ImageOwnerAlias to system or others when you call the DescribeImages operation to query public images that are provided by Alibaba Cloud or shared images, Resource Access Management (RAM) policies are ignored in the request. For more information, see [RAM authorization](~~25497~~).
  *
 */
async function describeImages(request: DescribeImagesRequest): DescribeImagesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeImages', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceAttachmentAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds: string(name='InstanceIds', description='The IDs of the instances. The value can be a JSON array that consists of up to 100 instance IDs. Separate the IDs with commas (,).', example='["i-bp67acfmxazb4****", "i-bp67acfmxazb5****", "i-bp67acfmxazb6****"]', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the elasticity assurance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceAttachmentAttributesResponseBody = {
  instances?: {
    instance?: [ 
    {
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4****'),
      privatePoolOptionsId?: string(name='PrivatePoolOptionsId', description='The ID of the private pool. If the value of `PrivatePoolOptionsMatchCriteria` is `Open`, the value of PrivatePoolOptionsId is the ID of the private pool that is automatically matched to the instance.', example='eap-bp67acfmxazb4****'),
      privatePoolOptionsMatchCriteria?: string(name='PrivatePoolOptionsMatchCriteria', description='The match mode of the private pool. Valid values:

*   Open: open private pool. Instances automatically match an open private pool.
*   Target: specified private pool. Instances match a specified private pool.
*   None: no private pool. Instances do not use private pools.', example='Open'),
    }
  ](name='Instance')
  }(name='Instances', description='Details about the private pools that the instances match.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeInstanceAttachmentAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceAttachmentAttributesResponseBody(name='body'),
}

/**
  * A private pool is generated after an elasticity assurance or a capacity reservation is created. The private pool is associated with information about the instances that are created by using the private pool. You can configure a private pool when you create an instance. This way, the instance matches the elasticity assurance or capacity reservation that is associated with the private pool.
  * When a private pool expires, data about the association between instances and the private pool becomes invalid. If you call this operation to query the information about the private pool, empty values are returned.
  *
 */
async function describeInstanceAttachmentAttributes(request: DescribeInstanceAttachmentAttributesRequest): DescribeInstanceAttachmentAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceAttachmentAttributes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-uf6f5trc95ug8t33****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceAttributeResponseBody = {
  clusterId?: string(name='ClusterId', description='The ID of the cluster to which the instance belongs.

> This parameter will be removed in the future. To ensure future compatibility, we recommend that you use other parameters.', example='cls-bp67acfmxazb4p****'),
  cpu?: int32(name='Cpu', description='The number of vCPUs.', example='8'),
  creationTime?: string(name='CreationTime', description='The time when the instance was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC. For more information, see [ISO 8601](~~25696~~).', example='2017-12-10T04:04Z'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the [Performance modes](~~59977#section-svb-w9d-dju~~) section of the "Overview of burstable instances" topic.
*   Unlimited: the unlimited mode. For more information, see the [Performance modes](~~59977#section-svb-w9d-dju~~) section of the "Overview of burstable instances" topic.', example='Standard'),
  dedicatedHostAttribute?: {
    dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-2ze7qrzz6lvbfhr0****'),
    dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host.', example='ecs-autoui-create-ddh-temp'),
  }(name='DedicatedHostAttribute', description='Details about the dedicated host. It is an array that consists of the DedicatedHostClusterId, DedicatedHostId, and DedicatedHostName parameters.'),
  description?: string(name='Description', description='The description of the instance.', example='testDescription'),
  eipAddress?: {
    allocationId?: string(name='AllocationId', description='The ID of the EIP.', example='eip-wz9uilio26dfscamm****'),
    bandwidth?: int32(name='Bandwidth', description='The maximum public bandwidth of the EIP. Unit: Mbit/s.', example='8'),
    internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth
*   PayByTraffic

>  When the **pay-by-traffic** billing method is used for network usage, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios in which demands exceed resource supplies, the maximum bandwidths may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic'),
    ipAddress?: string(name='IpAddress', description='The ID of the elastic IP address (EIP).', example='30.21.**.**'),
  }(name='EipAddress', description='The elastic IP address (EIP) associated with the instance.'),
  enableJumboFrame?: boolean(name='EnableJumboFrame', description='Indicates whether the Jumbo Frame feature is enabled for the instance. Valid values:

*   true
*   false

For more information, see [MTUs](~~200512~~).', example='false'),
  expiredTime?: string(name='ExpiredTime', description='The time when the instance expires. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC. For more information, see [ISO 8601](~~25696~~).', example='2017-12-10T04:04Z'),
  hostName?: string(name='HostName', description='The hostname of the instance.', example='testHostName'),
  imageId?: string(name='ImageId', description='The ID of the image that the instance is running.', example='m-bp1h46wfpjsjastc****'),
  innerIpAddress?: {
    ipAddress?: [ string ](name='IpAddress')
  }(name='InnerIpAddress', description='The internal IP address of the instance located in the classic network.'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription.
*   PostPaid: pay-as-you-go', example='PrePaid'),
  instanceId?: string(name='InstanceId', description='The instance ID', example='i-uf6f5trc95ug8t33****'),
  instanceName?: string(name='InstanceName', description='The instance name.', example='testInstanceName'),
  instanceNetworkType?: string(name='InstanceNetworkType', description='The network type of the instance. Valid values:

*   classic: classic network
*   vpc: VPC', example='vpc'),
  instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.g5.large'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth
*   PayByTraffic

>  When the **pay-by-traffic** billing method is used for network usage, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios in which demands exceed resource supplies, the maximum bandwidths may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s.', example='50'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s.', example='5'),
  ioOptimized?: string(name='IoOptimized', description='Indicates whether the instance is I/O optimized.', example='true'),
  memory?: int32(name='Memory', description='The memory size of the instance. Unit: MiB.', example='16384'),
  operationLocks?: {
    lockReason?: [ 
    {
      lockReason?: string(name='LockReason', description='The reason why the instance was locked. Valid values:

*   financial: The instance was locked due to overdue payments.
*   security: The instance was locked due to security reasons.
*   recycling: The preemptible instance was locked and pending release.
*   dedicatedhostfinancial: The instance was locked due to overdue payments for the dedicated host.
*   refunded: The instance was locked because a refund is made for the instance.', example='financial'),
    }
  ](name='LockReason')
  }(name='OperationLocks', description='The reason why the instance was locked. Valid values:

*   financial: The dedicated host was locked due to overdue payments.
*   security: The instance was locked due to security reasons.
*   recycling: The preemptible instance was locked and pending release.
*   dedicatedhostfinancial: The instance was locked due to overdue payments for the dedicated host.
*   refunded: The instance was locked because a refund was made for the instance.'),
  publicIpAddress?: {
    ipAddress?: [ string ](name='IpAddress')
  }(name='PublicIpAddress', description='The public IP address of the instance.'),
  regionId?: string(name='RegionId', description='The ID of the region in which the instance resides.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  securityGroupIds?: {
    securityGroupId?: [ string ](name='SecurityGroupId')
  }(name='SecurityGroupIds', description='The IDs of the security groups to which the instance belongs.'),
  serialNumber?: string(name='SerialNumber', description='The serial number of the instance.', example='51d1353b-22bf-4567-a176-8b3e12e4****'),
  status?: string(name='Status', description='The status of the instance. Valid values:

*   Pending: The instance is being created.
*   Running: The instance is running.
*   Starting: The instance is being started.
*   Stopping: The instance is being stopped.
*   Stopped: The instance is stopped.', example='Running'),
  stoppedMode?: string(name='StoppedMode', description='Indicates whether the system implements billing after the instance is stopped. Valid values:

*   KeepCharging: The instance is stopped in standard mode. The billing of the instance continues after the instance is stopped, and resources are retained for the instance.
*   StopCharging: The instance is stopped in economical mode. The billing of some resources of the instance stops after the instance is stopped. When the instance is stopped, its resources such as vCPUs, memory, and public IP address are released. The instance may be unable to start again if some required resources are out of stock in the current region.
*   Not-applicable: The instance does not support economical mode.', example='KeepCharging'),
  vlanId?: string(name='VlanId', description='The virtual LAN (VLAN) ID of the instance.

> This parameter will be removed in the future. To ensure future compatibility, we recommend that you use other parameters.', example='10'),
  vpcAttributes?: {
    natIpAddress?: string(name='NatIpAddress', description='The NAT IP address of the instance. It is used by ECS instances in different VPCs for communication.', example='172.17.**.**'),
    privateIpAddress?: {
      ipAddress?: [ string ](name='IpAddress')
    }(name='PrivateIpAddress', description='The private IP address of the instance.'),
    vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the instance is connected.', example='vsw-uf6ixacqz8osrwnqb****'),
    vpcId?: string(name='VpcId', description='The ID of the VPC.', example='vpc-wz9e4e9pmbcnj6ki6****'),
  }(name='VpcAttributes', description='The VPC attributes of the instance.'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which the instance resides.', example='cn-hangzhou-g'),
}

model DescribeInstanceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceAttributeResponseBody(name='body'),
}

async function describeInstanceAttribute(request: DescribeInstanceAttributeRequest): DescribeInstanceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceAutoRenewAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The IDs of the instances. You can specify up to 100 subscription instance IDs in a single request. Separate multiple instance IDs with commas (,).

> `InstanceId` and `RenewalStatus` cannot be empty at the same time.', example='i-bp18x3z4hc7bixhx****,i-bp1g6zv0ce8oghu7****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: string(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: string(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  renewalStatus?: string(name='RenewalStatus', description='The auto-renewal state of the instance. Valid values:

*   AutoRenewal: Auto-renewal is enabled for the instance.
*   Normal: Auto-renewal is disabled for the instance.
*   NotRenewal: The instance is not to be renewed. The system sends no more expiration reminders, but sends only a non-renewal reminder three days before the expiration date. For an instance that is not to be renewed, you can call the [ModifyInstanceAutoRenewAttribute](~~52843~~) operation to change its auto-renewal status to `Normal`. Then, you can manually renew the instance or enable auto-renewal for the instance.', example='AutoRenewal', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceAutoRenewAttributeResponseBody = {
  instanceRenewAttributes?: {
    instanceRenewAttribute?: [ 
    {
      autoRenewEnabled?: boolean(name='AutoRenewEnabled', description='Indicates whether auto-renewal is enabled.', example='false'),
      duration?: int32(name='Duration', description='The auto-renewal duration.', example='1'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp18x3z4hc7bixhx****'),
      periodUnit?: string(name='PeriodUnit', description='The unit of the auto-renewal duration.', example='week'),
      renewalStatus?: string(name='RenewalStatus', description='The auto-renewal state of the instance. Valid values:

*   AutoRenewal: Auto-renewal is enabled for the instance.
*   Normal: Auto-renewal is disabled for the instance.
*   NotRenewal: The instance is not to be renewed. The system sends no more expiration reminders, but sends only a non-renewal reminder three days before the expiration date. For an instance that is not to be renewed, you can call the [ModifyInstanceAutoRenewAttribute](~~52843~~) operation to change its auto-renewal status to `Normal`. Then, you can manually renew the instance or enable auto-renewal for the instance.', example='Normal'),
    }
  ](name='InstanceRenewAttribute')
  }(name='InstanceRenewAttributes', description='The renewal attributes of instances.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of queried instances.', example='6'),
}

model DescribeInstanceAutoRenewAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceAutoRenewAttributeResponseBody(name='body'),
}

/**
  * *   Before you configure auto-renewal or manual renewal for subscription instances, you can query the auto-renewal status of the instances.
  * *   This operation is applicable to only subscription instances. An error is returned if you call this operation on pay-as-you-go instances.
  *
 */
async function describeInstanceAutoRenewAttribute(request: DescribeInstanceAutoRenewAttributeRequest): DescribeInstanceAutoRenewAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceAutoRenewAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceHistoryEventsRequest {
  eventPublishTime?: {
    end?: string(name='End', description='The end of the time range in which to query published system events. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-12-01T06:32:31Z'),
    start?: string(name='Start', description='The beginning of the time range in which to query published system events. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-30T06:32:31Z'),
  }(name='EventPublishTime', position='Query'),
  notBefore?: {
    end?: string(name='End', description='The latest scheduled end time for the system event. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-12-01T06:32:31Z'),
    start?: string(name='Start', description='The earliest scheduled start time for the system event. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-30T06:32:31Z'),
  }(name='NotBefore', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  eventCycleStatus?: string(name='EventCycleStatus', description='The lifecycle state of the system event. This parameter takes effect only when InstanceEventCycleStatus.N is not specified. Valid values:

*   Scheduled
*   Avoided
*   Executing
*   Executed
*   Canceled
*   Failed
*   Inquiring', example='Executed', position='Query'),
  eventId?: [ string ](name='EventId', description='The ID of system event N. Valid values of N: 1 to 100. You can repeat this parameter to pass multiple values.', example='e-uf64yvznlao4jl2c****', position='Query'),
  eventType?: string(name='EventType', description='The type of the system event. This parameter takes effect only when InstanceEventType.N is not specified. Valid values:

*   SystemMaintenance.Reboot: The instance is restarted due to system maintenance.
*   SystemMaintenance.Redeploy: The instance is redeployed due to system maintenance.
*   SystemFailure.Reboot: The instance is restarted due to a system error.
*   SystemFailure.Redeploy: The instance is redeployed due to a system error.
*   SystemFailure.Delete: The instance is released due to an instance creation failure.
*   InstanceFailure.Reboot: The instance is restarted due to an instance error.
*   InstanceExpiration.Stop: The subscription instance is stopped due to expiration.
*   InstanceExpiration.Delete: The subscription instance is released due to expiration.
*   AccountUnbalanced.Stop: The pay-as-you-go instance is stopped due to an overdue payment.
*   AccountUnbalanced.Delete: The pay-as-you-go instance is released due to an overdue payment.

>  For more information, see [Overview](~~66574~~). The values of this parameter are applicable only to instance system events, but not to disk system events.', example='SystemMaintenance.Reboot', position='Query'),
  impactLevel?: string(name='ImpactLevel', description='>  This parameter is not publicly available.', example='null', position='Query'),
  instanceEventCycleStatus?: [ string ](name='InstanceEventCycleStatus', description='The lifecycle state of system event N. Valid values of N: 1 to 7. You can repeat this parameter to pass multiple values. Valid values:

*   Scheduled
*   Avoided
*   Executing
*   Executed
*   Canceled
*   Failed
*   Inquiring', example='Executed', position='Query'),
  instanceEventType?: [ string ](name='InstanceEventType', description='The type of system event N. Valid values of N: 1 to 30. You can repeat this parameter to pass multiple values. Valid values:

*   SystemMaintenance.Reboot: The instance is restarted due to system maintenance.
*   SystemMaintenance.Redeploy: The instance is redeployed due to system maintenance.
*   SystemFailure.Reboot: The instance is restarted due to a system error.
*   SystemFailure.Redeploy: The instance is redeployed due to a system error.
*   SystemFailure.Delete: The instance is released due to an instance creation failure.
*   InstanceFailure.Reboot: The instance is restarted due to an instance error.
*   InstanceExpiration.Stop: The subscription instance is stopped due to expiration.
*   InstanceExpiration.Delete: The subscription instance is released due to expiration.
*   AccountUnbalanced.Stop: The pay-as-you-go instance is stopped due to an overdue payment.
*   AccountUnbalanced.Delete: The pay-as-you-go instance is released due to an overdue payment.

>  For more information, see [Overview](~~66574~~). The values of this parameter are applicable only to instance system events, but not to disk system events.', example='SystemMaintenance.Reboot', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the instance. If this parameter is not specified, the system events of all instances in the specified region are queried.', example='i-uf678mass4zvr9n1****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call [DescribeRegions](~~25609~~) to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the resource belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The ID of resource N. Valid values of N: 1 to 100. You can repeat this parameter to pass multiple values. Valid values:

*   When `ResourceType` is set to instance, ResourceId.N specifies the ID of instance N.
*   When `ResourceType` is set to ddh, ResourceId.N specifies the ID of dedicated host N.
*   When `ResourceType` is set to managedhost, ResourceId.N specifies the ID of physical machine N from a smart hosting pool.

If this parameter is not specified, the system events of all resources of the type specified by `ResourceType` in the region specified by `RegionId` are queried.

>  We recommend that you use `ResourceId.N` to specify one or more resource IDs. If you specify both `ResourceId.N` and `InstanceId`, `ResourceId.N` takes precedence by default.', example='i-uf678mass4zvr9n1****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance
*   ddh: dedicated host
*   managehost: physical machine in a smart hosting pool

Default value: instance.', example='instance', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the resource.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the resource.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
}

model DescribeInstanceHistoryEventsResponseBody = {
  instanceSystemEventSet?: {
    instanceSystemEventType?: [ 
    {
      eventCycleStatus?: {
        code?: int32(name='Code', description='The state code of the system event.', example='0'),
        name?: string(name='Name', description='The state name of the system event.', example='Executed'),
      }(name='EventCycleStatus', description='The lifecycle status of the system event.'),
      eventFinishTime?: string(name='EventFinishTime', description='The time when the system event ended. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2017-12-01T06:35:31Z'),
      eventId?: string(name='EventId', description='The ID of the system event.', example='e-uf64yvznlao4jl2c****'),
      eventPublishTime?: string(name='EventPublishTime', description='The time when the system event was published. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2017-11-30T06:32:31Z'),
      eventType?: {
        code?: int32(name='Code', description='The code of the system event type.', example='34'),
        name?: string(name='Name', description='The name of the system event type.', example='InstanceExpiration.Stop'),
      }(name='EventType', description='The type of the system event.'),
      extendedAttribute?: {
        canAccept?: string(name='CanAccept', description='Indicates whether the event can be handled.', example='true'),
        code?: string(name='Code', description='The code of the security violation.', example='PR111'),
        device?: string(name='Device', description='The device name of the local disk.', example='/dev/vda'),
        diskId?: string(name='DiskId', description='The ID of the local disk.', example='d-diskid1'),
        hostId?: string(name='HostId', description='The ID of the host.', example='dh-bp1ewce1gk3iwv2****'),
        hostType?: string(name='HostType', description='The type of the host. Valid values:

*   ddh: dedicated host
*   managehost: physical machine in a smart hosting pool', example='ddh'),
        inactiveDisks?: {
          inactiveDisk?: [ 
          {
            creationTime?: string(name='CreationTime', description='The time when the disk was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2018-11-30T06:32:31Z'),
            deviceCategory?: string(name='DeviceCategory', description='The category of the disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: Enterprise SSD (ESSD)
*   local_ssd_pro: I/O-intensive local disk
*   local_hdd_pro: throughput-intensive local disk
*   ephemeral: retired local disk
*   ephemeral_ssd: retired local SSD', example='cloud_efficiency'),
            deviceSize?: string(name='DeviceSize', description='The size of the disk. Unit: GiB.', example='80'),
            deviceType?: string(name='DeviceType', description='The type of the disk. Valid values:

*   system: system disk
*   data: data disk', example='data'),
            releaseTime?: string(name='ReleaseTime', description='The time when the disk was released. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-11-30T06:32:31Z'),
          }
        ](name='InactiveDisk')
        }(name='InactiveDisks', description='The inactive disks that have been released and whose data must be cleared.'),
        migrationOptions?: {
          migrationOption?: [ string ](name='MigrationOption')
        }(name='MigrationOptions', description='The migration solution of the instance. Valid value: MigrationPlan. Instances can be migrated only by using migration plans.'),
        onlineRepairPolicy?: string(name='OnlineRepairPolicy', description='The online repair policy for the damaged disk. Valid value: IsolateOnly, which indicates that damaged disks are isolated but not repaired.', example='IsolateOnly'),
        punishDomain?: string(name='PunishDomain', description='The illegal domain name.', example='1228.test.com'),
        punishType?: string(name='PunishType', description='The type of the penalty.', example='ecs_message_alert'),
        punishUrl?: string(name='PunishUrl', description='The illegal URL.', example='http://1228.test.com/1'),
        rack?: string(name='Rack', description='The rack number of the cloud box.', example='A01'),
        responseResult?: string(name='ResponseResult', description='The response result of the event. Valid values:

*   true: The event was handled.
*   false: The event failed to be handled.', example='true'),
      }(name='ExtendedAttribute', description='The extended attribute of the system event.'),
      impactLevel?: string(name='ImpactLevel', description='The impact level of the system event.', example='100'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-uf678mass4zvr9n1****'),
      notBefore?: string(name='NotBefore', description='The scheduled start time of the system event. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2017-12-06T00:00:00Z'),
      reason?: string(name='Reason', description='The reason why the system event was scheduled.', example='System maintenance is scheduled due to ***.'),
      resourceType?: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance
*   ddh: dedicated host
*   managehost: physical machine in a smart hosting pool', example='instance'),
    }
  ](name='InstanceSystemEventType')
  }(name='InstanceSystemEventSet', description='Details about the instance system events.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of instances returned.', example='2'),
}

model DescribeInstanceHistoryEventsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceHistoryEventsResponseBody(name='body'),
}

/**
  * *   You can query system events that were completed within the last 30 days. No limits apply to the time range for querying uncompleted system events.
  * *   You can also specify InstanceEventCycleStatus to query the system events that are in the Scheduled, Executing, or Inquiring state.
  *
 */
async function describeInstanceHistoryEvents(request: DescribeInstanceHistoryEventsRequest): DescribeInstanceHistoryEventsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceHistoryEvents', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceMaintenanceAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: [ string ](name='InstanceId', description='The instance IDs. You can specify up to 100 instance IDs.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceMaintenanceAttributesResponseBody = {
  maintenanceAttributes?: {
    maintenanceAttribute?: [ 
    {
      actionOnMaintenance?: {
        defaultValue?: string(name='DefaultValue', description='The default maintenance action.', example='AutoRecover'),
        supportedValues?: {
          supportedValue?: [ string ](name='SupportedValue')
        }(name='SupportedValues', description='The supported maintenance actions.'),
        value?: string(name='Value', description='The current maintenance action. Valid values:

*   Stop: stops the instance.
*   AutoRecover: automatically recovers the instance.
*   AutoRedeploy: redeploys the instance, which may damage the data disks attached to the instance.', example='Stop'),
      }(name='ActionOnMaintenance', description='The attributes of the maintenance action of the instance.'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
      maintenanceWindows?: {
        maintenanceWindow?: [ 
        {
          endTime?: string(name='EndTime', description='The end time of the maintenance window.', example='18:00:00'),
          startTime?: string(name='StartTime', description='The start time of the maintenance window.', example='02:00:00'),
        }
      ](name='MaintenanceWindow')
      }(name='MaintenanceWindows', description='The maintenance windows.'),
      notifyOnMaintenance?: boolean(name='NotifyOnMaintenance', description='Indicates whether an event notification was sent before maintenance.', example='false'),
    }
  ](name='MaintenanceAttribute')
  }(name='MaintenanceAttributes', description='The maintenance attributes.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of queried maintenance attributes.', example='100'),
}

model DescribeInstanceMaintenanceAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceMaintenanceAttributesResponseBody(name='body'),
}

/**
  * This operation is used to query the specified maintenance policy of an instance, which contains the following maintenance attributes:
  * *   Maintenance window: the time period that you specify for maintenance.
  * *   Maintenance action: the action that you specify in response to instance shutdown.
  *
 */
async function describeInstanceMaintenanceAttributes(request: DescribeInstanceMaintenanceAttributesRequest): DescribeInstanceMaintenanceAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceMaintenanceAttributes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceModificationPriceRequest {
  systemDisk?: {
    category?: string(name='Category', description='The category of the system disk. You must specify this parameter only when you upgrade a non-I/O optimized instance of a retired instance type to an I/O optimized instance of an available instance type. For more information about instance types, see [Instance families](~~25378~~) and [Retired instance types](~~55263~~).

Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD

This parameter is empty by default.', example='cloud_ssd'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dataDisk?: [ 
    {
      category?: string(name='Category', description='The category of data disk N. You can specify this parameter if you want to query the pricing information about newly attached subscription data disks. Valid values of N: 1 to 16. Valid values:

*   cloud_efficiency: utra disk.
*   cloud_ssd: standard SSD.
*   cloud_essd: ESSD.
*   cloud: basic disk.

This parameter is empty by default.

>  When you call the DescribeInstanceModificationPrice operation, you must specify at least one of the following parameters: `InstanceType` and `DataDisk.N.*`.', example='cloud_essd'),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of data disk N that is an enhanced SSD (ESSD). The value of N must be the same as that in `DataDisk.N.Category` when DataDisk.N.Category is set to cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

Default value: PL1.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1'),
      size?: int32(name='Size', description='The capacity of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values when DataDisk.N.Category is set to cloud_efficiency: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_ssd: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_essd: vary based on the `DataDisk.N.PerformanceLevel` value.

    *   Valid values when DataDisk.N.PerformanceLevel is set to PL0: 1 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL1: 20 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL2: 461 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL3: 1261 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud: 5 to 2000.

The default value is the minimum capacity allowed for the specified data disk category.', example='100'),
    }
  ](name='DataDisk', description='The information about data disks.', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance for which you want to query pricing information for a configuration upgrade.', example='i-bp1f2o4ldh8l****', position='Query'),
  instanceType?: string(name='InstanceType', description='The new instance type. We recommend that you call the [DescribeResourcesModification](~~66187~~) operation to query the instance types available for configuration upgrades in a specified zone.

> When you call the DescribeInstanceModificationPrice operation, you must specify at least one of the following parameters: `InstanceType` and `DataDisk.N.*`.', example='ecs.g6e.large', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceModificationPriceResponseBody = {
  priceInfo?: {
    price?: {
      currency?: string(name='Currency', description='The currency unit.

Alibaba Cloud China site (aliyun.com): CNY

Alibaba Cloud International site (alibabacloud.com): USD', example='CNY'),
      discountPrice?: float(name='DiscountPrice', description='The discount.', example='61.320'),
      originalPrice?: float(name='OriginalPrice', description='The original price.', example='175.200'),
      tradePrice?: float(name='TradePrice', description='The transaction price, which is equal to the original price minus the discount.', example='113.880'),
    }(name='Price', description='The price.'),
    rules?: {
      rule?: [ 
      {
        description?: string(name='Description', description='The description of the promotion rule.', example='Upgrade offers'),
        ruleId?: long(name='RuleId', description='The ID of the promotion rule.', example='1234567890'),
      }
    ](name='Rule')
    }(name='Rules', description='The promotion rules.'),
  }(name='PriceInfo', description='Details about the prices and promotion rules.'),
  requestId?: string(name='RequestId', description='The request ID.', example='A3DC3196-379B-4F32-A2C5-B937134FAD8A'),
}

model DescribeInstanceModificationPriceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceModificationPriceResponseBody(name='body'),
}

/**
  * *   Pricing information can be queried for unexpired subscription ECS instances only when you upgrade their configurations. The pricing information cannot be queried when the instance configurations are downgraded.
  * *   Pricing information cannot be queried for pay-as-you-go ECS instances when you change their configurations. Prices of existing pay-as-you-go ECS instances whose configurations are changed are the same as those of new pay-as-you-go instances. You can call the [DescribePrice](~~107829~~) operation to query the latest prices of ECS instances.
  * *   Before you upgrade the configurations of an instance, we recommend that you call the [DescribeResourcesModification](~~66187~~) operation to query the instance types available for configuration upgrades in a specified zone.
  *
 */
async function describeInstanceModificationPrice(request: DescribeInstanceModificationPriceRequest): DescribeInstanceModificationPriceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceModificationPrice', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceMonitorDataRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  endTime: string(name='EndTime', description='The end of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (`ss`) is not `00`, the time is rounded up to the next minute.', example='2014-10-30T08:00:00Z', position='Query'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp1a36962lrhj4ab****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The interval at which to retrieve monitoring data. Unit: seconds. Valid values:

*   60
*   600
*   3600

Default value: 60.', example='60', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', description='The beginning of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (`ss`) is not `00`, the time is rounded up to the next minute.', example='2014-10-29T23:00:00Z', position='Query'),
}

model DescribeInstanceMonitorDataResponseBody = {
  monitorData?: {
    instanceMonitorData?: [ 
    {
      BPSRead?: int32(name='BPSRead', description='The read bandwidth of the cloud disks (system disk and data disks). Unit: Byte/s.', example='1000'),
      BPSWrite?: int32(name='BPSWrite', description='The write bandwidth of the cloud disks (system disk and data disks). Unit: Byte/s.', example='13585'),
      CPU?: int32(name='CPU', description='The vCPU utilization of the instance. Unit: percent (%).', example='2'),
      CPUAdvanceCreditBalance?: float(name='CPUAdvanceCreditBalance', description='The overdrawn CPU credits of the burstable instance.', example='0.4'),
      CPUCreditBalance?: float(name='CPUCreditBalance', description='The total number of CPU credits of the burstable instance.', example='120'),
      CPUCreditUsage?: float(name='CPUCreditUsage', description='The number of CPU credits consumed by the burstable instance.', example='30'),
      CPUNotpaidSurplusCreditUsage?: float(name='CPUNotpaidSurplusCreditUsage', description='The unpaid overdrawn CPU credits.', example='0.5'),
      IOPSRead?: int32(name='IOPSRead', description='The number of read I/O operations per second on the cloud disks (system disk and data disks).', example='1000'),
      IOPSWrite?: int32(name='IOPSWrite', description='The number of write I/O operations per second on the cloud disks (system disk and data disks).', example='200'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1a36962lrhj4****'),
      internetBandwidth?: int32(name='InternetBandwidth', description='The public bandwidth of the instance. Unit: Kbit/s.', example='10'),
      internetRX?: int32(name='InternetRX', description='The Internet traffic received by the instance during the period that is specified by the `Period` parameter. The period starts from the point in time that is specified by the `TimeStamp` parameter. Unit: Kbit.', example='122'),
      internetTX?: int32(name='InternetTX', description='The Internet traffic sent by the instance during the period that is specified by the `Period` parameter. The period starts from the point in time that is specified by the `TimeStamp` parameter. Unit: Kbit.', example='343'),
      intranetBandwidth?: int32(name='IntranetBandwidth', description='The internal bandwidth of the instance. Unit: Kbit/s.', example='10'),
      intranetRX?: int32(name='IntranetRX', description='The internal data traffic received by the instance during the period that is specified by the `Period` parameter. The period starts from the point in time that is specified by the `TimeStamp` parameter. Unit: Kbit.', example='122'),
      intranetTX?: int32(name='IntranetTX', description='The internal data traffic sent by the instance during the period that is specified by the `Period` parameter. The period starts from the point in time that is specified by the `TimeStamp` parameter. Unit: Kbit.', example='343'),
      timeStamp?: string(name='TimeStamp', description='The timestamp of the monitoring data.', example='2014-10-30T05:00:00Z'),
    }
  ](name='InstanceMonitorData')
  }(name='MonitorData', description='The monitoring data of the instance.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeInstanceMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceMonitorDataResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   Up to 400 monitoring data entries can be returned at a time. Make sure that the `TotalCount` value does not exceed 400. The value is calculated by using the following formula: `TotalCount = (EndTime - StartTime)/Period`. If the TotalCount value is greater than 400, the `InvalidParameter.TooManyDataQueried` error is returned.
  * *   You can query the monitoring data in the last 30 days. If the value of `StartTime` is more than 30 days earlier than the current time, an error is returned.
  * *   In some scenarios, such as when the instance is in the Stopped state, the system cannot obtain the relevant information and specific information may be missing from the returned monitoring data.
  * *   You cannot call this operation to obtain the CPU basic monitoring information of an ECS bare metal instance. To obtain the CPU monitoring information of an ECS bare metal instance, install the CloudMonitor agent on the instance. For more information, see [InstallCloudMonitor](~~183482~~).
  *
 */
async function describeInstanceMonitorData(request: DescribeInstanceMonitorDataRequest): DescribeInstanceMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceRamRoleRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds?: string(name='InstanceIds', description='The IDs of instances. You can specify up to 100 instance IDs in a single request. You must specify at least one of the `InstanceIds` and `RamRoleName` parameters.', example='["i-bp67acfmxazb1p****", "i-bp67acfmxazb2p****", "bp67acfmxazb3p****"…]', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 50.

Default value: 10.', example='10', minimum=1, maximum=50, position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created. You must specify at least one of the `InstanceIds` and `RamRoleName` parameters.', example='EcsServiceRole-EcsDocGuideTest', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance RAM role. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceRamRoleResponseBody = {
  instanceRamRoleSets?: {
    instanceRamRoleSet?: [ 
    {
      instanceId?: string(name='InstanceId', description='The ID of the instance', example='i-bp67acfmxazb4p****'),
      ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role.', example='EcsServiceRole-EcsDocGuideTest'),
    }
  ](name='InstanceRamRoleSet')
  }(name='InstanceRamRoleSets', description='Details about the instance RAM roles.'),
  regionId?: string(name='RegionId', description='The region ID of the instance RAM role.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of instance RAM roles returned.', example='1'),
}

model DescribeInstanceRamRoleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceRamRoleResponseBody(name='body'),
}

/**
  * ## Description
  * When you call an API operation by using Alibaba Cloud CLI, you must specify request parameter values of different data types in required formats. For more information, see [Parameter format overview](~~110340~~).
  *
 */
async function describeInstanceRamRole(request: DescribeInstanceRamRoleRequest): DescribeInstanceRamRoleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceRamRole', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceStatusRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clusterId?: string(name='ClusterId', description='The cluster ID of the instances.', example='cls-bp67acfmxazb4p****', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The IDs of the instances. When you use this parameter to specify multiple instance IDs, separate the IDs with commas(,). Example: `InstanceId.1=i-bp1j4i2jdf3owlhe****, InstanceId.2=i-bp1j4i2jdf3o1234****`.', example='i-bp1j4i2jdf3owlhe****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 50.

Default value: 10.', example='10', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the instances. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-d', position='Query'),
}

model DescribeInstanceStatusResponseBody = {
  instanceStatuses?: {
    instanceStatus?: [ 
    {
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1j4i2jdf3owlhe****'),
      status?: string(name='Status', description='The status of the instance. Valid values:

*   Pending: The instance is being created.
*   Running: The instance is running.
*   Starting: The instance is being started.
*   Stopping: The instance is being stopped.
*   Stopped: The instance is stopped.', example='Running'),
    }
  ](name='InstanceStatus')
  }(name='InstanceStatuses', description='The status information of the instances.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of instances.', example='58'),
}

model DescribeInstanceStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceStatusResponseBody(name='body'),
}

/**
  * *   For information about the lifecycle states of an ECS instance, see [Instance states](~~25687~~).
  * *   You can also call this operation to query the list of ECS instances.
  *
 */
async function describeInstanceStatus(request: DescribeInstanceStatusRequest): DescribeInstanceStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceStatus', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceTopologyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds?: string(name='InstanceIds', description='The IDs of one or more ECS instances. You can specify a maximum of 100 instance IDs.', example='["i-bp67acfmxazb4p****"]', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ECS instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceTopologyResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  topologys?: {
    topology?: [ 
    {
      hostId?: string(name='HostId', description='The ID of the host where the ECS instance resides. This parameter is encrypted and cannot match the ID of the ECS instance. However, if the values of this parameter for different ECS instances are the same, the ECS instances reside on the same host.', example='ZWNobyBo****'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
    }
  ](name='Topology')
  }(name='Topologys', description='Details about the topology.'),
}

model DescribeInstanceTopologyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceTopologyResponseBody(name='body'),
}

async function describeInstanceTopology(request: DescribeInstanceTopologyRequest): DescribeInstanceTopologyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceTopology', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceTypeFamiliesRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  generation?: string(name='Generation', description='The generation of the instance family. For more information, see [Overview of instance families](~~25378~~). Valid values:

*   ecs-1: Generation I, which consists of the earliest and cost-effective instance types
*   ecs-2: Generation II, which provides upgraded software and hardware and higher performance than Generation I
*   ecs-3: Generation III, which consists of high-performance instance families and is suitable for different business scenarios
*   ecs-4: Generation IV, which consists of enterprise-level instance families (such as g5, c5, and r5), ECS Bare Metal Instance families (such as ebmc5s, ebmg5s, and ebmr5s), and burstable instance families (such as t5) and can meet a wide variety of business requirements with lower latency
*   ecs-5: Generation V, which consists of enterprise-level instance families (such as g6, c6, and r6), ECS Bare Metal Instance families (such as ebmg6, ebmg6e, and ebmc6), and storage-enhanced instance families (such as g6e) and delivers quick response times and higher performance
*   ecs-6: Generation VI, which consists of enterprise-level instance families (such as hfc7, hfg7, and hfr7) and ECS Bare Metal Instance families (such as ebmhfg7) and is in invitational preview', example='ecs-5', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='ECSforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance family. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
}

model DescribeInstanceTypeFamiliesResponseBody = {
  instanceTypeFamilies?: {
    instanceTypeFamily?: [ 
    {
      generation?: string(name='Generation', description='The generation of the instance family.', example='ecs-5'),
      instanceTypeFamilyId?: string(name='InstanceTypeFamilyId', description='The ID of the instance family.', example='ecs.g6'),
    }
  ](name='InstanceTypeFamily')
  }(name='InstanceTypeFamilies', description='The instance families.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeInstanceTypeFamiliesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceTypeFamiliesResponseBody(name='body'),
}

async function describeInstanceTypeFamilies(request: DescribeInstanceTypeFamiliesRequest): DescribeInstanceTypeFamiliesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceTypeFamilies', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceTypesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  cpuArchitecture?: string(name='CpuArchitecture', description='The CPU architecture. Valid values:

*   X86
*   ARM', example='X86', position='Query'),
  cpuArchitectures?: [ string ](name='CpuArchitectures', description='The CPU architectures of instance types. Valid values:

>  Valid values of N: 1 and 2.

*   X86
*   ARM', position='Query'),
  GPUSpec?: string(name='GPUSpec', description='The GPU model.

>  Fuzzy match is supported. For example, if an instance type provides NVIDIA V100 GPUs and you set this parameter to NVIDIA, information about the instance type is queried.', example='NVIDIA V100', position='Query'),
  gpuSpecs?: [ string ](name='GpuSpecs', description='The GPU models of instance types. Valid values of N: 1 to 10.', position='Query'),
  instanceCategories?: [ string ](name='InstanceCategories', description='The categories of instance types. Valid values:

>  Valid values of N: 1 to 10.

*   General-purpose
*   Compute-optimized
*   Memory-optimized
*   Big data
*   Local SSDs
*   High Clock Speed
*   Enhanced
*   Shared
*   Compute-optimized with GPU
*   Visual Compute-optimized
*   Heterogeneous Service
*   Compute-optimized with FPGA
*   Compute-optimized with NPU
*   ECS Bare Metal
*   Super Computing Cluster
*   High Performance Compute', position='Query'),
  instanceCategory?: string(name='InstanceCategory', description='The category of the instance type. Valid values:

*   General-purpose: general-purpose instance type
*   Compute-optimized: compute-optimized instance type
*   Memory-optimized: memory-optimized instance type
*   Big data: big data instance type
*   Local SSDs: instance type with local SSDs
*   High Clock Speed: instance type with high clock speeds
*   Enhanced: enhanced instance type
*   Shared: shared instance type
*   Compute-optimized with GPU: GPU-accelerated compute-optimized instance type
*   Visual Compute-optimized: visual compute-optimized instance type
*   Heterogeneous Service: heterogeneous service instance type
*   Compute-optimized with FPGA: FPGA-accelerated compute-optimized instance type
*   Compute-optimized with NPU: NPU-accelerated compute-optimized instance type
*   ECS Bare Metal: ECS Bare Metal Instance type
*   Super Computing Cluster: Super Computing Cluster (SCC) instance type
*   High Performance Compute: high-performance computing instance type', example='Big data', position='Query'),
  instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family. Valid values:

*   EntryLevel: entry level (shared)
*   EnterpriseLevel: enterprise level
*   CreditEntryLevel: credit-based entry level', example='EntryLevel', position='Query'),
  instanceTypeFamilies?: [ string ](name='InstanceTypeFamilies', description='The instance families of instance types that you want to query. Valid values of N: 1 to 10.', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family to which the instance type belongs. For information about the valid values of this parameter, see [DescribeInstanceTypeFamilies](~~25621~~).

For more information about instance families, see [Instance families](~~25378~~).', example='ecs.g6', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', description='Instance type N. Valid values of N: 1 to 10. If this parameter is left empty, information about all instance types is queried.', example='ecs.g6.large', position='Query'),
  localStorageCategories?: [ string ](name='LocalStorageCategories', description='The categories of local disks. Valid values of N: 1 and 2. For more information, see [Local disks](~~63138#section_n2w\\_8yc\\_5u1~~). Valid values:

*   local_hdd_pro: local SATA HDDs, which are attached to d1ne or d1 instances
*   local_ssd_pro: local NVMe SSDs, which are attached to i2, i2g, i1, ga1, or gn5 instances', position='Query'),
  localStorageCategory?: string(name='LocalStorageCategory', description='The category of local disks. For more information, see [Local disks](~~63138#section_n2w\\_8yc\\_5u1~~). Valid values:

*   local_hdd_pro: local Serial Advanced Technology Attachment (SATA) HDDs, which are attached to d1ne or d1 instances.
*   local_ssd_pro: local Non-Volatile Memory Express (NVMe) SSDs, which are attached to i2, i2g, i1, ga1, or gn5 instances.', example='local_ssd_pro', position='Query'),
  maxResults?: long(name='MaxResults', description='The maximum number of entries per page. Maximum value: 1600.

Default value: 1600.', example='10', minimum=1, maximum=1600, position='Query'),
  maximumCpuCoreCount?: int32(name='MaximumCpuCoreCount', description='The maximum number of vCPUs. The value must be a positive integer.

>  If an instance type has more vCPUs than the specified value, information about the instance type is not queried.', example='10', position='Query'),
  maximumCpuSpeedFrequency?: float(name='MaximumCpuSpeedFrequency', description='The maximum clock speed.

>  If an instance type uses processors that have a higher clock speed than the specified value, information about the instance type is not queried.', example='3.2', position='Query'),
  maximumCpuTurboFrequency?: float(name='MaximumCpuTurboFrequency', description='The maximum turbo frequency.

>  If an instance type uses processors that deliver a higher turbo frequency than the specified value, information about the instance type is not queried.', example='4.1', position='Query'),
  maximumGPUAmount?: int32(name='MaximumGPUAmount', description='The maximum number of GPUs. The value must be a positive integer.

>  If an instance type provides more GPUs than the specified value, information about the instance type is not queried.', example='10', position='Query'),
  maximumMemorySize?: float(name='MaximumMemorySize', description='The maximum memory size. Unit: GiB.

>  If the memory size of an instance type is larger than the specified value, information about the instance type is not queried.', example='60', position='Query'),
  minimumBaselineCredit?: int32(name='MinimumBaselineCredit', description='The minimum baseline CPU performance (overall baseline performance of all vCPUs) of a t5 or t6 burstable instance.

>  If a t5 or t6 instance type provides baseline CPU performance lower than the specified value, information about the instance type is not queried.', example='12', position='Query'),
  minimumCpuCoreCount?: int32(name='MinimumCpuCoreCount', description='The minimum number of vCPUs. The value must be a positive integer.

>  If an instance type has fewer vCPUs than the specified value, information about the instance type is not queried.', example='2', position='Query'),
  minimumCpuSpeedFrequency?: float(name='MinimumCpuSpeedFrequency', description='The minimum clock speed.

>  If an instance type uses processors that have a lower clock speed than the specified value, information about the instance type is not queried.', example='2.5', position='Query'),
  minimumCpuTurboFrequency?: float(name='MinimumCpuTurboFrequency', description='The minimum turbo frequency.

>  If an instance type uses processors that deliver a lower turbo frequency than the specified value, information about the instance type is not queried.', example='3.2', position='Query'),
  minimumDiskQuantity?: int32(name='MinimumDiskQuantity', description='The minimum number of cloud disks per instance.

>  If an instance type supports fewer cloud disks than the specified value, information about the instance type is not queried.', example='4', position='Query'),
  minimumEniIpv6AddressQuantity?: int32(name='MinimumEniIpv6AddressQuantity', description='The minimum number of IPv6 addresses per ENI.

>  If an instance type supports fewer IPv6 addresses per ENI than the specified value, information about the instance type is not queried.', example='2', position='Query'),
  minimumEniPrivateIpAddressQuantity?: int32(name='MinimumEniPrivateIpAddressQuantity', description='The minimum number of IPv4 addresses per ENI.

>  If an instance type supports fewer IPv4 addresses per ENI than the specified value, information about the instance type is not queried.', example='2', position='Query'),
  minimumEniQuantity?: int32(name='MinimumEniQuantity', description='The minimum number of elastic network interfaces (ENIs) per instance.

>  If an instance type supports fewer ENIs than the specified value, information about the instance type is not queried.', example='4', position='Query'),
  minimumEriQuantity?: int32(name='MinimumEriQuantity', description='The minimum number of ERIs per instance.

>  If an instance type supports fewer ERIs than the specified value, information about the instance type is not queried.', example='0', position='Query'),
  minimumGPUAmount?: int32(name='MinimumGPUAmount', description='The minimum number of GPUs. The value must be a positive integer.

>  If an instance type provides fewer GPUs than the specified value, information about the instance type is not queried.', example='3', position='Query'),
  minimumInitialCredit?: int32(name='MinimumInitialCredit', description='The minimum initial CPU credits of a t5 or t6 burstable instance.

>  If a t5 or t6 instance type provides less initial vCPU credits than the specified value, information about the instance type is not queried.', example='12', position='Query'),
  minimumInstanceBandwidthRx?: int32(name='MinimumInstanceBandwidthRx', description='The minimum inbound internal bandwidth. Unit: Kbit/s.

>  If an instance type provides an inbound internal bandwidth that is lower than the specified value, information about the instance type is not queried.', example='12288', position='Query'),
  minimumInstanceBandwidthTx?: int32(name='MinimumInstanceBandwidthTx', description='The minimum outbound internal bandwidth. Unit: Kbit/s.

>  If an instance type provides an outbound internal bandwidth that is lower than the specified value, information about the instance type is not queried.', example='12288', position='Query'),
  minimumInstancePpsRx?: long(name='MinimumInstancePpsRx', description='The minimum inbound packet forwarding rate over the internal network. Unit: pps.

>  If an instance type provides an inbound packet forwarding rate over the internal network that is lower than the specified value, information about the instance type is not queried.', example='15', position='Query'),
  minimumInstancePpsTx?: long(name='MinimumInstancePpsTx', description='The minimum outbound packet forwarding rate over the internal network. Unit: pps.

>  If an instance type provides an outbound packet forwarding rate over the internal network that is lower than the specified value, information about the instance type is not queried.', example='15', position='Query'),
  minimumLocalStorageAmount?: int32(name='MinimumLocalStorageAmount', description='The minimum number of local disks per instance.

>  If an instance type supports fewer local disks than the specified value, information about the instance type is not queried.', example='4', position='Query'),
  minimumLocalStorageCapacity?: long(name='MinimumLocalStorageCapacity', description='The capacity of each local disk attached per instance. Unit: GiB.', example='40', position='Query'),
  minimumMemorySize?: float(name='MinimumMemorySize', description='The minimum memory size. Unit: GiB.

>  If the memory size of an instance type is smaller than the specified value, information about the instance type is not queried.', example='20', position='Query'),
  minimumPrimaryEniQueueNumber?: int32(name='MinimumPrimaryEniQueueNumber', description='The minimum default number of queues per primary network interface controller (NIC).

>  If an instance type supports fewer queues per primary NIC than the specified value, information about the instance type is not queried.', example='8', position='Query'),
  minimumQueuePairNumber?: int32(name='MinimumQueuePairNumber', description='The minimum number of queue pair (QP) queues per elastic RDMA interface (ERI).

>  If an instance type supports fewer QP queues per ERI than the specified value, information about the instance type is not queried.', example='8', position='Query'),
  minimumSecondaryEniQueueNumber?: int32(name='MinimumSecondaryEniQueueNumber', description='The minimum default number of queues per secondary NIC.

>  If an instance type supports fewer queues per secondary NIC than the specified value, information about the instance type is not queried.', example='4', position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the NextToken value returned in the previous call to the DescribeInstanceTypes operation. You do not need to specify this parameter for the first request.', example='e71d8a535bd9cc11', maxLength=50, position='Query'),
  nvmeSupport?: string(name='NvmeSupport', description='Specifies whether cloud disks can be attached by using the NVMe protocol. Valid values:

*   required: Cloud disks can be attached by using the NVMe protocol.
*   unsupported: Cloud disks cannot be attached by using the NVMe protocol.', example='required', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  physicalProcessorModel?: string(name='PhysicalProcessorModel', description='The CPU model.

>  Fuzzy match is supported. For example, if an instance type uses Intel Xeon (Ice Lake) Platinum 8369B processors and you set this parameter to Intel, information about the instance type is queried.', example='Intel Xeon(Ice Lake) Platinum 8369B', position='Query'),
  physicalProcessorModels?: [ string ](name='PhysicalProcessorModels', description='The CPU models of instance types. Valid values of N: 1 to 10.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceTypesResponseBody = {
  instanceTypes?: {
    instanceType?: [ 
    {
      baselineCredit?: int32(name='BaselineCredit', description='The baseline vCPU computing performance (overall baseline performance of all vCPUs) per t5 or t6 burstable instance.', example='4'),
      cpuArchitecture?: string(name='CpuArchitecture', description='The CPU architecture. Valid values:

*   X86
*   ARM', example='X86'),
      cpuCoreCount?: int32(name='CpuCoreCount', description='The number of vCPUs.', example='4'),
      cpuSpeedFrequency?: float(name='CpuSpeedFrequency', description='The CPU base frequency. Unit: GHz.', example='2.7'),
      cpuTurboFrequency?: float(name='CpuTurboFrequency', description='The CPU turbo frequency. Unit: GHz.', example='3.5'),
      diskQuantity?: int32(name='DiskQuantity', description='The maximum number of cloud disks per instance.', example='17'),
      enhancedNetwork?: {
        sriovSupport?: boolean(name='SriovSupport', description='This parameter is unavailable for public use.'),
        vfQueueNumberPerEni?: int32(name='VfQueueNumberPerEni', description='This parameter is unavailable for public use.'),
      }(name='EnhancedNetwork', description='This parameter is unavailable for public use.'),
      eniIpv6AddressQuantity?: int32(name='EniIpv6AddressQuantity', description='The maximum number of IPv6 addresses per ENI.', example='1'),
      eniPrivateIpAddressQuantity?: int32(name='EniPrivateIpAddressQuantity', description='The maximum number of IPv4 addresses per ENI.', example='10'),
      eniQuantity?: int32(name='EniQuantity', description='The maximum number of ENIs per instance.', example='3'),
      eniTotalQuantity?: int32(name='EniTotalQuantity', description='The maximum number of ENIs, including primary, secondary, and trunk ENIs.

>  This parameter is in invitational preview and is not publicly available.', example='0'),
      eniTrunkSupported?: boolean(name='EniTrunkSupported', description='Indicates whether trunk ENIs are supported.

>  This parameter is in invitational preview and is not publicly available.', example='true'),
      eriQuantity?: int32(name='EriQuantity', description='The number of ERIs.

>  This parameter is in invitational preview and is not publicly available.', example='0'),
      GPUAmount?: int32(name='GPUAmount', description='The number of GPUs.', example='0'),
      GPUMemorySize?: float(name='GPUMemorySize', description='The amount of GPU memory per GPU. Unit: GiB', example='32'),
      GPUSpec?: string(name='GPUSpec', description='The GPU model.', example='NVIDIA V100'),
      initialCredit?: int32(name='InitialCredit', description='The initial vCPU credits per t5 or t6 burstable instance.', example='120'),
      instanceBandwidthRx?: int32(name='InstanceBandwidthRx', description='The maximum inbound internal bandwidth. Unit: Kbit/s.', example='1024000'),
      instanceBandwidthTx?: int32(name='InstanceBandwidthTx', description='The maximum outbound internal bandwidth. Unit: Kbit/s.', example='1024000'),
      instanceCategory?: string(name='InstanceCategory', description='The category of the instance type. Valid values:

*   General-purpose
*   Compute-optimized
*   Memory-optimized
*   Big data
*   Local SSDs
*   High Clock Speed
*   Enhanced
*   Shared
*   Compute-optimized with GPU
*   Visual Compute-optimized
*   Heterogeneous Service
*   Compute-optimized with FPGA
*   Compute-optimized with NPU
*   ECS Bare Metal
*   Super Computing Cluster
*   High Performance Compute', example='Big data'),
      instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family. Valid values:

*   EntryLevel: entry level (shared).
*   EnterpriseLevel: enterprise level.
*   CreditEntryLevel: credit-based entry level. For more information, see [Overview](~~59977~~).', example='EnterpriseLevel'),
      instancePpsRx?: long(name='InstancePpsRx', description='The inbound packet forwarding rate over the internal network. Unit: pps.', example='500000'),
      instancePpsTx?: long(name='InstancePpsTx', description='The outbound packet forwarding rate over the internal network. Unit: pps.', example='500000'),
      instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family.', example='ecs.g6'),
      instanceTypeId?: string(name='InstanceTypeId', description='The ID of the instance type.', example='ecs.g6.large'),
      localStorageAmount?: int32(name='LocalStorageAmount', description='The number of local disks per instance.', example='1'),
      localStorageCapacity?: long(name='LocalStorageCapacity', description='The capacity of each local disk. Unit: GiB', example='5000'),
      localStorageCategory?: string(name='LocalStorageCategory', description='The category of local disks. For more information, see [Local disks](~~63138~~). Valid values:

*   local_hdd_pro: local SATA HDDs, which are attached to d1ne or d1 instances
*   local_ssd_pro: local NVMe SSDs, which are attached to i2, i2g, i1, ga1, or gn5 instances', example='local_ssd_pro'),
      maximumQueueNumberPerEni?: int32(name='MaximumQueueNumberPerEni', description='The maximum number of queues per ENI, including primary and secondary ENIs.', example='4'),
      memorySize?: float(name='MemorySize', description='The memory size. Unit: GiB', example='16'),
      networkCardQuantity?: int32(name='NetworkCardQuantity', description='The maximum number of network cards that the instance type supports.', example='1'),
      networkCards?: {
        networkCardInfo?: [ 
        {
          networkCardIndex?: int32(name='NetworkCardIndex', description='The index of the network card.', example='1'),
        }
      ](name='NetworkCardInfo')
      }(name='NetworkCards', description='The information of the network cards.'),
      networkEncryptionSupport?: boolean(name='NetworkEncryptionSupport', description='Indicates whether to allow network traffic transmitted over virtual private clouds (VPCs) to be encrypted. Valid values:

*   true
*   false', example='true'),
      nvmeSupport?: string(name='NvmeSupport', description='Indicates whether cloud disks can be attached by using the NVMe protocol. Valid values:

*   required: Cloud disks can be attached by using the NVMe protocol.
*   unsupported: Cloud disks cannot be attached by using the NVMe protocol.', example='unsupported'),
      physicalProcessorModel?: string(name='PhysicalProcessorModel', description='The CPU model.', example='Intel Xeon(Ice Lake) Platinum 8369B'),
      primaryEniQueueNumber?: int32(name='PrimaryEniQueueNumber', description='The default number of queues per primary ENI.', example='4'),
      queuePairNumber?: int32(name='QueuePairNumber', description='The maximum number of QPs per ERI.', example='22'),
      secondaryEniQueueNumber?: int32(name='SecondaryEniQueueNumber', description='The default number of queues per secondary ENI.', example='4'),
      supportedBootModes?: {
        supportedBootMode?: [ string ](name='SupportedBootMode')
      }(name='SupportedBootModes', description='The boot modes supported by the instance type.'),
      totalEniQueueQuantity?: int32(name='TotalEniQueueQuantity', description='The maximum number of queues on ENIs that the instance type supports.', example='12'),
    }
  ](name='InstanceType')
  }(name='InstanceTypes', description='Details about the instance types.'),
  nextToken?: string(name='NextToken', description='The query token returned in this call.', example='e71d8a535bd9cc11'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='00827261-20B7-4562-83F2-4DF39876A45A'),
}

model DescribeInstanceTypesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceTypesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   MaxResults specifies the maximum number of entries per page. The maximum value of this parameter is changed from 1600 to 100. As of November 15, 2023, only 100 can be used as the maximum value of MaxResults. If you called the DescribeInstanceTypes operation in 2022, you can use 1600 as the maximum value before November 15, 2023. If you do not specify NextToken when you call the DescribeInstanceTypes operation, only the first page of results that contains up to 100 entries is returned. If you want to retrieve more results, specify NextToken to perform paged queries, or specify filter conditions to filter results.
  * *   We recommend that you specify MaxResults and NextToken to perform paged queries. The first time you call the DescribeInstanceTypes operation, set MaxResults to limit the maximum number of entries that can be returned in a single call. If the number of entries to return exceeds the specified MaxResults value, the response includes a NextToken value. You can set NextToken to the return value and specify MaxResults in your next request to DescribeInstanceTypes to retrieve the next page of results.
  * *   The DescribeInstanceTypes operation is used to query only the specifications and performance information of instance types. To query instance types that are available in a specific region, call the [DescribeAvailableResource](~~66186~~) operation.
  * *   To use special instance types such as instance types that are unavailable for purchase, [submit a ticket](https://workorder-intl.console.aliyun.com/#/ticket/createIndex).
  *
 */
async function describeInstanceTypes(request: DescribeInstanceTypesRequest): DescribeInstanceTypesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceTypes', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstanceVncUrlRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance', example='i-bp1hzoinajzkh91h****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeInstanceVncUrlResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  vncUrl?: string(name='VncUrl', description='The VNC logon address.

>  **The address returned is valid only for 15 seconds. If a connection is not established within 15 seconds after a successful call, the address expires and you must recall the operation to obtain a new address.', example='wss%3A%2F%2Fhz01-vncproxy.aliyun.com%2Fwebsockify%2F%3Fs%3DDvh%252FIA%252BYc73gWO48cBx2gBxUDVzaAnSKr74pq30mzqUYgeUMcB%252FbkNixDxdEA996'),
}

model DescribeInstanceVncUrlResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstanceVncUrlResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The **keepalive** time of a connection to a VNC management terminal is 300 seconds. If you do not interact with the VNC management terminal for 300 seconds, the VNC management terminal is automatically disconnected.
  * *   If the connection is interrupted, you must recall this operation to obtain a new logon address that is specified by `VncUrl` and use the new logon address to construct a URL that can be used to reconnect to the VNC management terminal. You can reconnect to a VNC management terminal for a maximum of 30 times per minute.
  * *   You need to add the `vncUrl=\\*\\*\\*\\*`, `instanceId=\\*\\*\\*\\*`, and `isWindows=true/false` parameters to the end of the link `https://g.alicdn.com/aliyun/ecs-console-vnc2/0.0.8/index.html?` and use an ampersand (`&`) between the parameters.
  *     *   `vncUrl`: the value of `VncUrl` that is returned after a successful call of this operation.
  *     *   `instanceId`: the ID of your instance.
  *     *   `isWindows`: specifies whether the operating system of your instance is Windows. A value of `true` indicates that the operating system is Windows. A value of `false` indicates that the operating system is not Windows.
  * >  You can connect to an instance without a VNC logon password. Therefore, you do not need to configure the `password` parameter.
  * Sample URL:
  *     https://g.alicdn.com/aliyun/ecs-console-vnc2/0.0.8/index.html?vncUrl=ws%3A%2F%****&instanceId=i-wz9hhwq5a6tm****&isWindows=true
  *
 */
async function describeInstanceVncUrl(request: DescribeInstanceVncUrlRequest): DescribeInstanceVncUrlResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstanceVncUrl', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstancesRequest {
  filter?: [
    {
      key?: string(name='Key', description='The key of filter 1 used to query resources. Set the value to `CreationStartTime`. You can specify a time by setting both `Filter.1.Key` and `Filter.1.Value` to query resources that were created after the specified time.', example='CreationStartTime'),
      value?: string(name='Value', description='The value of filter 1 used to query resources. Set the value to a time. If you specify this parameter, you must also specify `Filter.1.Key`. Specify the time in the ISO 8601 standard in the `yyyy-MM-ddTHH:mmZ` format. The time must be in UTC.', example='2017-12-05T22:40Z'),
    }
  ](name='Filter', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  additionalAttributes?: [ string ](name='AdditionalAttributes', description='The additional attributes. Valid values of N: 1 to 20. Valid values:

*   META_OPTIONS: instance metadata
*   DDH_CLUSTER: dedicated host cluster
*   NETWORK_PRIMARY_ENI_IP: secondary IP address associated with the primary ENI
*   CPU_OPTIONS_TOPOLOGY_TYPE: CPU topology type of the instance', example='META_OPTIONS', position='Query'),
  deviceAvailable?: boolean(name='DeviceAvailable', description='>  This parameter is in invitational preview and is not publicly available.', example='false', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including invalid AccessKey pairs, unauthorized RAM users, and missing parameter values. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  eipAddresses?: string(name='EipAddresses', description='The elastic IP addresses (EIPs) of instances. This parameter is valid when InstanceNetworkType is set to vpc. The value can be a JSON array that consists of up to 100 IP addresses. Separate the IP addresses with commas (,).', example='["42.1.1.**", "42.1.2.**", … "42.1.10.**"]', position='Query'),
  hpcClusterId?: string(name='HpcClusterId', description='The ID of the high-performance computing (HPC) cluster to which the instance belongs.', example='hpc-bp67acfmxazb4p****', position='Query'),
  httpEndpoint?: string(name='HttpEndpoint', description='Specifies whether the access channel is enabled for instance metadata. Valid values:

*   enabled
*   disabled

Default value: enabled.

>  For information about instance metadata, see [Access instance metadata](~~49122~~).', example='enabled', position='Query'),
  httpPutResponseHopLimit?: int32(name='HttpPutResponseHopLimit', description='>  This parameter is in invitational preview and is not publicly available.', example='0', position='Query'),
  httpTokens?: string(name='HttpTokens', description='Specifies whether the security hardening mode (IMDSv2) is forcefully used to access instance metadata. Valid values:

*   optional: The security hardening mode (IMDSv2) is not forcefully used.
*   required: The security hardening mode (IMDSv2) is forcefully used. After you set this parameter to required, you cannot access instance metadata in normal mode.

Default value: optional.

>  For information about modes of accessing instance metadata, see [Access instance metadata](~~150575~~).', example='optional', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image.', example='m-bp67acfmxazb4p****', position='Query'),
  innerIpAddresses?: string(name='InnerIpAddresses', description='The internal IP addresses of instances located in the classic network. This parameter is valid when InstanceNetworkType is set to classic. The value can be a JSON array that consists of up to 100 IP addresses. Separate the IP addresses with commas (,).', example='["10.1.1.1", "10.1.2.1", … "10.1.10.1"]', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PostPaid: pay-as-you-go
*   PrePaid: subscription', example='PostPaid', position='Query'),
  instanceIds?: string(name='InstanceIds', description='The ID of the instance. The value can be a JSON array that consists of up to 100 instance IDs. Separate the IDs with commas (,).', example='["i-bp67acfmxazb4p****", "i-bp67acfmxazb4p****", … "i-bp67acfmxazb4p****"]', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the instance. Fuzzy search with asterisk (\\*) wildcard characters is supported.', example='Test', position='Query'),
  instanceNetworkType?: string(name='InstanceNetworkType', description='The network type of the instance. Valid values:

*   classic
*   vpc', example='vpc', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.g5.large', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family of the instance.', example='ecs.g5', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth
*   PayByTraffic

>  When the **pay-by-traffic** billing method is used for network usage, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios in which demands exceed resource supplies, the maximum bandwidths may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  ioOptimized?: boolean(name='IoOptimized', description='Specifies whether the instance is an I/O optimized instance. Valid values:

*   true
*   false', example='true', position='Query'),
  ipv6Address?: [ string ](name='Ipv6Address', description='The IPv6 addresses assigned to elastic network interfaces (ENIs).', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the SSH key pair bound to the instance.', example='KeyPairNameTest', position='Query'),
  lockReason?: string(name='LockReason', description='The reason why the instance is locked. Valid values:

*   financial: The instance is locked due to overdue payments.
*   security: The instance is locked due to security reasons.
*   recycling: The preemptible instance is locked and pending release.
*   dedicatedhostfinancial: The instance is locked due to overdue payments for the dedicated host.
*   refunded: The instance is locked because a refund is made for the instance.', example='security', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. Valid values: 1 to 100.

Default value:

*   If you do not specify this parameter or if you set this parameter to a value that is smaller than 10, the default value is 10.
*   If you set this parameter to a value that is greater than 100, the default value is 100.', example='10', minimum=1, maximum=100, position='Query'),
  needSaleCycle?: boolean(name='NeedSaleCycle', description='>  This parameter is in invitational preview and is not publicly available.', example='false', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of `NextToken`.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  privateIpAddresses?: string(name='PrivateIpAddresses', description='The private IP addresses of instances located in a VPC. This parameter is valid when InstanceNetworkType is set to vpc. The value can be a JSON array that consists of up to 100 IP addresses. Separate the IP addresses with commas (,).', example='["172.16.1.1", "172.16.2.1", … "172.16.10.1"]', position='Query'),
  publicIpAddresses?: string(name='PublicIpAddresses', description='The public IP addresses of instances. The value can be a JSON array that consists of up to 100 IP addresses. Separate the IP addresses with commas (,).', example='["42.1.1.**", "42.1.2.**", … "42.1.10.**"]', position='Query'),
  rdmaIpAddresses?: string(name='RdmaIpAddresses', description='The remote direct memory access (RDMA) IP addresses of the instance in the HPC cluster.', example='10.10.10.102', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the instance belongs. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which the instance belongs.', example='sg-bp67acfmxazb4p****', position='Query'),
  status?: string(name='Status', description='The status of the instance. Valid values:

*   Pending: The instance is being created.
*   Running: The instance is running.
*   Starting: The instance is being started.
*   Stopping: The instance is being stopped.
*   Stopped: The instance is stopped.', example='Running', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the instance. Valid values of N: 1 to 20.

If you specify a single tag to query resources, up to 1,000 resources to which the tag is added are returned. If you specify multiple tags to query resources, up to 1,000 resources to which all specified tags are added are returned. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the instance. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the instance.', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch.', example='vsw-bp67acfmxazb4p****', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC).', example='v-bp67acfmxazb4p****', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the instance.', example='cn-hangzhou-g', position='Query'),
}

model DescribeInstancesResponseBody = {
  instances?: {
    instance?: [ 
    {
      autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the pay-as-you-go instance.', example='2017-12-10T04:04Z'),
      clusterId?: string(name='ClusterId', description='The ID of the cluster to which the instance belongs.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='c-bp67acfmxazb4p****'),
      cpu?: int32(name='Cpu', description='The number of vCPUs.', example='8'),
      cpuOptions?: {
        coreCount?: int32(name='CoreCount', description='The number of physical CPU cores.', example='2'),
        numa?: string(name='Numa', description='>  This parameter is deprecated.', example='2'),
        threadsPerCore?: int32(name='ThreadsPerCore', description='The number of threads per CPU core.', example='4'),
        topologyType?: string(name='TopologyType', description='The CPU topology type of the instance. Valid values:

*   ContinuousCoreToHTMapping: Hyper-Threading (HT) continuous CPU topology
*   DiscreteCoreToHTMapping: HT discrete CPU topology', example='ContinuousCoreToHTMapping'),
      }(name='CpuOptions', description='Details about the CPU options.'),
      creationTime?: string(name='CreationTime', description='The time when the instance was created. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mmZ format. The time is displayed in UTC. For more information, see [ISO 8601](~~25696~~).', example='2017-12-10T04:04Z'),
      creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in [Overview of burstable instances](~~59977~~).
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in [Overview of burstable instances](~~59977~~).', example='Standard'),
      dedicatedHostAttribute?: {
        dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp67acfmxazb4h****'),
        dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp67acfmxazb4p****'),
        dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host.', example='testDedicatedHostName'),
      }(name='DedicatedHostAttribute', description='The information about the dedicated host. The value is an array that consists of DedicatedHostClusterId, DedicatedHostId, and DedicatedHostName.'),
      dedicatedInstanceAttribute?: {
        affinity?: string(name='Affinity', description='Indicates whether the instance on the dedicated host is associated with the dedicated host. Valid values:

*   default: The instance is not associated with the dedicated host. When the instance is restarted from economical mode, the instance may be automatically deployed on another dedicated host in the automatic deployment resource pool.
*   host: The instance is associated with the dedicated host. When the instance is restarted from economical mode, the instance is still deployed on the original dedicated host.', example='default'),
        tenancy?: string(name='Tenancy', description='Indicates whether the instance is hosted on a dedicated host. Valid values:

*   default: The instance is not hosted on a dedicated host.
*   host: The instance is hosted on a dedicated host.', example='default'),
      }(name='DedicatedInstanceAttribute', description='The attributes of the instance on the dedicated host.'),
      deletionProtection?: boolean(name='DeletionProtection', description='Indicates whether release protection is enabled for the instance. This parameter determines whether you can use the ECS console or call the DeleteInstance operation to release the instance. Valid values:

*   true: Release protection is enabled for the instance.
*   false: Release protection is disabled for the instance.

>  This parameter is applicable only to pay-as-you-go instances. The release protection feature can protect instances against manual releases, but not against automatic releases.', example='false'),
      deploymentSetGroupNo?: int32(name='DeploymentSetGroupNo', description='The number of the deployment set group to which the instance belongs in a deployment set.', example='1'),
      deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which the instance belongs.', example='ds-bp67acfmxazb4p****'),
      description?: string(name='Description', description='The description of the instance.', example='testDescription'),
      deviceAvailable?: boolean(name='DeviceAvailable', description='Indicates whether data disks can be attached to the instance. Valid values:

*   true
*   false', example='true'),
      ecsCapacityReservationAttr?: {
        capacityReservationId?: string(name='CapacityReservationId', description='The ID of the capacity reservation.', example='cr-bp67acfmxazb4p****'),
        capacityReservationPreference?: string(name='CapacityReservationPreference', description='The preference of the capacity reservation.', example='cr-bp67acfmxazb4p****'),
      }(name='EcsCapacityReservationAttr', description='Details about the capacity reservation associated with the instance.'),
      eipAddress?: {
        allocationId?: string(name='AllocationId', description='The ID of the EIP.', example='eip-2ze88m67qx5z****'),
        bandwidth?: int32(name='Bandwidth', description='The maximum public bandwidth of the EIP. Unit: Mbit/s.', example='5'),
        internetChargeType?: string(name='InternetChargeType', description='The metering method of the EIP. Valid values:

*   PayByBandwidth
*   PayByTraffic', example='PayByTraffic'),
        ipAddress?: string(name='IpAddress', description='The EIP.', example='42.112.**.**'),
        isSupportUnassociate?: boolean(name='IsSupportUnassociate', description='Indicates whether the EIP can be disassociated.', example='true'),
      }(name='EipAddress', description='Details about the EIP associated with the instance.'),
      expiredTime?: string(name='ExpiredTime', description='The expiration time of the instance. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mmZ format. The time is displayed in UTC. For more information, see [ISO 8601](~~25696~~).', example='2017-12-10T04:04Z'),
      GPUAmount?: int32(name='GPUAmount', description='The number of GPUs for the instance type.', example='4'),
      GPUSpec?: string(name='GPUSpec', description='The category of GPUs for the instance type.', example='NVIDIA V100'),
      hibernationOptions?: {
        configured?: boolean(name='Configured', description='>  This parameter is in invitational preview and is not publicly available.', example='false'),
      }(name='HibernationOptions', description='>  This parameter is in invitational preview and is not publicly available.'),
      hostName?: string(name='HostName', description='The hostname of the instance.', example='testHostName'),
      hpcClusterId?: string(name='HpcClusterId', description='The ID of the HPC cluster to which the instance belongs.', example='hpc-bp67acfmxazb4p****'),
      ISP?: string(name='ISP', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
      imageId?: string(name='ImageId', description='The image ID of the instance.', example='m-bp67acfmxazb4p****'),
      imageOptions?: {
        loginAsNonRoot?: boolean(name='LoginAsNonRoot', description='Indicates whether the instance that uses the image supports logons of the ecs-user user. Valid values:

*   true
*   false', example='false'),
      }(name='ImageOptions', description='Details about the image options.'),
      innerIpAddress?: {
        ipAddress?: [ string ](name='IpAddress')
      }(name='InnerIpAddress', description='The internal IP addresses of the instance located in the classic network.'),
      instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go', example='PostPaid'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
      instanceName?: string(name='InstanceName', description='The instance name.', example='InstanceNameTest'),
      instanceNetworkType?: string(name='InstanceNetworkType', description='The network type of the instance. Valid values:

*   classic
*   vpc', example='vpc'),
      instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.g5.large'),
      instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family of the instance.', example='ecs.g5'),
      internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic', example='PayByTraffic'),
      internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s.', example='50'),
      internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s.', example='5'),
      ioOptimized?: boolean(name='IoOptimized', description='Indicates whether the instance is an I/O optimized instance. Valid values:

*   true
*   false', example='true'),
      keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
      localStorageAmount?: int32(name='LocalStorageAmount', description='The number of local disks attached to the instance.', example='2'),
      localStorageCapacity?: long(name='LocalStorageCapacity', description='The capacity of local disks attached to the instance. Unit: GiB.', example='1000'),
      memory?: int32(name='Memory', description='The memory size. Unit: MiB.', example='16384'),
      metadataOptions?: {
        httpEndpoint?: string(name='HttpEndpoint', description='Indicates whether the access channel is enabled for instance metadata. Valid values:

*   enabled
*   disabled', example='enabled'),
        httpPutResponseHopLimit?: int32(name='HttpPutResponseHopLimit', description='>  This parameter is not publicly available.', example='0'),
        httpTokens?: string(name='HttpTokens', description='Indicates whether the security hardening mode (IMDSv2) is forcefully used to access instance metadata. Valid values:

*   optional: The security hardening mode (IMDSv2) is not forcefully used.
*   required: The security hardening mode (IMDSv2) is forcefully used.', example='optional'),
      }(name='MetadataOptions', description='Details about the metadata options.'),
      networkInterfaces?: {
        networkInterface?: [ 
        {
          ipv4PrefixSets?: {
            ipv4PrefixSet?: [ 
            {
              ipv4Prefix?: string(name='Ipv4Prefix', description='The IPv4 prefix of the ENI.', example='47.122.*.*/19'),
            }
          ](name='Ipv4PrefixSet')
          }(name='Ipv4PrefixSets', description='The IPv4 prefixes of the ENI. This parameter has a value only when `AdditionalAttributes.N` is set to `NETWORK_PRIMARY_ENI_IP`.'),
          ipv6PrefixSets?: {
            ipv6PrefixSet?: [ 
            {
              ipv6Prefix?: string(name='Ipv6Prefix', description='The IPv6 prefix of the ENI.', example='2001:1111:*:*::/64'),
            }
          ](name='Ipv6PrefixSet')
          }(name='Ipv6PrefixSets', description='The IPv6 prefixes of the ENI. This parameter has a value only when `AdditionalAttributes.N` is set to `NETWORK_PRIMARY_ENI_IP`.'),
          ipv6Sets?: {
            ipv6Set?: [ 
            {
              ipv6Address?: string(name='Ipv6Address', description='The IPv6 address of the ENI.', example='2408:4321:180:1701:94c7:bc38:3bfa:***'),
            }
          ](name='Ipv6Set')
          }(name='Ipv6Sets', description='The IPv6 addresses of the ENI. This parameter has a value only when `AdditionalAttributes.N` is set to `NETWORK_PRIMARY_ENI_IP`.'),
          macAddress?: string(name='MacAddress', description='The MAC address of the ENI.', example='00:16:3e:32:b4:**'),
          networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-2zeh9atclduxvf1z****'),
          primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary private IP address of the ENI.', example='172.17.**.***'),
          privateIpSets?: {
            privateIpSet?: [ 
            {
              primary?: boolean(name='Primary', description='Indicates whether the IP address is the primary private IP address. Valid values:

*   true
*   false', example='true'),
              privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the ENI.', example='172.17.**.**'),
            }
          ](name='PrivateIpSet')
          }(name='PrivateIpSets', description='Details about the private IP addresses of the ENI.'),
          type?: string(name='Type', description='The type of the ENI. Valid values:

*   Primary
*   Secondary', example='Primary'),
        }
      ](name='NetworkInterface')
      }(name='NetworkInterfaces', description='The ENIs attached to the instance.'),
      OSName?: string(name='OSName', description='The name of the operating system of the instance.', example='CentOS 7.4 64-bit'),
      OSNameEn?: string(name='OSNameEn', description='The English name of the operating system of the instance.', example='CentOS  7.4 64 bit'),
      OSType?: string(name='OSType', description='The type of the operating system of the instance. Valid values:

*   windows: Windows operating systems
*   linux: Linux operating systems', example='linux'),
      operationLocks?: {
        lockReason?: [ 
        {
          lockMsg?: string(name='LockMsg', description='The message returned when the instance was locked.', example='The specified instance is locked due to financial reason.'),
          lockReason?: string(name='LockReason', description='The reason why the instance was locked. Valid values:

*   financial: The instance was locked due to overdue payments.
*   security: The instance was locked due to security reasons.
*   recycling: The preemptible instance was locked and pending release.
*   dedicatedhostfinancial: The instance was locked due to overdue payments for the dedicated host.
*   refunded: The instance was locked because a refund was made for the instance.', example='Recycling'),
        }
      ](name='LockReason')
      }(name='OperationLocks', description='The reasons why the instance was locked.'),
      publicIpAddress?: {
        ipAddress?: [ string ](name='IpAddress')
      }(name='PublicIpAddress', description='The public IP addresses of the instance.'),
      rdmaIpAddress?: {
        ipAddress?: [ string ](name='IpAddress')
      }(name='RdmaIpAddress', description='The RDMA IP addresses of the instance in the HPC cluster.'),
      recyclable?: boolean(name='Recyclable', description='Indicates whether the instance can be recycled.', example='false'),
      regionId?: string(name='RegionId', description='The region ID of the instance.', example='cn-hangzhou'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the instance belongs.', example='rg-bp67acfmxazb4p****'),
      saleCycle?: string(name='SaleCycle', description='>  The parameter is removed.', example='month'),
      securityGroupIds?: {
        securityGroupId?: [ string ](name='SecurityGroupId')
      }(name='SecurityGroupIds', description='The IDs of the security groups to which the instance belongs.'),
      serialNumber?: string(name='SerialNumber', description='The serial number of the instance.', example='51d1353b-22bf-4567-a176-8b3e12e4****'),
      spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter is returned when SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1'),
      spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance when the system initiates a preemptible instance interruption operation. Valid values:

*   Terminate: releases the preemptible instance.
*   Stop: stops the instance in economical mode.', example='Terminate'),
      spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the instance. The value can be accurate to three decimal places. This parameter is valid when SpotStrategy is set to SpotWithPriceLimit.', example='0.98'),
      spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price is automatically used as the bid price. The market price can be up to the pay-as-you-go price.', example='NoSpot'),
      startTime?: string(name='StartTime', description='The time when the instance was last started. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mmZ format. The time is displayed in UTC. For more information, see [ISO 8601](~~25696~~).', example='2017-12-10T04:04Z'),
      status?: string(name='Status', description='The status of the instance.', example='Running'),
      stoppedMode?: string(name='StoppedMode', description='Indicates whether the instance continues to be billed after it is stopped. Valid values:

*   KeepCharging: The instance is stopped in standard mode. Billing for the instance continues after the instance is stopped, and resources are retained for the instance.
*   StopCharging: The instance is stopped in economical mode. Billing for some resources of the instance stops after the instance is stopped. When the instance is stopped, its resources such as vCPUs, memory, and public IP addresses are released. The instance may be unable to restart if some required resources are out of stock in the current region.
*   Not-applicable: The instance does not support economical mode.', example='KeepCharging'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the instance.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the instance.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the instance.'),
      vlanId?: string(name='VlanId', description='The virtual LAN (VLAN) ID of the instance.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='10'),
      vpcAttributes?: {
        natIpAddress?: string(name='NatIpAddress', description='The NAT IP address of the instance. The NAT IP address is used by ECS instances in different VPCs for communication.', example='172.17.**.**'),
        privateIpAddress?: {
          ipAddress?: [ string ](name='IpAddress')
        }(name='PrivateIpAddress', description='The private IP addresses of the instance.'),
        vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the instance is connected.', example='vsw-2zeh0r1pabwtg6wcs****'),
        vpcId?: string(name='VpcId', description='The ID of the VPC.', example='vpc-2zeuphj08tt7q3brd****'),
      }(name='VpcAttributes', description='The VPC attributes of the instance.'),
      zoneId?: string(name='ZoneId', description='The zone ID of the instance.', example='cn-hangzhou-g'),
    }
  ](name='Instance')
  }(name='Instances', description='Details about the queried instances.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If NextToken is empty, no next page exists.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of instances queried.

>  If you specify the `MaxResults` and `NextToken` request parameters to perform a paged query, the value of the `TotalCount` response parameter is invalid.', example='1'),
}

model DescribeInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   You can specify multiple request parameters to filter query results. Specified request parameters have logical AND relations. Only the specified parameters are included in the filter conditions. However, if InstanceIds is set to an empty JSON array, this parameter is regarded as a valid filter condition and an empty result is returned.
  * *   If you are using a Resource Access Management (RAM) user or RAM role that does not have the permissions to call this operation, an empty list is returned. You can include `DryRun` in your request to check whether the empty list is caused by lack of permissions.
  * *   When you call the API operation by using Alibaba Cloud CLI, you must specify request parameter values of different data types in the required formats. For more information, see [Parameter formats](~~110340~~).
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeInstances operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeInstances operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries to return on each page and then use `PageNumber` to specify the number of the page to return.
  *     You can use only one of the preceding methods. If a large number of entries are to be returned, we recommend that you use Method 1. When `MaxResults` or `NextToken` is specified, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  *
 */
async function describeInstances(request: DescribeInstancesRequest): DescribeInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInstancesFullStatusRequest {
  eventPublishTime?: {
    end?: string(name='End', description='The end of the time range during which system events are published. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-12-07T00:00:00Z'),
    start?: string(name='Start', description='The beginning of the time range during which system events are published. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-30T00:00:00Z'),
  }(name='EventPublishTime', position='Query'),
  notBefore?: {
    end?: string(name='End', description='The end of the time range during which O\\&M tasks related to scheduled system events are executed. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-30T00:00:00Z'),
    start?: string(name='Start', description='The beginning of the time range during which O\\&M tasks related to scheduled system events are executed. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-12-07T00:00:00Z'),
  }(name='NotBefore', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  eventId?: [ string ](name='EventId', description='The IDs of the system events. You can specify up to 100 event IDs in a single request.', example='e-bp1hygp5b04o56l0****', position='Query'),
  eventType?: string(name='EventType', description='The type of the system event. This parameter is valid only when InstanceEventType.N is not specified. Valid values:

*   SystemMaintenance.Reboot: The instance is restarted due to system maintenance.
*   SystemFailure.Reboot: The instance is restarted due to a system failure.
*   InstanceFailure.Reboot: The instance is restarted due to an instance failure.
*   InstanceExpiration.Stop: The subscription instance is stopped due to expiration.
*   InstanceExpiration.Delete: The subscription instance is released due to expiration.
*   AccountUnbalanced.Stop: The pay-as-you-go instance is stopped due to an overdue payment.
*   AccountUnbalanced.Delete: The pay-as-you-go instance is released due to an overdue payment.', example='InstanceExpiration.Stop', position='Query'),
  healthStatus?: string(name='HealthStatus', description='The health status of the instance. Valid values:

*   OK
*   Impaired
*   Initializing
*   InsufficientData
*   NotApplicable

All the values are case-sensitive.', example='Maintaining', position='Query'),
  instanceEventType?: [ string ](name='InstanceEventType', description='The types of system events. You can specify up to 30 event types in a single request.', example='InstanceExpiration.Stop', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The IDs of the instances. You can specify up to 100 instance IDs in a single request.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. The value must be a positive integer.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The lifecycle status of the instance. Valid values:

*   Starting
*   Running
*   Stopped', example='Running', position='Query'),
}

model DescribeInstancesFullStatusResponseBody = {
  instanceFullStatusSet?: {
    instanceFullStatusType?: [ 
    {
      healthStatus?: {
        code?: int32(name='Code', description='The code of the health state.', example='64'),
        name?: string(name='Name', description='The name of the health state.', example='Warning'),
      }(name='HealthStatus', description='The health state of the instance.'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
      scheduledSystemEventSet?: {
        scheduledSystemEventType?: [ 
        {
          eventCycleStatus?: {
            code?: int32(name='Code', description='The code of the system event state.', example='24'),
            name?: string(name='Name', description='The name of the system event state.', example='Scheduled'),
          }(name='EventCycleStatus', description='The state of the system event.'),
          eventId?: string(name='EventId', description='The system event ID.', example='e-bp1hygp5b04o56l0****'),
          eventPublishTime?: string(name='EventPublishTime', description='The time when the system event was published. The time is displayed in UTC.', example='2017-11-30T06:32:31Z'),
          eventType?: {
            code?: int32(name='Code', description='The code of the system event type.', example='1'),
            name?: string(name='Name', description='The name of the system event type.', example='SystemMaintenance.Reboot'),
          }(name='EventType', description='The type of the system event.'),
          extendedAttribute?: {
            device?: string(name='Device', description='The device name of the local disk.', example='/dev/vdb'),
            diskId?: string(name='DiskId', description='The ID of the local disk.', example='d-bp67acfmxazb4p****'),
            inactiveDisks?: {
              inactiveDisk?: [ 
              {
                creationTime?: string(name='CreationTime', description='The time when the disk was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2018-07-27T13:53:25Z'),
                deviceCategory?: string(name='DeviceCategory', description='The category of the disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   cloud_essd: Enterprise SSD (ESSD)
*   local_ssd_pro: I/O-intensive local disk
*   local_hdd_pro: throughput-intensive local disk
*   ephemeral: retired local disk
*   ephemeral_ssd: retired local SSD', example='cloud_ssd'),
                deviceSize?: string(name='DeviceSize', description='The size of the disk. Unit: GiB.', example='80'),
                deviceType?: string(name='DeviceType', description='The type of the disk. Valid values:

*   system
*   data', example='system'),
                releaseTime?: string(name='ReleaseTime', description='The time when the disk was released. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2019-07-27T13:53:25Z'),
              }
            ](name='InactiveDisk')
            }(name='InactiveDisks', description='The inactive disks that have been released and must be cleared.'),
          }(name='ExtendedAttribute', description='The extended attributes of system events generated for instances that have local disks attached.

The return values vary based on the system event type.

If the system event type is not one of the following types, this parameter is empty:

*   SystemMaintenance.StopAndRepair
*   SystemMaintenance.CleanInactiveDisks
*   SecurityPunish.Locked
*   SecurityPunish.WebsiteBanned
*   SystemUpgrade.Migrate
*   SystemMaintenance.RebootAndIsolateErrorDisk
*   SystemMaintenance.RebootAndReInitErrorDisk
*   SystemMaintenance.ReInitErrorDisk
*   SystemMaintenance.IsolateErrorDisk'),
          impactLevel?: string(name='ImpactLevel', description='The impact level of the system event.

>  If the user is not in a whitelist, this parameter is empty.', example='100'),
          notBefore?: string(name='NotBefore', description='The scheduled time at which to execute the O\\&M task related to the system event. The time is displayed in UTC.', example='2017-12-07T00:00:00Z'),
          reason?: string(name='Reason', description='The reason why the system event was scheduled.

>  If the exception cause is not detected, this parameter is empty.', example='A simulated event.'),
        }
      ](name='ScheduledSystemEventType')
      }(name='ScheduledSystemEventSet', description='The system events that are in the Scheduled or Inquiring state.'),
      status?: {
        code?: int32(name='Code', description='The code of the instance lifecycle state.', example='1'),
        name?: string(name='Name', description='The name of the instance lifecycle state.', example='Running'),
      }(name='Status', description='The lifecycle state of the instance.'),
    }
  ](name='InstanceFullStatusType')
  }(name='InstanceFullStatusSet', description='The queried instances.

>  If no instances exist, this parameter is empty.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='2'),
}

model DescribeInstancesFullStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInstancesFullStatusResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The response includes the instance status and the instance system events that are in the Scheduled state.
  * You can specify a period of time to query events that occurred within the period of time.
  *
 */
async function describeInstancesFullStatus(request: DescribeInstancesFullStatusRequest): DescribeInstancesFullStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInstancesFullStatus', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInvocationResultsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandId?: string(name='CommandId', description='The ID of the command.', example='c-hz0jdfwcsr****', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of the `CommandContent` and `Output` values in the response. Valid values:

*   PlainText: returns the original command content and command output.
*   Base64: returns the Base64-encoded command content and command output.

Default value: Base64.', example='PlainText', position='Query'),
  includeHistory?: boolean(name='IncludeHistory', description='Specifies whether to return the results of historical scheduled executions. Valid values:

*   true: returns the results of historical scheduled executions. If you set this parameter to true, you must set InvokeId to the ID of a task that is run on a schedule (RepeatMode set to Period) or on each system startup (RepeatMode set to EveryReboot).
*   false: does not return the results of historical scheduled executions.

Default value: false.', example='false', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1i7gg30r52z2em****', position='Query'),
  invokeId?: string(name='InvokeId', description='The ID of the command task. You can call the [DescribeInvocations](~~64840~~) operation to query the IDs of all command tasks.', example='t-hz0jdfwd9f****', position='Query'),
  invokeRecordStatus?: string(name='InvokeRecordStatus', description='The execution status of the command task. Valid values:

*   Running:

    *   Scheduled task: Before you stop the scheduled execution of the command, the execution state is always Running.
    *   One-time task: If the command is being run on instances, the execution state is Running.

*   Finished:

    *   Scheduled task: The execution state can never be Finished.
    *   One-time task: The execution is complete on all instances, or the execution is stopped on some instances and is complete on the other instances.

*   Success:

    *   One-time task: The execution is complete, and the exit code is 0.
    *   Scheduled task: The last execution is complete, the exit code is 0, and the specified period ends.

*   Failed:

    *   Scheduled task: The execution state can never be Failed.
    *   One-time task: The execution fails on all instances.

*   PartialFailed:

    *   Scheduled task: The execution state can never be PartialFailed.
    *   One-time task: The execution fails on some instances.

*   Stopped: The task is stopped.

*   Stopping: The task is being stopped.', example='Running', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='1', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. After you set this parameter, command execution results in the specified resource group are queried.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the command task. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the command task. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the command task.', position='Query'),
}

model DescribeInvocationResultsResponseBody = {
  invocation?: {
    invocationResults?: {
      invocationResult?: [ 
      {
        commandId?: string(name='CommandId', description='The command ID.', example='c-hz0jdfwcsr****'),
        containerId?: string(name='ContainerId', description='The container ID.', example='ab141ddfbacfe02d9dbc25966ed971536124527097398d419a6746873fea****'),
        containerName?: string(name='ContainerName', description='The container name.', example='test-container'),
        dropped?: int32(name='Dropped', description='The size of the Output text that was truncated and discarded because the `Output` value exceeded 24 KB in size.', example='0'),
        errorCode?: string(name='ErrorCode', description='The error code returned when the command failed to be sent or run. Valid values:

*   If this parameter is empty, the command was run as expected.
*   InstanceNotExists: The specified instance did not exist or was released.
*   InstanceReleased: The instance was released while the command was being run.
*   InstanceNotRunning: The instance was not running while the command was being run.
*   CommandNotApplicable: The command was inapplicable to the specified instance.
*   AccountNotExists: The username specified to run the command did not exist.
*   DirectoryNotExists: The specified directory did not exist.
*   BadCronExpression: The specified cron expression for the execution schedule was invalid.
*   ClientNotRunning: Cloud Assistant Agent was not running.
*   ClientNotResponse: Cloud Assistant Agent did not respond.
*   ClientIsUpgrading: Cloud Assistant Agent was being upgraded.
*   ClientNeedUpgrade: Cloud Assistant Agent needed to be upgraded.
*   DeliveryTimeout: The request to send the command timed out.
*   ExecutionTimeout: The execution timed out.
*   ExecutionException: An exception occurred while the command was being run.
*   ExecutionInterrupted: The execution was interrupted.
*   ExitCodeNonzero: The execution was complete, but the exit code was not 0.
*   SecurityGroupRuleDenied: Access to Cloud Assistant was denied by security group rules.', example='InstanceNotExists'),
        errorInfo?: string(name='ErrorInfo', description='The error message returned when the command failed to be sent or run. Valid values:

*   If this parameter is empty, the command was run as expected.
*   the specified instance does not exists
*   the instance has released when create task
*   the instance is not running when create task
*   the command is not applicable
*   the specified account does not exists
*   the specified directory does not exists
*   the cron job expression is invalid
*   the aliyun service is not running on the instance
*   the aliyun service in the instance does not response
*   the aliyun service in the instance is upgrading now
*   the aliyun service in the instance need upgrade
*   the command delivery has been timeout
*   the command execution has been timeout
*   the command execution got an exception
*   the command execution has been interrupted
*   the command execution exit code is not zero
*   the specified instance has been released', example='the specified instance does not exists'),
        exitCode?: long(name='ExitCode', description='The exit code of the command task.

*   For Linux instances, the value is the exit code of the shell command.
*   For Windows instances, the value is the exit code of the batch or PowerShell command.', example='0'),
        finishedTime?: string(name='FinishedTime', description='The time when the command task was completed. If the command task times out, the end time is equal to the start time of the command task specified by `StartTime` plus the timeout period specified by `Timeout`.', example='2019-12-20T06:15:56Z'),
        instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1i7gg30r52z2em****'),
        invocationStatus?: string(name='InvocationStatus', description='The execution status on a single instance. Valid values:

*   Pending: The command is being verified or sent.

*   Invalid: The specified command type or parameter is invalid.

*   Aborted: The command failed to be sent to the instance. To send a command to an instance, make sure that the instance is in the Running state and the command can be sent to the instance within 1 minute.

*   Running: The command is being run on the instance.

*   Success:

    *   One-time task: The execution was complete, and the exit code was 0.
    *   Scheduled task: The last execution was complete, the exit code was 0, and the specified period ended.

*   Failed:

    *   One-time task: The execution was complete, but the exit code was not 0.
    *   Scheduled task: The last execution was complete, but the exit code was not 0. The specified period was about to end.

*   Error: The execution cannot proceed due to an exception.

*   Timeout: The execution timed out.

*   Cancelled: The execution was canceled before it started.

*   Stopping: The command task is being stopped.

*   Terminated: The execution was terminated before completion.

*   Scheduled:

    *   One-time task: The execution state can never be Scheduled.
    *   Scheduled task: The command is waiting to be run.', example='Success'),
        invokeId?: string(name='InvokeId', description='The command task ID.', example='t-hz0jdfwd9f****'),
        invokeRecordStatus?: string(name='InvokeRecordStatus', description='The execution status of the command. Valid values:

*   Running:

    *   Scheduled task: Before you stop the scheduled execution of the command, the execution state is always Running.
    *   One-time task: If the command is being run on instances, the execution state is Running.

*   Finished:

    *   Scheduled task: The execution state can never be Finished.
    *   One-time task: The execution was complete on all instances, or the execution was stopped on some instances and was complete on the other instances.

*   Failed:

    *   Scheduled task: The execution state can never be Failed.
    *   One-time task: The execution failed on all instances.

*   PartialFailed:

    *   Scheduled task: The execution state can never be PartialFailed.
    *   One-time task: The execution failed on some instances.

*   Stopped: The task was stopped.

*   Stopping: The task is being stopped.', example='Running'),
        output?: string(name='Output', description='The command output.

*   If ContentEncoding is set to PlainText in the request, the original command output is returned.
*   If ContentEncoding is set to Base64 in the request, the Base64-encoded command output is returned.', example='MTU6MzA6MDEK'),
        repeats?: int32(name='Repeats', description='The number of times that the command was run on the instance.

*   If the command is set to run only once, the value is 0 or 1.
*   If the command is set to run on a schedule, the value is the number of times that the command has been run on the instance.', example='0'),
        startTime?: string(name='StartTime', description='The time when the command started to be run on the instance.', example='2019-12-20T06:15:55Z'),
        stopTime?: string(name='StopTime', description='The time when the command task was stopped. If you call the `StopInvocation` operation to stop the command task, the value of this parameter is the time when the operation is called.', example='2020-01-19T09:15:47Z'),
        tags?: {
          tag?: [ 
          {
            tagKey?: string(name='TagKey', description='The tag key of the command task.', example='owner'),
            tagValue?: string(name='TagValue', description='The tag value of the command task.', example='zhangsan'),
          }
        ](name='Tag')
        }(name='Tags', description='The tags of the command task.'),
        terminationMode?: string(name='TerminationMode', description='Indicates how the command task is stopped when a command execution is manually stopped or times out. Valid values:

*   Process: The process of the command is stopped.
*   ProcessTree: The process tree of the command is stopped. In this case, the process of the command and all subprocesses are stopped.', example='ProcessTree'),
        username?: string(name='Username', description='The username used to run the command on the instance.', example='root'),
      }
    ](name='InvocationResult')
    }(name='InvocationResults', description='The execution results.'),
    nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
    pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
    pageSize?: long(name='PageSize', description='The number of entries per page.', example='1'),
    totalCount?: long(name='TotalCount', description='The total number of the commands.', example='1'),
  }(name='Invocation', description='Details about the execution results.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model DescribeInvocationResultsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInvocationResultsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   After you run a command, the command may fail to run or may return unexpected results. You can call this operation to query the execution results.
  * *   You can query information about command executions within the last four weeks. Up to 100,000 pieces of execution information can be retained.
  * *   You can [subscribe to Cloud Assistant task status events](~~2669130~~) to obtain command execution results from the events. This helps you reduce the number of times to poll API operations and improve efficiency.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeInvocationResults operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeInvocationResults operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries per page, and then use `PageNumber` to specify the page number. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  * *   Comparison between the `DescribeInvocations` and `DescribeInvocationResults` operations:
  *     *   Scenario in which the `RunCommand` or `InvokeCommand` operation is called to run a Cloud Assistant command on multiple instances:
  *         *   The `DescribeInvocations` operation queries the execution status of the command on each instance and the overall execution status of the command on all instances.
  *         *   The `DescribeInvocationResults` operation queries only the execution status of the command on each instance.
  *     *   Scenario in which the `RunCommand` or `InvokeCommand` operation is called to run a Cloud Assistant command on a single instance:
  *         *   The `DescribeInvocations` operation is equivalent to the `DescribeInvocationResults` operation.
  *     *   If you want to query the status of each execution for a scheduled (recurring) task or a task that is automatically executed on instance startup (`RepeatMode is set to Period or EveryReboot`), you can call only the `DescribeInvocationResults` operation and must set `IncludeHistory` to true. The `DescribeInvocations` operation queries only the most recent execution status of the command.
  *     *   If you want to view the command content and parameters, you can call only the `DescribeInvocations` operation and check the `CommandContent` value in the response.
  *
 */
async function describeInvocationResults(request: DescribeInvocationResultsRequest): DescribeInvocationResultsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInvocationResults', 'POST', '/', 'json', false, 'json', request);
}

model DescribeInvocationsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandId?: string(name='CommandId', description='The command ID. You can call the [DescribeCommands](~~64843~~) operation to query all available command IDs.', example='c-hz0jdfwcsr****', position='Query'),
  commandName?: string(name='CommandName', description='The command name. If you specify both this parameter and `InstanceId`, this parameter does not take effect.', example='CommandTestName', position='Query'),
  commandType?: string(name='CommandType', description='The command type. Valid values:

*   RunBatScript: batch command, applicable to Windows instances.
*   RunPowerShellScript: PowerShell command, applicable to Windows instances.
*   RunShellScript: shell command, applicable to Linux instances.', example='RunShellScript', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of the `CommandContent` and `Output` response parameters. Valid values:

*   PlainText: returns the original command content and command outputs.
*   Base64: returns the Base64-encoded command content and command outputs.

Default value: Base64.', example='PlainText', position='Query'),
  includeOutput?: boolean(name='IncludeOutput', description='Specifies whether to return the command outputs in the response.

*   true: The command outputs are returned. When this parameter is set to true, you must specify `InvokeId`, `InstanceId`, or both.
*   false: The command outputs are not returned.

Default value: false', example='false', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of instance N. When you specify this parameter, the system queries all the execution records of all the commands that run on the instance.', example='i-bp1i7gg30r52z2em****', position='Query'),
  invokeId?: string(name='InvokeId', description='The command task ID.', example='t-hz0jdfwd9f****', position='Query'),
  invokeStatus?: string(name='InvokeStatus', description='The overall execution status of the command task. The value of this parameter depends on the execution states of the command task on all involved instances. Valid values:

*   Running:

    *   Scheduled task: Before you stop the scheduled execution of the command, the overall execution state is always Running.
    *   One-time task: If the command is being run on instances, the overall execution state is Running.

*   Finished:

    *   Scheduled task: The overall execution state can never be Finished.
    *   One-time task: The execution is complete on all instances, or the execution is stopped on some instances and is complete on the other instances.

*   Success: If the execution state on at least one instance is Success and the execution state on the other instances is Stopped or Success, the overall execution state is Success.

    *   One-time task: The execution is complete, and the exit code is 0.
    *   Scheduled task: The last execution is complete, the exit code is 0, and the specified period ends.

*   Failed:

    *   Scheduled task: The overall execution state can never be Failed.
    *   One-time task: The execution fails on all instances.

*   Stopped: The task is stopped.

*   Stopping: The task is being stopped.

*   PartialFailed: The task fails on some instances. If you specify both this parameter and `InstanceId`, this parameter does not take effect.', example='Finished', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number of the page to return.

Page numbers start from 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return per page.

Maximum value: 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  repeatMode?: string(name='RepeatMode', description='The execution mode of the command. If you specify both this parameter and `InstanceId`, this parameter does not take effect. Valid values:

*   Once: The command is immediately run.
*   Period: The command is run on a schedule.
*   NextRebootOnly: The command is run the next time the instances start.
*   EveryReboot: The command is run every time the instances start.

This parameter is empty by default, which indicates that commands run in all modes are queried.', example='Once', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. After you set this parameter, command execution results in the specified resource group are queried.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the command. You can specify up to 20 tag keys for the command. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the command. You can specify up to 20 tag values for the command. The tag value can be an empty string. It can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags that are added to the command.', position='Query'),
  timed?: boolean(name='Timed', description='Specifies whether the command is to be automatically run. Valid values:

*   true: The command is run by calling the `RunCommand` or `InvokeCommand` operation with `RepeatMode` set to `Period`, `NextRebootOnly`, or `EveryReboot`.

*   false: The command meets one of the following requirements:

    *   The command is run by calling the `RunCommand` or `InvokeCommand` operation with `RepeatMode` set to `Once`.
    *   The command task is canceled, stopped, or completed.

Default value: false.', example='true', position='Query'),
}

model DescribeInvocationsResponseBody = {
  invocations?: {
    invocation?: [ 
    {
      commandContent?: string(name='CommandContent', description='The command content.

*   If ContentEncoding is set to PlainText in the request, the original command content is returned.
*   If ContentEncoding is set to Base64 in the request, the Base64-encoded command content is returned.', example='cnBtIC1xYSB8IGdyZXAgdnNm****'),
      commandDescription?: string(name='CommandDescription', description='The command description.', example='testDescription'),
      commandId?: string(name='CommandId', description='The command ID.', example='c-hz0jdfwcsr****'),
      commandName?: string(name='CommandName', description='The command name.', example='CommandTestName'),
      commandType?: string(name='CommandType', description='The command type.', example='RunShellScript'),
      containerId?: string(name='ContainerId', description='The container ID.', example='ab141ddfbacfe02d9dbc25966ed971536124527097398d419a6746873fea****'),
      containerName?: string(name='ContainerName', description='The container name.', example='test-container'),
      creationTime?: string(name='CreationTime', description='The time when the command task was created.', example='2020-01-19T09:15:46Z'),
      frequency?: string(name='Frequency', description='The schedule on which the command is run.', example='0 */20 * * * *'),
      invocationStatus?: string(name='InvocationStatus', description='The overall execution status of the command task. The value of this parameter depends on the execution status of the command task on all the involved instances. Valid values:

*   Pending: The command is being verified or sent. When the execution state on at least one instance is Pending, the overall execution state is Pending.

*   Scheduled: The command that is set to run on a schedule was sent and waiting to be run. When the execution state on at least one instance is Scheduled, the overall execution state is Scheduled.

*   Running: The command is being run on the instances. When the execution state on at least one instance is Running, the overall execution state is Running.

*   Success: When the execution state on at least one instance is Success and the execution state on the other instances is Stopped or Success, the overall execution state is Success.

    *   One-time task: The execution was complete, and the exit code was 0.
    *   Scheduled task: The last execution was complete, the exit code was 0, and the specified period ended.

*   Failed: When the execution state on all instances is Stopped or Failed, the overall execution state is Failed. When the execution state on an instance is one of the following values, Failed is returned as the overall execution state:

    *   Invalid: The command is invalid.
    *   Aborted: The command failed to be sent.
    *   Failed: The execution was complete, but the exit code was not 0.
    *   Timeout: The execution timed out.
    *   Error: An error occurred while the command was being run.

*   Stopping: The command task is being stopped. When the execution state on at least one instance is Stopping, the overall execution state is Stopping.

*   Stopped: The task was stopped. When the execution state on all instances is Stopped, the overall execution state is Stopped. When the execution state on an instance is one of the following values, Stopped is returned as the overall execution state:

    *   Cancelled: The task was canceled.
    *   Terminated: The task was terminated.

*   PartialFailed: The execution was complete on some instances and failed on other instances. When the execution state is Success on some instances and is Failed or Stopped on the other instances, the overall execution state is PartialFailed.

>  `InvokeStatus` in the response functions similarly to this parameter. We recommend that you check the value of this parameter.', example='Running'),
      invokeId?: string(name='InvokeId', description='The command task ID.', example='t-hz0jdfwd9f****'),
      invokeInstances?: {
        invokeInstance?: [ 
        {
          creationTime?: string(name='CreationTime', description='The time when the command task was created.', example='2019-12-20T06:15:54Z'),
          dropped?: int32(name='Dropped', description='The size of the Output text that was truncated and discarded because the Output value exceeded 24 KB in size.', example='0'),
          errorCode?: string(name='ErrorCode', description='The error code for the failure to send or run the command. Valid values:

*   If this parameter is empty, the command was run as expected.
*   InstanceNotExists: The specified instance did not exist or was released.
*   InstanceReleased: The instance was released while the command was being run.
*   InstanceNotRunning: The instance was not running when the command started to be run.
*   CommandNotApplicable: The command was inapplicable to the specified instance.
*   AccountNotExists: The username specified to run the command did not exist.
*   DirectoryNotExists: The specified directory did not exist.
*   BadCronExpression: The specified cron expression for the execution schedule was invalid.
*   ClientNotRunning: Cloud Assistant Agent was not running.
*   ClientNotResponse: Cloud Assistant Agent did not respond.
*   ClientIsUpgrading: Cloud Assistant Agent was being upgraded.
*   ClientNeedUpgrade: Cloud Assistant Agent needed to be upgraded.
*   DeliveryTimeout: The request to send the command timed out.
*   ExecutionTimeout: The execution timed out.
*   ExecutionException: An exception occurred while the command was being executed.
*   ExecutionInterrupted: The command task was interrupted.
*   ExitCodeNonzero: The execution was complete, but the exit code was not 0.
*   SecurityGroupRuleDenied: Access to Cloud Assistant was denied by security group rules.', example='InstanceNotExists'),
          errorInfo?: string(name='ErrorInfo', description='The error message returned when the command failed to be sent or run. Valid values:

*   If this parameter is empty, the command was run as expected.
*   the specified instance does not exists
*   the instance has released when create task
*   the instance is not running when create task
*   the command is not applicable
*   the specified account does not exists
*   the specified directory does not exists
*   the cron job expression is invalid
*   the aliyun service is not running on the instance
*   the aliyun service in the instance does not response
*   the aliyun service in the instance is upgrading now
*   the aliyun service in the instance need upgrade
*   the command delivery has been timeout
*   the command execution has been timeout
*   the command execution got an exception
*   the command execution has been interrupted
*   the command execution exit code is not zero
*   the specified instance has been released', example='the specified instance does not exists'),
          exitCode?: long(name='ExitCode', description='The exit code of the execution. Valid values:

*   For Linux instances, the value is the exit code of the shell process.
*   For Windows instances, the value is the exit code of the batch or PowerShell process.', example='0'),
          finishTime?: string(name='FinishTime', description='The time when the command process ended.', example='2019-12-20T06:15:56Z'),
          instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1i7gg30r52z2em****'),
          instanceInvokeStatus?: string(name='InstanceInvokeStatus', description='The execution status of the command on a single instance.

>  We recommend that you ignore this parameter and check the value of `InvocationStatus` in the response to obtain the execution status.', example='Finished'),
          invocationStatus?: string(name='InvocationStatus', description='The execution status on a single instance. Valid values:

*   Pending: The command is being verified or sent.

*   Invalid: The specified command type or parameter is invalid.

*   Aborted: The command failed to be sent to the instance. To send a command to an instance, make sure that the instance is in the Running state and the command can be sent to the instance within 1 minute.

*   Running: The command is being run on the instance.

*   Success:

    *   One-time task: The execution was complete, and the exit code was 0.
    *   Scheduled task: The last execution was complete, the exit code was 0, and the specified period ended.

*   Failed:

    *   One-time task: The execution was complete, but the exit code was not 0.
    *   Scheduled task: The last execution was complete, but the exit code was not 0. The specified period is about to end.

*   Error: The execution cannot proceed due to an exception.

*   Timeout: The execution timed out.

*   Cancelled: The execution was canceled before it started.

*   Stopping: The command task is being stopped.

*   Terminated: The execution was terminated before completion.

*   Scheduled:

    *   One-time task: The execution state can never be Scheduled.
    *   Scheduled task: The command is waiting to be run.', example='Success'),
          output?: string(name='Output', description='The command output.

*   If ContentEncoding is set to PlainText in the request, the original command output is returned.
*   If ContentEncoding is set to Base64 in the request, the Base64-encoded command output is returned.', example='OutPutTestmsg'),
          repeats?: int32(name='Repeats', description='The number of times that the command was run on the instance.

*   If the command is set to run only once, the value is 0 or 1.
*   If the command is set to run on a schedule, the value is the number of times that the command has been run on the instance.', example='0'),
          startTime?: string(name='StartTime', description='The time when the command started to be run on the instance.', example='2019-12-20T06:15:55Z'),
          stopTime?: string(name='StopTime', description='The time when the command task was stopped. If you call the `StopInvocation` operation to stop the command task, the value of this parameter is the time when the operation is called.', example='2020-01-19T09:15:47Z'),
          timed?: boolean(name='Timed', description='Indicates whether the command is to be automatically run.', example='false'),
          updateTime?: string(name='UpdateTime', description='The time when the execution status was updated.', example='2020-01-19T09:15:47Z'),
        }
      ](name='InvokeInstance')
      }(name='InvokeInstances', description='The instances on which the command was run.'),
      invokeStatus?: string(name='InvokeStatus', description='The overall execution status of the command task.

>  We recommend that you ignore this parameter and check the value of `InvocationStatus` in the response to obtain the execution status.', example='Finished'),
      parameters?: string(name='Parameters', description='The custom parameters in the command.', example='{}'),
      repeatMode?: string(name='RepeatMode', description='The execution mode of the command. Valid values:

*   Once: The command is immediately run.
*   Period: The command is run on a schedule.
*   NextRebootOnly: The command is run the next time the instances start.
*   EveryReboot: The command is run every time the instances start.', example='Once'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the command task.', example='owner'),
          tagValue?: string(name='TagValue', description='The tag value of the command task.', example='zhangsan'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the command task.'),
      terminationMode?: string(name='TerminationMode', description='Indicates how the command task is stopped when a command execution is manually stopped or times out. Valid values:

*   Process: The process of the command is stopped.
*   ProcessTree: The process tree of the command is stopped. In this case, the process of the command and all subprocesses are stopped.', example='ProcessTree'),
      timed?: boolean(name='Timed', description='Indicates whether the command is to be automatically run.', example='false'),
      timeout?: long(name='Timeout', description='The maximum timeout period for the command execution. Unit: seconds.

When a command cannot be run, the command execution times out. When a command execution times out, Cloud Assistant Agent forcefully terminates the command process by canceling the process ID (PID) of the command.', example='60'),
      username?: string(name='Username', description='The username used to run the command on the instances.', example='root'),
      workingDir?: string(name='WorkingDir', description='The execution path of the command.', example='/home/'),
    }
  ](name='Invocation')
  }(name='Invocations', description='Details about the command executions.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries returned on each page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  totalCount?: long(name='TotalCount', description='The total number of the commands.', example='1'),
}

model DescribeInvocationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeInvocationsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   After you run a command, the command may fail to run or may return unexpected results. You can call this operation to query the execution results.
  * *   You can query information about command executions within the last four weeks. Up to 100,000 pieces of execution information can be retained.
  * *   You can [subscribe to Cloud Assistant task status events](~~2669130~~) to obtain command execution results from the events. This helps you reduce the number of times to poll API operations and improve efficiency.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeInvocations operation to retrieve the first page of results, use `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which you can use in the next request to retrieve a new page of results. When you call the DescribeInvocations operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries per page, and then use `PageNumber` to specify the page number. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  * *   Comparison between the `DescribeInvocations` and `DescribeInvocationResults` operations:
  *     *   Scenario in which the `RunCommand` or `InvokeCommand` operation is called to run a Cloud Assistant command on multiple instances:
  *         *   The `DescribeInvocations` operation queries the execution status of the command on each instance and the overall execution status of the command on all instances.
  *         *   The `DescribeInvocationResults` operation queries only the execution status of the command on each instance.
  *     *   Scenario in which the `RunCommand` or `InvokeCommand` operation is called to run a Cloud Assistant command on a single instance:
  *         *   The `DescribeInvocations` operation is equivalent to the `DescribeInvocationResults` operation.
  *     *   If you want to query the status of each execution for a scheduled (recurring) task or a task that is automatically executed on instance startup (`RepeatMode is set to Period or EveryReboot`), you can call only the `DescribeInvocationResults` operation and must set `IncludeHistory` to true. The `DescribeInvocations` operation queries only the most recent execution status of the command.
  *     *   If you want to view the command content and parameters, you can call only the `DescribeInvocations` operation and check the `CommandContent` value in the response.
  *
 */
async function describeInvocations(request: DescribeInvocationsRequest): DescribeInvocationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeInvocations', 'POST', '/', 'json', false, 'json', request);
}

model DescribeKeyPairsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  includePublicKey?: boolean(name='IncludePublicKey', description='Specifies whether to include PublicKey in the response. Default value: false.', example='false', position='Query'),
  keyPairFingerPrint?: string(name='KeyPairFingerPrint', description='The fingerprint of the key pair. The message-digest algorithm 5 (MD5) is used based on the public key fingerprint format defined in RFC 4716. For more information, see [RFC 4716](https://tools.ietf.org/html/rfc4716).', example='ABC1234567', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair. You can use the asterisk (\\*) symbol as a wildcard in regular expressions to perform a fuzzy search for key pairs. Sample patterns:

*   `*SshKey`: queries key pairs whose names end with SshKey, including the key pair named SshKey.
*   `SshKey*`: queries key pairs whose names start with SshKey, including the key pair named SshKey.
*   `*SshKey*`: queries key pairs whose names include SshKey, including the key pair named SshKey.
*   `SshKey`: queries the key pair named SshKey.', example='*SshKey*', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 50.

Default value: 10.', example='10', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the key pair. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

>  Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-amnhr7u7c7hj****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the key pair. Valid values of N: 1 to 20.

If a single tag is specified to query resources, up to 1,000 resources that are bound with this tag can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that are bound with all these tags can be displayed in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the key pair. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model DescribeKeyPairsResponseBody = {
  keyPairs?: {
    keyPair?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the key pair was created.', example='2023-09-04T08:33Z'),
      keyPairFingerPrint?: string(name='KeyPairFingerPrint', description='The fingerprint of the key pair.', example='ABC1234567'),
      keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
      publicKey?: string(name='PublicKey', description='The content of the public key.', example='ssh-rsa****'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-amnhr7u7c7hj****'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the key pair.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the key pair.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the key pair.'),
    }
  ](name='KeyPair')
  }(name='KeyPairs', description='The information of the key pairs.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of key pairs.', example='1'),
}

model DescribeKeyPairsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeKeyPairsResponseBody(name='body'),
}

async function describeKeyPairs(request: DescribeKeyPairsRequest): DescribeKeyPairsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeKeyPairs', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLaunchTemplateVersionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  defaultVersion?: boolean(name='DefaultVersion', description='Specifies whether to query the default version.', example='true', position='Query'),
  detailFlag?: boolean(name='DetailFlag', description='Specifies whether to query the configurations of the launch template. Valid values:

*   true: queries the basic information and other details of the launch template. The details include the image ID and system disk size.
*   false: queries only the basic information of the launch template. The basic information includes the template ID, template name, and default version.

Default value: true.', example='true', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template.

You must set LaunchTemplateId or LaunchTemplateName to specify a launch template.', example='lt-bp168lnahrdwl39p****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template.', example='testLaunchTemplateName', position='Query'),
  launchTemplateVersion?: [ long ](name='LaunchTemplateVersion', description='Version N of the launch template.', example='1', position='Query'),
  maxVersion?: long(name='MaxVersion', description='The maximum version number in the version range to query.', example='10', position='Query'),
  minVersion?: long(name='MinVersion', description='The minimum version number in the version range to query.', example='1', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the launch template.

You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeLaunchTemplateVersionsResponseBody = {
  launchTemplateVersionSets?: {
    launchTemplateVersionSet?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the launch template version was created.', example='2022-01-17T08:22:43Z'),
      createdBy?: string(name='CreatedBy', description='The creator of the launch template version.', example='123456789****'),
      defaultVersion?: boolean(name='DefaultVersion', description='Indicates whether the launch template version is the default version.', example='true'),
      launchTemplateData?: {
        autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the instance.', example='2018-05-14T14:18:00Z'),
        autoRenew?: boolean(name='AutoRenew', description='Indicates whether auto-renewal is enabled for the instance. This parameter is valid only if `InstanceChargeType` is set to `PrePaid`. Valid values:

*   true
*   false

Default value: false.', example='true'),
        autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal period of the instance. Valid values:

Valid values when PeriodUnit is set to Month: 1, 2, 3, 6, 12, 24, 36, 48, and 60.

Default value: 1.', example='1'),
        creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in [Overview of burstable instances](~~59977~~).
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in [Overview of burstable instances](~~59977~~).', example='Standard'),
        dataDisks?: {
          dataDisk?: [ 
          {
            autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy.', example='sp-wz91dz3ghear2a5s****'),
            burstingEnabled?: boolean(name='BurstingEnabled', description='Indicates whether the performance burst feature is enabled. Valid values:

*   true
*   false', example='true'),
            category?: string(name='Category', description='The category of the data disk.', example='cloud_ssd'),
            deleteWithInstance?: boolean(name='DeleteWithInstance', description='Indicates whether to release the data disk when the instance is released.', example='true'),
            description?: string(name='Description', description='The description of the data disk.', example='testDiskDescription'),
            device?: string(name='Device', description='The device name of the data disk.

>  This parameter will be removed in the future. To ensure future compatibility, we recommend that you do not use this parameter.', example='/dev/xvda'),
            diskName?: string(name='DiskName', description='The name of the data disk.', example='testDiskName'),
            encrypted?: string(name='Encrypted', description='Indicates whether the data disk is encrypted.', example='false'),
            performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as a data disk. This parameter is returned only when the value of `Category` is cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.', example='PL1'),
            provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}.

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.

>  This parameter is available only if you set DataDisk.N.Category to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000'),
            size?: int32(name='Size', description='The size of the data disk.', example='2000'),
            snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create the data disk.', example='s-bp67acfmxazb4p****'),
          }
        ](name='DataDisk')
        }(name='DataDisks', description='Details about the data disks.'),
        deletionProtection?: boolean(name='DeletionProtection', description='Indicates whether release protection is enabled for the instance. This parameter indicates whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance. Valid values:

*   true
*   false

Default value: false.

>  This parameter is applicable only to pay-as-you-go instances. The release protection feature can protect instances against manual releases, but not against automatic releases.', example='false'),
        deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set.', example='ds-bp1brhwhoqinyjd6****'),
        description?: string(name='Description', description='The description of the system disk.', example='testInstanceDescription'),
        enableVmOsConfig?: boolean(name='EnableVmOsConfig', description='Indicates whether the operating system configuration of the instance is enabled.', example='false'),
        hostName?: string(name='HostName', description='The hostname of the instance.', example='testHostName'),
        imageId?: string(name='ImageId', description='The ID of the image.', example='m-bp67acfmxazb4p****'),
        imageOwnerAlias?: string(name='ImageOwnerAlias', description='The source of the image. Valid values:

*   system: public image provided by Alibaba Cloud
*   self: custom image that you created
*   others: shared image from another Alibaba Cloud account
*   marketplace: Alibaba Cloud Marketplace image', example='system'),
        instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go', example='Postpaid'),
        instanceName?: string(name='InstanceName', description='The name of the instance.', example='testInstanceName'),
        instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.g5.large'),
        internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage.', example='PayByTraffic'),
        internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth.', example='5'),
        internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth.', example='100'),
        ioOptimized?: string(name='IoOptimized', description='Indicates whether the instance is I/O optimized.', example='none'),
        ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to assign to the instance.', example='1'),
        keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
        networkInterfaces?: {
          networkInterface?: [ 
          {
            description?: string(name='Description', description='The description of the secondary ENI.', example='testNetworkInterfacesDescription'),
            instanceType?: string(name='InstanceType', description='The instance type of the instance.', example='ecs.s2.xlarge'),
            networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the secondary ENI.', example='testNetworkInterfaceName'),
            networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the primary ENI. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.', example='Standard'),
            primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary private IP address of the secondary ENI.', example='203.0.*.*'),
            securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the secondary ENI. The security group and the ENI must belong to the same VPC.

>  SecurityGroupId and SecurityGroupIds are mutually exclusive in the response.', example='sg-bp67acfmxazb4p****'),
            securityGroupIds?: {
              securityGroupId?: [ string ](name='SecurityGroupId')
            }(name='SecurityGroupIds', description='The IDs of the security groups to which to assign the secondary ENI.

>  SecurityGroupId and SecurityGroupIds are mutually exclusive in the response.'),
            vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the ENI.', example='vsw-bp67acfmxazb4p****'),
          }
        ](name='NetworkInterface')
        }(name='NetworkInterfaces', description='Details about the secondary elastic network interfaces (ENIs).'),
        networkType?: string(name='NetworkType', description='The network type. Valid values:

*   classic: classic network
*   vpc: VPC', example='vpc'),
        passwordInherit?: boolean(name='PasswordInherit', description='Indicates whether the username and password preset in the image are used.', example='true'),
        period?: int32(name='Period', description='The subscription duration of the instance.', example='1'),
        periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period. Valid values:

Month (default)', example='Month'),
        privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address to assign to the instance.', example='10.1.**.**'),
        ramRoleName?: string(name='RamRoleName', description='The name of the instance Resource Access Management (RAM) role.', example='testRamRoleName'),
        resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the launch template belongs.', example='rg-bp67acfmxazb4p****'),
        securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Indicates whether Security Hardening is enabled.', example='active'),
        securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign the instance.

>  `SecurityGroupId` and `SecurityGroupIds` are mutually exclusive in the response.', example='sg-bp67acfmxazb4p****'),
        securityGroupIds?: {
          securityGroupId?: [ string ](name='SecurityGroupId')
        }(name='SecurityGroupIds', description='The IDs of the security groups to which to assign the instance.

>  `SecurityGroupId` and `SecurityGroupIds` are mutually exclusive in the response.'),
        spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter is returned when SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1'),
        spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the preemptible instance.', example='0.98'),
        spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is automatically used as the bid price. The market price can be up to the pay-as-you-go price.', example='NoSpot'),
        systemDisk_autoSnapshotPolicyId?: string(name='SystemDisk.AutoSnapshotPolicyId'),
        systemDisk_burstingEnabled?: boolean(name='SystemDisk.BurstingEnabled'),
        systemDisk_category?: string(name='SystemDisk.Category'),
        systemDisk_deleteWithInstance?: boolean(name='SystemDisk.DeleteWithInstance'),
        systemDisk_description?: string(name='SystemDisk.Description'),
        systemDisk_diskName?: string(name='SystemDisk.DiskName'),
        systemDisk_encrypted?: string(name='SystemDisk.Encrypted'),
        systemDisk_iops?: int32(name='SystemDisk.Iops'),
        systemDisk_performanceLevel?: string(name='SystemDisk.PerformanceLevel'),
        systemDisk_provisionedIops?: long(name='SystemDisk.ProvisionedIops'),
        systemDisk_size?: int32(name='SystemDisk.Size'),
        tags?: {
          instanceTag?: [ 
          {
            key?: string(name='Key', description='The key of the tag to add to the instance.', example='TestKey'),
            value?: string(name='Value', description='The value of the tag to add to the instance.', example='TestValue'),
          }
        ](name='InstanceTag')
        }(name='Tags', description='The tags to add to the instance.'),
        userData?: string(name='UserData', description='The user data of the instance, which is Base64-encoded.', example='SGVsbG9FQ1M='),
        vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect the instance.', example='vsw-bp67acfmxazb4p****'),
        vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC).', example='v-bp67acfmxazb4p****'),
        zoneId?: string(name='ZoneId', description='The zone ID of the instance.', example='cn-hangzhou-g'),
      }(name='LaunchTemplateData', description='The configurations of the launch template.'),
      launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template.', example='lt-bp67acfmxazb4p****'),
      launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template.', example='testLaunchTemplateName'),
      modifiedTime?: string(name='ModifiedTime', description='The time when the launch template version was modified.', example='2022-01-17T08:40:00Z'),
      versionDescription?: string(name='VersionDescription', description='The description of the launch template version.', example='testVersionDescription'),
      versionNumber?: long(name='VersionNumber', description='The number of the launch template version.', example='1'),
    }
  ](name='LaunchTemplateVersionSet')
  }(name='LaunchTemplateVersionSets', description='Details about the launch template versions.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='3989ED0C-20A1-4351-A127-2067FF8390AX'),
  totalCount?: int32(name='TotalCount', description='The total number of launch templates.', example='1'),
}

model DescribeLaunchTemplateVersionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLaunchTemplateVersionsResponseBody(name='body'),
}

/**
  * ## Debugging
  * [OpenAPI Explorer automatically calculates the signature value. For your convenience, we recommend that you call this operation in OpenAPI Explorer. OpenAPI Explorer dynamically generates the sample code of the operation for different SDKs.](https://api.aliyun.com/#product=Ecs\\&api=DescribeLaunchTemplateVersions\\&type=RPC\\&version=2014-05-26)
  *
 */
async function describeLaunchTemplateVersions(request: DescribeLaunchTemplateVersionsRequest): DescribeLaunchTemplateVersionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLaunchTemplateVersions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLaunchTemplatesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  launchTemplateId?: [ string ](name='LaunchTemplateId', description='The IDs of launch templates. You can specify up to 100 launch template IDs. You must specify LaunchTemplateId or LaunchTemplateName to determine a launch template.', example='lt-m5e3ofjr1zn1aw7q****', position='Query'),
  launchTemplateName?: [ string ](name='LaunchTemplateName', description='The names of launch templates. You can specify up to 100 launch template names.', example='wd-152630748****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of entries to return on each page.

Default value: 10.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The ID of the resource group to which the launch template belongs. If you specify this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be returned.

> Resources in the default resource group are displayed in the response regardless of whether you specify this parameter.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The tags of the launch template.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateResourceGroupId?: string(name='TemplateResourceGroupId', description='The IDs of launch templates. You can specify up to 100 launch template IDs. You must specify LaunchTemplateId or LaunchTemplateName to determine a launch template.', example='rg-acfmxazb4p****', position='Query'),
  templateTag?: [ 
    {
      key?: string(name='Key', description='The value of tag N of the launch template. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='TestValue'),
    }
  ](name='TemplateTag', description='The tag of the launch template.', position='Query'),
}

model DescribeLaunchTemplatesResponseBody = {
  launchTemplateSets?: {
    launchTemplateSet?: [ 
    {
      createTime?: string(name='CreateTime', description='The ID of the resource group to which the launch template belongs.', example='2018-05-14T14:18:00Z'),
      createdBy?: string(name='CreatedBy', description='The latest version number of the launch template.', example='1234567890'),
      defaultVersionNumber?: long(name='DefaultVersionNumber', description='The time when the launch template was modified.', example='1'),
      latestVersionNumber?: long(name='LatestVersionNumber', description='The tags of the launch template.', example='1'),
      launchTemplateId?: string(name='LaunchTemplateId', description='The time when the launch template was created.', example='lt-m5e3ofjr1zn1aw7q****'),
      launchTemplateName?: string(name='LaunchTemplateName', description='The default version number of the launch template.', example='wd-152630748****'),
      modifiedTime?: string(name='ModifiedTime', description='The ID of the launch template.', example='2018-05-14T14:18:00Z'),
      resourceGroupId?: string(name='ResourceGroupId', description='The creator of the launch template.', example='rg-acfmxazb4p****'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', example='TestKey'),
          tagValue?: string(name='TagValue', description='The key of tag N of the launch template.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tag of the launch template.'),
    }
  ](name='LaunchTemplateSet')
  }(name='LaunchTemplateSets', description='The information about the launch template.'),
  pageNumber?: int32(name='PageNumber', description='The total number of launch templates.', example='1'),
  pageSize?: int32(name='PageSize', description='The ID of the request.', example='10'),
  requestId?: string(name='RequestId', description='The page number of the returned page.', example='04F0F334-1335-436C-A1D7-6C044FE12CBA'),
  totalCount?: int32(name='TotalCount', description='The information about the launch templates.', example='1'),
}

model DescribeLaunchTemplatesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLaunchTemplatesResponseBody(name='body'),
}

async function describeLaunchTemplates(request: DescribeLaunchTemplatesRequest): DescribeLaunchTemplatesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLaunchTemplates', 'POST', '/', 'json', false, 'json', request);
}

model DescribeLimitationRequest {
  limitation: string(name='Limitation', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeLimitationResponseBody = {
  limitation?: string(name='Limitation'),
  requestId?: string(name='RequestId'),
  value?: string(name='Value'),
}

model DescribeLimitationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeLimitationResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeLimitation(request: DescribeLimitationRequest): DescribeLimitationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeLimitation', 'POST', '/', 'json', false, 'json', request);
}

model DescribeManagedInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  activationId?: string(name='ActivationId', description='The ID of the activation code.', example='4ECEEE12-56F1-4FBC-9AB1-890F7494****', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The ID of managed instance N. Valid values of N: 1 to 50.', example='mi-hz018jrc1o0****', position='Query'),
  instanceIp?: string(name='InstanceIp', description='The internal or public IP address of the managed instance.', example='192.168.**.**', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the managed instance.', example='my-webapp-server', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2****', position='Query'),
  osType?: string(name='OsType', description='The operating system type of the managed instance. Valid values:

*   windows
*   linux
*   FreeBSD', example='windows', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID. Supported regions: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Ulanqab), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), China (Guangzhou), China (Chengdu), China (Hong Kong), Singapore, Japan (Tokyo), US (Silicon Valley), and US (Virginia).

You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the managed instance belongs.', example='rg-123******', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the managed instance. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the managed instance. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the managed instance.', position='Query'),
}

model DescribeManagedInstancesResponseBody = {
  instances?: [ 
    {
      activationId?: string(name='ActivationId', description='The ID of the activation code.', example='3704F543-F768-43FA-9864-897F75B3****'),
      agentVersion?: string(name='AgentVersion', description='The version number of Cloud Assistant Agent.', example='2.2.0.102'),
      connected?: boolean(name='Connected', description='Indicates whether the managed instance is connected. Valid values:

*   true: The managed instance is connected. You can manage the instance by using Cloud Assistant.
*   false: The managed instance is not connected. The managed instance may be down or Cloud Assistant Agent may be incorrectly installed.', example='true'),
      hostname?: string(name='Hostname', description='The hostname of the managed instance.', example='demo'),
      instanceId?: string(name='InstanceId', description='The ID of the managed instance.', example='mi-hz018jrc1o0****'),
      instanceName?: string(name='InstanceName', description='The name of the managed instance.', example='webAPP-linux-01'),
      internetIp?: string(name='InternetIp', description='The public IP address of the managed instance.', example='40.65.**.**'),
      intranetIp?: string(name='IntranetIp', description='The internal IP address of the managed instance.', example='10.0.**.**'),
      invocationCount?: long(name='InvocationCount', description='The number of times that Cloud Assistant tasks were executed on the managed instance.', example='1'),
      lastInvokedTime?: string(name='LastInvokedTime', description='The time when the last Cloud Assistant task was executed.', example='2021-01-20T09:00:40Z'),
      machineId?: string(name='MachineId', description='The machine code of the managed instance.', example='e03231b37ab14e53b5795ad625fc****'),
      osType?: string(name='OsType', description='The operating system type of the managed instance.', example='Linux'),
      osVersion?: string(name='OsVersion', description='The version information of the operating system.', example='Linux_#38~18.04.1-Ubuntu SMP Wed Jan 6 18:26:30 UTC 2021_x86_64'),
      registrationTime?: string(name='RegistrationTime', description='The time when the managed instance was registered.', example='2021-01-20T08:57:56Z'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the managed instance belongs.', example='rg-123******'),
      tags?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of tag N of the managed instance. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added are returned. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added are returned. To query more than 1,000 resources that have the specified tags, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of tag N of the managed instance. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
        }
      ](name='Tags', description='The tags of the managed instance.'),
    }
  ](name='Instances', description='The queried managed instances.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='77115469-F2C5-4ECA-94F7-FA04F2FD****'),
  totalCount?: long(name='TotalCount', description='The total number of queried managed instances.', example='1'),
}

model DescribeManagedInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeManagedInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can use one of the following methods to check the responses:
  * *   Method 1: During a paged query, when you call the DescribeManagedInstances operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeManagedInstances operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  * *   Method 2: Use `PageSize` to specify the number of entries to return on each page and then use `PageNumber` to specify the number of the page to return. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  *
 */
async function describeManagedInstances(request: DescribeManagedInstancesRequest): DescribeManagedInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeManagedInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNatGatewaysRequest {
  natGatewayId?: string(name='NatGatewayId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId?: string(name='VpcId', position='Query'),
}

model DescribeNatGatewaysResponseBody = {
  natGateways?: {
    natGateway?: [ 
    {
      bandwidthPackageIds?: {
        bandwidthPackageId?: [ string ](name='BandwidthPackageId')
      }(name='BandwidthPackageIds'),
      businessStatus?: string(name='BusinessStatus'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      forwardTableIds?: {
        forwardTableId?: [ string ](name='ForwardTableId')
      }(name='ForwardTableIds'),
      instanceChargeType?: string(name='InstanceChargeType'),
      name?: string(name='Name'),
      natGatewayId?: string(name='NatGatewayId'),
      regionId?: string(name='RegionId'),
      spec?: string(name='Spec'),
      status?: string(name='Status'),
      vpcId?: string(name='VpcId'),
    }
  ](name='NatGateway')
  }(name='NatGateways'),
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeNatGatewaysResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNatGatewaysResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeNatGateways(request: DescribeNatGatewaysRequest): DescribeNatGatewaysResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNatGateways', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNetworkInterfaceAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  attribute?: string(name='Attribute', description='The attribute of the ENI. Valid value:

attachment: attachment information about the ENI

>  This parameter is in invitational preview and is not publicly available.', example='attachment', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='>  This parameter is unavailable.', example='TestKey'),
      value?: string(name='Value', description='>  This parameter is unavailable.', example='TestValue'),
    }
  ](name='Tag', description='>  This parameter is unavailable.', position='Query'),
}

model DescribeNetworkInterfaceAttributeResponseBody = {
  associatedPublicIp?: {
    allocationId?: string(name='AllocationId', description='The ID of the EIP.', example='null'),
    publicIpAddress?: string(name='PublicIpAddress', description='The EIP.', example='116.62.**.**'),
  }(name='AssociatedPublicIp', description='Details about the elastic IP address (EIP) that is associated with the secondary private IP address of the ENI.'),
  attachment?: {
    deviceIndex?: int32(name='DeviceIndex', description='>  This parameter is in invitational preview and unavailable for general users.', example='hide'),
    instanceId?: string(name='InstanceId', description='>  This parameter is in invitational preview and unavailable for general users.', example='hide'),
    memberNetworkInterfaceIds?: {
      memberNetworkInterfaceId?: [ string ](name='MemberNetworkInterfaceId')
    }(name='MemberNetworkInterfaceIds', description='>  This parameter is in invitational preview and unavailable for general users.'),
    networkCardIndex?: int32(name='NetworkCardIndex', description='The index of the network interface controller (NIC).

*   If the ENI is in the Available state or if no NIC index was specified when the ENI was attached, this parameter has no value.
*   If the ENI is in the InUse state and an NIC index was specified when the ENI was attached, the specified NIC index is returned as the value of this parameter.', example='0'),
    trunkNetworkInterfaceId?: string(name='TrunkNetworkInterfaceId', description='>  This parameter is in invitational preview and unavailable for general users.', example='hide'),
  }(name='Attachment', description='>  This parameter is in invitational preview and unavailable for general users.'),
  bondInterfaceSpecification?: {
    bondMode?: string(name='BondMode', description='>  This parameter is in invitational preview and unavailable for general users.', example='null'),
    slaveInterfaceSpecification?: {
      slaveInterfaceSpecificationSet?: [ 
      {
        bondNetworkInterfaceId?: string(name='BondNetworkInterfaceId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
        slaveNetworkInterfaceId?: string(name='SlaveNetworkInterfaceId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
        workState?: string(name='WorkState', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
      }
    ](name='SlaveInterfaceSpecificationSet')
    }(name='SlaveInterfaceSpecification', description='>  This parameter is in invitational preview and unavailable for general users.'),
  }(name='BondInterfaceSpecification', description='>  This parameter is in invitational preview and unavailable for general users.'),
  connectionTrackingConfiguration?: {
    tcpClosedAndTimeWaitTimeout?: int32(name='TcpClosedAndTimeWaitTimeout', description='This parameter is not publicly available.'),
    tcpEstablishedTimeout?: int32(name='TcpEstablishedTimeout', description='This parameter is not publicly available.'),
    udpTimeout?: int32(name='UdpTimeout', description='This parameter is not publicly available.'),
  }(name='ConnectionTrackingConfiguration', description='This parameter is not publicly available.'),
  creationTime?: string(name='CreationTime', description='The time when the ENI was created.', example='2019-12-25T12:31:31Z'),
  deleteOnRelease?: boolean(name='DeleteOnRelease', description='Indicates whether to retain the ENI when the associated instance is released. Valid values:

*   true
*   false', example='true'),
  description?: string(name='Description', description='The description of the ENI.', example='testDescription'),
  enhancedNetwork?: {
    enableSriov?: boolean(name='EnableSriov', description='This parameter is not publicly available.'),
  }(name='EnhancedNetwork', description='This parameter is not publicly available.'),
  instanceId?: string(name='InstanceId', description='The ID of the instance to which the ENI is attached.

>  If the ENI is managed and controlled by other Alibaba Cloud services, no instance ID is returned.', example='i-bp1e2l6djkndyuli****'),
  ipv4PrefixSets?: {
    ipv4PrefixSet?: [ 
    {
      ipv4Prefix?: string(name='Ipv4Prefix', description='The IPv4 prefix of the ENI.', example='192.168.**.0/28'),
    }
  ](name='Ipv4PrefixSet')
  }(name='Ipv4PrefixSets', description='The IPv4 prefixes of the ENI.'),
  ipv6PrefixSets?: {
    ipv6PrefixSet?: [ 
    {
      ipv6Prefix?: string(name='Ipv6Prefix', description='The IPv6 prefix of the ENI.', example='2001:db8:1234:1a00:****::/80'),
    }
  ](name='Ipv6PrefixSet')
  }(name='Ipv6PrefixSets', description='The IPv6 prefixes of the ENI.'),
  ipv6Sets?: {
    ipv6Set?: [ 
    {
      ipv6Address?: string(name='Ipv6Address', description='The IPv6 address of the ENI.', example='2001:db8:1234:1a00::****'),
    }
  ](name='Ipv6Set')
  }(name='Ipv6Sets', description='The IPv6 addresses of the ENI.'),
  macAddress?: string(name='MacAddress', description='The media access control (MAC) address of the ENI.', example='00:16:3e:12:**:**'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp125p95hhdhn3ot****'),
  networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI.', example='my-eni-name'),
  networkInterfaceTrafficConfig?: {
    networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the ENI.', example='HighPerformance'),
    queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI.', example='8'),
    queuePairNumber?: int32(name='QueuePairNumber', description='The number of queues supported by the ERI.', example='8'),
  }(name='NetworkInterfaceTrafficConfig', description='The communication settings of the ENI.'),
  networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication model of the ENI. Valid values:

*   Standard: The TCP communication mode is used.
*   HighPerformance: The Elastic RDMA Interface (ERI) is enabled and the remote direct memory access (RDMA) communication mode is used.

>  This parameter can have a value of HighPerformance only when the ENI is attached to a c7re RDMA-enhanced instance that resides in Beijing Zone K.', example='Standard'),
  ownerId?: string(name='OwnerId', description='The ID of the account to which the ENI belongs.', example='123456****'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the ENI.', example='10.1.**.**'),
  privateIpSets?: {
    privateIpSet?: [ 
    {
      associatedPublicIp?: {
        allocationId?: string(name='AllocationId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
        publicIpAddress?: string(name='PublicIpAddress', description='The EIP.', example='116.62.**.**'),
      }(name='AssociatedPublicIp', description='The EIP that is associated with the secondary private IP address of the ENI.'),
      primary?: boolean(name='Primary', description='Indicates whether the IP address is the primary private IP address. Valid values:

*   true: The IP address is the primary private IP address.
*   false: The IP address is a secondary private IP address.', example='true'),
      privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the ENI.', example='172.17.**.**'),
    }
  ](name='PrivateIpSet')
  }(name='PrivateIpSets', description='The private IP addresses of the ENI.'),
  queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI.

*   For a primary ENI: The default number of queues that the instance type supports for the ENI is returned.

*   For a secondary ENI:

    *   When the ENI is in the InUse state, the following situations occur for the QueueNumber parameter:

        *   If the number of queues supported by the ENI has not been modified, the default number of queues that the instance type supports for the ENI is returned.
        *   If the number of queues supported by the ENI has been modified, the new number of queues is returned.

    *   When the ENI is in the Available state, the following situations occur for the QueueNumber parameter:

        *   If the number of queues supported by the ENI has not been modified, the return value is empty.
        *   If the number of queues supported by the ENI has been modified, the new number of queues is returned.', example='8'),
  queuePairNumber?: int32(name='QueuePairNumber', description='>  This parameter is in invitational preview and unavailable for general users.', example='22'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the instance belongs. If this parameter is specified to query ENIs, up to 1,000 ENIs that belong to the specified resource group can be displayed in the response.

>  ENIs in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****'),
  securityGroupIds?: {
    securityGroupId?: [ string ](name='SecurityGroupId')
  }(name='SecurityGroupIds', description='The IDs of the security groups to which the ENI belongs.'),
  serviceID?: long(name='ServiceID', description='The ID of the distributor to which the ENI belongs.', example='12345678910'),
  serviceManaged?: boolean(name='ServiceManaged', description='Indicates whether the user of the ENI is an Alibaba Cloud service or a distributor.', example='true'),
  slaveInterfaceSpecification?: {
    bondNetworkInterfaceId?: string(name='BondNetworkInterfaceId', description='>  This parameter is in invitational preview and unavailable for general users.', example='null'),
    slaveNetworkInterfaceId?: string(name='SlaveNetworkInterfaceId', description='>  This parameter is in invitational preview and unavailable for general users.', example='null'),
    workState?: string(name='WorkState', description='>  This parameter is in invitational preview and unavailable for general users.', example='null'),
  }(name='SlaveInterfaceSpecification', description='>  This parameter is in invitational preview and unavailable for general users.'),
  status?: string(name='Status', description='The state of the ENI. Valid values:

*   Available: The ENI is not attached to an instance.
*   Attaching: The ENI is being attached to an instance.
*   InUse: The ENI is attached to an instance.
*   Detaching: The ENI is being detached from an instance.
*   Deleting: The ENI is being deleted.

This parameter is empty by default, which indicates that all states are queried.', example='Available'),
  tags?: {
    tag?: [ 
    {
      tagKey?: string(name='TagKey', description='The tag key of the ENI.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value of the ENI.', example='TestValue'),
    }
  ](name='Tag')
  }(name='Tags', description='The tags of the ENI.'),
  tcpOptionAddressEnabled?: string(name='TcpOptionAddressEnabled', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
  type?: string(name='Type', description='The type of the ENI. Valid values:

*   Primary
*   Secondary', example='Secondary'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which the ENI is connected.', example='vsw-bp1s5fnvk4gn2tws0****'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the ENI belongs.', example='vpc-bp67acfmxazb4p****'),
  zoneId?: string(name='ZoneId', description='The zone ID of the ENI.', example='cn-hangzhou-g'),
}

model DescribeNetworkInterfaceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNetworkInterfaceAttributeResponseBody(name='body'),
}

/**
  * ## Debugging
  * [OpenAPI Explorer automatically calculates the signature value. For your convenience, we recommend that you call this operation in OpenAPI Explorer. OpenAPI Explorer dynamically generates the sample code of the operation for different SDKs.](https://api.aliyun.com/#product=Ecs\\&api=DescribeNetworkInterfaceAttribute\\&type=RPC\\&version=2014-05-26)
  *
 */
async function describeNetworkInterfaceAttribute(request: DescribeNetworkInterfaceAttributeRequest): DescribeNetworkInterfaceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNetworkInterfaceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNetworkInterfacePermissionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of ENI N. You must specify `NetworkInterfaceId` or `NetworkInterfacePermissionId.N` to determine the query range.', example='eni-bp17pdijfczax****', position='Query'),
  networkInterfacePermissionId?: [ string ](name='NetworkInterfacePermissionId', description='The IDs of ENI permissions. You can specify up to 100 ENI permission IDs.', example='eni-perm-bp1cs4lwn56lfb****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Maximum value: 100.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI permission. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeNetworkInterfacePermissionsResponseBody = {
  networkInterfacePermissions?: {
    networkInterfacePermission?: [ 
    {
      accountId?: long(name='AccountId', description='The ID of the Alibaba Cloud partner (a certified ISV) or individual user.', example='1234567890'),
      networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of ENI N.', example='eni-bp14v2sdd3v8htln****'),
      networkInterfacePermissionId?: string(name='NetworkInterfacePermissionId', description='The ID of the ENI permission.', example='eni-perm-bp1cs4lwn56lfb****'),
      permission?: string(name='Permission', description='The ENI permission.', example='InstanceAttach'),
      permissionState?: string(name='PermissionState', description='The status of the ENI permission. Valid values:

*   Pending: The permission is being granted.
*   Granted: The permission is granted.
*   Revoking: The permission is being revoked.
*   Revoked: The permission is revoked.', example='Granted'),
      serviceName?: string(name='ServiceName', description='The name of the Alibaba Cloud service.', example='Elastic Compute Service'),
    }
  ](name='NetworkInterfacePermission')
  }(name='NetworkInterfacePermissions', description='Details about the ENI permissions.'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='0FCD3DEF-63D3-4605-A818-805C8BD7DB87'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeNetworkInterfacePermissionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNetworkInterfacePermissionsResponseBody(name='body'),
}

async function describeNetworkInterfacePermissions(request: DescribeNetworkInterfacePermissionsRequest): DescribeNetworkInterfacePermissionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNetworkInterfacePermissions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNetworkInterfacesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The ID of the instance to which the ENI is attached.', example='i-bp1e2l6djkndyuli****', position='Query'),
  ipv6Address?: [ string ](name='Ipv6Address', description='An array that consists of the IPv6 address of the ENI. You can specify multiple IPv6 addresses. Valid values of N: 1 to 100.', example='2408:4321:180:1701:94c7:bc38:3bfa:****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries to return on each page. Valid values: 10 to 500.

Default values:

*   If this parameter is not specified or if this parameter is set to a value less than 10, the default value is 10.
*   If this parameter is set to a value greater than 500, the default value is 500.', example='50', position='Query'),
  networkInterfaceId?: [ string ](name='NetworkInterfaceId', description='An array that consists of the IDs of the ENIs. You specify multiple ENI IDs. Valid values of N: 1 to 100.', example='eni-bp125p95hhdhn3ot****', position='Query'),
  networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI.', example='test-eni-name', position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the `NextToken` value returned in the last call to this operation.

For more information about how to check the responses returned by this operation, see the preceding "Description" section.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.

>  This parameter will be removed in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='1', deprecated='true', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 1000.

Default value: 10.

>  This parameter will be removed in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='100', deprecated='true', position='Query'),
  primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary private IPv4 address of the ENI.', example='192.168.**.**', position='Query'),
  privateIpAddress?: [ string ](name='PrivateIpAddress', description='An array that consists of the secondary private IPv4 addresses of the ENI. You can specify multiple secondary private IPv4 addresses. Valid values of N: 1 to 100.', example='192.168.**.**', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ENI belongs. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be returned.

> Resources in the default resource group are displayed in the response regardless of how this parameter is set.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which the secondary ENI belongs.

*   To query the details of secondary ENIs based on the ID of a security group, specify this parameter.
*   To query the details of primary ENIs based on the ID of a security group, call the [DescribeInstances](~~25506~~) operation and specify the `SecurityGroupId` parameter.', example='sg-bp144yr32sx6ndw****', position='Query'),
  serviceManaged?: boolean(name='ServiceManaged', description='Specifies whether the user of the ENI is an Alibaba Cloud service or a distributor.', example='true', position='Query'),
  status?: string(name='Status', description='The state of the ENI. Valid values:

*   Available: The ENI is available.
*   Attaching: The ENI is being attached to an instance.
*   InUse: The ENI is attached to an instance.
*   Detaching: The ENI is being detached from an instance.
*   Deleting: The ENI is being deleted.

This parameter is empty by default, which indicates that ENIs in all states are queried.', example='Available', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the ENI. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the ENI. Valid values of N: 1 to 20.

If a single tag is specified to query ENIs, up to 1,000 ENIs that have this tag can be returned. If multiple tags are specified to query ENIs, up to 1,000 ENIs that have all these tags can be returned. To query more than 1,000 resources that have specified tags, call the [ListTagResources](~~110425~~) operation.', example='TestValue'),
    }
  ](name='Tag', description='The tags to use for query.', position='Query'),
  type?: string(name='Type', description='The type of the ENI. Valid values:

*   Primary
*   Secondary

This parameter is empty by default, which indicates that both primary and secondary ENIs are queried.', example='Secondary', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch with which the ENI is associated.', example='vsw-bp16usj2p27htro3****', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the elastic network interface (ENI) belongs.', example='vsw-bp16usj2p27htro3****', position='Query'),
}

model DescribeNetworkInterfacesResponseBody = {
  networkInterfaceSets?: {
    networkInterfaceSet?: [ 
    {
      associatedPublicIp?: {
        allocationId?: string(name='AllocationId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
        publicIpAddress?: string(name='PublicIpAddress', description='The EIP.', example='116.62.**.**'),
      }(name='AssociatedPublicIp', description='The EIPs that are associated with the secondary private IP addresses of the ENI.'),
      attachment?: {
        deviceIndex?: int32(name='DeviceIndex', description='>  This parameter is in invitational preview and is not publicly available.', example='0'),
        instanceId?: string(name='InstanceId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
        networkCardIndex?: int32(name='NetworkCardIndex', description='The index of the network card.

*   If the ENI is in the Available state or if no network card index was specified when the ENI was attached, this parameter is empty.
*   If the ENI is in the InUse state and a network card index was specified when the ENI was attached, the specified network card index is returned as the value of this parameter.', example='0'),
        trunkNetworkInterfaceId?: string(name='TrunkNetworkInterfaceId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
      }(name='Attachment', description='>  This parameter is in invitational preview and is not publicly available.'),
      creationTime?: string(name='CreationTime', description='The time when the ENI was created.', example='2019-12-25T12:31:31Z'),
      deleteOnRelease?: boolean(name='DeleteOnRelease', description='Indicates whether to retain the ENI when the associated instance is released. Valid values:

*   true
*   false', example='true'),
      description?: string(name='Description', description='The description of the ENI.', example='DescriptionTest'),
      instanceId?: string(name='InstanceId', description='The ID of the Elastic Compute Service (ECS) instance to which the ENI is attached.

>  If the ENI is managed by other Alibaba Cloud services, no instance ID is returned.', example='i-bp1e2l6djkndyuli****'),
      ipv4PrefixSets?: {
        ipv4PrefixSet?: [ 
        {
          ipv4Prefix?: string(name='Ipv4Prefix', description='The IPv4 prefix of the ENI.', example='hide'),
        }
      ](name='Ipv4PrefixSet')
      }(name='Ipv4PrefixSets', description='The IPv4 prefixes of the ENI.'),
      ipv6PrefixSets?: {
        ipv6PrefixSet?: [ 
        {
          ipv6Prefix?: string(name='Ipv6Prefix', description='The IPv6 prefix of the ENI.', example='hide'),
        }
      ](name='Ipv6PrefixSet')
      }(name='Ipv6PrefixSets', description='The IPv6 prefixes of the ENI.'),
      ipv6Sets?: {
        ipv6Set?: [ 
        {
          ipv6Address?: string(name='Ipv6Address', description='The IPv6 address of the ENI.', example='2408:4321:180:1701:94c7:bc38:3bfa:****'),
        }
      ](name='Ipv6Set')
      }(name='Ipv6Sets', description='The IPv6 addresses of the ENI.'),
      macAddress?: string(name='MacAddress', description='The MAC address of the ENI.', example='00:16:3e:12:**:**'),
      networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp125p95hhdhn3ot****'),
      networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI.', example='my-eni-name'),
      networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the ENI. Valid values:

*   Standard: The TCP communication mode is used.
*   HighPerformance: The Elastic RDMA Interface (ERI) is enabled and the remote direct memory access (RDMA) communication mode is used.

>  This parameter can have a value of HighPerformance only when the ENI is attached to a c7re RDMA-enhanced instance that resides in Beijing Zone K.', example='Standard'),
      ownerId?: string(name='OwnerId', description='The ID of the account to which the ENI belongs.', example='123456****'),
      privateIpAddress?: string(name='PrivateIpAddress', description='The primary private IP address of the ENI.', example='172.17.**.**'),
      privateIpSets?: {
        privateIpSet?: [ 
        {
          associatedPublicIp?: {
            allocationId?: string(name='AllocationId', description='>  This parameter is in invitational preview and is not publicly available.', example='null'),
            publicIpAddress?: string(name='PublicIpAddress', description='The EIP.', example='116.62.**.**'),
          }(name='AssociatedPublicIp', description='The elastic IP address (EIP) that is associated with the private IP address.'),
          primary?: boolean(name='Primary', description='Indicates whether the private IP address is the primary private IP address. Valid values:

*   true: The IP address is the primary private IP address.
*   false: The IP address is a secondary private IP address.', example='true'),
          privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address of the ENI.', example='172.17.**.**'),
        }
      ](name='PrivateIpSet')
      }(name='PrivateIpSets', description='Details about the private IP addresses of the ENI.'),
      queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI.

*   If the ENI is a secondary ENI in the InUse state and the number of queues supported by the ENI has never been modified, the default number of queues per secondary ENI that the instance type supports is returned.
*   If the ENI is a secondary ENI and the number of queues supported by the ENI has been modified, the new number of queues is returned.
*   If the ENI is a secondary ENI in the Available state and the number of queues supported by the ENI has never been modified, an empty value is returned.
*   If the ENI is a primary ENI, the default number of queues per primary ENI that the instance type supports is returned.', example='8'),
      queuePairNumber?: int32(name='QueuePairNumber', description='>  This parameter is in invitational preview and is not publicly available.', example='0'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the ENI belongs.', example='rg-2ze88m67qx5z****'),
      securityGroupIds?: {
        securityGroupId?: [ string ](name='SecurityGroupId')
      }(name='SecurityGroupIds', description='The security groups to which the ENI belongs.'),
      serviceID?: long(name='ServiceID', description='The ID of the distributor to which the ENI belongs.', example='12345678910'),
      serviceManaged?: boolean(name='ServiceManaged', description='Indicates whether the user of the ENI is an Alibaba Cloud service or a distributor.', example='true'),
      status?: string(name='Status', description='The state of the ENI.', example='Available'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the ENI.'),
      type?: string(name='Type', description='The type of the ENI.', example='Secondary'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch.', example='vsw-bp16usj2p27htro3****'),
      vpcId?: string(name='VpcId', description='The ID of the VPC to which the ENI belongs.', example='vpc-bp1j7w3gc1cexjqd****'),
      zoneId?: string(name='ZoneId', description='The zone ID of the ENI.', example='cn-hangzhou-e'),
    }
  ](name='NetworkInterfaceSet')
  }(name='NetworkInterfaceSets', description='Details about the ENIs.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2****'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.

> This parameter will be removed in the future. We recommend that you use the NextToken and MaxResults parameters for a paged query.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.

> This parameter will be removed in the future. We recommend that you use the NextToken and MaxResults parameters for a paged query.', example='1'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of ENIs.

> If you specify the `MaxResults` and `NextToken` parameters to perform a paged query, the value of the `TotalCount` response parameter is invalid.', example='2'),
}

model DescribeNetworkInterfacesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNetworkInterfacesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The `DescribeNetworkInterfaces` operation supports paged queries. During a paged query, when you call the DescribeNetworkInterfaces operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token that can be used in the next call to retrieve a new page of results. When you call the DescribeNetworkInterfaces operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  * >  If you specify `MaxResults` or `NextToken`, the system uses the preceding paged query method to return results. Otherwise, the system returns results based on the combination of `PageNumber` and `PageSize`.
  *
 */
async function describeNetworkInterfaces(request: DescribeNetworkInterfacesRequest): DescribeNetworkInterfacesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNetworkInterfaces', 'POST', '/', 'json', false, 'json', request);
}

model DescribeNewProjectEipMonitorDataRequest {
  allocationId: string(name='AllocationId', position='Query'),
  endTime: string(name='EndTime', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', position='Query'),
}

model DescribeNewProjectEipMonitorDataResponseBody = {
  eipMonitorDatas?: {
    eipMonitorData?: [ 
    {
      eipBandwidth?: int32(name='EipBandwidth'),
      eipFlow?: int32(name='EipFlow'),
      eipPackets?: int32(name='EipPackets'),
      eipRX?: int32(name='EipRX'),
      eipTX?: int32(name='EipTX'),
      timeStamp?: string(name='TimeStamp'),
    }
  ](name='EipMonitorData')
  }(name='EipMonitorDatas'),
  requestId?: string(name='RequestId'),
}

model DescribeNewProjectEipMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeNewProjectEipMonitorDataResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeNewProjectEipMonitorData(request: DescribeNewProjectEipMonitorDataRequest): DescribeNewProjectEipMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeNewProjectEipMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribePhysicalConnectionsRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  filter?: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model DescribePhysicalConnectionsResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  physicalConnectionSet?: {
    physicalConnectionType?: [ 
    {
      accessPointId?: string(name='AccessPointId'),
      adLocation?: string(name='AdLocation'),
      bandwidth?: long(name='Bandwidth'),
      businessStatus?: string(name='BusinessStatus'),
      circuitCode?: string(name='CircuitCode'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      enabledTime?: string(name='EnabledTime'),
      lineOperator?: string(name='LineOperator'),
      name?: string(name='Name'),
      peerLocation?: string(name='PeerLocation'),
      physicalConnectionId?: string(name='PhysicalConnectionId'),
      portNumber?: string(name='PortNumber'),
      portType?: string(name='PortType'),
      redundantPhysicalConnectionId?: string(name='RedundantPhysicalConnectionId'),
      spec?: string(name='Spec'),
      status?: string(name='Status'),
      type?: string(name='Type'),
    }
  ](name='PhysicalConnectionType')
  }(name='PhysicalConnectionSet'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
}

model DescribePhysicalConnectionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePhysicalConnectionsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describePhysicalConnections(request: DescribePhysicalConnectionsRequest): DescribePhysicalConnectionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribePhysicalConnections', 'POST', '/', 'json', false, 'json', request);
}

model DescribePrefixListAssociationsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  maxResults?: int32(name='MaxResults', description='The query token that is returned in this call. If the return value is empty, no more data is returned.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListId: string(name='PrefixListId', description='The query token. Set the value to the `NextToken` value returned in the previous call to the DescribePrefixListAssociations operation. Leave this parameter empty the first time you call this operation.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the prefix list.', example='cn-chengdu', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribePrefixListAssociationsResponseBody = {
  nextToken?: string(name='NextToken', description='The ID of the request.', example='AAAAAdDWBF2****'),
  prefixListAssociations?: {
    prefixListAssociation?: [ 
    {
      resourceId?: string(name='ResourceId', description='The type of the resource.', example='sg-bp11ujym6xsff6l0****'),
      resourceType?: string(name='ResourceType', example='securitygroup'),
    }
  ](name='PrefixListAssociation')
  }(name='PrefixListAssociations', description='The ID of the resource.'),
  requestId?: string(name='RequestId', description='Details about the resources that are associated with the prefix list.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model DescribePrefixListAssociationsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePrefixListAssociationsResponseBody(name='body'),
}

async function describePrefixListAssociations(request: DescribePrefixListAssociationsRequest): DescribePrefixListAssociationsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribePrefixListAssociations', 'POST', '/', 'json', false, 'json', request);
}

model DescribePrefixListAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListId: string(name='PrefixListId', description='The time when the prefix list was created.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  regionId: string(name='RegionId', description='The ID of the prefix list.', example='cn-chengdu', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribePrefixListAttributesResponseBody = {
  addressFamily?: string(name='AddressFamily', description='The name of the prefix list.', example='IPv4'),
  creationTime?: string(name='CreationTime', description='The maximum number of entries that the prefix list can contain.', example='2021-02-20T07:11Z'),
  description?: string(name='Description', description='The IP address family of the prefix list. Valid values:

*   IPv4
*   IPv6', example='This is description.'),
  entries?: {
    entry?: [ 
    {
      cidr?: string(name='Cidr', example='192.168.1.0/24'),
      description?: string(name='Description', description='The CIDR block in the entry in the prefix list.', example='Description Sample 01'),
    }
  ](name='Entry')
  }(name='Entries', description='The description of the entry in the prefix list.'),
  maxEntries?: int32(name='MaxEntries', description='The ID of the request.', example='10'),
  prefixListId?: string(name='PrefixListId', description='Details about the entries in the prefix list.', example='pl-x1j1k5ykzqlixdcy****'),
  prefixListName?: string(name='PrefixListName', description='The ID of the prefix list.', example='PrefixListNameSample'),
  requestId?: string(name='RequestId', description='The description of the prefix list.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model DescribePrefixListAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePrefixListAttributesResponseBody(name='body'),
}

async function describePrefixListAttributes(request: DescribePrefixListAttributesRequest): DescribePrefixListAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribePrefixListAttributes', 'POST', '/', 'json', false, 'json', request);
}

model DescribePrefixListsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  addressFamily?: string(name='AddressFamily', description='The IP address family of the prefix list. Valid values:

*   IPv4
*   IPv6

This parameter is empty by default, which indicates that all prefix lists are queried.', example='IPv4', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The query token. Set the value to the `NextToken` value returned in the previous call to the DescribePrefixLists operation. Leave this parameter empty the first time you call this operation.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListId?: [ string ](name='PrefixListId', description='The IDs of prefix list.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  prefixListName?: string(name='PrefixListName', description='The name of the prefix list.', example='PrefixListNameSample', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-chengdu', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribePrefixListsResponseBody = {
  nextToken?: string(name='NextToken', description='The query token returned in this call. If the return value is empty, no more data is returned.', example='AAAAAdDWBF2****'),
  prefixLists?: {
    prefixList?: [ 
    {
      addressFamily?: string(name='AddressFamily', description='The IP address family of the prefix list. Valid values:

*   IPv4
*   IPv6', example='IPv4'),
      associationCount?: int32(name='AssociationCount', description='The number of associated resources.', example='1'),
      creationTime?: string(name='CreationTime', description='The time when the prefix list was created.', example='2021-02-20T07:11Z'),
      description?: string(name='Description', description='The description of the prefix list.', example='This is description.'),
      maxEntries?: int32(name='MaxEntries', description='The maximum number of entries that the prefix list can contain.', example='20'),
      prefixListId?: string(name='PrefixListId', description='The ID of the prefix list.', example='pl-x1j1k5ykzqlixdcy****'),
      prefixListName?: string(name='PrefixListName', description='The name of the prefix list.', example='PrefixListNameSample'),
    }
  ](name='PrefixList')
  }(name='PrefixLists', description='Details about the prefix lists.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model DescribePrefixListsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePrefixListsResponseBody(name='body'),
}

/**
  * ## Description
  * You can specify the `AddressFamily`, `PrefixListId.N`, and `PrefixListName` request parameters to be queried. Specified parameters have logical AND relations. Only the specified parameters are included in the filter conditions.
  *
 */
async function describePrefixLists(request: DescribePrefixListsRequest): DescribePrefixListsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribePrefixLists', 'POST', '/', 'json', false, 'json', request);
}

model DescribePriceRequest {
  dataDisk?: [
    {
      category?: string(name='Category', description='The category of data disk N. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: ESSD
*   cloud_auto: ESSD AutoPL disk

Valid values of N: 1 to 16.', example='cloud_ssd'),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of data disk N when the disk is an ESSD. This parameter takes effect only when `DataDisk.N.Category` is set to cloud_essd. Valid values:

*   PL0
*   PL1 (default)
*   PL2
*   PL3

Valid values of N: 1 to 16.', example='PL1'),
      size?: long(name='Size', description='The size of data disk N. Unit: GiB. Valid values:

*   Valid values when DataDisk.N.Category is set to cloud: 5 to 2000.

*   Valid values when DataDisk.N.Category is set to cloud_efficiency: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_ssd: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_auto: 1 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_essd: vary based on the value of `DataDisk.N.PerformanceLevel`.

    *   Valid values when DataDisk.N.PerformanceLevel is set to PL0: 1 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL1: 20 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL2: 461 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL3: 1261 to 32768.

*   Valid values when DataDisk.N.Category is set to ephemeral_ssd: 5 to 800.

Valid values of N: 1 to 16.', example='2000'),
    }
  ](name='DataDisk', position='Query'),
  schedulerOptions?: {
    dedicatedHostId?: string(name='DedicatedHostId', description='This parameter takes effect only when ResourceType is set to instance.

The ID of the dedicated host. You can call the [DescribeDedicatedHosts](~~134242~~) operation to query the dedicated host list.', example='dh-bp67acfmxazb4p****'),
  }(name='SchedulerOptions', position='Query'),
  systemDisk?: {
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud: basic disk
*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD
*   ephemeral_ssd: local SSD
*   cloud_essd: Enterprise SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk

Default value:

*   When InstanceType is set to a retired instance type and `IoOptimized` is set to `none`, the default value is `cloud`.
*   In other cases, the default value is `cloud_efficiency`.

>  If you want to query the price of a system disk, you must also specify `ImageId`.', example='cloud_ssd'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level of the system disk when the disk is an ESSD. This parameter is valid only when `SystemDiskCategory` is set to cloud_essd. Valid values:

PL0, PL1 (default), PL2, PL3.', example='PL1'),
    size?: int32(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   Basic disk (cloud): 20 to 500.

*   ESSD (cloud_essd): Valid values vary based on the SystemDisk.PerformanceLevel value.

    *   Valid values when SystemDisk.PerformanceLevel is set to PL0: 1 to 2048.
    *   Valid values when SystemDisk.PerformanceLevel is set to PL1: 20 to 2048.
    *   Valid values when SystemDisk.PerformanceLevel is set to PL2: 461 to 2048.
    *   Valid values when SystemDisk.PerformanceLevel is set to PL3: 1261 to 2048.

*   ESSD AutoPL disk (cloud_auto): 1 to 2048.

*   Other disk categories: 20 to 2048.

Default value: 20 or the size of the image specified by ImageId, whichever is greater.', example='80'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  amount?: int32(name='Amount', description='The number of ECS instances. You can specify this parameter when you want to query the prices of multiple instances that have specific specifications. Valid values: 1 to 1000.

Default value: 1.', example='1', position='Query'),
  assuranceTimes?: string(name='AssuranceTimes', description='The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective period.

Default value: Unlimited.', example='Unlimited', position='Query'),
  capacity?: int32(name='Capacity', description='The storage capacity. Unit: GiB.', example='1024', position='Query'),
  dedicatedHostType?: string(name='DedicatedHostType', description='The type of the dedicated host. You can call the [DescribeDedicatedHostTypes](~~134240~~) operation to query the most recent list of dedicated host types.', example='ddh.c5', position='Query'),
  imageId?: string(name='ImageId', description='This parameter takes effect only when ResourceType is set to instance.

The image ID. Images contain the runtime environments to load when instances start. You can call the [DescribeImages](~~25534~~) operation to query available images. If you do not specify this parameter, the system queries the prices of Linux images.', example='centos_7_05_64_20G_alibase_20181212.vhd', position='Query'),
  instanceAmount?: int32(name='InstanceAmount', description='The total number of reserved instances for an instance type.

Valid values: 1 to 1000.', example='100', position='Query'),
  instanceCpuCoreCount?: int32(name='InstanceCpuCoreCount', description='The total number of vCPUs supported by the elasticity assurance. When you call this API operation, the system calculates the number of instances that an elasticity assurance must support based on the specified value of InstanceType. The calculated value is rounded up to the nearest integer.

> When you call this API operation to query the price of an elasticity assurance, you can only specify either InstanceCoreCpuCount or InstanceAmount.', example='1024', position='Query'),
  instanceNetworkType?: string(name='InstanceNetworkType', description='The network type of the instance. Valid values:

*   classic: classic network
*   vpc: Virtual Private Cloud (VPC)

Default value: vpc.', example='vpc', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. When `ResourceType` is set to `instance`, you must specify this parameter. For more information, see [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent list of instance types.', example='ecs.g6.large', position='Query'),
  instanceTypeList?: [ string ](name='InstanceTypeList', description='The instance types. You can select only a single instance type when you configure an elasticity assurance in unlimited mode.', example='ecs.g6.xlarge', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic

Default value: PayByTraffic', example='PayByTraffic', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.

Default value: 0.', example='5', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: The instance is I/O optimized.

When the instance type specified by the InstanceType parameter belongs to [Generation I instance families](~~55263~~), the default value of this parameter is none.

When the instance type specified by the InstanceType parameter does not belong to [Generation I instance families](~~55263~~), the default value of this parameter is optimized.', example='optimized', position='Query'),
  isp?: string(name='Isp', description='The Internet service provider (ISP). Valid values:

*   cmcc: China Mobile
*   telecom: China Telecom
*   unicom: China Unicom
*   multiCarrier: multi-line ISP', example='cmcc', position='Query'),
  offeringType?: string(name='OfferingType', description='The payment option of the reserved instance. Valid values:

*   No Upfront
*   Partial Upfront
*   All Upfront', example='All Upfront', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The billing cycle of the ECS instance. Valid values:

*   Valid values when PriceUnit is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
*   Valid values when PriceUnit is set to Year: 1, 2, 3, 4, and 5.
*   Set the value to 1 when PriceUnit is set to Hour.

Default value: 1.', example='1', position='Query'),
  platform?: string(name='Platform', description='The operating system of the image that is used by the instance. Valid values:

*   Windows: Windows Server operating system
*   Linux: Linux and UNIX-like operating system', example='Linux', position='Query'),
  priceUnit?: string(name='PriceUnit', description='The pricing unit of the ECS resource. Valid values:

*   Month
*   Year
*   Hour (default)', example='Year', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The resource type. Valid values:

*   instance: queries the most recent prices of ECS instances. When this parameter is set to `instance`, you must specify `InstanceType`.
*   disk: queries the most recent prices of cloud disks. When this parameter is set to `disk`, you must specify `DataDisk.1.Category` and `DataDisk.1.Size`.
*   bandwidth: queries the most recent prices of network usage.
*   ddh: queries the most recent prices of dedicated hosts.
*   ElasticityAssurance: queries the most recent prices of elasticity assurances. When this parameter is set to `ElasticityAssurance`, you must specify `InstanceType`.
*   CapacityReservation: queries the most recent prices of capacity reservations. When this parameter is set to `CapacityReservation`, you must specify `InstanceType`.

Default value: instance.', example='instance', position='Query'),
  scope?: string(name='Scope', description='The scope of the reserved instance. Valid values:

*   Region: regional
*   Zone: zonal

Default value: Region.', example='Zone', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter takes effect only when SpotStrategy is set to SpotWithPriceLimit or SpotAsPriceGo.', example='1', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is created as a preemptible instance that has a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance whose bid price is based on the market price at the time of purchase. The market price can be up to the pay-as-you-go price.

Default value: NoSpot.

>  This parameter takes effect only when `PriceUnit` is set to Hour and `Period` is set to 1. The default value of `PriceUnit` is `Hour` and the default value of `Period` is `1`. Therefore, you do not need to set `PriceUnit` or `Period` when you set SpotStrategy.', example='NoSpot', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID.

> Prices of preemptible instances vary based on zones. When you query the price of a preemptible instance, specify ZoneId.', example='cn-hagzhou-i', position='Query'),
}

model DescribePriceResponseBody = {
  priceInfo?: {
    price?: {
      currency?: string(name='Currency', description='The currency unit.

Alibaba Cloud China site (aliyun.com): CNY.

Alibaba Cloud International site (alibabacloud.com): USD.', example='CNY'),
      detailInfos?: {
        detailInfo?: [ 
        {
          discountPrice?: float(name='DiscountPrice', description='The discount.', example='655.2'),
          originalPrice?: float(name='OriginalPrice', description='The original price.', example='4368'),
          resource?: string(name='Resource', description='The resource name. Valid values:

*   InstanceType
*   bandwidth
*   image
*   SystemDisk
*   DataDisk', example='instance'),
          subRules?: {
            rule?: [ 
            {
              description?: string(name='Description', description='The description of the pricing rule.', example='Receive a 15% discount on a 1-year subscription'),
              ruleId?: long(name='RuleId', description='The ID of the pricing rule.', example='587'),
            }
          ](name='Rule')
          }(name='SubRules', description='Details about the pricing rules.'),
          tradePrice?: float(name='TradePrice', description='The transaction price.', example='3712.8'),
        }
      ](name='DetailInfo')
      }(name='DetailInfos', description='The information about the price.

>  This parameter is returned only when ResourceType is set to instance.'),
      discountPrice?: float(name='DiscountPrice', description='The discount.', example='655.2'),
      originalPrice?: float(name='OriginalPrice', description='The original price.', example='4368'),
      reservedInstanceHourPrice?: float(name='ReservedInstanceHourPrice', description='The hourly price of the reserved instance for which the No Upfront or Partial Upfront payment option is used.', example='1'),
      tradePrice?: float(name='TradePrice', description='The transaction price of the order. The transaction price is equal to the original price minus the discount.', example='3712.8'),
    }(name='Price', description='The price.'),
    relatedPrice?: {
      marketplaceImagePrice?: {
        currency?: string(name='Currency', description='The currency unit.

China site (aliyun.com): CNY

International site (alibabacloud.com): USD', example='CNY'),
        discountPrice?: float(name='DiscountPrice', description='The discount.', example='0'),
        originalPrice?: float(name='OriginalPrice', description='The original price.', example='100'),
        tradePrice?: float(name='TradePrice', description='The transaction price, which is equal to the original price minus the discount.', example='100'),
      }(name='MarketplaceImagePrice', description='The Alibaba Cloud Marketplace image price.'),
    }(name='RelatedPrice', description='The related price.'),
    rules?: {
      rule?: [ 
      {
        description?: string(name='Description', description='The description of the promotion rule.', example='Receive a 15% discount on a 1-year subscription'),
        ruleId?: long(name='RuleId', description='The ID of the pricing rule.', example='587'),
      }
    ](name='Rule')
    }(name='Rules', description='The information about the promotion rules.'),
  }(name='PriceInfo', description='The information about the prices and promotion rules.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribePriceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribePriceResponseBody(name='body'),
}

/**
  * # [](#)Usage notes
  * *   The required parameters vary based on the types of resources whose prices you want to query.
  *     *   When `ResourceType` is set to instance, you must specify `InstanceType`.
  *     *   When `ResourceType` is set to disk, you must specify both `DataDisk.1.Category` and `DataDisk.1.Size`. When `ResourceType` is set to disk, only pay-as-you-go prices of cloud disks are returned. In this scenario, `PriceUnit` can be set only to `Hour`.
  *     *   When `ResourceType` is set to ddh, you must specify `DedicatedHostType`.
  *     *   When `ResourceType` is set to ElasticityAssurance, you must specify `InstanceType`.
  *     *   When `ResourceType` is set to CapacityReservation, you must specify `InstanceType`.
  * *   When `ResourceType` is set to bandwidth, only the pay-by-traffic (`PayByTraffic`) price for network usage is returned.
  * *   When `ResourceType` is set to instance, the prices of up to four data disks can be queried.
  * *   By default, `ChargeType` is set to `PostPaid`. You can specify `PriceUnit` to query prices of ECS resources that have different billing cycles.
  *
 */
async function describePrice(request: DescribePriceRequest): DescribePriceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribePrice', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRecommendInstanceTypeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  cores?: int32(name='Cores', description='The number of vCPUs of the instance.

> If you specify both `Cores` and `Memory`, the system returns all instance types that match the values of the parameters.', example='2', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the ECS instance. For more information, see [Billing overview](~~25398~~). Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go

Default value: PostPaid.', example='PostPaid', position='Query'),
  instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family. Valid values:

*   EntryLevel
*   EnterpriseLevel
*   CreditEntryLevel For more information, see [Burstable instance families](~~59977~~).', example='EnterpriseLevel', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. For more information, see [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list.

> If you specify `InstanceType`, the `Cores` and `Memory` parameters are ignored.', example='ecs.hfg6.large', position='Query'),
  instanceTypeFamily?: [ string ](name='InstanceTypeFamily', description='Specifies the instance families from which the alternative instance types are selected. You can specify up to 10 instance families.', example='ecs.hfg6', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. The IoOptimized parameter cannot be specified when the instance is not I/O optimized. Valid values:

*   optimized: The instance is I/O optimized.
*   none: The instance is not I/O optimized.

Default value: optimized.

If you query alternative instance types for retired instance types, this parameter is set to none by default.', example='optimized', position='Query'),
  maxPrice?: float(name='MaxPrice', description='The maximum hourly price for pay-as-you-go instances or preemptible instances.

>  This parameter takes effect only when `SpotStrategy` is set to `SpotWithPriceLimit`.', example='10.0', position='Query'),
  memory?: float(name='Memory', description='The memory size of the instance. Unit: GiB.

> If you specify both `Cores` and `Memory`, the system returns all instance types that match the values of the parameters.', example='8.0', position='Query'),
  networkType: string(name='NetworkType', description='The network type of the instance. Valid values:

*   classic
*   vpc

Default value: vpc.', example='vpc', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  priorityStrategy?: string(name='PriorityStrategy', description='The policy that is used to recommend instance types. Valid values:

*   InventoryFirst: recommends instance types in descending order of resource availability.
*   PriceFirst: recommends the most cost-effective instance types. Recommended instance types appear based on the hourly prices of vCPUs in ascending order.
*   NewProductFirst: recommends the latest instance types.

Default value: InventoryFirst.', example='PriceFirst', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scene?: string(name='Scene', description='Specifies the scenarios in which instance types are recommended. Valid values:

*   UPGRADE: instance type upgrade or downgrade
*   CREATE: instance creation

Default value: CREATE.', example='CREATE', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy of the preemptible instance. Valid values:

*   NoSpot: The instance is a regular pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is a preemptible instance for which you can specify the maximum hourly price.
*   SpotAsPriceGo: The instance is a preemptible instance for which the market price at the time of purchase is automatically used as the bid price. The market price can be up to the pay-as-you-go price.

>  If you specify `SpotStrategy`, you must set `InstanceChargeType` to `PostPaid`.

Default value: NoSpot.', example='NoSpot', position='Query'),
  systemDiskCategory?: string(name='SystemDiskCategory', description='The category of the system disk. Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: SSD
*   cloud_essd: ESSD
*   cloud: basic disk

For non-I/O optimized instances, the default value is cloud.

For I/O optimized instances, the default value is cloud_efficiency.', example='cloud_ssd', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.

We recommend that you set the value of ZoneMatchMode to Include, which is the default value. This way, the system recommends instance types that are available in the zone specified by the ZoneId parameter based on priority. The system also recommends instance types that are available in other zones within the same region.', example='cn-hangzhou-f', position='Query'),
  zoneMatchMode?: string(name='ZoneMatchMode', description='Specifies whether to recommend only instance types in the zone specified by ZoneId. Valid values:

*   Strict: recommends only instance types that are available in zones specified by the ZoneId parameter.
*   Include: recommends instance types that are available in zones specified by the ZoneId parameter and other zones within the same region.

If `ZoneId` is specified, the default value of this parameter is Strict. This value indicates that only alternative instance types in the zone specified by ZoneId are recommended.', example='Strict', position='Query'),
}

model DescribeRecommendInstanceTypeResponseBody = {
  data?: {
    recommendInstanceType?: [ 
    {
      commodityCode?: string(name='CommodityCode', description='The commodity code of the instance type.', example='ecs'),
      instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance.', example='PostPaid'),
      instanceType?: {
        cores?: int32(name='Cores', description='The number of vCPUs of the instance type.', example='1'),
        generation?: string(name='Generation', description='The generation of the instance family.', example='ecs-4'),
        instanceType?: string(name='InstanceType', description='The name of the instance type.', example='ecs.hfg6.large'),
        instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family.', example='ecs.hfg6'),
        memory?: int32(name='Memory', description='The memory size of the instance type. Unit: MB.', example='8192'),
        supportIoOptimized?: string(name='SupportIoOptimized', description='Indicates whether the instance type supports I/O optimization.', example='optimized'),
      }(name='InstanceType', description='The name of the instance type.'),
      networkType?: string(name='NetworkType', description='The network type of the instance.', example='vpc'),
      priority?: int32(name='Priority', description='The priority based on which the system sorts the instance types.', example='2'),
      regionId?: string(name='RegionId', description='The region ID of the instance type.', example='cn-hangzhou'),
      scene?: string(name='Scene', description='The scenarios in which the instance type is recommended.', example='CREATE'),
      spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the preemptible instance.', example='NoSpot'),
      zoneId?: string(name='ZoneId', description='The ID of the zone in which the instance type is available.', example='cn-hangzhou-h'),
      zones?: {
        zone?: [ 
        {
          networkTypes?: {
            networkType?: [ string ](name='NetworkType')
          }(name='NetworkTypes', description='The details of network types of instance types.'),
          zoneNo?: string(name='ZoneNo', description='The ID of the zone where the instance type is available.', example='cn-hangzhou-h'),
        }
      ](name='zone')
      }(name='Zones', description='The details of the zones where the instance types resides.'),
    }
  ](name='RecommendInstanceType')
  }(name='Data', description='The details of the recommended instance types.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeRecommendInstanceTypeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRecommendInstanceTypeResponseBody(name='body'),
}

async function describeRecommendInstanceType(request: DescribeRecommendInstanceTypeRequest): DescribeRecommendInstanceTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRecommendInstanceType', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRegionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  acceptLanguage?: string(name='AcceptLanguage', description='The natural language that is used to filter responses. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231). Valid values:

*   zh-CN: Chinese
*   en-US: English
*   ja: Japanese

Default value: zh-CN.', example='zh-CN', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of instances. For more information, see [Billing overview](~~25398~~). Valid values:

*   PrePaid: subscription. If you set this parameter to PrePaid, make sure that you have sufficient balance or credits in your account. Otherwise, the InvalidPayMethod error code is returned.
*   PostPaid: pay-as-you-go.

Default value: PostPaid.', example='PrePaid', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The resource type. Valid value:

*   instance: Elastic Compute Service (ECS) instance
*   disk: disk
*   reservedinstance: reserved instance
*   scu: storage capacity unit (SCU)

Default value: instance.', example='instance', position='Query'),
}

model DescribeRegionsResponseBody = {
  regions?: {
    region?: [ 
    {
      localName?: string(name='LocalName', description='The name of the region.', example='China (Qingdao)'),
      regionEndpoint?: string(name='RegionEndpoint', description='The endpoint of the region.', example='ecs.aliyuncs.com'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-qingdao-et2-bo1'),
      status?: string(name='Status', description='Indicates whether clusters are sold out. Valid values:

*   available
*   soldOut', example='available'),
    }
  ](name='Region')
  }(name='Regions', description='The queried regions.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeRegionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRegionsResponseBody(name='body'),
}

/**
  * ****
  *
 */
async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRegions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRenewalPriceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  expectedRenewDay?: int32(name='ExpectedRenewDay', description='The synchronized expiration date. If you specify this parameter, the price for renewing a specified instance to the specified synchronized expiration date is queried. Valid values: 1 to 28.

For information about how to synchronize the expiration dates of instances, see [Synchronize the expiration dates of instances](~~108486~~).

> The renewal period-related parameter pair (`Period` and `PeriodUnit`) and the `ExpectedRenewDay` parameter are mutually exclusive.', example='5', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The renewal period. Valid values:

*   Valid values when the `PriceUnit` parameter is set to `Month`: 1, 2, 3, 4, 5, 6, 7, 8, and 9.
*   Valid values when the `PriceUnit` parameter is set to `Year`: 1, 2, 3.

Default value: 1.

> The renewal period-related parameter pair (`Period` and `PeriodUnit`) and the `ExpectedRenewDay` parameter are mutually exclusive.', example='1', position='Query'),
  priceUnit?: string(name='PriceUnit', description='The unit of the renewal period. Valid values:

*   Month
*   Year

Default value: Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource. If the `ResourceType` parameter is set to`  instance `, the value of the `ResourceId` parameter is the ID of the specified instance.``', example='i-bp1f2o4ldh8l29zv****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Set the value to instance.

Default value: instance.', example='instance', position='Query'),
}

model DescribeRenewalPriceResponseBody = {
  priceInfo?: {
    price?: {
      currency?: string(name='Currency', description='The currency unit.

Alibaba Cloud China site (aliyun.com): CNY.

Alibaba Cloud International site (alibabacloud.com): USD.', example='CNY'),
      detailInfos?: {
        resourcePriceModel?: [ 
        {
          discountPrice?: float(name='DiscountPrice', description='The discount.', example='655.2'),
          originalPrice?: float(name='OriginalPrice', description='The original price.', example='4368'),
          resource?: string(name='Resource', description='The name of the resource that corresponds to the price.', example='instance'),
          subRules?: {
            rule?: [ 
            {
              description?: string(name='Description', description='The description of the pricing rule.', example='Receive a 15% discount on a 1-year subscription.'),
              ruleId?: long(name='RuleId', description='The ID of the pricing rule.', example='1234567890'),
            }
          ](name='Rule')
          }(name='SubRules', description='The pricing rules.'),
          tradePrice?: float(name='TradePrice', description='The transaction price.', example='3712.8'),
        }
      ](name='ResourcePriceModel')
      }(name='DetailInfos', description='Details about the resource prices.'),
      discountPrice?: float(name='DiscountPrice', description='The discount.', example='655.2'),
      originalPrice?: float(name='OriginalPrice', description='The original price.', example='4368'),
      tradePrice?: float(name='TradePrice', description='The transaction price, which is equal to the original price minus the discount.', example='3712.8'),
    }(name='Price', description='The price.'),
    rules?: {
      rule?: [ 
      {
        description?: string(name='Description', description='The description of the promotion rule.', example='Receive a 15% discount on a 1-year subscription'),
        ruleId?: long(name='RuleId', description='The ID of the promotion rule.', example='1234567890'),
      }
    ](name='Rule')
    }(name='Rules', description='Details about the promotion rules.'),
  }(name='PriceInfo', description='Details about the prices and promotion rules.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model DescribeRenewalPriceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRenewalPriceResponseBody(name='body'),
}

/**
  * *   You can call this operation to query the price for renewing a subscription instance for a specific period of time or to a synchronized expiration date.
  * *   Take note of the following items:
  *     *   If you specify only the required parameters, the price for renewing an instance for one month is queried by default.
  *     *   The renewal period-related parameter pair (`Period` and `PeriodUnit`) and the synchronized expiration date-related parameter (`ExpectedRenewDay`) are mutually exclusive. You cannot set these parameters together to query the prices for renewing a specified instance for a period of time and to a synchronized expiration date at the same time.
  *
 */
async function describeRenewalPrice(request: DescribeRenewalPriceRequest): DescribeRenewalPriceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRenewalPrice', 'POST', '/', 'json', false, 'json', request);
}

model DescribeReservedInstanceAutoRenewAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the reserved instances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reservedInstanceId?: [ string ](name='ReservedInstanceId', description='The IDs of the reserved instances.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeReservedInstanceAutoRenewAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='04F0F334-1335-436C-A1D7-6C044FE7****'),
  reservedInstanceRenewAttributes?: {
    reservedInstanceRenewAttribute?: [ 
    {
      duration?: int32(name='Duration', description='The auto-renewal duration.', example='1'),
      periodUnit?: string(name='PeriodUnit', description='The unit of the auto-renewal duration.

Valid values: Year and Month.', example='Month'),
      renewalStatus?: string(name='RenewalStatus', description='The auto-renewal status of the reserved instance. Valid values:

*   AutoRenewal: The reserved instance is automatically renewed.
*   Normal: You must manually renew the reserved instance.', example='AutoRenewal'),
      reservedInstanceId?: string(name='ReservedInstanceId', description='The ID of the reserved instance.', example='ecsri-ajdfaj****'),
    }
  ](name='ReservedInstanceRenewAttribute')
  }(name='ReservedInstanceRenewAttributes', description='Details about the auto-renewal settings of the reserved instances.'),
}

model DescribeReservedInstanceAutoRenewAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeReservedInstanceAutoRenewAttributeResponseBody(name='body'),
}

async function describeReservedInstanceAutoRenewAttribute(request: DescribeReservedInstanceAutoRenewAttributeRequest): DescribeReservedInstanceAutoRenewAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeReservedInstanceAutoRenewAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeReservedInstancesRequest {
  allocationType?: string(name='AllocationType', description='The allocation type. Valid values:

*   Normal: queries all reserved instances that belong to the current account.
*   Shared: queries reserved instances that are shared between the main account and linked accounts.

Default value: Normal.', example='Normal', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. For more information, see [Instance families](~~25378~~).', example='ecs.g5.large', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family. For more information, see [Instance families](~~25378~~).', example='ecs.g5', position='Query'),
  lockReason?: string(name='LockReason', description='The reason why the instance is locked. Valid values:

*   financial: You have an overdue payment in your account, or the reserved instance has expired.
*   security: The reserved instance is locked for security reasons.', example='security', position='Query'),
  offeringType?: string(name='OfferingType', description='The payment option of the reserved instances. Valid values:

*   No Upfront
*   Partial Upfront
*   All Upfront', example='All Upfront', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Maximum value: 100.

Default value: 10.', example='50', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reservedInstanceId?: [ string ](name='ReservedInstanceId', description='The ID of reserved instance N. Valid values of N: 1 to 100.', example='ri-bpzhex2ulpzf53****', position='Query'),
  reservedInstanceName?: string(name='ReservedInstanceName', description='The name of the reserved instance.', example='testReservedInstanceName', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scope?: string(name='Scope', description='The scope of the reserved instances. Valid values:

*   Region
*   Zone

Default value: Region.', example='Region', position='Query'),
  status?: [ string ](name='Status', description='The status of reserved instance N. Valid values of N: 1 to 100. Valid values:

*   Creating
*   Active
*   Expired
*   Updating', example='Active', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the reserved instance. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag key cannot start with acs: or aliyun.

Up to 1,000 resources with the specified tags can be returned in the response. To query more than 1,000 resources with the specified tags, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the reserved instance. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the instances.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the reserved instances. This parameter is required when Scope is set to Zone. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-z', position='Query'),
}

model DescribeReservedInstancesResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='1'),
  requestId?: string(name='RequestId', description='The request ID.', example='E572643C-6A29-49D6-9D4E-6CFA4E063A3E'),
  reservedInstances?: {
    reservedInstance?: [ 
    {
      allocationStatus?: string(name='AllocationStatus', description='Indicates the sharing status of the reserved instance when the AllocationType parameter is set to Shared. Valid values:

*   allocated: The reserved instance is allocated to another account.
*   beAllocated: The reserved instance is allocated by another account.', example='allocated'),
      creationTime?: string(name='CreationTime', description='The creation time.', example='2018-12-10T12:07Z'),
      description?: string(name='Description', description='The description.', example='testDescription'),
      expiredTime?: string(name='ExpiredTime', description='The expiration time.', example='2019-12-10T12:07Z'),
      instanceAmount?: int32(name='InstanceAmount', description='The number of pay-as-you-go instances that are of the same instance type as the reserved instance and can be matched to the reserved instance.', example='10'),
      instanceType?: string(name='InstanceType', description='The instance type of the pay-as-you-go instances that can be matched to the reserved instance.', example='ecs.g5.large'),
      offeringType?: string(name='OfferingType', description='The payment option.', example='All Upfront'),
      operationLocks?: {
        operationLock?: [ 
        {
          lockReason?: string(name='LockReason', description='The reason why the instance is locked.', example='security'),
        }
      ](name='OperationLock')
      }(name='OperationLocks', description='Details about the lock status of the reserved instance.'),
      platform?: string(name='Platform', description='The operating system of the image used by the instance. Valid values:

*   Windows
*   Linux', example='Linux'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
      reservedInstanceId?: string(name='ReservedInstanceId', description='The reserved instance ID.', example='ri-bpzhex2ulpzf53****'),
      reservedInstanceName?: string(name='ReservedInstanceName', description='The name.', example='riZbpzhex2ulpzf53****'),
      resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID.', example='EcsDocTest'),
      scope?: string(name='Scope', description='The scope.', example='region'),
      startTime?: string(name='StartTime', description='The effective time.', example='2018-12-10T12:00Z'),
      status?: string(name='Status', description='The status.', example='Active'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='Details about the tags of the reserved instance.'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-z'),
    }
  ](name='ReservedInstance')
  }(name='ReservedInstances', description='Details about the reserved instances.'),
  totalCount?: int32(name='TotalCount', description='The total number of reserved instances.', example='1'),
}

model DescribeReservedInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeReservedInstancesResponseBody(name='body'),
}

async function describeReservedInstances(request: DescribeReservedInstancesRequest): DescribeReservedInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeReservedInstances', 'POST', '/', 'json', false, 'json', request);
}

model DescribeResourceByTagsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 50.', example='50', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: Elastic Compute Service (ECS) instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: elastic network interface (ENI)
*   ddh: dedicated host
*   keypair: SSH key pair
*   launchtemplate: launch template

All the preceding values must be lowercase.', example='instance', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the resource. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the resource. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model DescribeResourceByTagsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='50'),
  requestId?: string(name='RequestId', description='The request ID.', example='1C1E5359-71D7-44D8-8FAA-0327B549157X'),
  resources?: {
    resource?: [ 
    {
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
      resourceId?: string(name='ResourceId', description='The resource ID.', example='i-bp16t2cgmiiy7t1c****'),
      resourceType?: string(name='ResourceType', description='The type of the resource.', example='instance'),
    }
  ](name='Resource')
  }(name='Resources', description='Details about the resources to which the tags are bound.'),
  totalCount?: int32(name='TotalCount', description='The total number of resources returned.', example='8'),
}

model DescribeResourceByTagsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourceByTagsResponseBody(name='body'),
}

async function describeResourceByTags(request: DescribeResourceByTagsRequest): DescribeResourceByTagsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeResourceByTags', 'POST', '/', 'json', false, 'json', request);
}

model DescribeResourcesModificationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  conditions?: [ string ](name='Conditions', description='The conditions.', position='Query'),
  cores?: int32(name='Cores', description='The number of vCPUs of the instance type. For information about the values, see [Overview of instance families](~~25378~~). This parameter takes effect only when DestinationResource is set to InstanceType.', example='2', position='Query'),
  destinationResource: string(name='DestinationResource', description='The type of the resource. Valid values:

*   InstanceType
*   SystemDisk', example='InstanceType', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. For more information, see [Overview of instance families](~~25378~~). You can also call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list. This parameter must be specified when DestinationResource is set to SystemDisk.', example='ecs.g5.large', position='Query'),
  memory?: float(name='Memory', description='The memory size of the instance type. Unit: GiB. For information about the values, see [Overview of instance families](~~25378~~). This parameter takes effect only when DestinationResource is set to InstanceType.', example='8.0', position='Query'),
  migrateAcrossZone?: boolean(name='MigrateAcrossZone', description='Specifies whether cross-cluster instance type upgrades are supported. Valid values:

*   true
*   false

Default value: false.

When MigrateAcrossZone is set to true and you upgrade the instance type of an instance based on the returned information, take note of the following items:

*   Instance that resides in the classic network:

    *   For [retired instance types](~~55263~~), when a non-I/O optimized instance is upgraded to an I/O optimized instance, the private IP address, disk device names, and software authorization codes of the instance change. For a Linux instance, basic disks (cloud) are identified as xvd\\* such as xvda and xvdb, and ultra disks (cloud_efficiency) and standard SSDs (cloud_ssd) are identified as vd\\* such as vda and vdb.
    *   For [instance families available for purchase](~~25378~~), when the instance type of an instance is changed, the private IP address of the instance changes.

*   Instance that resides in a virtual private cloud (VPC): For [retired instance types](~~55263~~), when a non-I/O optimized instance is upgraded to an I/O optimized instance, the disk device names and software authorization codes of the instance change. For a Linux instance, basic disks (cloud) are identified as xvd\\* such as xvda and xvdb, and ultra disks (cloud_efficiency) and standard SSDs (cloud_ssd) are identified as vd\\* such as vda and vdb.', example='true', position='Query'),
  operationType?: string(name='OperationType', description='The operation of changing resource configurations.

*   Valid values for subscription resources:

    *   Upgrade: upgrades resources.
    *   Downgrade: downgrades resources.
    *   RenewDowngrade: renews and downgrades resources.
    *   RenewModify: renews an expired instance and changes its configurations.

*   Set the value to Upgrade for pay-as-you-go resources.

Default value: Upgrade.', example='Upgrade', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource. For example, when DestinationResource is set to InstanceType, this parameter can be interpreted as InstanceId.', example='i-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-e', position='Query'),
}

model DescribeResourcesModificationResponseBody = {
  availableZones?: {
    availableZone?: [ 
    {
      availableResources?: {
        availableResource?: [ 
        {
          conditionSupportedResources?: {
            conditionSupportedResource?: [ 
            {
              conditions?: {
                condition?: [ 
                {
                  key?: string(name='Key', description='The condition name. Valid value:

DiskCategory, which indicates a disk category change.', example='DiskCategory'),
                }
              ](name='Condition')
              }(name='Conditions', description='The conditions.'),
              max?: int32(name='Max', description='The maximum disk capacity.

This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='2'),
              min?: int32(name='Min', description='The minimum disk capacity.

This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='1'),
              status?: string(name='Status', description='The stock state of the resource. Valid values:

*   Available
*   SoldOut', example='Available'),
              statusCategory?: string(name='StatusCategory', description='The category of the resource based on stock status. Valid values:

*   WithStock: resources that are in sufficient stock
*   ClosedWithStock: resources that are in insufficient stock
*   WithoutStock: resources that are out of stock', example='WithStock'),
              unit?: string(name='Unit', description='The unit of the disk capacity.

This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='null'),
              value?: string(name='Value', description='The resource type.', example='ecs.g5.large'),
            }
          ](name='ConditionSupportedResource')
          }(name='ConditionSupportedResources', description='The resource types that resources can be changed to after the resources meet specified conditions. If the conditions are met, you can change the current resource to a resource in the list.'),
          supportedResources?: {
            supportedResource?: [ 
            {
              max?: int32(name='Max', description='The maximum disk capacity.

This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='2'),
              min?: int32(name='Min', description='The minimum disk capacity.

This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='1'),
              status?: string(name='Status', description='The state of the resource. Valid values:

*   Available
*   SoldOut', example='Available'),
              statusCategory?: string(name='StatusCategory', description='The category of the resource based on stock status. Valid values:

*   WithStock: resources that are in sufficient stock
*   ClosedWithStock: resources that are in insufficient stock
*   WithoutStock: resources that are out of stock', example='WithStock'),
              unit?: string(name='Unit', description='The unit of the disk capacity. This parameter takes effect only when the DestinationResource request parameter is set to SystemDisk.', example='null'),
              value?: string(name='Value', description='The resource type.', example='ecs.g5.large'),
            }
          ](name='SupportedResource')
          }(name='SupportedResources', description='The information about the resources.'),
          type?: string(name='Type', description='The type of the resources. Valid values:

*   Zone
*   IoOptimized
*   InstanceType
*   SystemDisk
*   DataDisk
*   Network', example='InstanceType'),
        }
      ](name='AvailableResource')
      }(name='AvailableResources', description='The resources that are available in the zone.'),
      regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
      status?: string(name='Status', description='The state of the resource. Valid values:

*   Available
*   SoldOut', example='Available'),
      statusCategory?: string(name='StatusCategory', description='The category of the resource based on stock status. Valid values:

*   WithStock: resources that are in sufficient stock
*   ClosedWithStock: resources that are in insufficient stock
*   WithoutStock: resources that are out of stock', example='WithStock'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-e'),
    }
  ](name='AvailableZone')
  }(name='AvailableZones', description='The information about the queried zones.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeResourcesModificationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeResourcesModificationResponseBody(name='body'),
}

/**
  * ## Debugging
  * [OpenAPI Explorer automatically calculates the signature value. For your convenience, we recommend that you call this operation in OpenAPI Explorer. OpenAPI Explorer dynamically generates the sample code of the operation for different SDKs.](https://api.aliyun.com/#product=Ecs\\&api=DescribeResourcesModification\\&type=RPC\\&version=2014-05-26)
  *
 */
async function describeResourcesModification(request: DescribeResourcesModificationRequest): DescribeResourcesModificationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeResourcesModification', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRouteTablesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routeTableId?: string(name='RouteTableId', position='Query'),
  routeTableName?: string(name='RouteTableName', position='Query'),
  routerId?: string(name='RouterId', position='Query'),
  routerType?: string(name='RouterType', position='Query'),
  vRouterId?: string(name='VRouterId', position='Query'),
}

model DescribeRouteTablesResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  routeTables?: {
    routeTable?: [ 
    {
      creationTime?: string(name='CreationTime'),
      resourceGroupId?: string(name='ResourceGroupId'),
      routeEntrys?: {
        routeEntry?: [ 
        {
          destinationCidrBlock?: string(name='DestinationCidrBlock'),
          instanceId?: string(name='InstanceId'),
          nextHopType?: string(name='NextHopType'),
          nextHops?: {
            nextHop?: [ 
            {
              enabled?: int32(name='Enabled'),
              nextHopId?: string(name='NextHopId'),
              nextHopType?: string(name='NextHopType'),
              weight?: int32(name='Weight'),
            }
          ](name='NextHop')
          }(name='NextHops'),
          routeTableId?: string(name='RouteTableId'),
          status?: string(name='Status'),
          type?: string(name='Type'),
        }
      ](name='RouteEntry')
      }(name='RouteEntrys'),
      routeTableId?: string(name='RouteTableId'),
      routeTableType?: string(name='RouteTableType'),
      vRouterId?: string(name='VRouterId'),
    }
  ](name='RouteTable')
  }(name='RouteTables'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeRouteTablesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRouteTablesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeRouteTables(request: DescribeRouteTablesRequest): DescribeRouteTablesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRouteTables', 'POST', '/', 'json', false, 'json', request);
}

model DescribeRouterInterfacesRequest {
  filter?: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeRouterInterfacesResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  routerInterfaceSet?: {
    routerInterfaceType?: [ 
    {
      accessPointId?: string(name='AccessPointId'),
      businessStatus?: string(name='BusinessStatus'),
      chargeType?: string(name='ChargeType'),
      connectedTime?: string(name='ConnectedTime'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      endTime?: string(name='EndTime'),
      healthCheckSourceIp?: string(name='HealthCheckSourceIp'),
      healthCheckTargetIp?: string(name='HealthCheckTargetIp'),
      name?: string(name='Name'),
      oppositeAccessPointId?: string(name='OppositeAccessPointId'),
      oppositeInterfaceBusinessStatus?: string(name='OppositeInterfaceBusinessStatus'),
      oppositeInterfaceId?: string(name='OppositeInterfaceId'),
      oppositeInterfaceOwnerId?: string(name='OppositeInterfaceOwnerId'),
      oppositeInterfaceSpec?: string(name='OppositeInterfaceSpec'),
      oppositeInterfaceStatus?: string(name='OppositeInterfaceStatus'),
      oppositeRegionId?: string(name='OppositeRegionId'),
      oppositeRouterId?: string(name='OppositeRouterId'),
      oppositeRouterType?: string(name='OppositeRouterType'),
      role?: string(name='Role'),
      routerId?: string(name='RouterId'),
      routerInterfaceId?: string(name='RouterInterfaceId'),
      routerType?: string(name='RouterType'),
      spec?: string(name='Spec'),
      status?: string(name='Status'),
    }
  ](name='RouterInterfaceType')
  }(name='RouterInterfaceSet'),
  totalCount?: int32(name='TotalCount'),
}

model DescribeRouterInterfacesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeRouterInterfacesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeRouterInterfaces(request: DescribeRouterInterfacesRequest): DescribeRouterInterfacesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeRouterInterfaces', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSavingsPlanEstimationRequest {
  offeringType?: string(name='OfferingType', position='Query'),
  period?: string(name='Period', position='Query'),
  periodUnit?: string(name='PeriodUnit', position='Query'),
  planType?: string(name='PlanType', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceId?: string(name='ResourceId', position='Query'),
}

model DescribeSavingsPlanEstimationResponseBody = {
  committedAmount?: string(name='CommittedAmount'),
  currency?: string(name='Currency'),
  instanceTypeFamily?: string(name='InstanceTypeFamily'),
  offeringType?: string(name='OfferingType'),
  period?: int32(name='Period'),
  periodUnit?: string(name='PeriodUnit'),
  planType?: string(name='PlanType'),
  requestId?: string(name='RequestId'),
  resourceId?: string(name='ResourceId'),
}

model DescribeSavingsPlanEstimationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSavingsPlanEstimationResponseBody(name='body'),
}

async function describeSavingsPlanEstimation(request: DescribeSavingsPlanEstimationRequest): DescribeSavingsPlanEstimationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSavingsPlanEstimation', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSavingsPlanPriceRequest {
  committedAmount?: string(name='CommittedAmount', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', position='Query'),
  offeringType?: string(name='OfferingType', position='Query'),
  period?: int32(name='Period', position='Query'),
  periodUnit?: string(name='PeriodUnit', position='Query'),
  planType?: string(name='PlanType', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceId?: [ string ](name='ResourceId', position='Query'),
}

model DescribeSavingsPlanPriceResponseBody = {
  priceInfo?: {
    price?: {
      currency?: string(name='Currency'),
      discountPrice?: float(name='DiscountPrice'),
      originalPrice?: float(name='OriginalPrice'),
      tradePrice?: float(name='TradePrice'),
    }(name='Price'),
    rules?: [ 
      {
        description?: string(name='Description'),
        ruleId?: string(name='RuleId'),
      }
    ](name='Rules'),
  }(name='PriceInfo'),
  requestId?: string(name='RequestId'),
}

model DescribeSavingsPlanPriceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSavingsPlanPriceResponseBody(name='body'),
}

async function describeSavingsPlanPrice(request: DescribeSavingsPlanPriceRequest): DescribeSavingsPlanPriceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSavingsPlanPrice', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSecurityGroupAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  direction?: string(name='Direction', description='The direction in which the security group rule is applied. Valid values:

*   egress: outbound
*   ingress: inbound
*   all: outbound and inbound

Default value: all.', example='all', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

*   Minimum value: 10.
*   Maximum value: 1000.

Default value: 500.', example='500', minimum=10, maximum=1000, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2****', position='Query'),
  nicType?: string(name='NicType', description='The network interface controller (NIC) type of the security group rule.

*   Valid values for rules of security groups in the classic network:

    *   internet (default)
    *   intranet

    **

    **Note** You can query security group rules of only one NIC type in a single call. To query security group rules of both NIC types, call the operation twice.

*   When the security group is in a virtual private cloud (VPC), set the value to intranet, which is the default value for rules of security groups in VPCs.

    **

    **Note** If you set this parameter to internet or leave this parameter empty, a value of intranet is automatically used.', example='intranet', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp1gxw6bznjjvhu3****', position='Query'),
}

model DescribeSecurityGroupAttributeResponseBody = {
  description?: string(name='Description', description='The description of the security group.', example='This is description.'),
  innerAccessPolicy?: string(name='InnerAccessPolicy', description='The access control policy of the security group. Valid values:

*   Accept: All instances in the security group can communicate with each other.
*   Drop: All instances in the security group are isolated from each other.', example='Accept'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results. If the return value of this parameter is empty when you specify `MaxResults` and `NextToken` for a paged query, no more results are to be returned.', example='AAAAAdDWBF2****'),
  permissions?: {
    permission?: [ 
    {
      createTime?: string(name='CreateTime', description='The time when the security group rule was created. The time is displayed in UTC.', example='2018-12-12T07:28:38Z'),
      description?: string(name='Description', description='The description of the security group.', example='Description Sample 01'),
      destCidrIp?: string(name='DestCidrIp', description='The destination CIDR block for outbound access control.', example='0.0.0.0/0'),
      destGroupId?: string(name='DestGroupId', description='The ID of the destination security group for outbound access control.', example='sg-bp1czdx84jd88i7v****'),
      destGroupName?: string(name='DestGroupName', description='The name of the destination security group.', example='testDestGroupName'),
      destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='The ID of the Alibaba Cloud account to which the destination security group belongs.', example='1234567890'),
      destPrefixListId?: string(name='DestPrefixListId', description='The ID of the destination prefix list for outbound access control.', example='pl-x1j1k5ykzqlixabc****'),
      destPrefixListName?: string(name='DestPrefixListName', description='The name of the destination prefix list.', example='DestPrefixListName Sample'),
      direction?: string(name='Direction', description='The direction in which the security group rule is applied.', example='ingress'),
      ipProtocol?: string(name='IpProtocol', description='The transport layer protocol.', example='TCP'),
      ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block.', example='2001:db8:1233:1a00::***'),
      ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block.', example='2001:db8:1234:1a00::***'),
      nicType?: string(name='NicType', description='The network type.', example='intranet'),
      policy?: string(name='Policy', description='The access control policy.', example='Accept'),
      portRange?: string(name='PortRange', description='The port range.', example='80/80'),
      priority?: string(name='Priority', description='The priority of the rule.', example='1'),
      securityGroupRuleId?: string(name='SecurityGroupRuleId', description='The ID of the security group rule.', example='sgr-bp12kewq32dfwrdi****'),
      sourceCidrIp?: string(name='SourceCidrIp', description='The source CIDR block for inbound access control.', example='0.0.0.0/0'),
      sourceGroupId?: string(name='SourceGroupId', description='The source security group for inbound access control.', example='sg-bp12kc4rqohaf2js****'),
      sourceGroupName?: string(name='SourceGroupName', description='The name of the source security group.', example='testSourceGroupName1'),
      sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='The ID of the Alibaba Cloud account to which the source security group belongs.', example='1234567890'),
      sourcePortRange?: string(name='SourcePortRange', description='The source port range.', example='80/80'),
      sourcePrefixListId?: string(name='SourcePrefixListId', description='The ID of the source prefix list for inbound access control.', example='pl-x1j1k5ykzqlixdcy****'),
      sourcePrefixListName?: string(name='SourcePrefixListName', description='The name of the source prefix list.', example='SourcePrefixListName Sample'),
    }
  ](name='Permission')
  }(name='Permissions', description='Details about the security group rules.'),
  regionId?: string(name='RegionId', description='The ID of the region.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the destination security group.', example='sg-bp1gxw6bznjjvhu3****'),
  securityGroupName?: string(name='SecurityGroupName', description='The name of the destination security group.', example='SecurityGroupName Sample'),
  vpcId?: string(name='VpcId', description='The ID of the VPC. If a VPC ID is returned, the network type of the security group is VPC. If no VPC ID is returned, the network type of the security group is classic network.', example='vpc-bp1opxu1zkhn00gzv****'),
}

model DescribeSecurityGroupAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSecurityGroupAttributeResponseBody(name='body'),
}

async function describeSecurityGroupAttribute(request: DescribeSecurityGroupAttributeRequest): DescribeSecurityGroupAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSecurityGroupAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSecurityGroupReferencesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: [ string ](name='SecurityGroupId', description='The ID of security group N. Valid values of N: 1 to 10.', example='sg-bp14vtedjtobkvi****', position='Query'),
}

model DescribeSecurityGroupReferencesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  securityGroupReferences?: {
    securityGroupReference?: [ 
    {
      referencingSecurityGroups?: {
        referencingSecurityGroup?: [ 
        {
          aliUid?: string(name='AliUid', description='The ID of the Alibaba Cloud account to which the security group belongs.', example='123456****'),
          securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4j****'),
        }
      ](name='ReferencingSecurityGroup')
      }(name='ReferencingSecurityGroups', description='Details about the security groups whose rules are referencing the specified security groups.'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the specified security group.', example='sg-bp67acfmxazb4p****'),
    }
  ](name='SecurityGroupReference')
  }(name='SecurityGroupReferences', description='Details about the references to the specified security groups.'),
}

model DescribeSecurityGroupReferencesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSecurityGroupReferencesResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   A security group can be referenced by the inbound or outbound rules of other security groups.
  * *   Up to 100 entries can be returned each time.
  * *   If a security group cannot be deleted by calling the [DeleteSecurityGroup](~~25558~~) operation, you can call the DescribeSecurityGroupReferences operation to check whether the security group is referenced by the rules of other security groups. If the security group is referenced by the rules of other security groups, you must remove the reference before you can delete the security group.
  *
 */
async function describeSecurityGroupReferences(request: DescribeSecurityGroupReferencesRequest): DescribeSecurityGroupReferencesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSecurityGroupReferences', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSecurityGroupsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks your AccessKey pair, the permissions of the RAM user, and the required parameters. If the request passes the dry run, the DryRunOperation error code is returned. Otherwise, an error message is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  fuzzyQuery?: boolean(name='FuzzyQuery', description='> This parameter is deprecated.', example='null', position='Query'),
  isQueryEcsCount?: boolean(name='IsQueryEcsCount', description='Specifies whether to query the capacity of the security group. If you set this parameter to True, the `EcsCount` and `AvailableInstanceAmount` values in the response are valid.

>  This parameter is deprecated.', example='null', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. If you specify this parameter, both `MaxResults` and `NextToken` are used for a paged query.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  networkType?: string(name='NetworkType', description='The network type of the security group. Valid values:

*   vpc
*   classic', example='vpc', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='e71d8a535bd9cc11', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.

>  This parameter will be removed in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.

>  This parameter will be removed in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the security group belongs. If this parameter is specified to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response. You can call the [ListResourceGroups](~~158855~~) operation to query the most recent resource group list.

> Resources in the default resource group are displayed in the response regardless of how this parameter is configured.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The security group ID.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupIds?: string(name='SecurityGroupIds', description='The security group IDs. Set this parameter to a JSON array that consists of up to 100 security group IDs. Separate the security group IDs with commas (,).', example='["sg-bp67acfmxazb4p****", "sg-bp67acfmxazb4p****", "sg-bp67acfmxazb4p****",....]', position='Query'),
  securityGroupName?: string(name='SecurityGroupName', description='The name of the security group.', example='SGTestName', position='Query'),
  securityGroupType?: string(name='SecurityGroupType', description='The type of the security group. Valid values:

*   normal: basic security group
*   enterprise: advanced security group

> If you do not specify this parameter, both basic and advanced security groups are queried.', example='normal', position='Query'),
  serviceManaged?: boolean(name='ServiceManaged', description='Specifies whether to query managed security groups. Valid values:

*   true
*   false', example='false', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the security group. Valid values of N: 1 to 20.

Up to 1,000 resources that match the tags specified can be returned in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the security group. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the security groups.', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the virtual private cloud (VPC) to which the security group belongs.', example='vpc-bp67acfmxazb4p****', position='Query'),
}

model DescribeSecurityGroupsResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. If the return value of this parameter is empty when MaxResults and NextToken are used for a paged query, no next page exists.', example='e71d8a535bd9cc11'),
  pageNumber?: int32(name='PageNumber', description='The page number.

> This parameter will be deprecated in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

> This parameter will be deprecated in the future. We recommend that you use NextToken and MaxResults for a paged query.', example='10'),
  regionId?: string(name='RegionId', description='The region ID of the security group.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  securityGroups?: {
    securityGroup?: [ 
    {
      availableInstanceAmount?: int32(name='AvailableInstanceAmount', description='The number of private IP addresses that can be added to the security group. For more information, see the "Security group capacity" section in [Basic security groups and advanced security groups](~~605897#section-kj9-e46-6v5~~).

If you set IsQueryEcsCount to True, the return value of AvailableInstanceAmount is valid.

>  This parameter is deprecated. The returned quantity is provided only for reference. The actual quantity may differ from the returned quantity.', example='0'),
      creationTime?: string(name='CreationTime', description='The time when the security group was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddThh:mmZ format. The time is displayed in UTC.', example='2021-08-31T03:12:29Z'),
      description?: string(name='Description', description='The description of the security group.', example='TestDescription'),
      ecsCount?: int32(name='EcsCount', description='The number of private IP addresses that are contained in the security group. For more information, see the "Security group capacity" section in [Basic security groups and advanced security groups](~~605897#section-kj9-e46-6v5~~).

If you set IsQueryEcsCount to True, the return value of EcsCount is valid.

>  This parameter is deprecated. The returned quantity is provided only for reference. The actual quantity may differ from the returned quantity.', example='0'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the security group belongs.', example='rg-bp67acfmxazb4p****'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4p****'),
      securityGroupName?: string(name='SecurityGroupName', description='The name of the security group.', example='SGTestName'),
      securityGroupType?: string(name='SecurityGroupType', description='The type of the security group. Valid values:

*   normal: basic security group
*   enterprise: advanced security group', example='normal'),
      serviceID?: long(name='ServiceID', description='The ID of the distributor to which the security group belongs.', example='12345678910'),
      serviceManaged?: boolean(name='ServiceManaged', description='Indicates whether the user of the security group is an Alibaba Cloud service or a distributor.', example='false'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of the tag.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The value of the tag.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the security group.'),
      vpcId?: string(name='VpcId', description='The ID of the VPC to which the security group belongs.', example='vpc-bp67acfmxazb4p****'),
    }
  ](name='SecurityGroup')
  }(name='SecurityGroups', description='The information about the security groups.'),
  totalCount?: int32(name='TotalCount', description='The total number of security groups returned. If `MaxResults` and `NextToken` are specified in the request, the value of this parameter is not returned.', example='20'),
}

model DescribeSecurityGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSecurityGroupsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The basic information about security groups includes their IDs and descriptions. The response returns security groups in descending order of the IDs of the security groups.
  * *   We recommend that you use `MaxResults` and `NextToken` for a paged query. We recommend that you use `MaxResults` to specify the maximum number of entries to return for each request. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeSecurityGroups operation to retrieve a new page of results, set `NextToken` to the `NextToken` value that is returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call. If the return value of `NextToken` is empty, the current page of results is the last page and no more results are to be returned.
  * *   When you use Alibaba Cloud CLI to call an API operation, you must specify request parameter values of different data types in required formats. For more information, see [Parameter format overview](~~110340~~).
  *
 */
async function describeSecurityGroups(request: DescribeSecurityGroupsRequest): DescribeSecurityGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSecurityGroups', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSendFileResultsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The ID of the instance for which you want to query file sending records.', example='i-hz0jdfwd9f****', position='Query'),
  invocationStatus?: string(name='InvocationStatus', description='The overall sending status of the file. The overall sending status of the file varies based on the sending status of the file on all destination instances. Valid values:

*   Pending: The file is being verified or sent. If the sending state of the file on at least one instance is Pending, the overall sending state of the file is Pending.
*   Running: The file is being sent to the instances. If the sending state of the file on at least one instance is Running, the overall sending state of the file is Running.
*   Success: The file is sent. If the sending state of the file on all instances is Success, the overall sending state of the file is Success.
*   Failed: The file fails to be sent. If the sending state of the file on all instances is Failed, the overall sending state of the file is Failed.
*   PartialFailed: The file sending task succeeds on some instances and fails on other instances. If the sending state of the file is Success on some instances and is Failed on other instances, the overall sending state of the file is PartialFailed.', example='Success', position='Query'),
  invokeId?: string(name='InvokeId', description='The ID of the file sending task.', example='f-hz0jdfwd9f****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  name?: string(name='Name', description='The name of the file whose sending records you want to query.', example='test.txt', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

Pages start from page 1.

Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

Valid values: 1 to 50.

Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ECS instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. After you set this parameter, file sending results in the specified resource group are queried.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the file sending task. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all the tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the file sending task. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the file sending task.', position='Query'),
}

model DescribeSendFileResultsResponseBody = {
  invocations?: {
    invocation?: [ 
    {
      content?: string(name='Content', description='The content of the file.', example='#!/bin/bash  echo "Current User is :"  echo $(ps | grep "$$" | awk \\"{print $2}\\")'),
      contentType?: string(name='ContentType', description='The type of the file content. Valid values:

*   PlainText: The file content is not encoded.
*   Base64: The file content is encoded in Base64.', example='PlainText'),
      creationTime?: string(name='CreationTime', description='The time when the file sending task was created.', example='2019-12-20T06:15:54Z'),
      description?: string(name='Description', description='The description of the file.', example='This is a test file.'),
      fileGroup?: string(name='FileGroup', description='The group of the file.', example='test'),
      fileMode?: string(name='FileMode', description='The permissions on the file.', example='777'),
      fileOwner?: string(name='FileOwner', description='The owner of the file.', example='test'),
      invocationStatus?: string(name='InvocationStatus', description='The overall sending status of the file. The overall sending status of the file varies based on the sending status of the file on all destination instances. Valid values:

*   Pending: The file is being verified or sent. If the sending state of the file on at least one instance is Pending, the overall sending state of the file is Pending.

*   Running: The file is being sent to the instances. If the sending state of the file on at least one instance is Running, the overall sending state of the file is Running.

*   Success: If the sending state of the file on all instances is Success, the overall sending state of the file is Success.

*   If the sending state of the file on all instances is Failed, the overall sending state of the file is Failed. If the sending state of the file on one or more instances is one of the following values, the overall sending state of the file is Failed:

    *   Invalid: The file is invalid.
    *   Aborted: The file failed to be sent to the instances.
    *   Failed: The file failed to be created on the instances.
    *   Timeout: The file sending task timed out.
    *   Error: An error occurred and interrupted the file sending task.

*   PartialFailed: The file sending task was completed on some instances but failed on other instances. If the sending state of the file is Success on some instances and is Failed on other instances, the overall sending state of the file is PartialFailed.', example='Success'),
      invokeId?: string(name='InvokeId', description='The ID of the file sending task.', example='f-hz0jdfwd9f****'),
      invokeInstances?: {
        invokeInstance?: [ 
        {
          creationTime?: string(name='CreationTime', description='The creation time of the file sending task.', example='2019-12-20T06:15:54Z'),
          errorCode?: string(name='ErrorCode', description='The error code returned when the file failed to be sent to the instance. Valid values:

*   Null: The file is sent to the instance.
*   InstanceNotExists: The instance does not exist or has been released.
*   InstanceReleased: The instance is released while the file is being sent.
*   InstanceNotRunning: The instance is not running when the file sending task is being created.
*   AccountNotExists: The specified account does not exist.
*   ClientNotRunning: Cloud Assistant Agent is not running.
*   ClientNotResponse: Cloud Assistant Agent does not respond.
*   ClientIsUpgrading: Cloud Assistant Agent is being upgraded.
*   ClientNeedUpgrade: Cloud Assistant Agent needs to be upgraded.
*   DeliveryTimeout: The file sending task timed out.
*   FileCreateFail: The file failed to be created.
*   FileAlreadyExists: A file with the same name exists in the specified directory.
*   FileContentInvalid: The file content is invalid.
*   FileNameInvalid: The file name is invalid.
*   FilePathInvalid: The specified directory is invalid.
*   FileAuthorityInvalid: The specified permissions on the file are invalid.
*   UserGroupNotExists: The specified user group does not exist.', example='InstanceNotExists'),
          errorInfo?: string(name='ErrorInfo', description='The error message returned when the file failed to be sent or the file sending task failed to be executed. Valid values:

*   Null: The file is sent to the instance.
*   the specified instance does not exists
*   the specified instance has been released
*   the instance is not running when create task
*   the specified account does not exists
*   the aliyun service is not running on the instance
*   the aliyun service in the instance does not response
*   the aliyun service in the instance is upgrading now
*   the aliyun service in the instance need upgrade
*   the command delivery has been timeout
*   the file creation is failed due to unknown error
*   the authority of file is invalid
*   File content is empty
*   the content of file is invalid
*   File already exists
*   File name is invalid
*   File path is invalid
*   Owner not exists
*   Group not exists
*   Mode is invalid', example='the instance is not running when create task'),
          finishTime?: string(name='FinishTime', description='The time when the file sending task was completed.', example='2019-12-20T06:15:54Z'),
          instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-uf614fhehhz****'),
          invocationStatus?: string(name='InvocationStatus', description='The status of the file sending task. Valid values:

*   Pending: The file is being verified or sent.
*   Invalid: The file is invalid.
*   Running: The file is being sent to the instance.
*   Aborted: The file failed to be sent to the instance.
*   Success: The file is sent.
*   Failed: The file failed to be created on the instance.
*   Error: An error occurred and interrupted the file sending task.
*   Timeout: The file sending task timed out.', example='Success'),
          startTime?: string(name='StartTime', description='The time when the file sending task started to be executed on the instance.', example='2019-12-20T06:15:54Z'),
          updateTime?: string(name='UpdateTime', description='The time when the task status was last updated.', example='2019-12-20T06:15:54Z'),
        }
      ](name='InvokeInstance')
      }(name='InvokeInstances', description='The destination instances.'),
      name?: string(name='Name', description='The name of the file.', example='test.txt'),
      overwrite?: string(name='Overwrite', description='Indicates whether a file in the destination directory is overwritten if the file has the same name as the sent file.', example='false'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the file sending task.', example='owner'),
          tagValue?: string(name='TagValue', description='The tag value of the file sending task.', example='zhangsan'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the file sending task.'),
      targetDir?: string(name='TargetDir', description='The destination directory.', example='/home/user'),
      vmCount?: int32(name='VmCount', description='The number of the destination instances.', example='1'),
    }
  ](name='Invocation')
  }(name='Invocations', description='The file sending records.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: long(name='TotalCount', description='The total number of file sending tasks queried.', example='2'),
}

model DescribeSendFileResultsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSendFileResultsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes:
  * *   When you send a file, the file may fail to be sent to specific Elastic Compute Service (ECS) instances. You can call this operation to check the file sending results.
  * *   You can call this operation to query the file sending records within the last six weeks.
  * *   You can use one of the following methods to check the responses:
  *     *   Method 1: During a paged query, when you call the DescribeSendFileResults operation to retrieve the first page of results, set `MaxResults` to specify the maximum number of entries to return in the call. The return value of `NextToken` is a pagination token, which can be used in the next request to retrieve a new page of results. When you call the DescribeSendFileResults operation to retrieve a new page of results, set `NextToken` to the `NextToken` value returned in the previous call and set `MaxResults` to specify the maximum number of entries to return in this call.
  *     *   Method 2: Use `PageSize` to specify the number of entries to return on each page and then use `PageNumber` to specify the number of the page to return. You can use only one of the preceding methods. If you specify `MaxResults` or `NextToken`, the `PageSize` and `PageNumber` request parameters do not take effect and the `TotalCount` response parameter is invalid.
  *
 */
async function describeSendFileResults(request: DescribeSendFileResultsRequest): DescribeSendFileResultsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSendFileResults', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotGroupsRequest {
  additionalAttributes?: [ string ](name='AdditionalAttributes', description='This parameter is not publicly available.', example='hide', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-j6ca469urv8ei629****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=500, position='Query'),
  name?: string(name='Name', description='The name of the snapshot-consistent group.', example='testName', position='Query'),
  nextToken?: string(name='NextToken', description='The token that determines the start point of the next query. Set the value to the NextToken value that is returned from the last call.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the snapshot-consistent group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the snapshot-consistent group belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotGroupId?: [ string ](name='SnapshotGroupId', description='The ID of snapshot-consistent group N. Valid values of N: 1 to 10.', example='ssg-j6ciyh3k52qp7ovm****', position='Query'),
  status?: [ string ](name='Status', description='The state of snapshot-consistent group N. Valid values of the second N: 1, 2, and 3. Valid values:

*   progressing: The snapshot-consistent group is being created.
*   accomplished: The snapshot-consistent group is created.
*   failed: The snapshot-consistent group fails to be created.', example='accomplished', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the snapshot-consistent group. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the snapshot-consistent group. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the snapshot-consistent group.', position='Query'),
}

model DescribeSnapshotGroupsResponseBody = {
  nextToken?: string(name='NextToken', description='The token used to start the next query.

> If the return value is empty, no more data exists.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='3F9A4CC4-362F-469A-B9EF-B3204EF8AA3A'),
  snapshotGroups?: {
    snapshotGroup?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the snapshot-consistent group was created.', example='2021-03-23T10:58:48Z'),
      description?: string(name='Description', description='The description of the snapshot-consistent group.', example='This is description.'),
      instanceId?: string(name='InstanceId', description='The ID of the instance to which the snapshot-consistent group belongs. This parameter has a value only when all disk snapshots in the snapshot-consistent group belong to the same instance. If disk snapshots in the snapshot-consistent group belong to different instances, you can check the response parameters that start with `Snapshots.Snapshot.Tags.` to determine the ID of the instance to which each snapshot in the snapshot-consistent group belongs.', example='i-j6ca469urv8ei629****'),
      name?: string(name='Name', description='The name of the snapshot-consistent group.', example='testName'),
      progressStatus?: string(name='ProgressStatus', description='>  This parameter is not publicly available.', example='null'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the snapshot-consistent group belongs.', example='rg-bp67acfmxazb4p****'),
      snapshotGroupId?: string(name='SnapshotGroupId', description='The ID of the snapshot-consistent group.', example='ssg-j6ciyh3k52qp7ovm****'),
      snapshots?: {
        snapshot?: [ 
        {
          available?: boolean(name='Available', description='Indicates whether the snapshot can be used to create or roll back disks. Valid values:

*   true
*   false', example='false'),
          instantAccess?: boolean(name='InstantAccess', description='Indicates whether the instant access feature is enabled. Valid values:

*   true: The instant access feature is enabled. By default, the instant access feature is enabled for ESSDs.
*   false: The instant access feature is disabled. The snapshot is a normal snapshot for which the instant access feature is disabled.', example='true'),
          instantAccessRetentionDays?: int32(name='InstantAccessRetentionDays', description='The retention period of the instant access feature. After the retention period ends, the snapshot is automatically released.

>  This parameter is deprecated. The normal snapshots of enhanced SSDs (ESSDs) are upgraded to support the instant access feature by default. No additional configurations are required to enable the feature and you are not charged for the feature. For more information, see [Use the instant access feature](~~193667~~).', example='3'),
          progress?: string(name='Progress', description='The progress of the snapshot creation task. Unit: percent (%).', example='100%'),
          snapshotId?: string(name='SnapshotId', description='The ID of the snapshot.', example='s-j6cbzmrlbf09w72q****'),
          sourceDiskId?: string(name='SourceDiskId', description='The ID of the source disk. This parameter is retained even after the source disk of the snapshot is released.', example='d-j6c3ogynmvpi6wy7****'),
          sourceDiskType?: string(name='SourceDiskType', description='The type of the source disk. Valid values:

*   system: system disk
*   data: data disk', example='system'),
          tags?: {
            tag?: [ 
            {
              key?: string(name='Key', description='The tag key of the snapshot. The default values of Key and Value contain snapshot source information.', example='acs:ecs:createFrom'),
              value?: string(name='Value', description='The tag value of the snapshot. The default values of Key and Value contain snapshot source information.', example='i-bp11qm0o3dk4iuc****'),
            }
          ](name='Tag')
          }(name='Tags', description='The tags of the snapshot. The default values contain snapshot source information.'),
        }
      ](name='Snapshot')
      }(name='Snapshots', description='Details of the snapshots in the snapshot-consistent group.'),
      status?: string(name='Status', description='The state of the snapshot-consistent group. Valid values:

*   progressing: The snapshot-consistent group was being created.
*   accomplished: The snapshot-consistent group was created.
*   failed: The snapshot-consistent group failed to be created.', example='accomplished'),
      tags?: {
        tag?: [ 
        {
          key?: string(name='Key', description='The tag key of the snapshot-consistent group.', example='TestKey'),
          value?: string(name='Value', description='The tag value of the snapshot-consistent group.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the snapshot-consistent group.'),
    }
  ](name='SnapshotGroup')
  }(name='SnapshotGroups', description='Details of the snapshot-consistent groups.'),
}

model DescribeSnapshotGroupsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotGroupsResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * You can specify multiple request parameters to be queried, such as `InstanceId`, `SnapshotGroupId.N`, and `Status.N`. Specified parameters have logical AND relations. Only the specified parameters are included in the filter conditions.
  *
 */
async function describeSnapshotGroups(request: DescribeSnapshotGroupsRequest): DescribeSnapshotGroupsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshotGroups', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotLinksRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskIds?: string(name='DiskIds', description='The disk IDs. You can specify a JSON array that contains a maximum of 100 disk IDs. Separate the disk IDs with commas (,).', example='["d-bp1d6tsvznfghy7y****", "d-bp1ippxbaql9zet7****", … "d-bp1ib7bcz07lcxa9****"]', position='Query'),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1h6jmbefj2cyqs****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Page starts from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='50', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the disk. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotLinkIds?: string(name='SnapshotLinkIds', description='The snapshot chain IDs. You can specify a JSON array that contains a maximum of 100 snapshot chain IDs. Separate the snapshot chain IDs with commas (,).', example='["sl-bp1grgphbcc9brb5****", "sl-bp1c4izumvq0i5bs****", … "sl-bp1akk7isz866dds****"]', position='Query'),
}

model DescribeSnapshotLinksResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='50'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  snapshotLinks?: {
    snapshotLink?: [ 
    {
      category?: string(name='Category', description='The category of the snapshot.', example='standard'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1h6jmbefj2cyqs****'),
      instanceName?: string(name='InstanceName', description='The name of the instance.', example='testInstanceName'),
      instantAccess?: boolean(name='InstantAccess', description='Indicates whether the instant access feature is enabled. Valid values:

*   true: The instant access feature is enabled. This feature can be enabled only for enhanced SSDs (ESSDs).
*   false: The instant access feature is disabled. The snapshot is a normal snapshot for which the instant access feature is disabled.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='false'),
      regionId?: string(name='RegionId', description='The region ID of the source disk.', example='cn-hangzhou'),
      snapshotLinkId?: string(name='SnapshotLinkId', description='The ID of the snapshot chain.', example='sl-2ze0y1jwzpb1geqx****'),
      sourceDiskId?: string(name='SourceDiskId', description='The ID of the source disk. This parameter is retained even if the source disk is deleted.', example='d-bp1d6tsvznfghy7y****'),
      sourceDiskName?: string(name='SourceDiskName', description='The name of the source disk.', example='testSourceDiskName'),
      sourceDiskSize?: int32(name='SourceDiskSize', description='The capacity of the source disk. Unit: GiB.', example='40'),
      sourceDiskType?: string(name='SourceDiskType', description='The type of the source disk. Valid values:

*   system: system disk
*   data: data disk', example='data'),
      totalCount?: int32(name='TotalCount', description='The total number of snapshots.', example='1'),
      totalSize?: long(name='TotalSize', description='The total size of all snapshots in the snapshot chain. Unit: byte.', example='2097152'),
    }
  ](name='SnapshotLink')
  }(name='SnapshotLinks', description='The details of the snapshot chains.'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='9'),
}

model DescribeSnapshotLinksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotLinksResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   You can specify multiple request parameters, such as `RegionId`, `DiskIds`, and `InstanceId`, to query snapshot chains. Specified parameters have logical AND relations.
  * *   Only the specified parameters are used as filter conditions. If the `DiskIds` and `SnapshotLinkIds` parameters are set to empty JSON arrays, the values are considered as valid filter conditions. In this case, an empty result is returned.
  *
 */
async function describeSnapshotLinks(request: DescribeSnapshotLinksRequest): DescribeSnapshotLinksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshotLinks', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotMonitorDataRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  category?: string(name='Category', description='The category of the snapshot. Valid values:

*   Standard: normal snapshot
*   Flash: local snapshot

Default value: Standard.', example='Standard', position='Query'),
  endTime: string(name='EndTime', description='The end of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2019-05-10T03:00:00Z', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The interval at which to query the monitoring data of snapshot sizes. Unit: seconds. Valid values:

*   60
*   600
*   3600

Default value: 60.', example='60', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime: string(name='StartTime', description='The beginning of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC. If the value of seconds (ss) is not 00, the time is rounded up to the next minute.', example='2019-05-10T00:00:00Z', position='Query'),
}

model DescribeSnapshotMonitorDataResponseBody = {
  monitorData?: {
    dataPoint?: [ 
    {
      size?: long(name='Size', description='The total size of snapshots. Unit: bytes.', example='243036848128'),
      timeStamp?: string(name='TimeStamp', description='The timestamp that corresponds to a snapshot size.', example='2019-05-10T04:00:00Z'),
    }
  ](name='DataPoint')
  }(name='MonitorData', description='The monitoring data of snapshot sizes.'),
  requestId?: string(name='RequestId', description='The request ID.', example='9F8163A8-F5DE-47A2-A572-4E062D223E09'),
}

model DescribeSnapshotMonitorDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotMonitorDataResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   Up to 400 monitoring data entries can be returned at a time. Make sure that the `TotalCount` value does not exceed 400. The value is calculated by using the following formula: `TotalCount = (EndTime - StartTime)/Period`. If the TotalCount value is greater than 400, the `InvalidParameter.TooManyDataQueried` error is returned.
  * *   You can query the monitoring data of snapshot sizes in the last 30 days. If the value of `StartTime` is more than 30 days earlier than the current time, an error is returned.
  *
 */
async function describeSnapshotMonitorData(request: DescribeSnapshotMonitorDataRequest): DescribeSnapshotMonitorDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshotMonitorData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotPackageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The region ID of the snapshot. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='1', position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The ID of the request.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeSnapshotPackageResponseBody = {
  pageNumber?: int32(name='PageNumber', description='Details about the OSS storage plans.', example='1'),
  pageSize?: int32(name='PageSize', description='The page number of the returned page.', example='10'),
  requestId?: string(name='RequestId', description='The total number of returned OSS storage plans.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  snapshotPackages?: {
    snapshotPackage?: [ 
    {
      displayName?: string(name='DisplayName', description='The time when the OSS storage plan was purchased. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='testDisplayName'),
      endTime?: string(name='EndTime', description='The maximum storage capacity offered by the OSS storage plan.', example='2018-11-30T06:32:31Z'),
      initCapacity?: long(name='InitCapacity', example='500'),
      startTime?: string(name='StartTime', description='DescribeSnapshotPackage', example='2017-11-30T06:32:31Z'),
    }
  ](name='SnapshotPackage')
  }(name='SnapshotPackages', description='The time when the OSS storage plan expires. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.'),
  totalCount?: int32(name='TotalCount', description='The name of the OSS storage plan.', example='1'),
}

model DescribeSnapshotPackageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotPackageResponseBody(name='body'),
}

async function describeSnapshotPackage(request: DescribeSnapshotPackageRequest): DescribeSnapshotPackageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshotPackage', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotsRequest {
  filter?: [
    {
      key?: string(name='Key', description='The key of filter 1 that is used to query resources. Set the value to `CreationStartTime`. You can specify a time by configuring both `Filter.1.Key` and `Filter.1.Value` to query resources that were created after the time.', example='CreationStartTime'),
      value?: string(name='Value', description='The value of filter 1 that is used to query resources. Set the value to a time. If you configure this parameter, you must also configure `Filter.1.Key`. Specify the time in the `yyyy-MM-ddTHH:mmZ` format. The time must be in UTC.', example='2019-12-13T17:00Z'),
    }
  ](name='Filter', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  category?: string(name='Category', description='The category of the snapshot. Valid values:

*   Standard: normal snapshot
*   Flash: local snapshot

The local snapshot feature is replaced by the instant access feature. When you specify this parameter, take note of the following items:

*   If you have used local snapshots before December 14, 2020, you can use this parameter.
*   If you have not used local snapshots before December 14, 2020, you cannot use this parameter.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='Standard', position='Query'),
  diskId?: string(name='DiskId', description='The disk ID.', example='d-bp67acfmxazb4p****', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks your AccessKey pair, the permissions of the RAM user, and the required parameters. If the request passes the dry run, the DryRunOperation error code is returned. Otherwise, an error message is returned.
*   false (default): performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.', example='false', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether the snapshot is encrypted. Default value: false.', example='false', position='Query'),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key that is used for the data disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number. Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page. Valid values: 1 to 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the disk. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The resource group ID. If you configure this parameter to query resources, up to 1,000 resources that belong to the specified resource group can be displayed in the response.

> Resources in the default resource group are displayed in the response regardless of whether you configure this parameter.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotIds?: string(name='SnapshotIds', description='The IDs of snapshots. You can specify a JSON array that consists of up to 100 snapshot IDs. Separate the snapshot IDs with commas (,).', example='["s-bp67acfmxazb4p****", "s-bp67acfmxazb5p****", … "s-bp67acfmxazb6p****"]', position='Query'),
  snapshotLinkId?: string(name='SnapshotLinkId', description='The snapshot chain ID. You can specify a JSON array that contains up to 100 snapshot chain IDs. Separate the snapshot chain IDs with commas (,).', example='["sl-bp1grgphbcc9brb5****", "sl-bp1c4izumvq0i5bs****", … "sl-bp1akk7isz866dds****"]', position='Query'),
  snapshotName?: string(name='SnapshotName', description='The name of the snapshot.', example='testSnapshotName', position='Query'),
  snapshotType?: string(name='SnapshotType', description='The type of the snapshot. Valid values:

*   auto: automatic snapshot
*   user: manual snapshot
*   all (default): all snapshot types', example='all', position='Query'),
  sourceDiskType?: string(name='SourceDiskType', description='The type of the source disk. Valid values:

*   system: system disk
*   data: data disk

>  The value of this parameter is not case-sensitive.', example='Data', position='Query'),
  status?: string(name='Status', description='The status of the snapshot. Valid values:

*   progressing: The snapshot is being created.
*   accomplished: The snapshot is created.
*   failed: The snapshot fails to be created.
*   all (default): This value indicates all snapshot states.', example='all', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the snapshot. Valid values of N: 1 to 20

If a single tag is specified to query resources, up to 1,000 resources that have this tag added are returned. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added are returned. To query more than 1,000 resources with the specified tags, call the [ListTagResources](~~110425~~) operation.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the snapshot. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the snapshot.', position='Query'),
  usage?: string(name='Usage', description='Specifies whether the snapshot has been used to create custom images or disks. Valid values:

*   image: The snapshot has been used to create custom images.
*   disk: The snapshot has been used to create disks.
*   image_disk: The snapshot has been used to create both custom images and data disks.
*   none: The snapshot has not been used to create custom images or disks.', example='none', position='Query'),
}

model DescribeSnapshotsResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  snapshots?: {
    snapshot?: [ 
    {
      available?: boolean(name='Available', description='Indicates whether the snapshot can be used to create or roll back a disk. Valid values:

*   true
*   false', example='false'),
      category?: string(name='Category', description='The category of the snapshot.

>  This parameter will be removed in the future. We recommend that you use `InstantAccess` to ensure future compatibility.', example='standard'),
      creationTime?: string(name='CreationTime', description='The time when the snapshot was created. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2020-08-20T14:52:28Z'),
      description?: string(name='Description', description='The description of the snapshot.', example='testDescription'),
      encrypted?: boolean(name='Encrypted', description='Indicates whether the snapshot is encrypted.', example='false'),
      instantAccess?: boolean(name='InstantAccess', description='Indicates whether the instant access feature is enabled. Valid values:

*   true: The instant access feature is enabled. By default, the instant access feature is enabled for Enterprise SSDs (ESSDs).
*   false: The instant access feature is disabled. The snapshot is a normal snapshot for which the instant access feature is disabled.', example='false'),
      instantAccessRetentionDays?: int32(name='InstantAccessRetentionDays', description='Indicates the validity period of the instant access feature. When the specified period expires, the instant access feature is automatically disabled.

By default, the value of this parameter is the same as the value of `RetentionDays`.

>  This parameter is no longer used. The normal snapshots of ESSDs are upgraded to support the instant access feature by default. No additional configurations are required to enable the feature and you are not charged for the feature. For more information, see [Use the instant access feature](~~193667~~).', example='30'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key used for the data disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****'),
      lastModifiedTime?: string(name='LastModifiedTime', description='The time when the snapshot was last modified. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2020-08-25T14:18:09Z'),
      productCode?: string(name='ProductCode', description='The product code of the Alibaba Cloud Marketplace image.', example='jxsc000****'),
      progress?: string(name='Progress', description='The progress of the snapshot creation task. Unit: percent (%).', example='100%'),
      regionId?: string(name='RegionId', description='The region ID of the snapshot.', example='cn-hangzhou'),
      remainTime?: int32(name='RemainTime', description='The amount of remaining time required to create the snapshot. Unit: seconds.', example='38'),
      resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the snapshot belongs.', example='rg-bp67acfmxazb4p****'),
      retentionDays?: int32(name='RetentionDays', description='The retention period of the automatic snapshot. Unit: days.', example='30'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot.', example='s-bp67acfmxazb4p****'),
      snapshotLinkId?: string(name='SnapshotLinkId', description='The ID of the snapshot chain that is associated with the snapshot.', example='sl-bp1grgphbcc9brb5****'),
      snapshotName?: string(name='SnapshotName', description='The name of the snapshot. This parameter is returned only if a snapshot name was specified when the snapshot was created.', example='testSnapshotName'),
      snapshotSN?: string(name='SnapshotSN', description='The serial number of the snapshot.', example='64472-116742336-61976****'),
      snapshotType?: string(name='SnapshotType', description='The type of the snapshot. Valid values:

*   auto or timer: automatic snapshot
*   user: manual snapshot
*   all: all snapshot types', example='all'),
      sourceDiskId?: string(name='SourceDiskId', description='The ID of the source disk. This parameter is retained even after the source disk is released.', example='d-bp67acfmxazb4ph****'),
      sourceDiskSize?: string(name='SourceDiskSize', description='The capacity of the source disk. Unit: GiB.', example='40'),
      sourceDiskType?: string(name='SourceDiskType', description='The type of the source disk. Valid values:

*   system
*   data', example='system'),
      sourceRegionId?: string(name='SourceRegionId', description='The region ID of the source snapshot.', example='cn-hangzhou'),
      sourceSnapshotId?: string(name='SourceSnapshotId', description='The ID of the source snapshot.', example='s-bp67acfmxazb4p****'),
      sourceStorageType?: string(name='SourceStorageType', description='The category of the source disk.

>  This parameter will be removed in the future. We recommend that you use other parameters to ensure future compatibility.', example='disk'),
      status?: string(name='Status', description='The status of the snapshot. Valid values:

*   progressing
*   accomplished
*   failed', example='accomplished'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The tag key of the snapshot.', example='TestKey'),
          tagValue?: string(name='TagValue', description='The tag value of the snapshot.', example='TestValue'),
        }
      ](name='Tag')
      }(name='Tags', description='The tags of the snapshot.'),
      usage?: string(name='Usage', description='Indicates whether the snapshot was used to create images or disks. Valid values:

*   image
*   disk
*   image_disk
*   none', example='image'),
    }
  ](name='Snapshot')
  }(name='Snapshots', description='The information about the snapshots.'),
  totalCount?: int32(name='TotalCount', description='The total number of snapshots returned.', example='1'),
}

model DescribeSnapshotsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotsResponseBody(name='body'),
}

/**
  * You can configure multiple request parameters such as `InstanceId`, `DiskId`, and `SnapshotIds` to query snapshots. Configured parameters have logical AND relations. Only the configured parameters are included in the filter conditions.
  * When you use Alibaba Cloud CLI to call an API operation, you must specify request parameter values of different data types in required formats. For more information, see [Parameter format overview](~~110340~~).
  *
 */
async function describeSnapshots(request: DescribeSnapshotsRequest): DescribeSnapshotsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshots', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSnapshotsUsageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the snapshot. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeSnapshotsUsageResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  snapshotCount?: int32(name='SnapshotCount', description='The number of snapshots stored in the current region.', example='5'),
  snapshotSize?: long(name='SnapshotSize', description='The total size of snapshots stored in the current region. Unit: bytes.', example='122'),
}

model DescribeSnapshotsUsageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSnapshotsUsageResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * If you want to view the snapshot usage of each disk in the current region, we recommend that you call the [DescribeSnapshotLinks](~~55837~~) operation to query snapshot chain information.
  *
 */
async function describeSnapshotsUsage(request: DescribeSnapshotsUsageRequest): DescribeSnapshotsUsageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSnapshotsUsage', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSpotAdviceRequest {
  cores?: int32(name='Cores', description='The number of vCPUs of the instance type. For more information, see [Instance families](~~25378~~).', example='2', position='Query'),
  gpuAmount?: int32(name='GpuAmount', description='The number of GPUs that a GPU-accelerated instance has. For information about the valid values, see [GPU-accelerated compute optimized instance types](~~108496~~).', example='2', position='Query'),
  gpuSpec?: string(name='GpuSpec', description='The GPU type. Valid values:

*   NVIDIA P4
*   NVIDIA T4
*   NVIDIA P100
*   NVIDIA V100

This parameter is left empty by default, which indicates that all GPU types are queried. For more information, see [GPU-accelerated compute-optimized and vGPU-accelerated instance families](~~108496~~).', example='NVIDIA T4', position='Query'),
  instanceFamilyLevel?: string(name='InstanceFamilyLevel', description='The level of the instance family. Valid values:

*   EntryLevel.
*   EnterpriseLevel.
*   CreditEntryLevel. For more information, see [Overview of burstable instances](~~59977~~).

This parameter is left empty by default, which indicates that instance families at all levels are queried.', example='EntryLevel', position='Query'),
  instanceTypeFamily?: string(name='InstanceTypeFamily', description='The instance family. For more information, see [Instance families](~~25378~~).', example='ecs.c5', position='Query'),
  instanceTypes?: [ string ](name='InstanceTypes', description='The instance types. You can specify up to 10 instance types.', example='ecs.c5.large', position='Query'),
  memory?: float(name='Memory', description='The memory size of the instance type. Unit: GiB. For more information, see [Instance families](~~25378~~).', example='8.0', position='Query'),
  minCores?: int32(name='MinCores', description='The minimum number of vCPUs of the instance type. For more information, see [Instance families](~~25378~~).', example='2', position='Query'),
  minMemory?: float(name='MinMemory', description='The minimum memory size of the instance type. For more information, see [Instance families](~~25378~~).', example='8.0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID.

This parameter is left empty by default, which indicates that all zones in the specified region are queried.', example='cn-hangzhou-i', position='Query'),
}

model DescribeSpotAdviceResponseBody = {
  availableSpotZones?: {
    availableSpotZone?: [ 
    {
      availableSpotResources?: {
        availableSpotResource?: [ 
        {
          averageSpotDiscount?: int32(name='AverageSpotDiscount', description='The percentage of the average preemptible instance price relative to the pay-as-you-go instance price in the previous 30 days. Unit: %. Valid values: 1 to 100.

You can calculate the average preemptible instance price based on the return value. For example, if the pay-as-you-go instance price is 1 and the return value of this parameter is 20, the average preemptible instance price in the previous 30 days is 0.2.', example='20'),
          instanceType?: string(name='InstanceType', description='The instance type.', example='ecs.c5.large'),
          interruptRateDesc?: string(name='InterruptRateDesc', description='The release rate range of preemptible instances in the previous 30 days, which corresponds to the `InterruptionRate` value. Valid values:

*   0-3%
*   3-5%
*   5-10%
*   10-100%', example='0-3%'),
          interruptionRate?: float(name='InterruptionRate', description='The average release rate of preemptible instances in the previous 30 days. Unit: %.', example='0'),
        }
      ](name='AvailableSpotResource')
      }(name='AvailableSpotResources', description='Details about preemptible instances in the previous 30 days, including the release rate of preemptible instances and percentages of average preemptible instance prices relative to pay-as-you-go instance prices.'),
      zoneId?: string(name='ZoneId', description='The zone ID.', example='cn-hangzhou-i'),
    }
  ](name='AvailableSpotZone')
  }(name='AvailableSpotZones', description='Details about preemptible instances in the zones of the specified region.

>  The return values are sorted based on the historical percentages of average preemptible instance prices relative to pay-as-you-go instance prices for instance types.'),
  regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DescribeSpotAdviceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSpotAdviceResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   You can call this operation to query information about preemptible instances in the previous 30 days and select suitable instance types based on the query results. The information that you can query includes:
  *     *   Average release rate of preemptible instances
  *     *   Percentage of the average preemptible instance price relative to the pay-as-you-go instance price
  *     *   Average preemptible instance price that is calculated based on the preceding percentage
  * *   This operation is applicable only to I/O optimized preemptible instances that reside in virtual private clouds (VPCs).
  * *   You can use one of the following methods to query information about preemptible instances in the previous 30 days:
  *     *   Configure the `Cores` and `Memory` parameters or the `MinCores` and `MinMemory` parameters to query information about instance types that meet the specified vCPU and memory requirements.
  *     *   Configure the `InstanceTypes.N` parameter to query information about specified instance types.
  *     *   Configure the `Cores` and `Memory` parameters or the `MinCores` and `MinMemory` parameters and then configure the `InstanceTypeFamily` or `InstanceFamilyLevel` parameter to query information about instance types that meet the specified vCPU and memory requirements within the specified instance family or at a specified instance family level.
  *
 */
async function describeSpotAdvice(request: DescribeSpotAdviceRequest): DescribeSpotAdviceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSpotAdvice', 'POST', '/', 'json', false, 'json', request);
}

model DescribeSpotPriceHistoryRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  endTime?: string(name='EndTime', description='The end of the time range to query. Specify the time in the [ISO 8601 standard](~~25696~~) in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC.

This parameter is empty by default. If this parameter is empty, the current time is used.', example='2017-08-22T08:45:08Z', position='Query'),
  instanceType: string(name='InstanceType', description='The beginning of the time range to query. Specify the time in the [ISO 8601](~~25696~~) standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC. The specified time can be up to 30 days earlier than the specified EndTime value.

This parameter is empty by default. If this parameter is empty, the time that is 3 hours earlier than the specified EndTime value is used.', example='ecs.t1.xsmall', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. Valid values:

*   optimized: The instance is I/O optimized.
*   none: The instance is not I/O optimized.

For instances of generation I instance families, the default value is none.

For instances of other instance families, the default value is optimized.', example='optimized', position='Query'),
  networkType: string(name='NetworkType', description='The network type of the preemptible instance. Valid values:

*   classic: classic network
*   vpc: Virtual Private Cloud (VPC)', example='vpc', position='Query'),
  OSType?: string(name='OSType', description='The type of the operating system platform. Valid values:

- linux
- windows', example='linux', position='Query'),
  offset?: int32(name='Offset', description='The line from which the query starts.

Default value: 0', example='0', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The zone ID of the preemptible instance.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify a protection period based on your business requirements.

>  This parameter takes effect only if you set SpotStrategy to SpotWithPriceLimit or SpotAsPriceGo.', example='1', position='Query'),
  startTime?: string(name='StartTime', description='The beginning of the time range to query. The value of this parameter and the value of EndTime can be up to 30 days apart. Specify the time in the [ISO 8601 standard](~~25696~~) in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC.

This parameter is left empty by default. If this parameter is empty, the time that is 3 hours earlier than the value of EndTime is used.', example='2017-08-22T08:45:08Z', position='Query'),
  zoneId?: string(name='ZoneId', description='The spot price (market price) of the preemptible instance.', example='cn-hangzhou-g', position='Query'),
}

model DescribeSpotPriceHistoryResponseBody = {
  currency?: string(name='Currency', description='The instance type of the preemptible instance.', example='CNY'),
  nextOffset?: int32(name='NextOffset', description='The network type of the preemptible instance.', example='1000'),
  requestId?: string(name='RequestId', description='The instance type of the preemptible instance.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  spotPrices?: {
    spotPriceType?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type of the preemptible instance.', example='ecs.g5.large'),
      ioOptimized?: string(name='IoOptimized', description='Details about the price history of the preemptible instance.', example='optimized'),
      networkType?: string(name='NetworkType', description='Queries the price history of a preemptible instance within the last 30 days.', example='vpc'),
      originPrice?: float(name='OriginPrice', description='The price for a pay-as-you-go instance that has the same configuration as the specified preemptible instance.', example='0.354'),
      spotPrice?: float(name='SpotPrice', description='The price for a pay-as-you-go instance that has the same configurations as the preemptible instance.', example='0.036'),
      timestamp?: string(name='Timestamp', description='The currency unit of the price.

Alibaba Cloud China site (aliyun.com): CNY.

Alibaba Cloud International site (alibabacloud.com): USD.', example='2019-11-19T06:00:00Z'),
      zoneId?: string(name='ZoneId', description='The ID of the request.', example='cn-hangzhou-c'),
    }
  ](name='SpotPriceType')
  }(name='SpotPrices', description='The zone ID of the preemptible instance.'),
}

model DescribeSpotPriceHistoryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeSpotPriceHistoryResponseBody(name='body'),
}

async function describeSpotPriceHistory(request: DescribeSpotPriceHistoryRequest): DescribeSpotPriceHistoryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeSpotPriceHistory', 'POST', '/', 'json', false, 'json', request);
}

model DescribeStorageCapacityUnitsRequest {
  allocationType?: string(name='AllocationType', description='The allocation type. Valid values:

*   Normal: queries SCUs that belong to the current Alibaba Cloud account.
*   Shared: queries SCUs shared between the Alibaba Cloud account and RAM users.

Default value: Normal.', example='Normal', position='Query'),
  capacity?: int32(name='Capacity', description='The capacity of the SCU. Unit: GiB. Valid values: 20, 40, 100, 200, 500, 1024, 2048, 5120, 10240, 20480, and 51200.', example='20', position='Query'),
  name?: string(name='Name', description='The name of the SCU. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testScuName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='1', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the SCU. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: [ string ](name='Status', description='The state of SCUs. You can specify 1 to 4 types of state. Valid values:

*   Creating: The SCUs are being created.
*   Active: The SCUs are in effect.
*   Expired: The SCUs have expired.
*   Pending: The SCUs have not taken effect.', example='Active', position='Query'),
  storageCapacityUnitId?: [ string ](name='StorageCapacityUnitId', description='One or multiple SCU IDs. You can specify 1 to 100 SCU IDs.', example='scu-bp67acfmxazb4p****', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the SCU. N is the identifier for the tag, which you can use to set and query the tag. Valid values of N: 1 to 20.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the SCU. N is the identifier for the tag, which you can use to set and query the tag. The value of N must coincide with `Tag.N.Key`. Valid values of N: 1 to 20.', example='TestValue'),
    }
  ](name='Tag', description='The tags of the SCUs.', position='Query'),
}

model DescribeStorageCapacityUnitsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  storageCapacityUnits?: {
    storageCapacityUnit?: [ 
    {
      allocationStatus?: string(name='AllocationStatus', description='Indicates the allocation state of the SCU when the AllocationType parameter is set to Shared. Valid values:

*   allocated: The SCU is allocated to other accounts.
*   BeAllocated: The SCU is allocated from another account.', example='allocated'),
      capacity?: int32(name='Capacity', description='The capacity of the SCU.', example='20'),
      creationTime?: string(name='CreationTime', description='The time when the SCU was created.', example='2021-08-17T02:55Z'),
      description?: string(name='Description', description='The description of the SCU.', example='testScuDescription'),
      expiredTime?: string(name='ExpiredTime', description='The time when the SCU expires.', example='2021-09-17T16:00Z'),
      name?: string(name='Name', description='The name of the SCU.', example='testScuName'),
      regionId?: string(name='RegionId', description='The region ID of the SCU.', example='cn-hangzhou'),
      startTime?: string(name='StartTime', description='The time when the SCU took effect.', example='2021-08-17T02:55Z'),
      status?: string(name='Status', description='The state of the SCU.', example='Active'),
      storageCapacityUnitId?: string(name='StorageCapacityUnitId', description='The ID of the SCU.', example='scu-bp67acfmxazb4p****'),
      tags?: {
        tag?: [ 
        {
          tagKey?: string(name='TagKey', description='The key of tag N.', example='TestValue'),
          tagValue?: string(name='TagValue', description='The value of tag N.', example='TestKey'),
        }
      ](name='Tag')
      }(name='Tags', description='The tag key-value pairs of the SCU.'),
    }
  ](name='StorageCapacityUnit')
  }(name='StorageCapacityUnits', description='Details about the SCUs.'),
  totalCount?: int32(name='TotalCount', description='The total number of SCUs.', example='1'),
}

model DescribeStorageCapacityUnitsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeStorageCapacityUnitsResponseBody(name='body'),
}

async function describeStorageCapacityUnits(request: DescribeStorageCapacityUnitsRequest): DescribeStorageCapacityUnitsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeStorageCapacityUnits', 'POST', '/', 'json', false, 'json', request);
}

model DescribeStorageSetDetailsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The value of **ClientToken** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  diskIds?: string(name='DiskIds', description='The IDs of disks or Shared Block Storage devices. The value can be a JSON array that consists of up to 100 disk or Shared Block Storage device IDs. Separate the IDs with commas (,).', example='["d-bp1d6tsvznfghy7y****", "d-bp1ippxbaql9zet7****", … "d-bp1ib7bcz07l****"]', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='hide', position='Query'),
  ownerId?: long(name='OwnerId', example='111', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Pages start from page 1.

Default value: 1.', example='1', minimum=1, maximum=1000, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='10', minimum=10, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the storage set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='hide', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='111', position='Query'),
  storageSetId: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4p****', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The maximum number of partitions in the storage set.', example='3', minimum=2, position='Query'),
}

model DescribeStorageSetDetailsResponseBody = {
  disks?: {
    disk?: [ 
    {
      category?: string(name='Category', description='The category of the disk or Shared Block Storage device.', example='cloud_ssd'),
      creationTime?: string(name='CreationTime', description='The time when the disk or Shared Block Storage device was created.', example='2019-06-01T00:00:00Z'),
      diskId?: string(name='DiskId', description='The ID of the disk or Shared Block Storage device.', example='d-bp67acfmxazb4p****'),
      diskName?: string(name='DiskName', description='The name of the disk or Shared Block Storage device.', example='testDiskName'),
      regionId?: string(name='RegionId', description='The region to which the disk or Shared Block Storage device belongs.', example='cn-hangzhou'),
      storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4p****'),
      storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The number of partitions in the storage set.', example='3'),
      zoneId?: string(name='ZoneId', description='The zone to which the disk or Shared Block Storage device belongs.', example='cn-hangzhou-g'),
    }
  ](name='Disk')
  }(name='Disks', description='Details about the disks or Shared Block Storage devices in the storage set.'),
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='49765E79-0D5D-4451-B3AE-580A20831846'),
  totalCount?: int32(name='TotalCount', description='The total number of storage sets.', example='1'),
}

model DescribeStorageSetDetailsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeStorageSetDetailsResponseBody(name='body'),
}

async function describeStorageSetDetails(request: DescribeStorageSetDetailsRequest): DescribeStorageSetDetailsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeStorageSetDetails', 'POST', '/', 'json', false, 'json', request);
}

model DescribeStorageSetsRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The value of **ClientToken** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='hide', position='Query'),
  ownerId?: long(name='OwnerId', example='111', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return. Pages start from page 1.

Default value: 1.', example='1', minimum=1, maximum=1000, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page. Maximum value: 100.

Default value: 10.', example='1', minimum=10, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the storage set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='hide', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='111', position='Query'),
  storageSetIds?: string(name='StorageSetIds', description='The IDs of storage sets. The value is a JSON array that consists of up to 100 storage set IDs. Separate the IDs with commas (,).', example='["ss-bp1d6tsvznfghy7y****", "ss-bp1ippxbaql9zet7****", … "ss-bp1ib7bcz07l****"]', position='Query'),
  storageSetName?: string(name='StorageSetName', description='The name of the storage set.', example='storageSetTest', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the storage set. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-g', position='Query'),
}

model DescribeStorageSetsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='1'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  storageSets?: {
    storageSet?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the storage set was created.', example='2019-06-01T00:00:00Z'),
      description?: string(name='Description', description='The description of the storage set.', example='testDescription'),
      regionId?: string(name='RegionId', description='The ID of the region to which the storage set belongs.', example='cn-hangzhou'),
      storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp1d6tsvznfghy7y****'),
      storageSetName?: string(name='StorageSetName', description='The name of the storage set.', example='testStorageSetName'),
      storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The maximum number of partitions supported by the storage set.', example='3'),
      zoneId?: string(name='ZoneId', description='The ID of the zone to which the storage set belongs.', example='cn-hangzhou-g'),
    }
  ](name='StorageSet')
  }(name='StorageSets', description='Details about the storage sets. The value of this parameter is an array that consists of StorageSet data.'),
  totalCount?: int32(name='TotalCount', description='The total number of storage sets.', example='20'),
}

model DescribeStorageSetsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeStorageSetsResponseBody(name='body'),
}

async function describeStorageSets(request: DescribeStorageSetsRequest): DescribeStorageSetsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeStorageSets', 'POST', '/', 'json', false, 'json', request);
}

model DescribeTagsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  category?: string(name='Category', description='> This parameter will be deprecated in the future. We recommend that you use other parameters to ensure future compatibility.', example='null', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The page number.

Page starts from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.

Valid values: 1 to 100.

Default value: 50.', example='50', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The ID of the region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId?: string(name='ResourceId', description='The ID of the resource to which the tags are added. If the resource is an instance, the value of this parameter is the ID of the instance.', example='s-946ntx4wr****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource to which the tags are added. Valid values:

*   instance: Elastic Compute Service (ECS) instance.
*   disk: disk.
*   snapshot: snapshot.
*   image: image.
*   securitygroup: security group.
*   volume: storage volume.
*   eni: elastic network interface (ENI).
*   ddh: dedicated host.
*   keypair: SSH key pair.
*   launchtemplate: launch template.
*   reservedinstance: reserved instance.
*   snapshotpolicy: automatic snapshot policy.

All values must be in lowercase letters.', example='snapshot', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the resource. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot start with acs: or aliyun. It cannot contain [http:// or https://.](http://https://。)', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the resource. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot start with acs: or aliyun. It cannot contain [http:// or https://.](http://https://。)', example='TestValue'),
    }
  ](name='Tag', description='The tags of the resource.', position='Query'),
}

model DescribeTagsResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries per page.', example='50'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='B04B8CF3-4489-432D-83BA-6F128E4F2295'),
  tags?: {
    tag?: [ 
    {
      resourceTypeCount?: {
        ddh?: int32(name='Ddh', description='The number of dedicated hosts to which the tag is added.', example='1'),
        disk?: int32(name='Disk', description='The number of disks to which the tag is added.', example='15'),
        eni?: int32(name='Eni', description='The number of ENIs to which the tag is added.', example='5'),
        image?: int32(name='Image', description='The number of images to which the tag is added.', example='6'),
        instance?: int32(name='Instance', description='The number of instances to which the tag is added.', example='45'),
        keyPair?: int32(name='KeyPair', description='The number of key pairs to which the tag is added.', example='17'),
        launchTemplate?: int32(name='LaunchTemplate', description='The number of launch templates to which the tag is added.', example='6'),
        reservedInstance?: int32(name='ReservedInstance', description='The number of reserved instances to which the tag is added.', example='4'),
        securitygroup?: int32(name='Securitygroup', description='The number of security groups to which the tag is added.', example='4'),
        snapshot?: int32(name='Snapshot', description='The number of snapshots to which the tag is added.', example='15'),
        snapshotPolicy?: int32(name='SnapshotPolicy', description='The number of automatic snapshot policies to which the tag is added.', example='4'),
        volume?: int32(name='Volume', description='The number of storage volumes to which the tag is added.', example='6'),
      }(name='ResourceTypeCount', description='The number of resource types.'),
      tagKey?: string(name='TagKey', description='The tag key.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value.', example='TestValue'),
    }
  ](name='Tag')
  }(name='Tags', description='The tags that match all filter conditions.'),
  totalCount?: int32(name='TotalCount', description='The total number of tags.', example='1'),
}

model DescribeTagsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTagsResponseBody(name='body'),
}

/**
  * If a tag key that has no tag value is specified, all tags that contain the tag key are returned. If a tag key-value pair is specified, only tags that exactly match the key-value pair are returned.
  *
 */
async function describeTags(request: DescribeTagsRequest): DescribeTagsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeTags', 'POST', '/', 'json', false, 'json', request);
}

model DescribeTaskAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the task. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
  taskId: string(name='TaskId', description='The ID of the task. You can call the [DescribeTasks](~~25622~~) operation to query the list of task IDs.', example='t-ce946ntx4wr****', position='Query'),
}

model DescribeTaskAttributeResponseBody = {
  creationTime?: string(name='CreationTime', description='The time when the task was created.', example='2015-11-23T02:13Z'),
  failedCount?: int32(name='FailedCount', description='The number of failed tasks.', example='0'),
  finishedTime?: string(name='FinishedTime', description='The time when the task was complete.', example='2015-11-23T02:19Z'),
  operationProgressSet?: {
    operationProgress?: [ 
    {
      errorCode?: string(name='ErrorCode', description='The error code.', example='ParameterInvalid'),
      errorMsg?: string(name='ErrorMsg', description='The error message.', example='The specified RegionId parameter is invalid.'),
      operationStatus?: string(name='OperationStatus', description='The status of the operation.', example='Success'),
      relatedItemSet?: {
        relatedItem?: [ 
        {
          name?: string(name='Name', description='The name of the related item.', example='OSSObject'),
          value?: string(name='Value', description='The value of the related item.', example='MYOSSPRE_m-23f8tcp***_t-23ym6mv***.vhd'),
        }
      ](name='RelatedItem')
      }(name='RelatedItemSet', description='An array consisting of RelatedItem data.'),
    }
  ](name='OperationProgress')
  }(name='OperationProgressSet', description='An array consisting of OperationProgress data of each subtask.'),
  regionId?: string(name='RegionId', description='The region ID of the task.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  successCount?: int32(name='SuccessCount', description='The number of completed tasks.', example='1'),
  supportCancel?: string(name='SupportCancel', description='Indicates whether the task can be canceled ([CancelTask](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/canceltask)). Valid values: 

- true: The task can be canceled.
- false: The task cannot be canceled.', example='true'),
  taskAction?: string(name='TaskAction', description='The operation name of the task.', example='ExportImage'),
  taskId?: string(name='TaskId', description='The ID of the task.', example='t-ce946ntx4wr****'),
  taskProcess?: string(name='TaskProcess', description='The progress of the task.', example='100%'),
  taskStatus?: string(name='TaskStatus', description='The status of the task.', example='Finished'),
  totalCount?: int32(name='TotalCount', description='The total number of tasks.', example='1'),
}

model DescribeTaskAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTaskAttributeResponseBody(name='body'),
}

async function describeTaskAttribute(request: DescribeTaskAttributeRequest): DescribeTaskAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeTaskAttribute', 'POST', '/', 'json', false, 'json', request);
}

model DescribeTasksRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  endTime?: string(name='EndTime', description='The end point of the time period for which to query created tasks. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2020-11-23T15:16:00Z', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', description='The number of the page to return.

Page start from page 1.

Default value: 1.', example='1', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', description='The number of entries to return on each page.

Maximum value: 100.

Default value: 10.', example='10', minimum=1, maximum=100, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the task. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceIds?: [ string ](name='ResourceIds', description='The ID of resource N that is associated with the task. Valid values of N: 1 to 100.

*   If TaskAction is set to ImportImage or ExportImage, set the resource ID to an image ID.
*   If TaskAction is set to RedeployInstance, set the resource ID to an Elastic Compute Service (ECS) instance ID.
*   If TaskAction is set to ModifyDiskSpec, set the resource ID to a disk ID.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The start point of the time period for which to query created tasks. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.', example='2020-11-23T15:10:00Z', position='Query'),
  taskAction?: string(name='TaskAction', description='The name of the operation that generates the task. Valid values:

*   ImportImage
*   ExportImage
*   RedeployInstance
*   ModifyDiskSpec', example='ImportImage', position='Query'),
  taskIds?: string(name='TaskIds', description='The ID of the task. You can specify up to 100 task IDs at a time. Separate the task IDs with commas (,).', example='t-bp1hvgwromzv32iq****,t-bp179lofu2pv768w****', position='Query'),
  taskStatus?: string(name='TaskStatus', description='The state of the task. Valid values:

*   Finished
*   Processing
*   Failed

This parameter is empty by default.

>  The system only retrieves tasks in the Finished, Processing, and Failed states and ignores other values.', example='Finished', position='Query'),
}

model DescribeTasksResponseBody = {
  pageNumber?: int32(name='PageNumber', description='The page number of the returned page.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of entries returned per page.', example='10'),
  regionId?: string(name='RegionId', description='The region ID of the task.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  taskSet?: {
    task?: [ 
    {
      creationTime?: string(name='CreationTime', description='The time when the task was created.', example='2020-11-24T12:50Z'),
      finishedTime?: string(name='FinishedTime', description='The time when the task was completed.', example='2020-11-24T12:50Z'),
      resourceId?: string(name='ResourceId', description='The ID of the resource.', example='m-bp1i8huqm5u7****'),
      supportCancel?: string(name='SupportCancel', description='Indicates whether the task can be canceled.', example='true'),
      taskAction?: string(name='TaskAction', description='The name of the task.', example='ImportImage'),
      taskId?: string(name='TaskId', description='The ID of the task.', example='t-bp1hvgwromzv32iq****'),
      taskStatus?: string(name='TaskStatus', description='The state of the task.', example='Finished'),
    }
  ](name='Task')
  }(name='TaskSet', description='Details about the tasks.'),
  totalCount?: int32(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model DescribeTasksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTasksResponseBody(name='body'),
}

/**
  * ## Debugging
  * [OpenAPI Explorer automatically calculates the signature value. For your convenience, we recommend that you call this operation in OpenAPI Explorer. OpenAPI Explorer dynamically generates the sample code of the operation for different SDKs.](https://api.aliyun.com/#product=Ecs\\&api=DescribeTasks\\&type=RPC\\&version=2014-05-26)
  *
 */
async function describeTasks(request: DescribeTasksRequest): DescribeTasksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeTasks', 'POST', '/', 'json', false, 'json', request);
}

model DescribeTerminalSessionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1i7gg30r52z2em****', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page.

Valid values: 1 to 100.

Default value: 10.', example='10', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You do not need to specify this parameter for the first request. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sessionId?: string(name='SessionId', description='The session ID.', example='s-hz023od0x9****', position='Query'),
}

model DescribeTerminalSessionsResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  sessions?: {
    session?: [ 
    {
      clientIP?: string(name='ClientIP', description='The IP address of the client used to establish connections.', example='192.168.1.1'),
      connections?: {
        connection?: [ 
        {
          closedReason?: string(name='ClosedReason', description='The reason why the connection was closed. This parameter is returned only when the `Status` value is `Disconnected`, `Terminated`, or `Failed`. Valid values:

*   InstanceNotExists: The specified instance did not exist or was released.
*   InstanceNotRunning: The specified instance was not running.
*   DeliveryTimeout: The connection timed out.
*   AgentNeedUpgrade: Cloud Assistant Agent required an upgrade.
*   AgentNotOnline: Cloud Assistant Agent was not connected to the Cloud Assistant server.
*   MessageFormatInvalid: The message format was invalid.
*   AgentSocketClosed: The connection was closed as expected.
*   ClientClosed: Session Manager Client closed the connection.', example='AgentNeedUpgrade'),
          endTime?: string(name='EndTime', description='The time when the connection was closed.', example='2024-01-19T09:16:46Z'),
          instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1i7gg30r52z2em****'),
          startTime?: string(name='StartTime', description='The time when the connection started to be established.', example='2024-01-19T09:16:40Z'),
          status?: string(name='Status', description='The state of the session. Valid values:

*   Connecting: The connection is being established.
*   Connected: The connection is established.
*   Disconnected: The connection is disconnected.
*   Terminating: The session is being terminated.
*   Terminated: The session is terminated.
*   Failed: The connection failed.', example='Connecting'),
        }
      ](name='Connection')
      }(name='Connections', description='The information of the connections.'),
      creationTime?: string(name='CreationTime', description='The time when the session was created.', example='2024-01-19T09:15:46Z'),
      identityType?: string(name='IdentityType', description='The principal type. Valid values:

*   Account: an Alibaba Cloud account
*   RAMUser: a RAM user
*   AssumedRoleUser: a RAM role', example='RAMUser'),
      portNumber?: int32(name='PortNumber', description='The port number of the instance, which is used for data forwarding. If no port number was specified for data forwarding when the session was created, this parameter is empty.', example='22'),
      principalId?: string(name='PrincipalId', description='The ID of the principal. Valid values based on the `IdentityType` value:

*   If the requester uses an Alibaba Cloud account to call the operation, the ID of the Alibaba Cloud account is returned.
*   If the requester uses a Resource Access Management (RAM) user to call the operation, the ID of the RAM user is returned.
*   If the requester uses a RAM role to call the operation, the ID of the principal that actually calls the operation is returned.', example='123456xxxx'),
      sessionId?: string(name='SessionId', description='The session ID.', example='s-hz023od0x9****'),
      targetServer?: string(name='TargetServer', description='The address of the service that was accessed in a virtual private cloud (VPC) from the instance.', example='192.168.0.246'),
      username?: string(name='Username', description='The username used to establish connections.', example='root'),
    }
  ](name='Session')
  }(name='Sessions', description='The information of the sessions.'),
}

model DescribeTerminalSessionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeTerminalSessionsResponseBody(name='body'),
}

/**
  * You can query the session records of Session Manager that were generated in the last four weeks.
  *
 */
async function describeTerminalSessions(request: DescribeTerminalSessionsRequest): DescribeTerminalSessionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeTerminalSessions', 'POST', '/', 'json', false, 'json', request);
}

model DescribeUserBusinessBehaviorRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  statusKey: string(name='statusKey', position='Query'),
}

model DescribeUserBusinessBehaviorResponseBody = {
  requestId?: string(name='RequestId'),
  statusValue?: string(name='StatusValue'),
}

model DescribeUserBusinessBehaviorResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserBusinessBehaviorResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeUserBusinessBehavior(request: DescribeUserBusinessBehaviorRequest): DescribeUserBusinessBehaviorResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeUserBusinessBehavior', 'POST', '/', 'json', false, 'json', request);
}

model DescribeUserDataRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp14bnftyqhxg9ij****', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeUserDataResponseBody = {
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp14bnftyqhxg9ij****'),
  regionId?: string(name='RegionId', description='The region ID of the instance.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  userData?: string(name='UserData', description='The user data of the instance.', example='ZWNobyBoZWxsbyBlY321ABC'),
}

model DescribeUserDataResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeUserDataResponseBody(name='body'),
}

/**
  * *   The returned custom data is encoded in Base64.
  * *   If no user data is configured for the ECS instance, an empty result is returned.
  *
 */
async function describeUserData(request: DescribeUserDataRequest): DescribeUserDataResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeUserData', 'POST', '/', 'json', false, 'json', request);
}

model DescribeVRoutersRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vRouterId?: string(name='VRouterId', position='Query'),
}

model DescribeVRoutersResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
  vRouters?: {
    vRouter?: [ 
    {
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      regionId?: string(name='RegionId'),
      routeTableIds?: {
        routeTableId?: [ string ](name='RouteTableId')
      }(name='RouteTableIds'),
      vRouterId?: string(name='VRouterId'),
      vRouterName?: string(name='VRouterName'),
      vpcId?: string(name='VpcId'),
    }
  ](name='VRouter')
  }(name='VRouters'),
}

model DescribeVRoutersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVRoutersResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeVRouters(request: DescribeVRoutersRequest): DescribeVRoutersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeVRouters', 'POST', '/', 'json', false, 'json', request);
}

model DescribeVSwitchesRequest {
  isDefault?: boolean(name='IsDefault', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vSwitchId?: string(name='VSwitchId', position='Query'),
  vpcId?: string(name='VpcId', position='Query'),
  zoneId?: string(name='ZoneId', position='Query'),
}

model DescribeVSwitchesResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
  vSwitches?: {
    vSwitch?: [ 
    {
      availableIpAddressCount?: long(name='AvailableIpAddressCount'),
      cidrBlock?: string(name='CidrBlock'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      isDefault?: boolean(name='IsDefault'),
      resourceGroupId?: string(name='ResourceGroupId'),
      status?: string(name='Status'),
      vSwitchId?: string(name='VSwitchId'),
      vSwitchName?: string(name='VSwitchName'),
      vpcId?: string(name='VpcId'),
      zoneId?: string(name='ZoneId'),
    }
  ](name='VSwitch')
  }(name='VSwitches'),
}

model DescribeVSwitchesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVSwitchesResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeVSwitches(request: DescribeVSwitchesRequest): DescribeVSwitchesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeVSwitches', 'POST', '/', 'json', false, 'json', request);
}

model DescribeVirtualBorderRoutersRequest {
  filter?: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeVirtualBorderRoutersResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
  virtualBorderRouterSet?: {
    virtualBorderRouterType?: [ 
    {
      accessPointId?: string(name='AccessPointId'),
      activationTime?: string(name='ActivationTime'),
      circuitCode?: string(name='CircuitCode'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      localGatewayIp?: string(name='LocalGatewayIp'),
      name?: string(name='Name'),
      peerGatewayIp?: string(name='PeerGatewayIp'),
      peeringSubnetMask?: string(name='PeeringSubnetMask'),
      physicalConnectionBusinessStatus?: string(name='PhysicalConnectionBusinessStatus'),
      physicalConnectionId?: string(name='PhysicalConnectionId'),
      physicalConnectionOwnerUid?: string(name='PhysicalConnectionOwnerUid'),
      physicalConnectionStatus?: string(name='PhysicalConnectionStatus'),
      recoveryTime?: string(name='RecoveryTime'),
      routeTableId?: string(name='RouteTableId'),
      status?: string(name='Status'),
      terminationTime?: string(name='TerminationTime'),
      vbrId?: string(name='VbrId'),
      vlanId?: int32(name='VlanId'),
      vlanInterfaceId?: string(name='VlanInterfaceId'),
    }
  ](name='VirtualBorderRouterType')
  }(name='VirtualBorderRouterSet'),
}

model DescribeVirtualBorderRoutersResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVirtualBorderRoutersResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeVirtualBorderRouters(request: DescribeVirtualBorderRoutersRequest): DescribeVirtualBorderRoutersResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeVirtualBorderRouters', 'POST', '/', 'json', false, 'json', request);
}

model DescribeVirtualBorderRoutersForPhysicalConnectionRequest {
  filter?: [ 
    {
      key?: string(name='Key'),
      value?: [ string ](name='Value'),
    }
  ](name='Filter', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DescribeVirtualBorderRoutersForPhysicalConnectionResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
  virtualBorderRouterForPhysicalConnectionSet?: {
    virtualBorderRouterForPhysicalConnectionType?: [ 
    {
      activationTime?: string(name='ActivationTime'),
      circuitCode?: string(name='CircuitCode'),
      creationTime?: string(name='CreationTime'),
      recoveryTime?: string(name='RecoveryTime'),
      terminationTime?: string(name='TerminationTime'),
      vbrId?: string(name='VbrId'),
      vbrOwnerUid?: long(name='VbrOwnerUid'),
      vlanId?: int32(name='VlanId'),
    }
  ](name='VirtualBorderRouterForPhysicalConnectionType')
  }(name='VirtualBorderRouterForPhysicalConnectionSet'),
}

model DescribeVirtualBorderRoutersForPhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVirtualBorderRoutersForPhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeVirtualBorderRoutersForPhysicalConnection(request: DescribeVirtualBorderRoutersForPhysicalConnectionRequest): DescribeVirtualBorderRoutersForPhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeVirtualBorderRoutersForPhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model DescribeVpcsRequest {
  isDefault?: boolean(name='IsDefault', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: int32(name='PageNumber', minimum=1, position='Query'),
  pageSize?: int32(name='PageSize', minimum=1, maximum=50, position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vpcId?: string(name='VpcId', position='Query'),
}

model DescribeVpcsResponseBody = {
  pageNumber?: int32(name='PageNumber'),
  pageSize?: int32(name='PageSize'),
  requestId?: string(name='RequestId'),
  totalCount?: int32(name='TotalCount'),
  vpcs?: {
    vpc?: [ 
    {
      cidrBlock?: string(name='CidrBlock'),
      creationTime?: string(name='CreationTime'),
      description?: string(name='Description'),
      isDefault?: boolean(name='IsDefault'),
      regionId?: string(name='RegionId'),
      status?: string(name='Status'),
      userCidrs?: {
        userCidr?: [ string ](name='UserCidr')
      }(name='UserCidrs'),
      vRouterId?: string(name='VRouterId'),
      vSwitchIds?: {
        vSwitchId?: [ string ](name='VSwitchId')
      }(name='VSwitchIds'),
      vpcId?: string(name='VpcId'),
      vpcName?: string(name='VpcName'),
    }
  ](name='Vpc')
  }(name='Vpcs'),
}

model DescribeVpcsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeVpcsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function describeVpcs(request: DescribeVpcsRequest): DescribeVpcsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeVpcs', 'POST', '/', 'json', false, 'json', request);
}

model DescribeZonesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  acceptLanguage?: string(name='AcceptLanguage', description='The natural language that is used to filter responses. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231). Valid values:

*   zh-CN
*   en-US
*   ja

Default value: zh-CN.', example='zh-CN', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of resources. For more information, see [Billing overview](~~25398~~). Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go

Default value: PostPaid.', example='PostPaid', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for pay-as-you-go instances. You can specify this parameter when the `InstanceChargeType` parameter is set to PostPaid. For more information, see [Preemptible instances](~~52088~~). Valid values:

*   NoSpot: The instances are regular pay-as-you-go instances.
*   SpotWithPriceLimit: The instances are preemptible instances with user-defined maximum hourly prices.
*   SpotAsPriceGo: The instances are preemptible instances for which the market price at the time of purchase is automatically used as the bid price. The market price can be up to the pay-as-you-go price.

Default value: NoSpot.', example='NoSpot', position='Query'),
  verbose?: boolean(name='Verbose', description='Specifies whether to display detailed information.

*   true: displays detailed information.
*   false: does not display detailed information.

Default value: true.', example='false', position='Query'),
}

model DescribeZonesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  zones?: {
    zone?: [ 
    {
      availableDedicatedHostTypes?: {
        dedicatedHostType?: [ string ](name='DedicatedHostType')
      }(name='AvailableDedicatedHostTypes', description='The supported dedicated host types.'),
      availableDiskCategories?: {
        diskCategories?: [ string ](name='DiskCategories')
      }(name='AvailableDiskCategories', description='The supported disk categories. Valid values:

*   cloud: basic disk
*   cloud_ssd: standard SSD
*   cloud_efficiency: ultra disk
*   cloud_essd: ESSD'),
      availableInstanceTypes?: {
        instanceTypes?: [ string ](name='InstanceTypes')
      }(name='AvailableInstanceTypes', description='The supported instance types.'),
      availableResourceCreation?: {
        resourceTypes?: [ string ](name='ResourceTypes')
      }(name='AvailableResourceCreation', description='The types of resources that can be created. Valid values:

*   VSwitch: vSwitch
*   IoOptimized: I/O optimized instance
*   Instance: instance
*   DedicatedHost: dedicated host
*   disk: disk'),
      availableResources?: {
        resourcesInfo?: [ 
        {
          dataDiskCategories?: {
            supportedDataDiskCategory?: [ string ](name='supportedDataDiskCategory')
          }(name='DataDiskCategories', description='The categories of data disks that can be created.'),
          instanceGenerations?: {
            supportedInstanceGeneration?: [ string ](name='supportedInstanceGeneration')
          }(name='InstanceGenerations', description='The supported generations of instance families.'),
          instanceTypeFamilies?: {
            supportedInstanceTypeFamily?: [ string ](name='supportedInstanceTypeFamily')
          }(name='InstanceTypeFamilies', description='The supported instance families.'),
          instanceTypes?: {
            supportedInstanceType?: [ string ](name='supportedInstanceType')
          }(name='InstanceTypes', description='The supported instance types.'),
          ioOptimized?: boolean(name='IoOptimized', description='Indicates whether the instance is I/O optimized.', example='true'),
          networkTypes?: {
            supportedNetworkCategory?: [ string ](name='supportedNetworkCategory')
          }(name='NetworkTypes', description='The supported network types'),
          systemDiskCategories?: {
            supportedSystemDiskCategory?: [ string ](name='supportedSystemDiskCategory')
          }(name='SystemDiskCategories', description='The supported categories of system disks that can be created.'),
        }
      ](name='ResourcesInfo')
      }(name='AvailableResources', description='Details about the resources that can be created in the zone.'),
      availableVolumeCategories?: {
        volumeCategories?: [ string ](name='VolumeCategories')
      }(name='AvailableVolumeCategories', description='The supported Shared Block Storage device categories.'),
      dedicatedHostGenerations?: {
        dedicatedHostGeneration?: [ string ](name='DedicatedHostGeneration')
      }(name='DedicatedHostGenerations', description='The supported generations of dedicated hosts.'),
      localName?: string(name='LocalName', description='The name of the zone in the local language.', example='Hangzhou Zone G'),
      zoneId?: string(name='ZoneId', description='The ID of the zone.', example='cn-hangzhou-g'),
      zoneType?: string(name='ZoneType', description='The type of the zone. Valid values:

*   AvailabilityZone: zone for the Alibaba Cloud public cloud
*   CloudBoxZone: zone for CloudBox', example='AvailabilityZone'),
    }
  ](name='Zone')
  }(name='Zones', description='Details of the zones and their supported resources.'),
}

model DescribeZonesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DescribeZonesResponseBody(name='body'),
}

/**
  * When you call this operation, only a list of zones and some resource information of each zone are returned. If you want to query instance types and disk categories that are available for purchase in a specific zone, we recommend that you call the [DescribeAvailableResource](~~66186~~) operation.
  *
 */
async function describeZones(request: DescribeZonesRequest): DescribeZonesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DescribeZones', 'POST', '/', 'json', false, 'json', request);
}

model DetachClassicLinkVpcRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the classic network-type instance.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the classic network-type instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
  vpcId: string(name='VpcId', description='The ID of the VPC to which the instance is linked.', example='vpc-bp67acfmxazb4p****', position='Query'),
}

model DetachClassicLinkVpcResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DetachClassicLinkVpcResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachClassicLinkVpcResponseBody(name='body'),
}

async function detachClassicLinkVpc(request: DetachClassicLinkVpcRequest): DetachClassicLinkVpcResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachClassicLinkVpc', 'POST', '/', 'json', false, 'json', request);
}

model DetachDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the system disk or data disk when the instance from which you want to detach the disk is released. Valid values:

*   true: releases the disk when the instance is released.
*   false: does not release the disk when the instance is released. The disk is retained as a pay-as-you-go data disk.

Default value: true.

Take note of the following items:

*   You cannot specify this parameter for disks for which the multi-attach feature is enabled.
*   If a data disk is to be detached, the default value is `false`.
*   If you want to detach an `elastic ephemeral disk`, you must set `DeleteWithInstance` to `true`.', example='false', position='Query'),
  diskId: string(name='DiskId', description='The ID of the disk that you want to detach.', example='d-bp67acfmxazb4p****', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the ECS instance from which you want to detach the disk.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DetachDiskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DetachDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachDiskResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The disk that you want to detach must be attached to an ECS instance and in the In Use (`In_use`) state.
  * *   The instance from which you want to detach a data disk must be in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  * *   The instance from which you want to detach a system disk must be in the **Stopped** state.``
  * *   If the `OperationLocks` parameter in the response contains `"LockReason" : "security"` when you query the instance information, the instance is locked for security reasons and all operations are prohibited on the instance.
  * *   DetachDisk is an asynchronous operation. After you call the operation to detach a disk from an ECS instance, the disk is detached in approximately 1 minute.
  * *   If you want to attach an elastic ephemeral disk that you detached from an instance, you can attach the disk only to the instance.
  *
 */
async function detachDisk(request: DetachDiskRequest): DetachDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachDisk', 'POST', '/', 'json', false, 'json', request);
}

model DetachInstanceRamRoleRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds: string(name='InstanceIds', description='The IDs of instances. The value can be a JSON array that consists of up to 100 instance IDs. Separate the IDs with commas (,).', example='["i-bp67acfmxazb4p****", "i-bp67acfmxazb5p****", "i-bp67acfmxazb6p****"…]', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='RamRoleTest', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DetachInstanceRamRoleResponseBody = {
  detachInstanceRamRoleResults?: {
    detachInstanceRamRoleResult?: [ 
    {
      code?: string(name='Code', description='Indicates whether the instance RAM role was detached. If 200 is returned, the instance RAM role was detached. If any other value is returned, the instance RAM role failed to be detached. For more information, see the "Error codes" section.', example='200'),
      instanceId?: string(name='InstanceId', description='The ID of the instance from which you attempted to detach the instance RAM role.', example='i-bp67acfmxazb4p****'),
      instanceRamRoleSets?: {
        instanceRamRoleSet?: [ 
        {
          instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
          ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role.', example='RamRoleTest'),
        }
      ](name='InstanceRamRoleSet')
      }(name='InstanceRamRoleSets', description='Details about the instance RAM role of the instance.'),
      message?: string(name='Message', description='Indicates whether the instance RAM role was detached. If success is returned, the instance RAM role was detached. If any other value is returned, the instance RAM role failed to be detached. For more information, see the "Error codes" section.', example='Success'),
      success?: boolean(name='Success', description='Indicates whether the instance RAM role was detached.', example='true'),
    }
  ](name='DetachInstanceRamRoleResult')
  }(name='DetachInstanceRamRoleResults', description='Details about the results of detaching instance RAM roles from the instances.'),
  failCount?: int32(name='FailCount', description='The number of instances from which instance RAM roles failed to be detached.', example='0'),
  ramRoleName?: string(name='RamRoleName', description='The name of the instance RAM role.', example='RamRoleTest'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  totalCount?: int32(name='TotalCount', description='The total number of instances from which you attempted to detach instance RAM roles.', example='1'),
}

model DetachInstanceRamRoleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachInstanceRamRoleResponseBody(name='body'),
}

async function detachInstanceRamRole(request: DetachInstanceRamRoleRequest): DetachInstanceRamRoleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachInstanceRamRole', 'POST', '/', 'json', false, 'json', request);
}

model DetachKeyPairRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceIds: string(name='InstanceIds', description='The IDs of instances from which you want to unbind the SSH key pair. The value can be a JSON array that consists of up to 50 instance IDs. Separate multiple instance IDs with commas (,).', example='["i-bp1d6tsvznfghy7y****", "i-bp1ippxbaql9zet7****", … "i-bp1ib7bcz07l****"]', position='Query'),
  keyPairName: string(name='KeyPairName', description='The name of the SSH key pair.', example='testKeyPairName', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the SSH key pair. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DetachKeyPairResponseBody = {
  failCount?: string(name='FailCount', description='The number of instances from which the SSH key pair failed to be unbound.', example='0'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  results?: {
    result?: [ 
    {
      code?: string(name='Code', description='The operation status code that is returned. 200 indicates that the operation is successful.', example='200'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1d6tsvznfghy7y****'),
      message?: string(name='Message', description='The result of the operation. For example, if the value of `Code` is 200, the value of `Message` is `successful`.', example='successful'),
      success?: string(name='Success', description='Indicates whether the operation is successful.', example='true'),
    }
  ](name='Result')
  }(name='Results', description='The result set of the unbind operation.'),
  totalCount?: string(name='TotalCount', description='The total number of instances from which you want to unbind the SSH key pair.', example='2'),
}

model DetachKeyPairResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachKeyPairResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   After you unbind an SSH key pair from an instance, you must call the [RebootInstance](~~25502~~) operation to restart the instance to allow the unbind operation to take effect.
  * *   After you unbind an SSH key pair from an instance, the username and password authentication method is selected for the instance.
  *
 */
async function detachKeyPair(request: DetachKeyPairRequest): DetachKeyPairResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachKeyPair', 'POST', '/', 'json', false, 'json', request);
}

model DetachNetworkInterfaceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the trunk ENI.

>  This parameter is unavailable for use.', example='i-bp67acfmxazb4p****', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the instance', example='eni-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the ENI.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  trunkNetworkInstanceId?: string(name='TrunkNetworkInstanceId', description='The ID of the request.', example='eni-f8zapqwj1v1j4ia3****', position='Query'),
}

model DetachNetworkInterfaceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model DetachNetworkInterfaceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DetachNetworkInterfaceResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   You cannot detach the primary ENI of an instance.
  * *   Make sure that the ENI to be detached is in the Detaching (Unbinding) or InUse (Bound) state.
  * *   Make sure that the instance from which you want to detach an ENI is in the Running (Running) or Stopped (Stopped) state.
  * *   The DetachNetworkInterface operation is an asynchronous operation. After this operation is called to detach an ENI, you can check the status or events of the ENI to determine whether the ENI is detached. The following figure shows the transitions between the states of the ENI.![](https://help-static-aliyun-doc.aliyuncs.com/file-manage-files/en-US/20230223/uemr/DetachNetworkInterface.png)
  *     *   If the ENI is in the Detaching state, the ENI detachment request is sent and the ENI is being detached from the associated instance.
  *     *   If the ENI is in the Available state, the ENI is detached from the associated instance.
  *     *   If the ENI is stuck in the Detaching state, the ENI may fail to be detached from the associated instance due to specific reasons. For example, the ENI may fail to be detached because the operating system of the instance did not respond to the ENI detachment request. If this issue occurs, you can re-initiate the request to detach the ENI. If the issue persists, restart the instance.
  * For information about examples on how to call the DetachNetworkInterface operation, see [Detach an ENI from an ECS instance](~~471551~~).
  *
 */
async function detachNetworkInterface(request: DetachNetworkInterfaceRequest): DetachNetworkInterfaceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DetachNetworkInterface', 'POST', '/', 'json', false, 'json', request);
}

model DisableActivationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  activationId: string(name='ActivationId', description='The request ID.', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The activation code ID.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model DisableActivationResponseBody = {
  activation?: {
    activationId?: string(name='ActivationId', example='4ECEEE12-56F1-4FBC-9AB1-890F1234****'),
    creationTime?: string(name='CreationTime', description='The number of instances that were deregistered.', example='2021-01-20T06:00:00Z'),
    deregisteredCount?: int32(name='DeregisteredCount', description='The maximum number of times that the activation code can be used to register managed instances.', example='1'),
    description?: string(name='Description', description='The number of registered instances.', example='This is description.'),
    disabled?: boolean(name='Disabled', description='The IP addresses of the hosts that can use the activation code.', example='false'),
    instanceCount?: int32(name='InstanceCount', description='The description of the activation code.', example='1'),
    instanceName?: string(name='InstanceName', description='Indicates whether the activation code is disabled.', example='test-InstanceName'),
    ipAddressRange?: string(name='IpAddressRange', description='The validity period of the activation code. Unit: hours.', example='0.0.0.0/0'),
    registeredCount?: int32(name='RegisteredCount', description='The default prefix of the instance name.', example='1'),
    timeToLiveInHours?: long(name='TimeToLiveInHours', description='The activation code ID.', example='4'),
  }(name='Activation', description='The time when the activation code was created.'),
  requestId?: string(name='RequestId', description='Details about the activation code and its usage information.', example='4ECEEE12-56F1-4FBC-9AB1-890F74942176'),
}

model DisableActivationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: DisableActivationResponseBody(name='body'),
}

/**
  * The region ID. The following regions are supported: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), and China (Hong Kong).
  * You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.
  *
 */
async function disableActivation(request: DisableActivationRequest): DisableActivationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'DisableActivation', 'POST', '/', 'json', false, 'json', request);
}

model EipFillParamsRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  data: string(name='data', position='Query'),
}

model EipFillParamsResponseBody = {
  code?: string(name='code'),
  data?: string(name='data'),
  message?: string(name='message'),
  requestId?: string(name='requestId'),
  success?: boolean(name='success'),
}

model EipFillParamsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EipFillParamsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function eipFillParams(request: EipFillParamsRequest): EipFillParamsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EipFillParams', 'POST', '/', 'json', false, 'json', request);
}

model EipFillProductRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  data: string(name='data', position='Query'),
}

model EipFillProductResponseBody = {
  code?: string(name='code'),
  data?: string(name='data'),
  message?: string(name='message'),
  requestId?: string(name='requestId'),
  success?: boolean(name='success'),
}

model EipFillProductResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EipFillProductResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function eipFillProduct(request: EipFillProductRequest): EipFillProductResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EipFillProduct', 'POST', '/', 'json', false, 'json', request);
}

model EipNotifyPaidRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  data: string(name='data', position='Query'),
}

model EipNotifyPaidResponseBody = {
  code?: string(name='code'),
  data?: string(name='data'),
  message?: string(name='message'),
  requestId?: string(name='requestId'),
  success?: boolean(name='success'),
}

model EipNotifyPaidResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EipNotifyPaidResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function eipNotifyPaid(request: EipNotifyPaidRequest): EipNotifyPaidResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EipNotifyPaid', 'POST', '/', 'json', false, 'json', request);
}

model EnablePhysicalConnectionRequest {
  clientToken: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model EnablePhysicalConnectionResponseBody = {
  requestId?: string(name='RequestId'),
}

model EnablePhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: EnablePhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function enablePhysicalConnection(request: EnablePhysicalConnectionRequest): EnablePhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'EnablePhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model ExportImageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageFormat?: string(name='ImageFormat', description='The format in which you want to export the custom image. Valid values:

*   raw
*   vhd
*   qcow2
*   vmdk
*   vdi

Default value: raw.', example='raw', position='Query'),
  imageId: string(name='ImageId', description='The custom image ID.', example='m-bp67acfmxazb4p****', position='Query'),
  OSSBucket: string(name='OSSBucket', description='The OSS bucket in which you want to store the exported custom image.', example='testexportImage', position='Query'),
  OSSPrefix?: string(name='OSSPrefix', description='The prefix for the name of the OSS object. The prefix must be 1 to 30 characters in length and can contain digits and letters.', example='EcsExport', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  roleName?: string(name='RoleName', description='The name of the RAM role that you want to use to export the custom image.', example='AliyunECSImageExportDefaultRole', position='Query'),
}

model ExportImageResponseBody = {
  regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='C8B26B44-0189-443E-9816-D951F596****'),
  taskId?: string(name='TaskId', description='The ID of the task that is used to export the custom image.', example='tsk-bp67acfmxazb4p****'),
}

model ExportImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ExportImageResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Before you export images, take note of the following items:
  * *   Make sure that you are familiar with the prerequisites and considerations. For more information, see [Export a custom image](~~58181~~).
  * *   The `ImageFormat` parameter is available only for the following regions: India (Mumbai) Closing Down, Japan (Tokyo), Australia (Sydney), Indonesia (Jakarta), Germany (Frankfurt), UAE (Dubai), US (Virginia), UK (London), Singapore, Malaysia (Kuala Lumpur), and US (Silicon Valley). Alibaba Cloud services will be discontinued in the India (Mumbai) region. By default, custom images are exported in the RAW format in regions where the ImageFormat parameter is unsupported.
  * *   Use Resource Access Management (RAM) to authorize Elastic Compute Service (ECS) to write data to OSS. To complete the authorization, perform the following operations:
  *     *   Create a role named `AliyunECSImageExportDefaultRole` and attach the following policy to the role:
  *                {
  *                  "Statement": [
  *                    {
  *                      "Action": "sts:AssumeRole",
  *                      "Effect": "Allow",
  *                      "Principal": {
  *                        "Service": [
  *                          "ecs.aliyuncs.com"
  *                        ]
  *                      }
  *                    }
  *                  ],
  *                  "Version": "1"
  *                }
  *     *   Attach the `AliyunECSImageExportRolePolicy` system policy, which is the default policy that grants ECS the permissions to export images, to the `AliyunECSImageExportDefaultRole` role. For more information, go to the [Cloud Resource Access Authorization](https://ram.console.aliyun.com/?spm=5176.2020520101.0.0.64c64df5dfpmdY#/role/authorize?request=%7B%22Requests%22:%20%7B%22request1%22:%20%7B%22RoleName%22:%20%22AliyunECSImageImportDefaultRole%22,%20%22TemplateId%22:%20%22ECSImportRole%22%7D,%20%22request2%22:%20%7B%22RoleName%22:%20%22AliyunECSImageExportDefaultRole%22,%20%22TemplateId%22:%20%22ECSExportRole%22%7D%7D,%20%22ReturnUrl%22:%20%22https:%2F%2Fecs.console.aliyun.com%2F%22,%20%22Service%22:%20%22ECS%22%7D) page. You can also create a custom policy that contains the following content and attach the policy to the role:
  *                  {
  *                    "Version": "1",
  *                    "Statement": [
  *                      {
  *                        "Action": [
  *                          "oss:GetObject",
  *                          "oss:PutObject",
  *                          "oss:DeleteObject",
  *                          "oss:GetBucketLocation",
  *                          "oss:GetBucketInfo",
  *                          "oss:AbortMultipartUpload",
  *                          "oss:ListMultipartUploads",
  *                          "oss:ListParts"
  *                        ],
  *                        "Resource": "*",
  *                        "Effect": "Allow"
  *                      }
  *                    ]
  *                  }
  * After you export the images, take note of the following items:
  * Each exported custom image is stored in the specified OSS bucket. You can download the custom image. For more information, see [Download objects](~~31912~~).
  *
 */
async function exportImage(request: ExportImageRequest): ExportImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ExportImage', 'POST', '/', 'json', false, 'json', request);
}

model ExportSnapshotRequest {
  ossBucket: string(name='OssBucket', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  roleName?: string(name='RoleName', position='Query'),
  snapshotId: string(name='SnapshotId', position='Query'),
}

model ExportSnapshotResponseBody = {
  requestId?: string(name='RequestId'),
  taskId?: string(name='TaskId'),
}

model ExportSnapshotResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ExportSnapshotResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function exportSnapshot(request: ExportSnapshotRequest): ExportSnapshotResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ExportSnapshot', 'POST', '/', 'json', false, 'json', request);
}

model GetInstanceConsoleOutputRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp1c1xhsrac2coiw****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  removeSymbols?: boolean(name='RemoveSymbols', description='Specifies whether to remove formatting symbols from the returned command output. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model GetInstanceConsoleOutputResponseBody = {
  consoleOutput?: string(name='ConsoleOutput', description='The Base64-encoded command output of the instance.', example='V2VsY29tZSB0byBDZW50T1MgCgpDaGVja2luZyBmaWxlc3lzdGVtcwpDaGVja2luZyBhbGwgZmlsZSBzeXN0ZW1zLgpbL3NiaW4vZnNjay5leHQ0ICgxKSAtLSAvXSBmc2NrLmV4dDQgLWEgL2Rldi92ZGExIAovZGV2L3ZkYTE6IGNsZWFuLCAzMjAxNi8yNjIxNDQwIGZpbGVzLCA0NDc5NzQvMTA0ODU1MDQgYmxvY2tzCgpFbnRlcmluZyBub24taW50ZXJhY3RpdmUgc3RhcnR1cApDYWxsaW5nIHRoZSBzeXN0ZW0gYWN0aXZpdHkgZGF0YSBjb2xsZWN0b3IgKHNhZGMpLi4uIAoKQnJpbmdpbmcgdXAgaW50ZXJmYWNlIGV0aDA6ICAKRGV0ZXJtaW5pbmcgSVAgaW5mb3JtYXRpb24gZm9yIGV0aDAuLi4gZG9uZS4KCmFsaXl1bi1zZXJ2aWNlIHN0YXJ0L3J1bm5pbmcsIHByb2Nlc3MgMTczMwpmaW5pc2hlZAoKQ2VudE9TIHJlbGVhc2UgNi44IChGaW5hbCkKS2VybmVsIDIuNi4zMi02OTYuMy4yLmVsNi5pNjg2IG9uIGFuIGk2ODYKCmlaMnplZDk2ZTQ2MmF5cjBxeioqKioqIGxvZ2luOg=='),
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1c1xhsrac2coiw****'),
  lastUpdateTime?: string(name='LastUpdateTime', description='The time when the last log entry was generated in the Linux kernel. The time follows the ISO 8601 standard in the yyyy-MM-ddThh:mmZ format. The time is displayed in UTC+8.', example='2018-03-22 10:04:57'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model GetInstanceConsoleOutputResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetInstanceConsoleOutputResponseBody(name='body'),
}

/**
  * *   ECS is a virtualized cloud-based service and cannot be connected to display devices. Alibaba Cloud caches system command outputs for the last start, restart, or shutdown of ECS instances. You can call the GetInstanceConsoleOutput operation to query the command outputs.
  * *   For instances of the retired instance types, you cannot obtain command outputs. For more information, see [Retired instance types](~~55263~~).
  * *   You cannot obtain the command outputs of Windows instances.
  *
 */
async function getInstanceConsoleOutput(request: GetInstanceConsoleOutputRequest): GetInstanceConsoleOutputResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetInstanceConsoleOutput', 'POST', '/', 'json', false, 'json', request);
}

model GetInstanceScreenshotRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp1gbz20g229bvu5****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-shenzhen', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  wakeUp?: boolean(name='WakeUp', description='Specifies whether to wake up the hibernated instance.

Default value: false.', example='false', position='Query'),
}

model GetInstanceScreenshotResponseBody = {
  instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp1gbz20g229bvu5****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  screenshot?: string(name='Screenshot', description='The Base64-encoded instance screenshot in the JPG format.', example='iVBORw0KGgoA...AAABJRU5ErkJggg=='),
}

model GetInstanceScreenshotResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: GetInstanceScreenshotResponseBody(name='body'),
}

/**
  * After ECS returns a Base64-encoded instance screenshot in the JPG format, you must decode the screenshot. We recommend that you call this operation for troubleshooting and diagnosis. When you call this operation, take note of the following items:
  * *   The instance must be in the Running state.
  * *   For instances of the retired instance types, you cannot obtain screenshots. For more information, see [Retired instance types](~~55263~~).
  * *   If you call this operation on an instance for multiple times, the call interval must be at least 10 seconds. Otherwise, the `Throttling` error is returned.
  *
 */
async function getInstanceScreenshot(request: GetInstanceScreenshotRequest): GetInstanceScreenshotResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'GetInstanceScreenshot', 'POST', '/', 'json', false, 'json', request);
}

model ImportImageRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  architecture?: string(name='Architecture', description='The system architecture. Valid values:

*   i386
*   x86\\_64
*   arm64

Default value: x86\\_64.', example='x86_64', position='Query'),
  bootMode?: string(name='BootMode', description='The boot mode of the image. Valid values:

*   BIOS
*   UEFI

Default value: BIOS. If you set `Architecture` to arm64, set this parameter to UEFI.

> Make sure that you are aware of the boot modes supported by the specified image, as thehe modified boot mode needs to be supported by the image. This way, instances that use this image can start.', example='BIOS', position='Query'),
  description?: string(name='Description', description='The image description. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='TestDescription', position='Query'),
  detectionStrategy?: string(name='DetectionStrategy', description='The mode in which to check the image. If you do not specify this parameter, the image is not checked. Only the standard check mode is supported.

>  This parameter is supported for most Linux and Windows operating system versions. For more information about image check items and operating system limits for image check, see [Overview](~~439819~~) and [Operating system limits for image check](~~475800~~).', example='Standard', position='Query'),
  diskDeviceMapping?: [ 
    {
      device?: string(name='Device', description='The device name of disk N in the custom image.

>  This parameter will be removed in the future. We recommend that you do not use this parameter to ensure future compatibility.', example='null'),
      diskImSize?: int32(name='DiskImSize', description='The size of disk N in the custom image. Unit: GiB

You can use this parameter to specify the sizes of the system disk and data disks in the custom image. When you specify the size of the system disk, make sure that the specified size is greater than or equal to the size of the imported image file. Unit: GiB. Valid values:

*   When the N value is 1, this parameter specifies the size of the system disk in the custom image. Valid values: 5 to 500.
*   When the N value is an integer in the range of 2 to 17, this parameter specifies the size of a data disk in the custom image. Valid values: 5 to 2000.

After the image file is uploaded to an OSS bucket, you can view the size of the image file in the OSS bucket.

>  This parameter will be removed in the future. We recommend that you use `DiskDeviceMapping.N.DiskImageSize` to ensure future compatibility.', example='80'),
      diskImageSize?: int32(name='DiskImageSize', description='The size of disk N in the custom image after the image is imported.

You can use this parameter to specify the sizes of the system disk and data disks in the custom image. When you specify the size of the system disk, make sure that the specified size is greater than or equal to the size of the imported image file. Unit: GiB. Valid values:

*   When the N value is 1, this parameter specifies the size of the system disk in the custom image. Valid values: 5 to 500.
*   When the N value is an integer in the range of 2 to 17, this parameter specifies the size of a data disk in the custom image. Valid values: 5 to 2000.

After the image file is uploaded to an OSS bucket, you can view the size of the image file in the OSS bucket.', example='80'),
      format?: string(name='Format', description='The image format. Valid values:

*   RAW
*   VHD
*   QCOW2

This parameter is empty by default, which indicates that the system checks the format of the image and uses the check result as the value of this parameter.', example='QCOW2'),
      OSSBucket?: string(name='OSSBucket', description='The OSS bucket where the image file is stored.

>  Before you import images for the first time, you must use RAM to authorize ECS to access your OSS buckets. If ECS is not authorized to access your OSS buckets, the `NoSetRoletoECSServiceAcount` error code is returned when you call the ImportImage operation. For more information, see the "**Usage notes**" section in this topic.', example='ecsimageos'),
      OSSObject?: string(name='OSSObject', description='The name (key) of the object that the uploaded image is stored as in the OSS bucket.', example='CentOS_5.4_32.raw'),
    }
  ](name='DiskDeviceMapping', description='The information about the custom image.', position='Query'),
  imageName?: string(name='ImageName', description='The image name. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `acs:` or `aliyun`. The name cannot contain `http://` or `https://`. The name can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).', example='ImageTestName', position='Query'),
  licenseType?: string(name='LicenseType', description='The type of the license used to activate the operating system after the image is imported. Valid values:

*   Auto: ECS checks the operating system of the image and allocates a license to the operating system. ECS first checks whether the operating system distribution specified by `Platform` has a license allocated through an official Alibaba Cloud channel. If yes, the allocated license is used. If no, the license that comes with the source operating system is used.
*   Aliyun: The license allocated through an official Alibaba Cloud channel is used for the operating system distribution specified by `Platform`.
*   BYOL: The license that comes with the source operating system is used. In this case, make sure that your license key is eligible for use in Alibaba Cloud.

Default value: Auto.', example='Auto', position='Query'),
  OSType?: string(name='OSType', description='The operating system platform. Valid values:

*   windows
*   linux

Default value: linux.', example='linux', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='The operating system distribution. Valid values:

*   Aliyun
*   Anolis
*   CentOS
*   Ubuntu
*   CoreOS
*   SUSE
*   Debian
*   OpenSUSE
*   FreeBSD
*   RedHat
*   Kylin
*   UOS
*   Fedora
*   Fedora CoreOS
*   CentOS Stream
*   AlmaLinux
*   Rocky Linux
*   Gentoo
*   Customized Linux
*   Others Linux
*   Windows Server 2022
*   Windows Server 2019
*   Windows Server 2016
*   Windows Server 2012
*   Windows Server 2008
*   Windows Server 2003

Default value: Others Linux.', example='Aliyun', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the source image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the image.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  roleName?: string(name='RoleName', description='The name of the RAM role used to import the image.', example='AliyunECSImageImportDefaultRole', position='Query'),
  storageLocationArn?: string(name='StorageLocationArn', description='The Alibaba Cloud Resource Name (ARN) of the cloud box, which is used to uniquely identify a storage location in the cloud.

>  Specify this parameter only if you import an image from OSS on CloudBox. Otherwise, you do not need to specify this parameter. For more information, see [What is OSS on CloudBox?](~~430190~~)

The ARN must be in the following format: `arn:acs:cloudbox:{RegionId}:{AliUid}:cloudbox/{CloudBoxId}`. Replace `{RegionId}` with the region ID of the cloud box, `{AliUid}` with the ID of the Alibaba Cloud account to which the cloud box belongs, and `{CloudBoxId}` with the ID of the cloud box.', example='arn:acs:cloudbox:cn-hangzhou:123456:cloudbox/cb-xx***123', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the image. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the image. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:`.', example='TestValue'),
    }
  ](name='Tag', description='The image tags.', position='Query'),
}

model ImportImageResponseBody = {
  imageId?: string(name='ImageId', description='The image ID.', example='m-bp67acfmxazb4p****'),
  regionId?: string(name='RegionId', description='The region ID.', example='cn-hangzhou'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  taskId?: string(name='TaskId', description='The image import task ID.', example='t-bp67acfmxazb4p****'),
}

model ImportImageResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ImportImageResponseBody(name='body'),
}

/**
  * ### [](#)Usage notes
  * Take note of the following items:
  * *   Before you import an image, you must upload the image to an Object Storage Service (OSS) bucket. For more information, see [Upload objects](~~31886~~).
  * *   In specific scenarios, you may want to create a custom image based on the operating system data of a source server, import the image to Alibaba Cloud, and then create an ECS instance from the image. The source server can be a physical server, a virtual machine, or a cloud host. If the virtio driver is not installed on the source server, the created ECS instance may be unable to start. To prevent this issue, verify that the virtio driver is installed on the source server before you import the image to Alibaba Cloud. For more information, see [Install the virtio driver](~~62423~~).
  * *   Before you import images for the first time, you must use Resource Access Management (RAM) to authorize ECS to access your OSS buckets. If ECS is not authorized to access your OSS buckets, the `NoSetRoletoECSServiceAccount` or `InvalidOperation.CloudBoxImageImportRoleRequired` error code is returned when you call the ImportImage operation. The authorization configuration varies based on whether the image files are imported from a cloud box.
  *     *   **If the image files are not imported from a cloud box**, you can complete the authorization on the [Cloud Resource Access Authorization](https://ram.console.aliyun.com/?spm=5176.2020520101image.0.0.2ffa4df57kSoHX#/role/authorize?request=%7B%22Requests%22%3A%20%7B%22request1%22%3A%20%7B%22RoleName%22%3A%20%22AliyunECSImageImportDefaultRole%22%2C%20%22TemplateId%22%3A%20%22ECSImportRole%22%7D%2C%20%22request2%22%3A%20%7B%22RoleName%22%3A%20%22AliyunECSImageExportDefaultRole%22%2C%20%22TemplateId%22%3A%20%22ECSExportRole%22%7D%7D%2C%20%22ReturnUrl%22%3A%20%22https%3A//ecs.console.aliyun.com/%22%2C%20%22Service%22%3A%20%22ECS%22%7D) page of the RAM console. You can also complete the authorization by using a RAM role and RAM policies. The following example shows the policies and permissions required for specific steps in the authorization procedure. For more information, see [Control access to ECS resources by using RAM users](~~25481~~).
  *         1.  Create a RAM role named `AliyunECSImageImportDefaultRole`. You must use this exact role name. Otherwise, the image cannot be imported. Configure the following trust policy for the role:
  *                 {
  *                 	"Statement": [
  *                 	{
  *                 		"Action": "sts:AssumeRole",
  *                 		"Effect": "Allow",
  *                 		"Principal": {
  *                 		"Service": [
  *                 			"ecs.aliyuncs.com"
  *                 		]
  *                 		}
  *                 	}
  *                 ],
  *                 	"Version": "1"
  *                 }
  *         2.  Attach the `AliyunECSImageImportRolePolicy` system policy to the RAM role. You can also create a custom policy that contains the following content and attach the policy to the role:
  *             ```
  *             {
  *             	"Version": "1",
  *             	"Statement": [
  *             	{
  *             		"Action": [
  *             				"oss:GetObject",
  *             				"oss:GetBucketLocation",
  *             				"oss:GetBucketInfo"
  *             	],
  *             			"Resource": "*",
  *             			"Effect": "Allow"
  *             			}
  *             	]
  *             }
  *             ```
  *     *   **If the image files are imported from a cloud box**, you can complete the authorization on the [Cloud Resource Access Authorization](https://ram.console.aliyun.com/role/authorize?request=%7B%22ReturnUrl%22%3A%22https%3A%2F%2Fecs.console.aliyun.com%2F%22%2C%22Services%22%3A%5B%7B%22Roles%22%3A%5B%7B%22RoleName%22%3A%22AliyunECSCloudBoxImageImportDefaultRole%22%2C%22TemplateId%22%3A%22AliyunECSCloudBoxImageImportDefaultRole%22%7D%5D%2C%22Service%22%3A%22ECS%22%7D%5D%7D) page of the RAM console. You can also complete the authorization by using a RAM role and RAM policies. The following example shows the policies and permissions required for specific steps in the authorization procedure. For more information, see [Control access to ECS resources by using RAM users](~~25481~~).
  *         1.  Create a RAM role named `AliyunECSCloudBoxImageImportDefaultRole`. You must use this exact role name. Otherwise, the image cannot be imported. Configure the following trust policy for the role:
  *                 {
  *                 	"Statement": [
  *                 	{
  *                 		"Action": "sts:AssumeRole",
  *                 		"Effect": "Allow",
  *                 		"Principal": {
  *                 		"Service": [
  *                 			"ecs.aliyuncs.com"
  *                 		]
  *                 		}
  *                 	}
  *                 ],
  *                 	"Version": "1"
  *                 }
  *         2.  Attach the `AliyunECSCloudBoxImageImportRolePolicy` system policy to the RAM role. You can also create a custom policy that contains the following content and attach the policy to the role:
  *             ```
  *             {
  *             	"Version": "1",
  *             	"Statement": [
  *             	{
  *             		"Action": [
  *             				"oss-cloudbox:GetObject",
  *             				"oss-cloudbox:GetBucketLocation",
  *             				"oss-cloudbox:GetBucketInfo"
  *             	],
  *             			"Resource": "*",
  *             			"Effect": "Allow"
  *             			}
  *             	]
  *             }
  *             ```
  * *   You cannot delete an image that is being imported. However, you can call the [CancelTask](~~25624~~) operation to cancel the image import task.
  * *   You can import an image only to the same region as the OSS bucket to which the image file is uploaded.
  * *   The valid values of N in `DiskDeviceMapping.N` range from 1 to 17. When N is set to 1, the disk is a system disk. When N is set to a value from 2 to 17, the disk is a data disk. When N is set to a value greater than 17, parameters prefixed with DiskDeviceMapping.N are ignored.
  * *   When you set `Architecture` to `arm64` or when you set `Platform` to `CentOS Stream`, `Anolis`, `AlmaLinux`, `UOS`, `Kylin`, or `Rocky Linux`, take note of the following items:
  *     *   To ensure that the password can be set or the key pair can be modified for an imported image, make sure that the image meets the following requirements before you import it:
  *         *   The kernel of the operating system supports the `CONFIG_FW_CFG_SYSFS` feature. By default, Linux community kernel 4.6 and later and CentOS kernel 3.10.0-826.el7 and later support the CONFIG_FW_CFG_SYSFS feature. You can run the `grep -nr CONFIG_FW_CFG_SYSFS /boot/config-$(uname -r)` command on the source server of the image. If the command output contains `CONFIG_FW_CFG_SYSFS=y`, the kernel of the image supports the `CONFIG_FW_CFG_SYSFS` feature.
  *         *   Alibaba Cloud cloud-init of the latest version is installed on the operating system. If the version of cloud-init is 19.1, the minor version must be 19.1.3 or later. If the version of cloud-init is 0.7.6a in some early versions of operating systems, the minor version must be 0.7.6a15 or later. For more information, see [Install cloud-init](~~57803~~).
  *         *   The operating system supports the SHA-512 encryption algorithm.
  *     *   If you want an imported image to support the resizing of disks and file systems, make sure that the image meets the following requirements before you import it:
  *         *   The kernel version of the operating system is later than 3.6.
  *         *   The image supports the growpart command. To support this command, you must install the `cloud-utils-growpart` package. The methods of installing the package vary based on operating systems. For more information, see [Extend the partitions and file systems of disks on a Linux instance](~~25451~~).
  *         *   The image supports the resize2fs command. To support this command, you must install the `e2fsprogs` package. By default, the package is installed on the operating system. If the package is not installed, install it.
  *         *   Alibaba Cloud cloud-init of the latest version is installed on the operating system. If the version of cloud-init is 19.1, the minor version must be 19.1.3 or later. If the version of cloud-init is 0.7.6a in some early versions of operating systems, the minor version must be 0.7.6a15 or later. For more information, see [Install cloud-init](~~57803~~).
  * *   If the image that you want to import uses the Arm64 architecture, configure the real-time clock (RTC) to use the Coordinated Universal Time (UTC) time standard. For more information, see [Linux time and time zones](~~405080~~).
  * *   When you import images, we recommend that you specify DetectionStrategy. This way, you can optimize the images based on the image check results. For more information, see [Overview of image check](~~439819~~).
  *
 */
async function importImage(request: ImportImageRequest): ImportImageResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ImportImage', 'POST', '/', 'json', false, 'json', request);
}

model ImportKeyPairRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  keyPairName: string(name='KeyPairName', description='The name of the key pair. The name must be unique. It must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testKeyPairName', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  publicKeyBody: string(name='PublicKeyBody', description='The public key of the key pair.', example='ABC1234567', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the enterprise resource group to which the SSH key pair belongs.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the key pair. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the key pair. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag value cannot start with acs:.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the key pair.', position='Query'),
}

model ImportKeyPairResponseBody = {
  keyPairFingerPrint?: string(name='KeyPairFingerPrint', description='The fingerprint of the key pair. The MD5 message-digest algorithm is used based on the public key fingerprint format defined in RFC 4716.', example='89:f0:ba:62:ac:b8:aa:e1:61:5e:fd:81:69:86:6d:6b:f0:c0:5a:**'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.', example='testKeyPairName'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ImportKeyPairResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ImportKeyPairResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   A maximum of 500 key pairs can be created in each region.
  * *   The key pair to be imported must support one of the following encryption methods:
  *     *   rsa
  *     *   dsa
  *     *   ssh-rsa
  *     *   ssh-dss
  *     *   ecdsa
  *     *   <ssh-rsa-cert-v00@openssh.com>
  *     *   <ssh-dss-cert-v00@openssh.com>
  *     *   <ssh-rsa-cert-v01@openssh.com>
  *     *   <ssh-dss-cert-v01@openssh.com>
  *     *   <ecdsa-sha2-nistp256-cert-v01@openssh.com>
  *     *   <ecdsa-sha2-nistp384-cert-v01@openssh.com>
  *     *   <ecdsa-sha2-nistp521-cert-v01@openssh.com>
  *
 */
async function importKeyPair(request: ImportKeyPairRequest): ImportKeyPairResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ImportKeyPair', 'POST', '/', 'json', false, 'json', request);
}

model InstallCloudAssistantRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: [ string ](name='InstanceId', description='The ID of the instance.', example='i-bp1iudwa5b1tqa****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The IDs of instances. You can specify up to 50 instance IDs in a single request.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model InstallCloudAssistantResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model InstallCloudAssistantResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: InstallCloudAssistantResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * After you call the InstallCloudAssistant operation to install Cloud Assistant Agent on an ECS instance, call the [RebootInstance](~~25502~~) operation to restart the instance to make the installation take effect.
  *
 */
async function installCloudAssistant(request: InstallCloudAssistantRequest): InstallCloudAssistantResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'InstallCloudAssistant', 'POST', '/', 'json', false, 'json', request);
}

model InvokeCommandRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-42665544****', position='Query'),
  commandId: string(name='CommandId', description='The command ID. You can call the [DescribeCommands](~~64843~~) operation to query all available command IDs.

>  Common Cloud Assistant commands can be run based on their names. For more information, see [View and run common Cloud Assistant commands](~~429635~~).', example='c-e996287206324975b5fbe1d****', position='Query'),
  containerId?: string(name='ContainerId', description='The ID of the container. Only 64-bit hexadecimal strings are supported. You can use container IDs that are prefixed with `docker://`, `containerd://`, or `cri-o://` to specify container runtimes.

Take note of the following items:

*   If this parameter is specified, Cloud Assistant runs the command in the specified container of the instance.

*   If this parameter is specified, the command can run only on Linux instances on which Cloud Assistant Agent 2.2.3.344 or later is installed.

    *   For information about how to query the version of Cloud Assistant Agent, see [Install Cloud Assistant Agent](~~64921~~).
    *   For information about how to upgrade Cloud Assistant Agent, see [Upgrade or disable upgrades for Cloud Assistant Agent](~~134383~~).

*   If this parameter is specified, the `Username` parameter that is specified in a request to call this operation and the `WorkingDir` parameter that is specified in a request to call the [CreateCommand](~~64844~~) operation do not take effect. You can run the command only in the default working directory of the container by using the default user of the container. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).

*   If this parameter is specified, only shell scripts can be run in Linux containers. You cannot add a command in the format similar to `#!/usr/bin/python` at the beginning of a script to specify a script interpreter. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).', example='ab141ddfbacfe02d9dbc25966ed971536124527097398d419a6746873fea****', position='Query'),
  containerName?: string(name='ContainerName', description='The name of the container.

Take note of the following items:

*   If this parameter is specified, Cloud Assistant runs the command in the specified container of the instance.

*   If this parameter is specified, the command can run only on Linux instances on which Cloud Assistant Agent 2.2.3.344 or later is installed.

    *   For information about how to query the version of Cloud Assistant Agent, see [Install Cloud Assistant Agent](~~64921~~).
    *   For information about how to upgrade Cloud Assistant Agent, see [Upgrade or disable upgrades for Cloud Assistant Agent](~~134383~~).

*   If this parameter is specified, the `Username` parameter that is specified in a request to call this operation and the `WorkingDir` parameter that is specified in a request to call the [CreateCommand](~~64844~~) operation do not take effect. You can run the command only in the default working directory of the container by using the default user of the container. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).

*   If this parameter is specified, only shell scripts can be run in Linux containers. You cannot add a command in the format similar to `#!/usr/bin/python` at the beginning of a script to specify a script interpreter. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).', example='test-container', position='Query'),
  frequency?: string(name='Frequency', description='The schedule on which to run the command. You can configure a command to run at a fixed interval based on a rate expression, run only once at a specific time, or run at specific times based on a cron expression.

*   To run a command at a fixed interval, use a rate expression to specify the interval. You can specify the interval in seconds, minutes, hours, or days. This option is suitable for scenarios in which tasks need to be executed at a fixed interval. Specify the interval in the following format: `rate(<Execution interval value><Execution interval unit>)`. For example, specify `rate(5m)` to run the command every 5 minutes. When you specify an interval, take note of the following limits:

    *   The interval can be anywhere from 60 seconds to 7 days, but must be longer than the timeout period of the scheduled task.
    *   The interval is the amount of time that elapses between two consecutive executions. The interval is irrelevant to the amount of time that is required to run the command once. For example, assume that you set the interval to 5 minutes and that it takes 2 minutes to run the command each time. Each time the command is run, the system waits 3 minutes before the system runs the command again.
    *   A task is not immediately executed after the task is created. For example, assume that you set the interval to 5 minutes for a task. The task begins to be executed 5 minutes after it is created.

*   To run a command only once at a specific time, specify a point in time and a time zone. Specify the point in time in the `at(yyyy-MM-dd HH:mm:ss <Time zone>)` format, which indicates `at(Year-Month-Day Hour:Minute:Second <Time zone>)`. If you do not specify a time zone, the Coordinated Universal Time (UTC) time zone is used by default. You can specify a time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported.

    For example, to configure a command to run only once at 13:15:30 on June 6, 2022 (Shanghai time), set the time to `at(2022-06-06 13:15:30 Asia/Shanghai)`. To configure a command to run only once at 13:15:30 on June 6, 2022 (UTC-7), set the time to `at(2022-06-06 13:15:30 GMT-7:00)`.

*   To run a command at specific times, use a cron expression to define the schedule. Specify a schedule in the `<Cron expression> <Time zone>` format. The cron expression is in the `<seconds> <minutes> <hours> <day of the month> <month> <day of the week> <year (optional)>` format. The system calculates the execution times of the command based on the specified cron expression and time zone and runs the command as scheduled. If you do not specify a time zone, the system time zone of the instance on which you want to run the command is used by default. For more information about cron expressions, see [Cron expressions](~~64769~~). You can specify a time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported. For example, to configure a command to run at 10:15:00 every day in 2022 (Shanghai time), set the schedule to `0 15 10 ? * * 2022 Asia/Shanghai`. To configure a command to run every half an hour from 10:00:00 to 11:30:00 every day in 2022 (UTC+8), set the schedule to `0 0/30 10-11 * * ? 2022 GMT+8:00`. To configure a command to run every 5 minutes from 14:00:00 to 14:55:00 every October every two years from 2022 in UTC, set the schedule to `0 0/5 14 * 10 ? 2022/2 UTC`.

    **

    **Note** The minimum interval must be 10 seconds or more and cannot be shorter than the timeout period of scheduled executions.', example='0 */20 * * * ?', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The IDs of instances on which you want to run the command. You can specify up to 100 instance IDs in each request. Valid values of N: 1 to 100.

You can apply for a quota increase in the Quota Center console. The quota name is Maximum number of instances supported for command execution.', example='i-bp185dy2o3o6n****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  parameters?: map[string]any(name='Parameters', description='The key-value pairs of custom parameters to be passed in when the custom parameter feature is enabled. Number of custom parameters: 0 to 10.

*   Keys in a Map collection can be up to 64 characters in length, and cannot be empty strings.
*   Values in a Map collection can be empty strings.
*   The size of the Base64-encoded custom parameters and original command content cannot exceed 18 KB.
*   The custom parameter names specified in the value of Parameters must be included in the custom parameters specified when you created the command. You can use empty strings to represent the parameters that are not passed in.

If you want to disable the custom parameter feature, you can leave this parameter empty.', example='{"name":"Jack", "accessKey":"LTAIdyv******aRY"}', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  repeatMode?: string(name='RepeatMode', description='The mode in which you want to run the command. Valid values:

*   Once: runs the command immediately.
*   Period: runs the command based on a schedule. If you set this parameter to `Period`, you must also configure the `Frequency` parameter.
*   NextRebootOnly: runs the command the next time the instance is started.
*   EveryReboot: runs the command every time the instance is started.

Default values:

*   If you do not specify `Frequency`, the default value is `Once`.
*   If you specify `Frequency`, `Period` is used as the value of RepeatMode regardless of whether RepeatMode is set to Period.

Take note of the following items:

*   You can call the [StopInvocation](~~64838~~) operation to stop the pending or scheduled executions of the command.
*   If you set this parameter to `Period` or `EveryReboot`, you can call the [DescribeInvocationResults](~~64845~~) operation with `IncludeHistory` set to true to query the results of historical scheduled executions.', example='Once', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the command executions. When you set this parameter, take note of the following items:

*   The instances specified by InstanceId.N must belong to the specified resource group.
*   After the command is run, you can call the [DescribeInvocations](~~64840~~) or [DescribeInvocationResults](~~64845~~) operation with ResourceGroupId set to query the execution results in the specified resource group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceTag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the instance.

Take note of the following items:

*   This parameter and InstanceId.N are mutually exclusive.
*   Valid values of N: 1 to 10. The tag key cannot be an empty string.
*   The number of instances that have the specified tags cannot exceed 50. If more than 50 instances have the specified tags, we recommend that you use batch tags such as batch: b1 to group the instances into batches of up to 50 instances.
*   The tag key can be up to 64 characters in length. It cannot start with aliyun or acs: and cannot contain http:// or https://.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the instance.

Take note of the following items:

*   Valid values of N: 1 to 10.
*   The tag value can be an empty string.
*   The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='ResourceTag', description='The tags of the instance. If you do not specify InstanceId.N, the command is run on the instances that have the specified tags.', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the command task. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags added, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the command task. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', position='Query'),
  terminationMode?: string(name='TerminationMode', description='Specifies how to stop the command task when a command execution is manually stopped or times out. Valid values:

*   Process: stops the process of the command.
*   ProcessTree: stops the process tree of the command. In this case, the process of the command and all subprocesses of the process are stopped.', example='ProcessTree', position='Query'),
  timed?: boolean(name='Timed', description='>  This parameter is no longer used and does not take effect.', example='true', position='Query'),
  timeout?: long(name='Timeout', description='The timeout period for the command execution. Unit: seconds.

*   The timeout period cannot be less than 10 seconds.
*   A timeout error occurs if the command cannot be run because the process slows down or because a specific module or Cloud Assistant Agent does not exist. When the specified timeout period ends, the command process is forcefully terminated.
*   If you do not specify this parameter, the timeout period that is specified when the command is created is used.
*   This timeout period is applicable only to this execution. The timeout period of the command is not modified.', example='60', position='Query'),
  username?: string(name='Username', description='The username to use to run the command on the ECS instances. The username cannot exceed 255 characters in length.

*   For Linux instances, the root username is used by default.
*   For Windows instances, the System username is used by default.

You can also specify other usernames that already exist in the instances to run the command. For security purposes, we recommend that you run Cloud Assistant commands as a regular user. For more information, see [Run Cloud Assistant commands as a regular user](~~203771~~).', example='test', position='Query'),
  windowsPasswordName?: string(name='WindowsPasswordName', description='The name of the password to use to run the command on a Windows instance. The name cannot exceed 255 characters in length.

If you do not want to use the default System user to run the command on Windows instances, specify both WindowsPasswordName and `Username`. To mitigate the risk of password leaks, the password is stored in plaintext in CloudOps Orchestration Service (OOS) Parameter Store, and only the name of the password is passed in by using WindowsPasswordName. For more information, see [Manage encryption parameters](~~186828~~) and [Run Cloud Assistant commands as a regular user](~~203771~~).

>  If you use the root username for Linux instances or the System username for Windows instances to run the command, you do not need to specify WindowsPasswordName.', example='axtSecretPassword', position='Query'),
}

model InvokeCommandResponseBody = {
  invokeId?: string(name='InvokeId', description='The ID of the command task.', example='t-7d2a745b412b4601b2d47f6a768d****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model InvokeCommandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: InvokeCommandResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The ECS instances on which you want to run the Cloud Assistant command must meet the following requirements. If multiple ECS instances are specified and one of the instances does not meet the requirements for running the command, the call fails. You must specify instances that meet the requirements and call the InvokeCommand operation again.
  *     *   The instances are in the Running (`Running`) state. You can call the [DescribeInstances](~~25506~~) operation to query the status of instances.
  *     *   Cloud Assistant Agent is installed on the instances. For more information, see [Install Cloud Assistant Agent](~~64921~~).
  *     *   If the command is a PowerShell command, make sure that the instances have the PowerShell module configured.
  * *   You can configure the command to run only once on the instances.
  * *   You can configure the command to run on the instances based on a schedule.
  *     *   The schedule is specified by Frequency. The results of each execution of the command do not affect the next execution of the command.
  *     *   When you use a cron expression to specify a schedule, you can specify a time zone based on your business requirements. If you do not specify a time zone, the schedule is determined by the system time of the instances. Make sure that the time or time zone of the instances meets your business requirements. For more information, see [Manage the time synchronization service](~~92704~~).
  *     To ensure that scheduled tasks can run as expected, make sure that the version of Cloud Assistant Agent is not earlier than the following versions. A scheduled task can run a command at a fixed interval, only once at a specific time, or at specific times based on a cron expression in a specified year or time zone. If the ClientNeedUpgrade error code is returned, you must upgrade Cloud Assistant Agent to the latest version. For more information, see [Upgrade or disable upgrades for Cloud Assistant Agent](~~134383~~).
  *     *   Linux: 2.2.3.282
  *     *   Windows: 2.1.3.282
  * *   Command executions may fail due to instance status exceptions, network exceptions, or exceptions on Cloud Assistant Agent. If a command execution fails, no execution information is generated. For more information, see [Check execution results and troubleshoot common issues](~~87029~~).
  * *   If you enable the custom parameter feature when you create the command, you must specify custom parameters (`Parameters`) to run the command.
  * *   Before you run the command on instances, especially new instances, we recommend that you call the [DescribeCloudAssistantStatus](~~87346~~) operation to query the status of Cloud Assistant Agent on the instances and run the command when the value of CloudAssistantStatus in the response is true for the instances.
  *
 */
async function invokeCommand(request: InvokeCommandRequest): InvokeCommandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'InvokeCommand', 'POST', '/', 'json', false, 'json', request);
}

model JoinResourceGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which you want to add the instance.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceId?: string(name='ResourceId', description='The ID of the resource. For example, if you set ResourceType to instance, set this parameter to the ID of the instance.', example='sg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the ECS resource. Valid values:

*   instance: instance
*   disk: Elastic Block Storage (EBS) device
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   ddh: dedicated host
*   ddhcluster: dedicated host cluster
*   eni: ENI
*   keypair: SSH key pair
*   launchtemplate: launch template
*   command: Cloud Assistant command
*   activation: activation code for a Cloud Assistant managed instance
*   managedinstance: Cloud Assistant managed instance

The values are case-sensitive.', example='securitygroup', position='Query'),
}

model JoinResourceGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model JoinResourceGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: JoinResourceGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * A resource is a cloud service entity that you create on Alibaba Cloud, such as an ECS instance, an elastic network interface (ENI), or an image. A resource group is a collection of infrastructure for projects, environments, or stacks. In a resource group, you can manage resources and monitor and run tasks in a centralized manner without the need to switch between Alibaba Cloud services.
  *
 */
async function joinResourceGroup(request: JoinResourceGroupRequest): JoinResourceGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'JoinResourceGroup', 'POST', '/', 'json', false, 'json', request);
}

model JoinSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The instance ID.

> If you configure this parameter, you cannot configure `NetworkInterfaceId`.', example='i-bp67acfmxazb4p****', position='Query'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ENI ID.

> If you configure this parameter, you cannot configure `InstanceId`.', example='eni-bp13kd656hxambfe****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.

*   If you want to add an instance to a security group, you do not need to specify a region ID.
*   If you want to add an ENI to a security group, you must specify the region ID of the ENI.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group. You can call the [DescribeSecurityGroups](~~25556~~) operation to query the most recent security group list.', example='sg-bp67acfmxazb4p****', position='Query'),
}

model JoinSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model JoinSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: JoinSecurityGroupResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * >  This operation is not recommended. We recommend that you call the [ModifyInstanceAttribute](~~25503~~) operation to add an instance to or remove an instance from a security group, and call the [ModifyNetworkInterfaceAttribute](~~58513~~) operation to add an ENI to or remove an ENI from a security group.
  * Take note of the following items:
  * *   Before you add an instance to a security group, the instance must be in the **Stopped** (Stopped) or **Running** (Running) state.
  * *   An instance can be added to up to five security groups by default.
  * *   To add an instance to more security groups, [submit a ticket](https://workorder-intl.console.aliyun.com/#/ticket/createIndex). An instance can be added to up to 16 security groups.
  * *   A basic security group can contain up to 2,000 instances. An advanced security group can contain up to 65,536 instances.
  * *   The security group and the instance must reside in the same region.
  * *   The security group and the instance must be of the same network type. If the network type is virtual private cloud (VPC), the security group and the instance must reside in the same VPC.
  * *   An instance and an ENI cannot be added to a security group at the same time. You cannot specify `InstanceId` and `NetworkInterfaceId` at the same time in a request.
  *
 */
async function joinSecurityGroup(request: JoinSecurityGroupRequest): JoinSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'JoinSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model LeaveSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: string(name='InstanceId', description='The instance ID.

> If you configure this parameter, you cannot configure `NetworkInterfaceId`.', example='i-bp67acfmxazb4p****', position='Query'),
  networkInterfaceId?: string(name='NetworkInterfaceId', description='The ENI ID.

> If you configure this parameter, you cannot configure `InstanceId`.', example='eni-bp13kd656hxambfe****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.

*   If you want to remove an instance from a security group, you do not need to specify a region ID.
*   If you want to remove an ENI from a security group, you must specify the ID of the region in which the ENI resides.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The security group ID.', example='sg-bp67acfmxazb4p****', position='Query'),
}

model LeaveSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model LeaveSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: LeaveSecurityGroupResponseBody(name='body'),
}

/**
  * > This operation is not recommended. We recommend that you call the [ModifyInstanceAttribute](~~25503~~) operation to add an instance to or remove an instance from a security group, and call the [ModifyNetworkInterfaceAttribute](~~58513~~) operation to add an ENI to or remove an ENI from a security group.
  * When you call this operation, take note of the following items:
  * *   Before you remove an instance from a security group, the instance must be in the **Stopped** or **Running** state.
  * *   An instance must belong to at least one security group. Therefore, if the instance that you want to remove belongs to only one security group, the LeaveSecurityGroup operation fails.
  * *   You cannot remove an instance and an ENI from a security group at the same time. This indicates that you cannot configure both `InstanceId` and `NetworkInterfaceId` in a request.
  *
 */
async function leaveSecurityGroup(request: LeaveSecurityGroupRequest): LeaveSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'LeaveSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model ListPluginStatusRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: [ string ](name='InstanceId', description='The ID of the instance.', position='Query'),
  maxResults?: int32(name='MaxResults', description='The maximum number of entries per page. 

Valid values: 1 to 50. 

Default value: 10.', example='10', position='Query'),
  name?: string(name='Name', description='The name of the Cloud Assistant plug-in. The name supports all character sets and must be 1 to 255 characters in length.

*   If this parameter is not specified, the status of all Cloud Assistant plug-ins that are installed on the specified instances are queried.

    **

    **Note** If this parameter is not specified, only a single instance ID can be specified.

*   If this parameter is specified, the status of the specified Cloud Assistant plug-in is queried.', example='testPluginName', position='Query'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results. You must specify the token that is obtained from the previous query as the value of NextToken.', example='AAAAAdDWBF2', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageNumber?: long(name='PageNumber', description='The page number.

*   Pages start from page 1.
*   Default value: 1.', example='1', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries per page.

*   Valid values: 1 to 50.
*   Default value: 10.', example='10', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ListPluginStatusResponseBody = {
  instancePluginStatusSet?: {
    instancePluginStatus?: [ 
    {
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-xxxxx'),
      pluginStatusSet?: {
        pluginStatus?: [ 
        {
          firstHeartbeatTime?: string(name='FirstHeartbeatTime', description='The first time when Cloud Assistant reported the state of the plug-in.', example='2020-01-19T09:15:46Z'),
          lastHeartbeatTime?: string(name='LastHeartbeatTime', description='The last time when Cloud Assistant reported the state of the plug-in.', example='2020-01-19T09:15:46Z'),
          pluginName?: string(name='PluginName', description='The name of the plug-in.', example='testName'),
          pluginStatus?: string(name='PluginStatus', description='The state of the Cloud Assistant plug-in. Valid values:

*   NotInstalled: The plug-in is not installed.
*   Installed: The one-time plug-in is installed.
*   Running: The long-running plug-in is running.
*   Stopped: The long-running plug-in is not running.
*   Crashed: The plug-in is abnormal.
*   Removed: The plug-in is uninstalled.
*   Unknown: The state of the plug-in is unknown.', example='Running'),
          pluginVersion?: string(name='PluginVersion', description='The version of the plug-in.', example='1.1'),
        }
      ](name='PluginStatus')
      }(name='PluginStatusSet', description='The queried Cloud Assistant plug-ins.'),
    }
  ](name='InstancePluginStatus')
  }(name='InstancePluginStatusSet', description='The states of Cloud Assistant plug-ins on the instances.'),
  nextToken?: string(name='NextToken', description='A pagination token. It can be used in the next request to retrieve a new page of results.', example='AAAAAdDWBF2'),
  pageNumber?: long(name='PageNumber', description='The page number.', example='1'),
  pageSize?: long(name='PageSize', description='The number of entries per page.', example='10'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  totalCount?: long(name='TotalCount', description='The total number of entries returned.', example='1'),
}

model ListPluginStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListPluginStatusResponseBody(name='body'),
}

/**
  * ## Usage notes
  * - Before you call this operation to query the status of Cloud Assistant plug-ins on ECS instances, make sure that the versions of Cloud Assistant Agent on the instances are not earlier than the following ones:
  *   *   2.2.3.344 for Linux instances
  *   *   2.1.3.344 for Windows instances
  * - You can use one of the following methods to check the responses:
  *   - Method 1: When you call the ListPluginStatus operation to retrieve the first page of results during a paged query, use MaxResults to specify the maximum number of entries to return in the call. The return value of NextToken is a pagination token, which you can use in the next request to retrieve a new page of results. When you call the ListPluginStatus operation to retrieve a new page of results, set NextToken to the NextToken value returned in the previous call and use MaxResults to specify the maximum number of entries to return in this call. 
  *   - Method 2: Use PageSize to specify the number of entries to return on each page, and then use PageNumber to specify the number of the page to return. You can use only one of the preceding methods. If you specify MaxResults or NextToken, the PageSize and PageNumber request parameters do not take effect and the TotalCount response parameter is invalid.
  *
 */
async function listPluginStatus(request: ListPluginStatusRequest): ListPluginStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListPluginStatus', 'POST', '/', 'json', false, 'json', request);
}

model ListTagResourcesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  nextToken?: string(name='NextToken', description='The pagination token that is used in the next request to retrieve a new page of results.', example='caeba0bbb2be03f84eb48b699f0a4883', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The resource IDs. Valid values of N: 1 to 50.', example='i-bp1j6qtvdm8w0z1o****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The resource type. Valid values:

*   instance: ECS instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: elastic network interface (ENI)
*   ddh: dedicated host
*   ddhcluster: dedicated host cluster
*   keypair: SSH key pair
*   launchtemplate: launch template
*   reservedinstance: reserved instance
*   snapshotpolicy: automatic snapshot policy
*   elasticityassurance: elasticity assurance
*   capacityreservation: capacity reservation
*   command: Cloud Assistant command
*   invocation: Cloud Assistant command execution result or file delivery result
*   activation: activation code for a Cloud Assistant managed instance
*   managedinstance: Cloud Assistant managed instance', example='instance', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N used for exact search of ECS resources. The tag key must be 1 to 128 characters in length. Valid values of N: 1 to 20.

Methods of using the `Tag.N` parameter pair (Tag.N.Key and Tag.N.Value):

*   Method 1: Use this parameter pair for exact search of ECS resources that have specified tags added. Each tag is a key-value pair.

    *   If you specify only `Tag.N.Key`, all ECS resources whose tags contain the specified tag key are returned.
    *   If you specify only `Tag.N.Value`, the `InvalidParameter.TagValue` error is returned.
    *   If you specify multiple tag key-value pairs, only the ECS resources that have all these tag key-value pairs added are returned.

*   Method 2: Use this parameter pair to query resource information of a non-default resource group. Set `Key` to `acs:rm:rgId` and `Value` to the ID of a resource group.

    *   If you set `Key` to `acs:rm:rgId`, you must set `Value` to the ID of a non-default resource group. If you set Value to the ID of the default resource group, an error message is returned.
    *   If you set `Key` to `acs:rm:rgId`, you cannot specify other Tag.N parameter pairs. If you specify multiple `Tag.N` parameter pairs to query resource groups and resources at the same time, an error message is returned.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N used for exact search of ECS resources. The tag value must be 1 to 128 characters in length. Valid values of N: 1 to 20.

> When Key is set to `acs:rm:rgId`, you can set Value only to the ID of a non-default resource group.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
  tagFilter?: [ 
    {
      tagKey?: string(name='TagKey', description='The key of tag N used for fuzzy search of ECS resources. The tag key must be 1 to 128 characters in length. Valid values of N: 1 to 5.

The `TagFilter.N` parameter pair (TagFilter.N.TagKey and TagFilter.N.TagValues.N) is used for fuzzy search of ECS resources that have specified tags added. In the specified tags, a single tag key may correspond to one or more tag values. Fuzzy search may have a latency of 2 seconds. A fuzzy search can return a result set of entries about a maximum of 5,000 resources.

*   When you use `TagFilter.N.TagKey` for fuzzy search of ECS resources, you must leave `TagFilter.N.TagValues.N` empty. For example, to query ECS resources whose tags contain the `environment` tag key, you can set `TagFilter.1.TagKey` to `env*` for prefix search, `*env*` for infix search, or `env` for exact search, but you must leave `TagFilter.1.TagValues` empty.
*   When you use `TagFilter.N.TagValues.N` for fuzzy search of ECS resources, you must set `TagFilter.N.TagKey` to an exact value. For example, to query ECS resources that have a tag composed of the `env` tag key and the `product` tag value, you must set `TagFilter.1.TagKey` to `env` and can set `TagFilter.1.TagValues.1` to `proc*` for prefix search, to `*proc*` for infix search, or to `proc` for exact search. Only one of the preceding search methods can be used for each tag key (`TagFilter.N.TagKey`). If multiple search methods are configured for a tag key, the first search method prevails.
*   If you specify multiple tag keys, only the ECS resources that have all the specified tag keys added are returned.
*   If you specify a tag key that corresponds to multiple tag values, all the ECS resources that have one or more of these tag key-value pairs added are returned.

> The `TagFilter.N` parameter pair (TagFilter.N.TagKey and TagFilter.N.TagValues.N) cannot be used together with the `Tag.N` parameter pair (Tag.N.Key and Tag.N.Value). Otherwise, an error message is returned.', example='env'),
      tagValues?: [ string ](name='TagValues', description='The values of tag N used for fuzzy search of ECS resources. The tag values must be 1 to 128 characters in length. Valid values of N: 1 to 5. For more information, see the description of `TagFilter.N.TagKey`.', example='TestTagFilter'),
    }
  ](name='TagFilter', description='The regular expressions used to filter tags.', position='Query'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='A pagination token.', example='caeba0bbb2be03f84eb48b699f0a4883'),
  requestId?: string(name='RequestId', description='The request ID.', example='484256DA-D816-44D2-9D86-B6EE4D5BA78C'),
  tagResources?: {
    tagResource?: [ 
    {
      resourceId?: string(name='ResourceId', description='The resource ID.', example='i-bp1j6qtvdm8w0z1o****'),
      resourceType?: string(name='ResourceType', description='The resource type. Valid values:

*   instance: ECS instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: ENI
*   ddh: dedicated host
*   ddhcluster: dedicated host cluster
*   keypair: SSH key pair
*   launchtemplate: launch template
*   reservedinstance: reserved instance
*   snapshotpolicy: automatic snapshot policy
*   elasticityassurance: elasticity assurance
*   capacityreservation: capacity reservation
*   command: Cloud Assistant command
*   invocation: Cloud Assistant command execution result
*   activation: activation code for a Cloud Assistant managed instance
*   managedinstance: Cloud Assistant managed instance', example='instance'),
      tagKey?: string(name='TagKey', description='The tag key of the resource.', example='TestKey'),
      tagValue?: string(name='TagValue', description='The tag value of the resource.', example='TestValue'),
    }
  ](name='TagResource')
  }(name='TagResources', description='The information about the resource and its tags, including the resource ID, the resource type, and the keys and values of the tags.'),
}

model ListTagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ListTagResourcesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Specify at least one of the following parameters or parameter pairs in a request to determine a query object:
  * *   `ResourceId.N`
  * *   `Tag.N` parameter pair (`Tag.N.Key` and `Tag.N.Value`)
  * *   `TagFilter.N`
  * If one of the following sets of request parameters is specified as filter conditions, only ECS resources that meet all the specified filter conditions are returned:
  * *   Set 1: `Tag.N.Key, Tag.N.Value` and `ResourceId.N`
  * *   Set 2: `TagFilter.N.TagKey, TagFilter.N.TagValues.N` and `ResourceId.N`
  *
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ListTagResources', 'POST', '/', 'json', false, 'json', request);
}

model ModifyAutoProvisioningGroupRequest {
  autoProvisioningGroupId?: string(name='AutoProvisioningGroupId', description='The auto-provisioning group ID.', example='apg-bp67acfmxazb4ph****', position='Query'),
  autoProvisioningGroupName?: string(name='AutoProvisioningGroupName', description='The name of the auto-provisioning group. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://.[ It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).](http://https://。、（:）、（\\_）（-）。)', example='apg-test', position='Query'),
  defaultTargetCapacityType?: string(name='DefaultTargetCapacityType', description='The type of supplemental instances. When the sum of the PayAsYouGoTargetCapacity and SpotTargetCapacity values is smaller than the TotalTargetCapacity value, the auto-provisioning group creates instances of the specified type to meet the target capacity. Valid values:

*   PayAsYouGo: pay-as-you-go instances
*   Spot: preemptible instances', example='Spot', position='Query'),
  excessCapacityTerminationPolicy?: string(name='ExcessCapacityTerminationPolicy', description='Specifies whether to release the removed instances when the real-time capacity of the auto-provisioning group exceeds the target capacity and a scale-in event is triggered. Valid values:

*   termination: releases the removed instances.
*   no-termination: removes the instances from the auto-provisioning group but does not release them.', example='no-termination', position='Query'),
  launchTemplateConfig?: [ 
    {
      instanceType?: string(name='InstanceType', description='The instance type in extended configuration N. Valid values of N: 1 to 20. For more information about the valid values of this parameter, see [Instance families](~~25378~~).', example='ecs.g5.large'),
      maxPrice?: double(name='MaxPrice', description='The maximum price of preemptible instances in extended configuration N.', example='3'),
      priority?: int32(name='Priority', description='The priority of extended configuration N. A value of 0 indicates the highest priority. The value must be greater than 0.', example='1'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch in extended configuration N. The zone of the instances created from the extended configuration is determined by the vSwitch.', example='vsw-sn5bsitu4lfzgc5o7****'),
      weightedCapacity?: double(name='WeightedCapacity', description='The weight of the instance type specified in the extended configuration. A greater weight indicates that a single instance has more computing power and fewer instances are required. The value must be greater than 0.

The weight is calculated based on the computing power of the instance type and the minimum computing power of a single instance in the cluster that can created by the auto-provisioning group. For example, assume that the minimum computing power of a single instance is 8 vCPUs and 60 GiB of memory.

*   For an instance type with 8 vCPUs and 60 GiB of memory, you can set the weight to 1.
*   For an instance type with 16 vCPUs and 120 GiB of memory, you can set the weight to 2.', example='2'),
    }
  ](name='LaunchTemplateConfig', description='The extended configurations of the launch template.', position='Query'),
  maxSpotPrice?: float(name='MaxSpotPrice', description='The maximum price of preemptible instances in the auto-provisioning group.

> When both the MaxSpotPrice and LaunchTemplateConfig.N.MaxPrice parameters are specified, the smaller one of the two parameter values is used. The LaunchTemplateConfig.N.MaxPrice parameter is specified when the auto-provisioning group is created, and cannot be modified.', example='0.5', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  payAsYouGoTargetCapacity?: string(name='PayAsYouGoTargetCapacity', description='The target capacity of pay-as-you-go instances in the auto-provisioning group. Valid values: Set this parameter to a value smaller than the TotalTargetCapacity value.', example='30', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the auto-provisioning group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  spotTargetCapacity?: string(name='SpotTargetCapacity', description='The target capacity of preemptible instances in the auto-provisioning group. Valid values: Set this parameter to a value smaller than the TotalTargetCapacity value.', example='30', position='Query'),
  terminateInstancesWithExpiration?: boolean(name='TerminateInstancesWithExpiration', description='Specifies whether to release instances that are located in the auto-provisioning group after the group expires. Valid values:

*   true: releases instances that are located in the auto-provisioning group.
*   false: removes instances from the auto-provisioning group but does not release them.', example='false', position='Query'),
  totalTargetCapacity?: string(name='TotalTargetCapacity', description='The total target capacity of the auto-provisioning group. The value must be a positive integer.

The total target capacity of the auto-provisioning group must be greater than or equal to the sum of the target capacity of pay-as-you-go instances specified by the PayAsYouGoTargetCapacity parameter as well as the target capacity of preemptible instances specified by the SpotTargetCapacity parameter.', example='70', position='Query'),
}

model ModifyAutoProvisioningGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='B48A12CD-1295-4A38-A8F0-0E92C937****'),
}

model ModifyAutoProvisioningGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyAutoProvisioningGroupResponseBody(name='body'),
}

/**
  * Before you call this operation, take note of the following items:
  * *   If you modify the capacity or capacity-related settings of an auto-provisioning group, the group executes a scheduling task after the group is modified.
  * *   You cannot modify an auto-provisioning group when the group is being deleted.
  *
 */
async function modifyAutoProvisioningGroup(request: ModifyAutoProvisioningGroupRequest): ModifyAutoProvisioningGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyAutoProvisioningGroup', 'POST', '/', 'json', false, 'json', request);
}

model ModifyAutoSnapshotPolicyRequest {
  dataDiskPolicyEnabled?: boolean(name='DataDiskPolicyEnabled', position='Query'),
  dataDiskPolicyRetentionDays?: int32(name='DataDiskPolicyRetentionDays', minimum=1, maximum=3, position='Query'),
  dataDiskPolicyRetentionLastWeek?: boolean(name='DataDiskPolicyRetentionLastWeek', position='Query'),
  dataDiskPolicyTimePeriod?: int32(name='DataDiskPolicyTimePeriod', minimum=1, maximum=4, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  systemDiskPolicyEnabled?: boolean(name='SystemDiskPolicyEnabled', position='Query'),
  systemDiskPolicyRetentionDays?: int32(name='SystemDiskPolicyRetentionDays', minimum=1, maximum=3, position='Query'),
  systemDiskPolicyRetentionLastWeek?: boolean(name='SystemDiskPolicyRetentionLastWeek', position='Query'),
  systemDiskPolicyTimePeriod?: int32(name='SystemDiskPolicyTimePeriod', minimum=1, maximum=4, position='Query'),
}

model ModifyAutoSnapshotPolicyResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyAutoSnapshotPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyAutoSnapshotPolicyResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyAutoSnapshotPolicy(request: ModifyAutoSnapshotPolicyRequest): ModifyAutoSnapshotPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyAutoSnapshotPolicy', 'POST', '/', 'json', false, 'json', request);
}

model ModifyAutoSnapshotPolicyExRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  copiedSnapshotsRetentionDays?: int32(name='CopiedSnapshotsRetentionDays', description='The ID of the request.', example='30', position='Query'),
  copyEncryptionConfiguration?: {
    arn?: [ 
      {
        assumeRoleFor?: long(name='AssumeRoleFor', description='This parameter is not publicly available.', example='1000000000'),
        roleType?: string(name='RoleType', description='This parameter is not publicly available.', example='hide'),
        rolearn?: string(name='Rolearn', description='This parameter is not publicly available.', example='hide'),
      }
    ](name='Arn', description='This parameter is not publicly available.'),
    encrypted?: boolean(name='Encrypted', description='Specifies whether to enable encryption for cross-region snapshot replication. Valid values:

*   true
*   false

Default value: false.', example='false'),
    KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key used for encryption in cross-region snapshot replication.', example='0e478b7a-4262-4802-b8cb-00d3fb40826X'),
  }(name='CopyEncryptionConfiguration', description='The encryption configurations for cross-region snapshot replication.', position='Query'),
  enableCrossRegionCopy?: boolean(name='EnableCrossRegionCopy', description='The destination region to which to copy the snapshot. You can specify only a single destination region.', example='false', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  targetCopyRegions?: string(name='TargetCopyRegions', description='The retention period of the snapshot copy in the destination region. Unit: days. Valid values:

*   \\-1: The snapshot is permanently retained.
*   1 to 65535: The automatic snapshot is retained for the specified number of days.

Default value: -1.', example='["cn-hangzhou"]', position='Query'),
  autoSnapshotPolicyId: string(name='autoSnapshotPolicyId', description='The name of the automatic snapshot policy. If this parameter is not specified, the original name of the automatic snapshot policy is retained.', example='sp-bp12m37ccmxvbmi5****', position='Query'),
  autoSnapshotPolicyName?: string(name='autoSnapshotPolicyName', description='The points in time of the day at which to create automatic snapshots. The time must be in UTC+8. Unit: hours. Valid values are 0 to 23, which correspond to the 24 points in time on the hour from 00:00:00 to 23:00:00. For example, a value of 1 indicates 01:00:00.

To schedule multiple automatic snapshots to be created in a day, you can specify multiple hours.

*   You can specify up to 24 points in time.
*   You must set this parameter to a JSON array such as `["0", "1", ... "23"]`. Separate the points in time with commas (,).', example='SPTestName', position='Query'),
  regionId: string(name='regionId', description='The ID of the automatic snapshot policy. You can call the [DescribeAutoSnapshotPolicyEx](~~25530~~) operation to query available automatic snapshot policies.', example='cn-hangzhou', position='Query'),
  repeatWeekdays?: string(name='repeatWeekdays', description='The retention period of the automatic snapshot. Unit: days. Valid values:

*   \\-1: The automatic snapshot is permanently retained.
*   1 to 65536: The auto snapshot is retained for the specified number of days.

Default value: -1.', example='["1", "7"]', position='Query'),
  retentionDays?: int32(name='retentionDays', description='Specifies whether to enable cross-region replication for the automatic snapshot.

*   true: enables cross-region replication for the automatic snapshot.
*   false: disables cross-region replication for the automatic snapshot.', example='30', position='Query'),
  timePoints?: string(name='timePoints', description='The days of the week on which to create automatic snapshots. Valid values are 1 to 7, which correspond to the days of the week. For example, a value of 1 indicates Monday.

To schedule multiple automatic snapshots to be created in a week, you can specify multiple days.

*   You can specify up to seven days over a one-week period.
*   You must set this parameter to a JSON array such as `["1", "2" ... "7"]`. Separate the values in the array with commas (,).', example='["0", "1"]', position='Query'),
}

model ModifyAutoSnapshotPolicyExResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyAutoSnapshotPolicyExResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyAutoSnapshotPolicyExResponseBody(name='body'),
}

async function modifyAutoSnapshotPolicyEx(request: ModifyAutoSnapshotPolicyExRequest): ModifyAutoSnapshotPolicyExResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyAutoSnapshotPolicyEx', 'POST', '/', 'json', false, 'json', request);
}

model ModifyBandwidthPackageSpecRequest {
  bandwidth: string(name='Bandwidth', position='Query'),
  bandwidthPackageId: string(name='BandwidthPackageId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyBandwidthPackageSpecResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyBandwidthPackageSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyBandwidthPackageSpecResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyBandwidthPackageSpec(request: ModifyBandwidthPackageSpecRequest): ModifyBandwidthPackageSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyBandwidthPackageSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifyCapacityReservationRequest {
  privatePoolOptions?: {
    id: string(name='Id', description='The capacity reservation ID.', example='crp-bp67acfmxazb4****'),
    name?: string(name='Name', description='The name of the capacity reservation. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='eapTestName'),
  }(name='PrivatePoolOptions', position='Query'),
  description?: string(name='Description', description='The description of the capacity reservation. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  endTime?: string(name='EndTime', description='The expiration time of the capacity reservation. This parameter takes effect only when `EndTimeType` is set to Limited. Specify the time in the ISO 8601 standard in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC. For more information, see [ISO 8601](~~25696~~).', example='2021-10-30T06:32:00Z', position='Query'),
  endTimeType?: string(name='EndTimeType', description='The release mode of the capacity reservation. Valid values:

*   Limited: The capacity reservation is automatically released at the specified point in time. If you configure this parameter, you must also configure `EndTime`.
*   Unlimited: The capacity reservation must be manually released. You can release it anytime.', example='Unlimited', position='Query'),
  instanceAmount?: int32(name='InstanceAmount', description='The total number of instances for which capacity is reserved. Valid values: the number of used instances to 1000.

> When you increase the number of instances, the increase may fail due to insufficient resources.', example='100', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  platform?: string(name='Platform', description='The operating system of the image used by the instance. Valid values:

*   Windows
*   Linux

> This parameter is unavailable.', example='Linux', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the capacity reservation. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The mode in which the capacity reservation takes effect. Only immediate capacity reservations are supported. You do not need to specify a value for this parameter.

> If you do not specify a value for this parameter, the capacity reservation immediately takes effect.', example='Now', position='Query'),
}

model ModifyCapacityReservationResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8455DD10-84F8-43C9-8365-5F448EB169B6'),
}

model ModifyCapacityReservationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyCapacityReservationResponseBody(name='body'),
}

async function modifyCapacityReservation(request: ModifyCapacityReservationRequest): ModifyCapacityReservationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyCapacityReservation', 'POST', '/', 'json', false, 'json', request);
}

model ModifyCloudAssistantSettingsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  agentUpgradeConfig?: {
    allowedUpgradeWindow?: [ string ](name='AllowedUpgradeWindow', description='The time windows during which Cloud Assistant Agent can be upgraded. The time windows can be accurate to minutes. The Coordinated Universal Time (UTC) time zone is used by default.

Make sure that the upgrade windows specified by this parameter are not shorter than 1 hour.

Specify each upgrade window in the following format: \\<Start time in the HH:mm format>-\\<End time in the HH:mm format>.

For example, \\[ "02:00-03:00", "05:00-06:00" ] specifies that Cloud Assistant Agent can be upgraded from 2:00:00 to 3:00:00 and from 5:00:00 to 6:00:00 every day in the UTC time zone.'),
    enabled?: boolean(name='Enabled', description='Specifies whether to enable custom upgrade for Cloud Assistant Agent. If you set this parameter to false, an upgrade attempt is performed for Cloud Assistant Agent every 30 minutes.

Default value: false.', example='true'),
    timeZone?: string(name='TimeZone', description='The time zone of the time windows. Default value: UTC. You can specify a time zone in the following forms:

*   The time zone name. Examples: Asia/Shanghai and America/Los_Angeles.
*   The time offset from GMT. Examples: GMT+8:00 (UTC+8) and GMT-7:00 (UTC-7). You cannot add leading zeros to the hour value.', example='Asia/Shanghai'),
  }(name='AgentUpgradeConfig', description='The configurations for upgrading Cloud Assistant Agent.', shrink='json', position='Query'),
  ossDeliveryConfig?: {
    bucketName?: string(name='BucketName', description='The name of the OSS bucket.', example='example-bucket'),
    enabled?: boolean(name='Enabled', description='Specifies whether to deliver records to OSS. Default value: false.', example='false'),
    encryptionAlgorithm?: string(name='EncryptionAlgorithm', description='The OSS encryption algorithm. Valid values:

*   AES256
*   SM4', example='AES256'),
    encryptionKeyId?: string(name='EncryptionKeyId', description='The ID of the customer master key (CMK) when EncryptionType is set to KMS.', example='a807****7a70e'),
    encryptionType?: string(name='EncryptionType', description='The OSS encryption method. Valid values:

*   Inherit: the encryption method used by the specified bucket.
*   OssManaged: server-side encryption by using OSS-managed keys (SSE-OSS).
*   KMS: server-side encryption by using Key Management Service managed keys (SSE-KMS).', example='Inherit'),
    prefix?: string(name='Prefix', description='The prefix of the OSS bucket directory. The prefix must meet the following requirements:

*   The prefix can be up to 254 characters in length.
*   The prefix cannot start with a forward slash (/) or a backslash (\\\\).

Note: If you do not need a directory prefix, specify a pair of double quotation marks ("") for this parameter to clear the directory prefix that you specified.', example='sessionmanager/audit'),
  }(name='OssDeliveryConfig', description='The configurations for delivering records to Object Storage Service (OSS).', shrink='json', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  settingType: string(name='SettingType', description='The Cloud Assistant feature. Valid values:

*   SessionManagerDelivery: the Session Record Delivery feature
*   InvocationDelivery: the Operation Content and Result Delivery feature', example='SessionManagerDelivery', position='Query'),
  slsDeliveryConfig?: {
    enabled?: boolean(name='Enabled', description='Specifies whether to deliver records to Simple Log Service. Default value: false.', example='false'),
    logstoreName?: string(name='LogstoreName', description='The name of the Logstore.', example='example-logstore'),
    projectName?: string(name='ProjectName', description='The name of the Simple Log Service project.', example='example-project'),
  }(name='SlsDeliveryConfig', description='The configurations for delivering records to Simple Log Service.', shrink='json', position='Query'),
}

model ModifyCloudAssistantSettingsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyCloudAssistantSettingsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyCloudAssistantSettingsResponseBody(name='body'),
}

async function modifyCloudAssistantSettings(request: ModifyCloudAssistantSettingsRequest): ModifyCloudAssistantSettingsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyCloudAssistantSettings', 'POST', '/', 'json', false, 'json', request);
}

model ModifyCommandRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandContent?: string(name='CommandContent', description='>  This parameter is no longer used and does not take effect.', example='echo', position='Query'),
  commandId: string(name='CommandId', description='The command ID. You can call the [DescribeCommands](~~64843~~) operation to query all available command IDs.', example='c-hz01272yr52****', position='Query'),
  description?: string(name='Description', description='The command description. The description supports all character sets and can be up to 512 characters in length.', example='This is description.', position='Query'),
  name?: string(name='Name', description='The command name. The name supports all character sets and can be up to 128 characters in length.', example='test-CommandName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  timeout?: long(name='Timeout', description='The maximum timeout period for the command to be run on the instance. Unit: seconds. When a command cannot run within the specified time range, the command times out. Then, the command process is forcibly terminated by canceling the process ID (PID) of the command.', example='120', position='Query'),
  workingDir?: string(name='WorkingDir', description='The working directory of the command. The value can be up to 200 characters in length.', example='/home/', position='Query'),
}

model ModifyCommandResponseBody = {
  requestId?: string(name='RequestId', example='0DE9B41E-EF0D-40A0-BB43-37749C5BDA9C'),
}

model ModifyCommandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyCommandResponseBody(name='body'),
}

/**
  * You can modify a command when it is run. After the command is modified, the new command content applies to subsequent executions.
  * You cannot modify the command type. For example, you cannot change a shell command (RunShellScript) to a batch command (RunBatScript).
  *
 */
async function modifyCommand(request: ModifyCommandRequest): ModifyCommandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyCommand', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDedicatedHostAttributeRequest {
  networkAttributes?: {
    slbUdpTimeout?: int32(name='SlbUdpTimeout', description='The timeout period for a UDP session between a Server Load Balancer (SLB) instance and the dedicated host. Unit: seconds. Valid values: 15 to 310.', example='60'),
    udpTimeout?: int32(name='UdpTimeout', description='The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.', example='60'),
  }(name='NetworkAttributes', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  actionOnMaintenance?: string(name='ActionOnMaintenance', description='The policy for migrating the instances deployed on the dedicated host when the dedicated host fails or needs to be repaired online. Valid values:

*   Migrate: The instances are migrated to another physical machine and then restarted.
*   Stop: The instances are stopped. If the dedicated host cannot be repaired, the instances are migrated to another physical machine and then restarted.

If the dedicated host has cloud disks attached, the default value is Migrate.

If the dedicated host has local disks attached, the default value is Stop.', example='Migrate', position='Query'),
  autoPlacement?: string(name='AutoPlacement', description='Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify **DedicatedHostId** when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values:

*   on: adds the dedicated host to the resource pool for automatic deployment.
*   off: does not add the dedicated host to the resource pool for automatic deployment.

For information about automatic deployment, see [Functions and features](~~118938~~).', example='on', position='Query'),
  cpuOverCommitRatio?: float(name='CpuOverCommitRatio', description='The CPU overcommit ratio. You can configure CPU overcommit ratios only for the following dedicated host types: g6s, c6s, and r6s. Valid values: 1 to 5.

The CPU overcommit ratio affects the number of available vCPUs on a dedicated host. You can use the following formula to calculate the number of available vCPUs on a dedicated host: Number of available vCPUs = Number of physical CPU cores × 2 × CPU overcommit ratio. For example, the number of physical CPU cores on each g6s dedicated host is 52. If you change the CPU overcommit ratio of a g6s dedicated host to 4, the number of available vCPUs on the dedicated host is 416. For scenarios that have minimal requirements for CPU stability or where CPU load is not heavy, such as development and test environments, you can increase the number of available vCPUs on a dedicated host by increasing the CPU overcommit ratio. This allows you to deploy more ECS instances of the same specifications on the dedicated host and reduce the unit deployment cost.', example='1', position='Query'),
  dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster to which to assign the dedicated host.', example='dc-bp165p6xk2tlw61e****', position='Query'),
  dedicatedHostId: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****', position='Query'),
  dedicatedHostName?: string(name='DedicatedHostName', description='The name of the dedicated host. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testDedicatedHostName', position='Query'),
  description?: string(name='Description', description='The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region where the dedicated host resides. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDedicatedHostAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='2A4EA075-CB5B-41B7-B0EB-70D339F6****'),
}

model ModifyDedicatedHostAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDedicatedHostAttributeResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   All Elastic Compute Service (ECS) instances that are hosted on a dedicated host must be in the Stopped (`Stopped`) state before you can modify the CPU overcommit ratio of the dedicated host.
  * *   Changes to the CPU overcommit ratio of a dedicated host do not affect the running status of the dedicated host. After the CPU overcommit ratio is changed, the number of allocated vCPUs on the dedicated host cannot exceed the new total number of vCPUs. Otherwise, ECS instances that use the excess vCPUs cannot start.
  *
 */
async function modifyDedicatedHostAttribute(request: ModifyDedicatedHostAttributeRequest): ModifyDedicatedHostAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDedicatedHostAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDedicatedHostAutoReleaseTimeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.

*   The automatic release time must be at least 30 minutes later than the current time.
*   The automatic release time can be up to 3 years earlier than the current time.
*   If the value of the seconds (ss) is not 00, it is automatically set to 00.
*   If `AutoReleaseTime` is not configured, the automatic release feature is disabled, and the dedicated host will not be automatically released.', example='2019-06-04T13:35:00Z', position='Query'),
  dedicatedHostId: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDedicatedHostAutoReleaseTimeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='04F0F334-1335-436C-A1D7-6C044FE73368'),
}

model ModifyDedicatedHostAutoReleaseTimeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDedicatedHostAutoReleaseTimeResponseBody(name='body'),
}

/**
  * ## Usage notes
  * A pay-as-you-go dedicated host can be automatically released at the specified time. Before you release a pay-as-you-go dedicated host, make sure that the host is no longer required and all necessary application data is backed up.
  *
 */
async function modifyDedicatedHostAutoReleaseTime(request: ModifyDedicatedHostAutoReleaseTimeRequest): ModifyDedicatedHostAutoReleaseTimeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDedicatedHostAutoReleaseTime', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDedicatedHostAutoRenewAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to automatically renew the subscription. Valid values:

*   true
*   false

Default value: false', example='false', position='Query'),
  autoRenewWithEcs?: string(name='AutoRenewWithEcs', description='Specifies whether to automatically renew the subscription dedicated hosts along with the subscription ECS instances hosted on the dedicated hosts.

If auto-renewal is enabled for the subscription ECS instances hosted on the subscription dedicated hosts, you can specify this parameter to automatically renew the dedicated hosts along with the subscription ECS instances. When the subscription ECS instances hosted on your dedicated hosts are automatically renewed, the subscription dedicated hosts are also automatically renewed if the expiration time of the dedicated hosts is earlier than the expiration time of the renewed instances. Take note of the following items:

When the subscription dedicated hosts are configured to be automatically renewed along with the subscription ECS instances hosted on the dedicated hosts, the system checks the expiration time of the renewed instances and selects a minimum renewal duration for the dedicated hosts so that the dedicated hosts are renewed by a duration that ends later than the expiration time of the renewed instances. For more information about supported renewal durations, see the descriptions of the `PeriodUnit` and `Duration` parameters.

For example, assume that a dedicated host expires on January 15 of the current year. Subscription ECS instances hosted on the dedicated host are configured to be automatically renewed to November 15 of the same year. The expiration time of the dedicated host is earlier than the expiration time of the ECS instances by 10 months. In this case, the system selects a renewal duration of 12 months (a minimum duration calculated based on a `Duration` value of 12 and a `PeriodUnit` value of Month) for the dedicated host. This ensures that the dedicated host expires later than the ECS instances.

Valid values:

*   AutoRenewWithEcs: automatically renews the subscription dedicated hosts along with the subscription ECS instances hosted on the dedicated hosts.
*   StopRenewWithEcs: does not automatically renew the subscription dedicated hosts along with the subscription ECS instances hosted on the dedicated hosts.
*   NoOperation: does not change the current settings for the dedicated hosts.

> If you set this parameter to AutoRenewWithEcs, make sure that `AutoRenew` is set to true to enable auto-renewal for the dedicated hosts. Otherwise, the subscription dedicated hosts are not automatically renewed along with the subscription ECS instances hosted on the dedicated hosts.

Default value: NoOperation.', example='StopRenewWithEcs', position='Query'),
  dedicatedHostIds: string(name='DedicatedHostIds', description='The IDs of dedicated hosts. You can specify up to 100 subscription dedicated host IDs. Separate the IDs with commas (,).', example='dh-bp165p6xk2tlw61e****', position='Query'),
  duration?: int32(name='Duration', description='The renewal duration.

*   Valid values when PeriodUnit is set to Month: 1 and 12
*   Valid values when PeriodUnit is set to Year: 1 and 12', example='1', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal period. Valid values:

*   Month
*   Year

Default value: Month', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host.', example='cn-hangzhou', position='Query'),
  renewalStatus?: string(name='RenewalStatus', description='Specifies whether to automatically renew the subscription dedicated host. The `RenewalStatus` parameter takes precedence over the `AutoRenew` parameter. Valid values:

*   AutoRenewal: The dedicated hosts are automatically renewed.
*   Normal: The dedicated hosts are not automatically renewed, and renewal notifications are sent.
*   NotRenewal: The dedicated hosts are not automatically renewed, and no expiration notification is sent. A notification of no renewal is automatically sent three days before the end of the current subscription cycle. You can change the value of this parameter from NotRenewal to Normal and manually renew the dedicated hosts by calling the [RenewDedicatedHosts](~~134250~~) operation. Alternatively, you can renew the dedicated hosts by setting this parameter to AutoRenewal.', example='Normal', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDedicatedHostAutoRenewAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='2A4EA075-CB5B-41B7-B0EB-70D339F6****'),
}

model ModifyDedicatedHostAutoRenewAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDedicatedHostAutoRenewAttributeResponseBody(name='body'),
}

/**
  * *   If you enable auto-renewal for your subscription dedicated host, the system attempts to deduct the renewal payment at 08:00:00 (UTC+8) nine days before the dedicated host expires to renew the dedicated host. If this deduction attempt fails, the system attempt to deduct the payment at the same point in time the next day. The system attempts to deduct the payment once every day until the dedicated host expires or until the payment is deducted. Make sure that your account balance is sufficient.
  * *   Subscription dedicated hosts can be automatically renewed along with the subscription Elastic Compute Service (ECS) instances hosted on the dedicated hosts. For more information, see the description of the AutoRenewWithEcs parameter.
  *
 */
async function modifyDedicatedHostAutoRenewAttribute(request: ModifyDedicatedHostAutoRenewAttributeRequest): ModifyDedicatedHostAutoRenewAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDedicatedHostAutoRenewAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDedicatedHostClusterAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostClusterId: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp12wlf6am0vz9v2****', position='Query'),
  dedicatedHostClusterName?: string(name='DedicatedHostClusterName', description='The new name of the dedicated host cluster. The name must be 2 to 128 characters in length, and can contain letters, digits, periods (.), underscores (\\_), and hyphens (-). The name must start with a letter. The name cannot contain `http://` or `https://`.', example='newClusterName', position='Query'),
  description?: string(name='Description', description='The description of the dedicated host cluster. It must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.', example='newClusterDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDedicatedHostClusterAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='11B55F58-D3A4-4A9B-9596-342420D02FF8'),
}

model ModifyDedicatedHostClusterAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDedicatedHostClusterAttributeResponseBody(name='body'),
}

async function modifyDedicatedHostClusterAttribute(request: ModifyDedicatedHostClusterAttributeRequest): ModifyDedicatedHostClusterAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDedicatedHostClusterAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDedicatedHostsChargeTypeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to automatically complete the payment. Valid values:

*   true: The payment is automatically completed. Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and will be canceled.
*   false: An order is generated but no payment is made.

Default value: true.

> If you do not have sufficient balance in your account, you can set `AutoPay` to `false` to generate an unpaid order. Then, you can pay for the order.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='e4567-e89b-12d3-a456-426655440000', position='Query'),
  dedicatedHostChargeType?: string(name='DedicatedHostChargeType', description='The new billing method of the dedicated hosts. Valid values:

*   PrePaid: changes the billing method from pay-as-you-go to subscription.
*   PostPaid: changes the billing method from subscription to pay-as-you-go.

Default value: PrePaid.', example='PrePaid', position='Query'),
  dedicatedHostIds: string(name='DedicatedHostIds', description='The IDs of the dedicated hosts. The value can be a JSON array that consists of up to 20 dedicated host IDs. Separate the IDs with commas (,).', example='["dh-bp181e5064b5sotr****","dh-bp18064b5sotrr9c****"]', position='Query'),
  detailFee?: boolean(name='DetailFee', description='Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go.

Default value: false.', example='false', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks your AccessKey pair, the permissions of the RAM user, and the required parameters. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The renewal duration of the subscription dedicated hosts. Valid values:

*   If you set `PeriodUnit` to Week, valid values of `Period` are 1, 2, 3, and 4.
*   If you set `PeriodUnit` to Month, valid values of `Period` are 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal duration specified by `Period`. Valid values:

*   Week
*   Month

Default value: Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated hosts. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDedicatedHostsChargeTypeResponseBody = {
  feeOfInstances?: {
    feeOfInstance?: [ 
    {
      currency?: string(name='Currency', description='The unit of currency for the bill.

Alibaba Cloud China site (aliyun.com): CNY

Alibaba Cloud International site (alibabacloud.com): USD', example='CNY'),
      fee?: string(name='Fee', description='The charged amount.', example='0'),
      instanceId?: string(name='InstanceId', description='The IDs of the dedicated hosts.', example='dh-bp181e5064b5sotrr****'),
    }
  ](name='FeeOfInstance')
  }(name='FeeOfInstances', description='Details about the charges for the order.'),
  orderId?: string(name='OrderId', description='The order ID.', example='20413515388****'),
  requestId?: string(name='RequestId', description='The request ID.', example='B61C08E5-403A-46A2-96C1-F7B1216DB10C'),
}

model ModifyDedicatedHostsChargeTypeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDedicatedHostsChargeTypeResponseBody(name='body'),
}

async function modifyDedicatedHostsChargeType(request: ModifyDedicatedHostsChargeTypeRequest): ModifyDedicatedHostsChargeTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDedicatedHostsChargeType', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDemandRequest {
  amount?: int32(name='Amount', description='The number of instances. Valid values: 1 to 100000.', example='1', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can only contain ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E', position='Query'),
  demandDescription?: string(name='DemandDescription', description='The description of the demand. The description must be 2 to 256 characters in length. It cannot start with http:// or https://.', example='testDemandDescription', position='Query'),
  demandId: string(name='DemandId', description='The ID of the demand that you want to modify.', example='ed-bp11n21kq00sl71p****', position='Query'),
  demandName?: string(name='DemandName', description='The name of the demand. The name must be 2 to 128 characters in length. The name must start with a letter but cannot start with [http:// or https://](http://https://). It can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

The default value is the instance type name.', example='testDemandName', position='Query'),
  endTime?: string(name='EndTime', description='The end time of the subscription period. Specify the time in the [ISO 8601](~~25696~~)standard in the yyyy-MM-dd HH:mm:ss format. The time must be in UTC.

If the value of seconds (ss) is not 00, the time is automatically set to the beginning of the minute (mm).

The value of EndTime must be later than the value of StartTime.

in most cases, the interval between StartTime and EndTime cannot be more than 10 days.', example='2019-12-10 12:05:00', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription
*   PostPaid (default): pay-as-you-go', example='PrePaid', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. For more information, see [Instance families](~~25378~~). You can also call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of the specified instance type. To learn how to select instance types, see [Select instance types](~~58291~~).', example='ecs.c6.large', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The subscription period of the resource. Unit: month. You must specify this parameter. This parameter is valid only if you set `InstanceChargeType` to PrePaid. Valid values:

*   Valid values when PeriodUnit is set to Week: 1, 2, 3, and 4.
*   Valid values when PeriodUnit is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period of the resource. Valid values:

*   Day
*   Week
*   Month. This is the default value.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The start time of the subscription period. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-dd HH:mm:ss format. The time must be in UTC.

If the value of seconds (ss) is not 00, the time is automatically set to the beginning of the minute (mm).

The value of EndTime must be later than the value of StartTime.

In most cases, the interval between StartTime and EndTime cannot be more than 10 days.', example='2019-12-01 12:05:00', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the instance. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.

This parameter is empty by default. If you leave this parameter empty, the system randomly selects a zone.', example='cn-hangzhou-g', position='Query'),
}

model ModifyDemandResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyDemandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDemandResponseBody(name='body'),
}

/**
  * @deprecated
  * You can call this operation to modify the demand information of instance types. Alibaba Cloud provides the requested resources based on your demand. You can file demands only for I/O optimized instance types and instances of the virtual private cloud (VPC) type. Parameters except `DemandName` and `DemandDescription` can be modified only for demands that are in the Rejected state.
  * > This operation is in invitational preview and is not publicly available.
  *
 */
// Deprecated
async function modifyDemand(request: ModifyDemandRequest): ModifyDemandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDemand', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDeploymentSetAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  deploymentSetId: string(name='DeploymentSetId', description='The ID of the deployment set.', example='ds-bp1frxuzdg87zh4p****', position='Query'),
  deploymentSetName?: string(name='DeploymentSetName', description='The new name of the deployment set. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='DeploymentSetTestName', position='Query'),
  description?: string(name='Description', description='The new description of the deployment set. The description must be 2 to 256 characters in length and cannot start with http:// or https://.', example='TestDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='ECSforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the deployment set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='155780923770', position='Query'),
}

model ModifyDeploymentSetAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyDeploymentSetAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDeploymentSetAttributeResponseBody(name='body'),
}

async function modifyDeploymentSetAttribute(request: ModifyDeploymentSetAttributeRequest): ModifyDeploymentSetAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDeploymentSetAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDiagnosticMetricSetRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  description?: string(name='Description', description='The new description of the diagnostic metric set.', example='connection diagnostics', maxLength=255, position='Query'),
  metricIds?: [ string ](name='MetricIds', description='The ID of diagnostic metric N.', position='Query'),
  metricSetId: string(name='MetricSetId', description='The ID of the diagnostic metric set.', example='dms-uf6i0tv2refv8wz*****', position='Query'),
  metricSetName?: string(name='MetricSetName', description='The new name of the diagnostic metric set.', example='remoteConnectError', maxLength=128, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the diagnostic metric set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceType?: string(name='ResourceType', description='The type of the resource.', example='instance', position='Query'),
}

model ModifyDiagnosticMetricSetResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE*****'),
}

model ModifyDiagnosticMetricSetResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDiagnosticMetricSetResponseBody(name='body'),
}

async function modifyDiagnosticMetricSet(request: ModifyDiagnosticMetricSetRequest): ModifyDiagnosticMetricSetResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDiagnosticMetricSet', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDiskAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for data disk N. Valid values:

*   true: encrypts the disk.
*   false: does not encrypt the disk.', example='false', position='Query'),
  deleteAutoSnapshot?: boolean(name='DeleteAutoSnapshot', description='Specifies whether to delete the automatic snapshots of the disk when the disk is released. This parameter is empty by default, which indicates that the current value remains unchanged.', example='false', position='Query'),
  deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release the disk along with its associated instance. This parameter is empty by default, which indicates that the current value remains unchanged.

An error is returned if you set `DeleteWithInstance` to `false` in one of the following cases:

*   The disk is a local disk.
*   The disk is a basic disk and is not removable. If the Portable attribute of a disk is set to false, the disk is not removable.', example='false', position='Query'),
  description?: string(name='Description', description='The description of the disk. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.', example='TestDescription', position='Query'),
  diskId?: string(name='DiskId', description='The ID of the disk.

> You can specify the `DiskId` parameter or the `DiskIds.N` parameter, but you cannot specify both parameters at the same time.', example='d-bp1famypsnar20bv****', position='Query'),
  diskIds?: [ string ](name='DiskIds', description='The ID of disk N. Valid values of N: 0 to 100.

> You can specify the `DiskId` parameter or the `DiskIds.N` parameter, but you cannot specify both parameters at the same time.', example='d-bp1famypsnar20bv****', position='Query'),
  diskName?: string(name='DiskName', description='The name of the disk. The name must be 2 to 128 characters in length and can contain Unicode characters under the Decimal Number category and the categories whose names contain Letter. The name can also contain colons (:), underscores (\\_), periods (.), and hyphens (-).', example='MyDiskName', position='Query'),
  enableAutoSnapshot?: boolean(name='EnableAutoSnapshot', description='Specifies whether to enable the automatic snapshot policy feature for the cloud disk. Valid values:

*   true
*   false

This parameter is empty by default, which indicates that the current value remains unchanged.

>  By default, the automatic snapshot policy feature is enabled for cloud disks. You only need to associate an automatic snapshot policy with a cloud disk before you can use the policy.', example='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDiskAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyDiskAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDiskAttributeResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   When you call this operation to modify the attributes of a disk, if you set DeleteWithInstance to false and the instance to which the disk is attached is locked for security reasons, the DeleteWithInstance settings of the disk are ignored and the disk is released together with the instance. If `"LockReason" : "security"` is displayed in the response when you query the information about an instance, the instance is locked for security reasons.
  * *   You can use `DiskIds.N` to specify multiple block storage devices and batch modify the attributes of the devices, including the names and descriptions of the devices and whether to release the devices together with the associated instances.
  *
 */
async function modifyDiskAttribute(request: ModifyDiskAttributeRequest): ModifyDiskAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDiskAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDiskChargeTypeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to automatically complete the payment. Valid values:

*   true (default): The payment is automatically completed. Maintain sufficient balance in your account. Otherwise, your order becomes invalid and must be canceled.
*   false: An order is generated but no payment is made. If your account balance is insufficient, you can set AutoPay to false to generate an unpaid order. Then, you can go to the [Orders page](https://usercenter2-intl.aliyun.com/order/list) in the Expenses and Costs console and pay for the order.', example='true', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [Ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  diskChargeType?: string(name='DiskChargeType', description='The new billing method of the disk. Valid values:

*   PrePaid (default): changes the billing method from pay-as-you-go to subscription.
*   PostPaid: changes the billing method from subscription to pay-as-you-go.', example='PostPaid', position='Query'),
  diskIds: string(name='DiskIds', description='The IDs of disks. The value is a JSON array that consists of up to 16 disk IDs. Separate the disk IDs with commas (,).', example='[“d-bp67acfmxazb4ph****”, “d-bp67acfmxazb4pi****”, … “d-bp67acfmxazb4pj****”]', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance to which disks are attached.', example='i-bp1i778bq705cvx1****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDiskChargeTypeResponseBody = {
  orderId?: string(name='OrderId', description='The ID of the order.', example='1234567890'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyDiskChargeTypeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDiskChargeTypeResponseBody(name='body'),
}

/**
  * # [](#)Usage notes
  * After you change the billing method, the payment (if any) is automatically completed. Maintain sufficient balance in your account. Otherwise, your order becomes invalid and must be canceled. If your account balance is insufficient, you can set AutoPay to false to generate an unpaid order. Then, you can go to the [Orders page](https://usercenter2-intl.aliyun.com/order/list) in the Expenses and Costs console and pay for the order.
  * Take note of the following items:
  * *   Only pay-as-you-go disks can be attached to pay-as-you-go instances, and the billing methods of the disks cannot be changed.
  * *   The instance cannot be in the Stopped state due to expiration.
  * *   The price difference is refunded to the payment account that you used. Vouchers that have been redeemed are nonrefundable.
  * *   You cannot change the billing method again within 5 minutes of a successful change.
  *
 */
async function modifyDiskChargeType(request: ModifyDiskChargeTypeRequest): ModifyDiskChargeTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDiskChargeType', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDiskDeploymentRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskCategory?: string(name='DiskCategory', description='The new disk category. The parameter can be used only when you migrate a disk between dedicated block storage clusters. Only ESSDs can be created in dedicated block storage clusters. Set this parameter to cloud_essd.

This parameter is empty by default, which indicates that the disk category is not changed.', example='cloud_essd', position='Query'),
  diskId: string(name='DiskId', description='The ID of the disk.', example='d-bp131n0q38u3a4zi****', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and unavailable ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  performanceLevel?: string(name='PerformanceLevel', description='The new performance level of the ESSD. The parameter can be used only when you migrate data between dedicated block storage clusters. Valid values:

*   PL0: A single ESSD can deliver up to 10000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50000 random read/write IOPS.

This parameter is empty by default, which indicates that the performance level is not modified.', example='PL1', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster.

*   When you migrate a disk to a dedicated block storage cluster, the StorageClusterId parameter must be specified.
*   When you migrate a disk to a public block storage cluster, the StorageClusterId parameter must be left empty.

This parameter is empty by default, which indicates that the disk is migrated to a public block storage cluster.', example='dbsc-cn-c4d2uea****', position='Query'),
}

model ModifyDiskDeploymentResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='D69846D9-F17F-51C0-8AC6-B4B71777****'),
  taskId?: string(name='TaskId', description='The ID of the disk migration task.', example='t-bp67acfmxazb4p****'),
}

model ModifyDiskDeploymentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDiskDeploymentResponseBody(name='body'),
}

/**
  * ### [](#)Usage notes
  * >  The Dedicated Block Storage Cluster feature is available in the following regions: China (Hangzhou), China (Shanghai), China (Beijing), China (Zhangjiakou), China (Ulanqab), China (Shenzhen), China (Heyuan), Indonesia (Jakarta), Germany (Frankfurt), and China South 1 Finance.
  * Before you call the ModifyDiskDeployment operation, make sure that you fully understand the billing methods and prices of disks and dedicated block storage clusters. In addition, make sure that the dedicated block storage clusters are unexpired and your account has no overdue payments. For more information, see [Dedicated block storage cluster](~~208883~~) and [Block storage devices](~~179022~~).
  * Take note of the following items:
  * *   The disks and a dedicated block storage cluster to which you want to migrate the disk must be in the same zone.
  * *   You can migrate only pay-as-you-go disks. If you want to migrate subscription disks, change the disks to pay-as-you-go disks first. For more information, see [Change the billing method of a disk](~~145018~~).
  * *   The specifications of disks that you want to migrate to a destination block storage cluster must the same as the disk specifications that the destination dedicated block storage cluster supports. During migration, you can change the specifications of the disks to ensure specification consistency.
  * *   The disk must be in the **In Use** (In_Use) or **Available** (Available) state.
  * *   If the disk is attached to an Elastic Compute Service (ECS) instance, the instance must be in the **Running** (Running) or **Stopped** (Stopped) state. The ECS instance cannot be in the Expired state.
  * *   The performance level of an enhanced SSD (ESSD) is limited by the ESSD disk size. If you cannot upgrade the performance level of an ESSD, you can resize the ESSD. For more information, see [ResizeDisk](~~25522~~) and [ESSDs](~~122389~~).
  * *   An account can perform up to five disk migration tasks in the same region at the same time.
  * *   When a disk is being migrated, you cannot cancel the migration task, create snapshots for the disk, change the disk configurations, resize the disk, mount the disk, unmount the disk, or re-initialize the disk.
  * >  After you migrate a disk to a destination cluster by calling the ModifyDiskDeployment operation, the billing method, disk specifications, and capabilities of the destination cluster take effect immediately on the disk. Alibaba Cloud charges the disk based on the disk category and performance level. For more information, see [Dedicated block storage cluster](~~208883~~) and [Block storage devices](~~179022~~).
  *
 */
async function modifyDiskDeployment(request: ModifyDiskDeploymentRequest): ModifyDiskDeploymentResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDiskDeployment', 'POST', '/', 'json', false, 'json', request);
}

model ModifyDiskSpecRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskCategory?: string(name='DiskCategory', description='The new category of the disk. Valid values:

*   cloud_essd: enhanced SSD (ESSD)
*   cloud_auto: ESSD AutoPL disk
*   cloud_ssd: standard SSD
*   cloud_efficiency: ultra disk

This parameter is empty by default, which indicates that the disk category is not changed.

> 

*   The preceding values are listed in descending order of disk performance. Subscription disks cannot be downgraded.', example='cloud_essd', position='Query'),
  diskId: string(name='DiskId', description='The disk ID.', example='d-bp131n0q38u3a4zi****', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and insufficient ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  performanceControlOptions?: {
    IOPS?: int32(name='IOPS', description='The new IOPS rate of the disk. You can modify the IOPS rate of only disks in dedicated block storage clusters.

Valid values: 900 to maximum IOPS per disk (with an increment of 100).

For more information, see [Block storage performance](~~25382~~).', example='2000'),
    recover?: string(name='Recover', description='Specifies whether to reset the IOPS rate and throughput of the disk. This parameter takes effect only when the disk belongs to a dedicated block storage cluster.

After you specify this parameter, PerformanceControlOptions.IOPS and PerformanceControlOptions.Throughput do not take effect.

Set the value to All, which indicates that the IOPS rate and throughput of the disk are reset to the initial values.', example='All'),
    throughput?: int32(name='Throughput', description='The new throughput of the disk. You can modify the throughput of only disks in dedicated block storage clusters. Unit: MB/s.

Valid values: 60 to maximum throughput per disk.

For more information, see [Block storage performance](~~25382~~).', example='200'),
  }(name='PerformanceControlOptions', description='The disk performance specifications.', position='Query'),
  performanceLevel?: string(name='PerformanceLevel', description='The new performance level of the ESSD. Valid values:

*   PL0: An ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: An ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: An ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: An ESSD delivers up to 1,000,000 random read/write IOPS.

Default value: PL1.', example='PL2', position='Query'),
  provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}

>  This parameter is available only if the DiskCategory parameter is set to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~) and [Modify the performance configurations of an ESSD AutoPL disk](~~413275~~).', example='50000', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyDiskSpecResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.

>  This parameter is returned only when the category of a subscription disk or the performance level of a subscription ESSD is modified.', example='20413515388****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  taskId?: string(name='TaskId', description='The ID of the disk category change task.

>  If you only modify the performance level of an ESSD, this parameter is not returned.', example='t-bp67acfmxazb4p****'),
}

model ModifyDiskSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyDiskSpecResponseBody(name='body'),
}

/**
  * ## Usage notes
  * Take note of the following items:
  * *   To modify the performance level of an ESSD, take note of the following items:
  *     *   For a subscription ESSD, you can only upgrade its performance level.
  *     *   For a pay-as-you-go ESSD, you can upgrade or downgrade its performance level. However, you cannot downgrade the performance level to PL0.
  *     *   The ESSD must be in the **In Use** (In_Use) or **Unattached** (Available) state.
  *     *   If the ESSD is attached to an Elastic Compute Service (ECS) instance, the instance must be in the **Running** (Running) or **Stopped** (Stopped) state. The instance cannot be in the Expired state or stopped due to an overdue payment.
  *     *   If you cannot upgrade the performance level of the ESSD due to the capacity limit, resize the ESSD by calling the [ResizeDisk](~~25522~~) operation and then try again. For more information, see [ESSDs](~~122389~~).
  * *   For information about the limits on changing the category of a disk, see the "Limits" section of the [Change the category of a disk](~~161980~~) topic.
  * The new disk category or performance level takes effect immediately after this operation is performed. Alibaba Cloud calculates the bill based on the new disk category and performance level.
  *
 */
async function modifyDiskSpec(request: ModifyDiskSpecRequest): ModifyDiskSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyDiskSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifyEipAddressAttributeRequest {
  allocationId: string(name='AllocationId', position='Query'),
  bandwidth: string(name='Bandwidth', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyEipAddressAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyEipAddressAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyEipAddressAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyEipAddressAttribute(request: ModifyEipAddressAttributeRequest): ModifyEipAddressAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyEipAddressAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyElasticityAssuranceRequest {
  privatePoolOptions?: {
    id: string(name='Id', description='The ID of the elasticity assurance.', example='eap-bp67acfmxazb4****'),
    name?: string(name='Name', description='The name of the elasticity assurance. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='eapTestName'),
  }(name='PrivatePoolOptions', position='Query'),
  description?: string(name='Description', description='The description of the elasticity assurance. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the elasticity assurance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyElasticityAssuranceResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='8455DD10-84F8-43C9-8365-5F448EB169B6'),
}

model ModifyElasticityAssuranceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyElasticityAssuranceResponseBody(name='body'),
}

async function modifyElasticityAssurance(request: ModifyElasticityAssuranceRequest): ModifyElasticityAssuranceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyElasticityAssurance', 'POST', '/', 'json', false, 'json', request);
}

model ModifyForwardEntryRequest {
  externalIp?: string(name='ExternalIp', position='Query'),
  externalPort?: string(name='ExternalPort', position='Query'),
  forwardEntryId: string(name='ForwardEntryId', position='Query'),
  forwardTableId: string(name='ForwardTableId', position='Query'),
  internalIp?: string(name='InternalIp', position='Query'),
  internalPort?: string(name='InternalPort', position='Query'),
  ipProtocol?: string(name='IpProtocol', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyForwardEntryResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyForwardEntryResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyForwardEntryResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyForwardEntry(request: ModifyForwardEntryRequest): ModifyForwardEntryResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyForwardEntry', 'POST', '/', 'json', false, 'json', request);
}

model ModifyHaVipAttributeRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  haVipId: string(name='HaVipId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyHaVipAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyHaVipAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyHaVipAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyHaVipAttribute(request: ModifyHaVipAttributeRequest): ModifyHaVipAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyHaVipAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyHpcClusterAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The **ClientToken** value must contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotency](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the HPC cluster. The description must be 2 to 256 characters in length and cannot start with http:// or https://.

This parameter is empty by default.', example='testDescription', position='Query'),
  hpcClusterId: string(name='HpcClusterId', description='The ID of the HPC cluster.', example='hpc-b8bq705cvx1****', position='Query'),
  name?: string(name='Name', description='The name of the HPC cluster. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, underscores (\\_), and hyphens (-).

This parameter is empty by default.', example='testName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='EcsforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', example='1234567890', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the HPC cluster. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='EcsforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='1234567890', position='Query'),
}

model ModifyHpcClusterAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyHpcClusterAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyHpcClusterAttributeResponseBody(name='body'),
}

async function modifyHpcClusterAttribute(request: ModifyHpcClusterAttributeRequest): ModifyHpcClusterAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyHpcClusterAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyImageAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  bootMode?: string(name='BootMode', description='The new boot mode of the image. Valid values:

*   BIOS: Basic Input/Output System (BIOS)
*   UEFI: Unified Extensible Firmware Interface (UEFI)
*   UEFI-Preferred: BIOS and UEFI

>  Before you change the boot mode, we recommend that you obtain the boot modes supported by the image. If you specify an unsupported boot mode for the image, ECS instances that use the image cannot start as expected. If you do not know which boot modes are supported by the image, we recommend that you use the image check feature to perform a check. For information about the image check feature, see [Overview](~~439819~~).

>  For information about the UEFI-Preferred boot mode, see [Best practices for ECS instance boot modes](~~2244655~~).', example='BIOS', position='Query'),
  description?: string(name='Description', description='The new description of the custom image. The description must be 2 to 256 characters in length It cannot start with [http:// or https://.](http://https://。)

This parameter is empty by default, which specifies that the original description is retained.', example='testDescription', position='Query'),
  features?: {
    nvmeSupport?: string(name='NvmeSupport', description='Specifies whether to support the Non-Volatile Memory Express (NVMe) protocol. Valid values:

*   supported: The image supports NVMe. Instances created from this image also support NVMe.
*   unsupported: The image does not support NVMe. Instances created from this image do not support NVMe.', example='supported'),
  }(name='Features', description='The attributes of the custom image.', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. [It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).](http://https://。、（.）、（:）、（\\_）（-）。)

By default, this parameter is empty.', example='hangzhou-daily-update', position='Query'),
  imageId: string(name='ImageId', description='The ID of the custom image.', example='m-bp18ygjuqnwhechc****', position='Query'),
  imageName?: string(name='ImageName', description='The name of the custom image. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with acs: or aliyun. [It cannot contain http:// or https://. It can contain letters, digits, periods (.), colons (:), underscores (\\_), and hyphens (-).](http://https://。、（.）、（:）、（\\_）（-）。)

By default, this parameter is empty. In this case, the original name is retained.', example='testImageName', position='Query'),
  licenseType?: string(name='LicenseType', description='The type of the license that is used to activate the operating system after the image is imported. Set the value to BYOL.

BYOL: The license that comes with the source operating system is used. When you use the BYOL license, make sure that your license key is supported by Alibaba Cloud.', example='Auto', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  status?: string(name='Status', description='The new state of the custom image. Valid values:

*   Deprecated: puts the image into the Deprecated state. If the custom image is shared, you must unshare it before you can put it into the Deprecated state. Images in the Deprecated state cannot be shared or copied, but can be used to create instances or replace system disks.
*   Available: puts the image into the Available state. You can restore an image from the Deprecated state to the Available state.

> If you want to roll back a custom image in the image family to a previous version, you can put the latest available custom image into the Deprecated state. If no custom images are in the Available state within the image family, an image family cannot be used to create instances. Proceed with caution if only a single custom image is in the Available state within the image family.', example='Deprecated', position='Query'),
}

model ModifyImageAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyImageAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyImageAttributeResponseBody(name='body'),
}

async function modifyImageAttribute(request: ModifyImageAttributeRequest): ModifyImageAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyImageAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyImageShareGroupPermissionRequest {
  addGroup?: [ string ](name='AddGroup', position='Query'),
  removeGroup?: [ string ](name='RemoveGroup', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  imageId: string(name='ImageId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyImageShareGroupPermissionResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyImageShareGroupPermissionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyImageShareGroupPermissionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyImageShareGroupPermission(request: ModifyImageShareGroupPermissionRequest): ModifyImageShareGroupPermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyImageShareGroupPermission', 'POST', '/', 'json', false, 'json', request);
}

model ModifyImageSharePermissionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  addAccount?: [ string ](name='AddAccount', description='The ID of Alibaba Cloud account N to which you want to share the custom image. Valid values of N: 1 to 10. If you specify more than 10 Alibaba Cloud account IDs, the system processes only the first 10 account IDs. The excess account IDs are ignored.', example='1234567890', position='Query'),
  imageId: string(name='ImageId', description='The ID of the custom image.', example='m-bp18ygjuqnwhechc****', position='Query'),
  isPublic?: boolean(name='IsPublic', description='Specifies whether to publish or unpublish a community image. Valid values:

*   true: publishes the custom image as a community image.
*   false: unpublishes a community image. The unpublish operation takes effect only on community images.

Default value: false.', example='false', position='Query'),
  launchPermission?: string(name='LaunchPermission', description='> This parameter is in invitational preview and is not publicly available.', example='hide', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the custom image. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  removeAccount?: [ string ](name='RemoveAccount', description='The ID of Alibaba Cloud account N from which you want to unshare the custom image. Valid values of N: 1 to 10. If you specify more than 10 Alibaba Cloud account IDs, the system processes only the first 10 account IDs. The excess account IDs are ignored.', example='1234567890', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyImageSharePermissionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyImageSharePermissionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyImageSharePermissionResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   You can share only your own custom images to other Alibaba Cloud accounts.
  * *   You can share a custom image to up to 10 Alibaba Cloud accounts at a time. You can specify up to 10 Alibaba Cloud account IDs by using AddAccount.N or RemoveAccount.N. If you specify more than 10 account IDs, the system processes only the first 10 account IDs. The excess account IDs are ignored.
  * *   You can share a custom image to up to 50 Alibaba Cloud accounts.
  * *   If an Elastic Compute Service (ECS) instance was created ([RunInstances](~~63440~~)) from a shared image, you cannot re-initialize the instance ([ReInitDisk](~~25519~~)) after the image owner unshares or deletes the image ([DeleteImage](~~25537~~)).
  * When you publish or unpublish a community image, take note of the following items:
  * *   Alibaba Cloud provides only the platform on which community images can be published and managed. The owner of a community image is responsible for the quality and updates of the image. Make sure that you acknowledge and agree to the Community Image Agreement. Otherwise, you cannot publish community images. For more information, see [Publish a community image](~~208370~~).
  * *   You cannot publish encrypted images as community images.
  * *   Community images are publicly available. A community image is available to all Alibaba Cloud accounts in the region where the image resides.
  * *   You cannot share, export, or copy community images.
  * *   After you unpublish a community image, the image is no longer available to other Alibaba Cloud accounts. If an image is shared to other Alibaba Cloud accounts before it is unpublished, the image remains available to the accounts.
  *
 */
async function modifyImageSharePermission(request: ModifyImageSharePermissionRequest): ModifyImageSharePermissionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyImageSharePermission', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceAttachmentAttributesRequest {
  privatePoolOptions?: {
    id?: string(name='Id', description='The ID of the private pool. Set the value to the ID of the elasticity assurance or capacity reservation that generates the private pool.

*   This parameter is required when `PrivatePoolOptions.MatchCriteria` is set to `Target`.
*   This parameter must be empty when `PrivatePoolOptions.MatchCriteria` is set to `Open` or `None`.', example='eap-bp67acfmxazb4****'),
    matchCriteria: string(name='MatchCriteria', description='The match mode of the private pool. Valid values:

*   Open: open private pool. The system matches the instance with open private pools.
*   Target: specified private pool. You must set the `PrivatePoolOptions.Id` parameter to specify the ID of a private pool.
*   None: no private pool. The instance starts normally without using private pools.', example='Open'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance for which you want to modify the attributes of the private pool.', example='i-bp67acfmxazb4****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the private pool. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceAttachmentAttributesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceAttachmentAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceAttachmentAttributesResponseBody(name='body'),
}

/**
  * A private pool is generated after an elasticity assurance or a capacity reservation is created. The private pool is associated with information about the instances that are created by using the resources in the private pool. When you create ECS instances, you can configure the instances to use private pool resources, matching them to active elasticity assurances or capacity reservations.
  * *   This operation does not require you to restart the instances for the changes to take effect.
  * *   When you call the following operations on an instance, the system attempts to match the instance with active private pools. If the instance is configured to a specific private pool. the call may fail because the private pool is no longer active or does not have sufficient resources. If the call fails, call the ModifyInstanceAttachmentAttributes operation to change the match mode of the private pool to `Open`.
  *     *   StartInstance: starts an instance that is stopped in economical mode.
  *     *   ReActivateInstances
  *     *   ModifyInstanceChargeType
  *     *   ModifyPrepayInstanceSpec
  *     *   ReplaceSystemDisk
  *
 */
async function modifyInstanceAttachmentAttributes(request: ModifyInstanceAttachmentAttributesRequest): ModifyInstanceAttachmentAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceAttachmentAttributes', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceAttributeRequest {
  cpuOptions?: {
    topologyType?: string(name='TopologyType', description='The CPU topology type of the instance. Valid values:

*   `ContinuousCoreToHTMapping`: The Hyper-Threading (HT) technology allows continuous threads to run on the same core in the CPU topology of the instance.
*   `DiscreteCoreToHTMapping`: The HT technology allows discrete threads to run on the same core in the CPU topology of the instance.

By default, this parameter is left empty.

> 

*   This parameter is supported only by specific instance families. For information about the supported instance families, see [View and modify CPU topologies](~~2636059~~).

*   Before you specify this parameter, make sure that the instance is in the Stopped (`Stopped`) state.', example='DiscreteCoreToHTMapping'),
  }(name='CpuOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard
*   Unlimited

For more information about the performance modes of burstable instances, see [Overview](~~59977~~).', example='Standard', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', description='The release protection attribute of the instance. This parameter specifies whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance.

>  This parameter is applicable only to pay-as-you-go instances. The release protection attribute can protect instances against manual releases, but not against automatic releases.', example='false', position='Query'),
  description?: string(name='Description', description='The description of the instance. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='testInstanceDescription', position='Query'),
  enableJumboFrame?: boolean(name='EnableJumboFrame', description='Specifies whether to enable the Jumbo Frames feature for the instance. Valid values:

true

false

You can enable the Jumbo Frames feature only for specific instance types. For more information, see [MTUs](~~200512~~).', example='false', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the instance. Take note of the following items:

*   When you change the hostname of the instance, the instance cannot be in the Creating (`Pending`) or Starting (`Starting`) state. Otherwise, the new hostname and the configurations in `/etc/hosts` may not take effect. You can call the [DescribeInstances](~~25506~~) operation to query the status of the instance.
*   After you change the hostname, you must call the [RebootInstance](~~25502~~) operation for the new hostname to take effect.

The following limits apply to the hostnames of instances that run different operating systems:

*   For Windows Server, the hostname must be 2 to 15 characters in length and can contain letters, digits, and hyphens (-). The hostname cannot start or end with a hyphen (-), contain consecutive hyphens (-), or contain only digits.
*   For other operating systems such as Linux, the hostname must be 2 to 64 characters in length. You can use periods (.) to separate a hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-). The hostname cannot contain consecutive periods (.) or hyphens (-). The hostname cannot start or end with a period (.) or a hyphen (-).', example='testHostName', position='Query'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4ph****', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the instance. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testInstanceName', position='Query'),
  networkInterfaceQueueNumber?: int32(name='NetworkInterfaceQueueNumber', description='The number of queues supported by the primary ENI.', example='8', minimum=-1, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='The password of the instance. The password must be 8 to 30 characters in length and contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. The following special characters are supported:

    ( ) ` ~ ! @ # $ % ^ & * - _ + = | { } [ ] : ; \\" < > , . ? /

The password of a Windows instance cannot start with a forward slash (/).

>  For security reasons, we recommend that you use HTTPS to send requests if `Password` is specified.', example='Test123456', position='Query'),
  recyclable?: boolean(name='Recyclable', description='>  This parameter is in invitational preview and is not publicly available.', example='hide', position='Query'),
  remoteConnectionOptions?: {
    password?: string(name='Password', description='>  This parameter is in invitational preview and is not publicly available.', example='hide'),
    type?: string(name='Type', description='>  This parameter is in invitational preview and is not publicly available.', example='hide'),
  }(name='RemoteConnectionOptions', description='>  This parameter is in invitational preview and is not publicly available.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The IDs of replacement security groups.

*   All security group IDs must be unique.
*   The instance is moved from the current security groups to the replacement security groups. If you want the instance to remain in the current security groups, add the IDs of the current security groups to the list.
*   You can move the instance to security groups of a different type. However, the list cannot contain the IDs of both basic and advanced security groups.
*   The security groups and the instance must belong to the same VPC.
*   The valid values of N vary based on the maximum number of security groups to which the instance can belong. For more information, see the [Security group limits](~~25412#SecurityGroupQuota1~~) section in the "Limits" topic.
*   New security groups become valid for the instance after a short latency.', example='sg-bp15ed6xe1yxeycg7o****', position='Query'),
  userData?: string(name='UserData', description='The user data of the instance. The user data must be encoded in Base64.

The maximum size of the raw data before encoding is 32 KB. We recommend that you do not pass in confidential information such as passwords and private keys in plaintext. If you must pass in confidential information, we recommend that you encrypt and Base64-encode the information before you pass it in. Then, you can decode and decrypt the information in the same way within the instance.', example='ZWNobyBoZWxsbyBlY3Mh', position='Query'),
}

model ModifyInstanceAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceAttributeResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of the instance, the instance is locked for security reasons and no operations are allowed on the instance.
  * Take note of the following items:
  * *   If you change the hostname (`HostName`), restart the instance in the ECS console or by calling the [RebootInstance](~~25502~~) operation for the new hostname to take effect. For information about how to restart an instance in the ECS console, see [Restart an instance](~~25440~~). The new hostname may not take effect if you restart the instance from within the operating system.
  * *   If you reset the password (`Password`), take note of the following items:
  *     *   The instance cannot be in the **Starting** (`Starting`) state.
  *     *   After you reset the password, restart the instance in the ECS console or by calling the [RebootInstance](~~25502~~) operation for the new password to take effect. For information about how to restart an instance in the ECS console, see [Restart an instance](~~25440~~). The new password does not take effect if you restart the instance from within the operating system.
  * *   If you modify user data (`UserData`), take note of the following items: The instance must meet the limits for user data. For more information, see [Instance user data](~~49121~~).
  *     **
  *     **Note** After you restart the instance, the new user data is displayed but not run as scripts.
  * *   If you change the security groups (`SecurityGroupIds.N`), take note of the following items:
  *     *   You can move the instance to a security group of a different type. If you want to move the instance to a security group of a different type, you must familiarize yourself with the differences between the rule configurations of the two security group types to prevent impacts on the instance network.
  *     *   Security groups of instances in the classic network cannot be changed. For more information, see the description of `SecurityGroupIds.N`.
  * *   If you change the number of queues supported by the primary elastic network interface (ENI) (`NetworkInterfaceQueueNumber`), take note of the following items:
  *     *   The instance must be in the Stopped (`Stopped`) state.
  *     *   The value of this parameter cannot exceed the maximum number of queues allowed per ENI.
  *     *   The total number of queues for all ENIs on the instance cannot exceed the queue quota for the instance type. To query the maximum number of queues per ENI and the queue quota for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and view the values of the `MaximumQueueNumberPerEni` and `TotalEniQueueQuantity` response parameters.
  *     *   If you set this parameter to -1, the value is reset to the default value for the instance type. To query the default number of queues supported per primary ENI for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and view the value of the `PrimaryEniQueueNumber` response parameter.
  * *   If you enable or disable the Jumbo Frames feature (`EnableJumboFrame`), take note of the following items. For more information, see [MTUs](~~200512~~).
  *     *   The instance must be in the Running (`Running`) or Stopped (`Stopped`) state.
  *     *   The instance must reside in a virtual private cloud (VPC).
  *     *   After the Jumbo Frames feature is enabled, the MTU value of the instance is set to 8500. After the Jumbo Frames feature is disabled, the MTU value of the instance is set to 1500.
  *
 */
async function modifyInstanceAttribute(request: ModifyInstanceAttributeRequest): ModifyInstanceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceAutoReleaseTimeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The automatic release time of the instance. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.

*   If the value of seconds (`ss`) is not `00`, the time is automatically rounded to the nearest minute based on the value of minutes (`mm`).
*   The release time must be at least 30 minutes later than the current time.
*   The release time must be at most three years later than the current time.

If `AutoReleaseTime` is not configured, the automatic release feature is disabled, and the instance will not be automatically released.', example='2018-01-01T01:02:03Z', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp1env7nl3mijm2t****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceAutoReleaseTimeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceAutoReleaseTimeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceAutoReleaseTimeResponseBody(name='body'),
}

async function modifyInstanceAutoReleaseTime(request: ModifyInstanceAutoReleaseTimeRequest): ModifyInstanceAutoReleaseTimeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceAutoReleaseTime', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceAutoRenewAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the instance.

Default value: false.', example='true', position='Query'),
  duration?: int32(name='Duration', description='The auto-renewal period of the instance.

*   Valid values of `Duration` when `PeriodUnit` is set to `Year`: 1, 2, 3, 4, and 5.
*   Valid values of `Duration` when `PeriodUnit` is set to `Month`: 1, 2, 3, 6, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance. You can specify up to 100 subscription instance IDs. Separate the instance IDs with commas (,).', example='i-bp67acfmxazb4ph****,i-bp67acfmxazb4pi****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal period (`Duration`). Valid values:

*   Month (default)
*   Year', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  renewalStatus?: string(name='RenewalStatus', description='The auto-renewal status of the instance. Valid values:

*   AutoRenewal: Auto-renewal is enabled for the instance.
*   Normal: Auto-renewal is disabled for the instance.
*   NotRenewal: The instance is not renewed. The system no longer sends an expiration notification but sends only a renewal notification three days before the instance expires. You can change the value of this parameter from NotRenewal to `Normal` for an instance, and then manually renew the instance. Alternatively, you can set the RenewalStatus parameter to AutoRenewal.

> `RenewalStatus` takes precedence over `AutoRenew`. If you do not specify `RenewalStatus`, `AutoRenew` is used by default.', example='AutoRenewal', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceAutoRenewAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceAutoRenewAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceAutoRenewAttributeResponseBody(name='body'),
}

/**
  * Before you call this operation, make sure that you are familiar with the billing methods and pricing of Elastic Compute Service (ECS). For more information, see the [Elastic Compute Service](https://www.alibabacloud.com/product/ecs#pricing) product page.
  * *   The payment for auto-renewal of an instance is automatically deducted at 08:00:00 (UTC+8) nine days before the instance expires.
  * *   If the deduction fails, Alibaba Cloud attempts to deduct the payment every day until the payment is deducted or until the instance is locked after the nine-day period ends. Make sure that your account balance or credit balance is sufficient.
  *
 */
async function modifyInstanceAutoRenewAttribute(request: ModifyInstanceAutoRenewAttributeRequest): ModifyInstanceAutoRenewAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceAutoRenewAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceChargeTypeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to automatically complete the payment. Valid values:

*   true: The payment is automatically completed. Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and is canceled.
*   false: An order is generated but no payment is made.

Default value: true.

> If your account balance is insufficient, you can set AutoPay to false to generate an unpaid order. Then, you can log on to the ECS console to pay for the order.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run. Valid Values:

*   true: performs only a dry run. The system checks whether your AccessKey pair is valid, whether Resource Access Management (RAM) users are granted permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='false', position='Query'),
  includeDataDisks?: boolean(name='IncludeDataDisks', description='Specifies whether to change the billing method of all data disks attached to the instance from pay-as-you-go to subscription.

Default value: false.', example='false', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The new billing method. Valid values:

*   PrePaid
*   PostPaid

Default value: PrePaid.', example='PrePaid', position='Query'),
  instanceIds: string(name='InstanceIds', description='The instance IDs. The value can be a JSON array that consists of up to 20 instance IDs. Separate the instance IDs with commas (,).', example='["i-bp67acfmxazb4p****","i-bp67acfmxazb4d****"]', position='Query'),
  isDetailFee?: boolean(name='IsDetailFee', description='Specifies whether to return cost details of the order after the billing method is changed from subscription to pay-as-you-go.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The renewal duration of the subscription instance. If the instance is hosted on a dedicated host, the renewal duration of the instance cannot exceed the subscription duration of the dedicated host. Valid values:

Valid values when `PeriodUnit` is set to Month: `1, 2, 3, 4, 5, 6, 7, 8, 9, and 12`.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal duration specified by `Period`. Valid values:

Month

Default value: Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceChargeTypeResponseBody = {
  feeOfInstances?: {
    feeOfInstance?: [ 
    {
      currency?: string(name='Currency', description='The unit of currency for the bill.

Alibaba Cloud China site (aliyun.com): CNY.

Alibaba Cloud International site (alibabacloud.com): USD.', example='CNY'),
      fee?: string(name='Fee', description='The cost value.', example='0'),
      instanceId?: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4p****'),
    }
  ](name='FeeOfInstance')
  }(name='FeeOfInstances', description='Details about the charges for the order.'),
  orderId?: string(name='OrderId', description='The order ID.', example='20413515388****'),
  requestId?: string(name='RequestId', description='The request ID.', example='B61C08E5-403A-46A2-96C1-F7B1216DB10C'),
}

model ModifyInstanceChargeTypeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceChargeTypeResponseBody(name='body'),
}

/**
  * Before you call this operation, make sure that you are familiar with the billing methods and pricing of Elastic Compute Service (ECS). For more information, see the [Elastic Compute Service](https://www.alibabacloud.com/product/ecs#pricing) product page.
  * Take note of the following items:
  * *   The instances must be in the **Running** (`Running`) or **Stopped** (`Stopped`) state, and you cannot have overdue payments for them.
  * *   After you change the billing method, outstanding payments are automatically completed. Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and is canceled. If your account balance is insufficient, you can set `AutoPay` to `false` to generate an unpaid order. Then, you can log on to the [ECS console](https://ecs.console.aliyun.com/) to pay for the order.
  * *   **Change the billing method from subscription to pay-as-you-go**:
  *     *   Your ECS usage determines whether the billing method of an instance can be changed from subscription to pay-as-you-go.
  *     *   After you change the billing method of an instance from subscription to pay-as-you-go, the new billing method remains in effect for the remaining lifecycle of the instance. The price difference is refunded to the payment account that you used. Vouchers that have been redeemed are not refundable.
  *     *   **Refund rule**: You have a quota for the total refund amount each month, and unused balance of this quota is not carried forward into the next month. After you use up the refund quota of the current month, you can change the billing method only in the next month. The refund amount incurred when you change the billing method is calculated based on the following formula: **Number of vCPUs × (Number of remaining days × 24 ± Number of remaining or elapsed hours)**.
  * *   **Change the billing method from pay-as-you-go to subscription**:
  *     *   You can change the billing method of all data disks that are attached to an instance from pay-as-you-go to subscription.
  *     *   This operation cannot be called for a pay-as-you-go instance that has an automatic release time set.
  *
 */
async function modifyInstanceChargeType(request: ModifyInstanceChargeTypeRequest): ModifyInstanceChargeTypeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceChargeType', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceDeploymentRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  affinity?: string(name='Affinity', description='Specifies whether to associate the instance with a dedicated host. Valid values:

*   host: associates the instance with a dedicated host. When you start a stopped instance in economical mode, the instance remains on its original dedicated host.
*   default: does not associate the instance with a dedicated host. When you start a stopped instance in economical mode, the instance can be automatically deployed to another dedicated host in the automatic deployment resource pool if the resources of the original dedicated host are insufficient.

If you want to migrate the instance from a shared host to a dedicated host, use the default value. Default value: default.', example='host', position='Query'),
  dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster.', example='dc-bp67acfmxazb4ph****', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the destination dedicated host. You can call the [DescribeDedicatedHosts](~~134242~~) operation to query the most recent list of dedicated hosts.

When you migrate an instance from a shared host to a dedicated host or between dedicated hosts, take note of the following items:

*   To migrate the instance to a specific dedicated host, specify this parameter.
*   To migrate the instance to a system-selected dedicated host, leave this parameter empty and set `Tenancy` to host.

For information about the automatic deployment feature, see [Functions and features](~~118938~~).', example='dh-bp67acfmxazb4ph****', position='Query'),
  deploymentSetGroupNo?: int32(name='DeploymentSetGroupNo', description='The number of the deployment set group in which to deploy the instance in the destination deployment set. This parameter is valid only when the destination deployment set uses the high availability group strategy (AvailabilityGroup). Valid values: 1 to 7.

> If you call this operation to deploy an instance to a deployment set that uses the high availability group strategy (`AvailablilityGroup`) and leave this parameter empty, the system evenly distributes instances among the deployment set groups in the deployment set. If you call this operation to change the deployment set of an instance and specify the current deployment set of the instance as the destination deployment set, the system evenly distributes instances again among the deployment set groups in the deployment set.', example='3', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the destination deployment set.

This parameter is required when you add an instance to a deployment set or change the deployment set of an instance.

> You cannot change the deployment set when you modify dedicated host configurations, including the `Tenancy`, `Affinity`, and `DedicatedHostId` parameters.', example='ds-bp67acfmxazb4ph****', position='Query'),
  force?: boolean(name='Force', description='Specifies whether to forcefully change the host of the instance when the deployment set of the instance is changed. Valid values:

*   true: forcefully changes the host of the instance when the deployment set of the instance is changed. Hosts can be forcefully changed only for instances in the Running (Running) or Stopped (Stopped) state. The instances that are in the Stopped (Stopped) state do not include pay-as-you-go instances that are stopped in economical mode.

    **

    **Note** If the specified instance has local disks attached, the local disks are forcefully changed when the host of the instance is forcefully changed. This may cause data loss in the local disks. Proceed with caution.

*   false: does not forcefully change the host of the instance when the deployment set of the instance is changed. You can add the instance to a deployment set only when the instance remains on the current host. When the Force parameter is set to false, the deployment set may fail to be changed.

Default value: false.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4ph***', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type to which the instance is changed. You can call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent list of instance types.

You can change the instance type of an instance when you migrate the instance to a dedicated host. The new instance type must match the type of the specified dedicated host. For more information, see [Dedicated host types](~~68564~~).

*   If you specify this parameter, you must also specify `DedicatedHostId`.
*   You cannot change the instance type of an instance if you use the automatic deployment feature to migrate the instance.', example='ecs.c6.large', position='Query'),
  migrationType?: string(name='MigrationType', description='Specifies whether to stop the instance before it is migrated to the destination dedicated host. Valid values:

*   reboot: stops the instance before it is migrated.
*   live: migrates the instance without stopping it. If you set MigrationType to live, you must specify DedicatedHostId. In this case, you cannot change the instance type of the instance when the instance is migrated.

Default value: reboot.', example='live', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  removeFromDeploymentSet?: boolean(name='RemoveFromDeploymentSet', description='Specifies whether to remove the specified instance from the specified deployment set. Valid values:

*   true
*   false

Default value: false.

> If you set this parameter to true, you must specify InstanceId and DeploymentSetId and make sure that the specified instance belongs to the specified deployment set.', example='false', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tenancy?: string(name='Tenancy', description='Specifies whether to deploy the instance on a dedicated host. Set the value to host, which indicates that the instance is deployed on a dedicated host.', example='host', position='Query'),
}

model ModifyInstanceDeploymentResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='04F0F334-1335-436C-A1D7-6C044FE7****'),
}

model ModifyInstanceDeploymentResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceDeploymentResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   The instance must be in the **Stopped** (Stopped) state. The instance is automatically restarted after it is migrated.
  * *   The network type of the instance must be Virtual Private Cloud (VPC).
  * *   The instance and the destination dedicated host to which to migrate the instance must belong to the same account and reside in the same region and zone.
  * *   A pay-as-you-go instance can be migrated to a subscription dedicated host. A subscription instance can be migrated only between subscription dedicated hosts. The expiration date of the subscription instance cannot be later than that of the destination dedicated host.
  * *   You can migrate only pay-as-you-go instances from a shared host to a dedicated host. You cannot migrate subscription instances or preemptible instances from a shared host to a dedicated host.
  * *   You can redeploy an instance to a specific dedicated host cluster.
  *
 */
async function modifyInstanceDeployment(request: ModifyInstanceDeploymentRequest): ModifyInstanceDeploymentResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceDeployment', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceMaintenanceAttributesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  actionOnMaintenance?: string(name='ActionOnMaintenance', description='The maintenance action. Valid values:

*   Stop: stops the instance.
*   AutoRecover: automatically recovers the instance.
*   AutoRedeploy: redeploys the instance, which may damage the data disks attached to the instance.', example='AutoRecover', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The ID of instance N. Valid values of N: 1 to 100.', example='i-bp67acfmxazb4ph****', position='Query'),
  maintenanceWindow?: [ 
    {
      endTime?: string(name='EndTime', description='The end time of the maintenance window. The time must be on the hour. You must configure both StartTime and EndTime. The value of EndTime must be 1 to 23 hours later than the value of StartTime. Specify the time in the `HH:mm:ss` format. The time must be in UTC+8. Set the value of N to 1.', example='18:00:00'),
      startTime?: string(name='StartTime', description='The start time of the maintenance window. The time must be on the hour. You must configure both StartTime and EndTime. The value of EndTime must be 1 to 23 hours later than the value of StartTime. Specify the time in the `HH:mm:ss` format. The time must be in UTC+8. Set the value of N to 1.', example='02:00:00'),
    }
  ](name='MaintenanceWindow', description='The maintenance windows.', position='Query'),
  notifyOnMaintenance?: boolean(name='NotifyOnMaintenance', description='Specifies whether to send an event notification before maintenance. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceMaintenanceAttributesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceMaintenanceAttributesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceMaintenanceAttributesResponseBody(name='body'),
}

/**
  * This operation is used to modify the maintenance policy of an instance. The maintenance policy consists of the following maintenance attributes:
  * *   Maintenance window: the time period that you specify for maintenance.
  * *   Maintenance action: the action that you specify in response to instance shutdown.
  *
 */
async function modifyInstanceMaintenanceAttributes(request: ModifyInstanceMaintenanceAttributesRequest): ModifyInstanceMaintenanceAttributesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceMaintenanceAttributes', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceMetadataOptionsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  httpEndpoint: string(name='HttpEndpoint', description='Specifies whether to enable the access channel for instance metadata. Valid values:

*   enabled
*   disabled

Default value: enabled.

> For more information about instance metadata, see [Overview of ECS instance metadata](~~49122~~).', example='enabled', position='Query'),
  httpPutResponseHopLimit?: int32(name='HttpPutResponseHopLimit', description='> This parameter is in invitational preview and is not publicly available.', example='1', position='Query'),
  httpTokens?: string(name='HttpTokens', description='Specifies whether to forcefully use the security-enhanced mode (IMDSv2) to access instance metadata. Valid values:

*   optional: does not forcefully use the security-enhanced mode (IMDSv2).
*   required: forcefully uses the security-enhanced mode (IMDSv2). After you set this parameter to required, you cannot access instance metadata in normal mode.

Default value: optional.

> For more information about the modes of accessing instance metadata, see [Access mode of instance metadata](~~150575~~).', example='optional', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxaz****', position='Query'),
  instanceMetadataTags?: string(name='InstanceMetadataTags', description='> This parameter is in invitational preview and is not publicly available.', example='null', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceMetadataOptionsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceMetadataOptionsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceMetadataOptionsResponseBody(name='body'),
}

async function modifyInstanceMetadataOptions(request: ModifyInstanceMetadataOptionsRequest): ModifyInstanceMetadataOptionsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceMetadataOptions', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceNetworkSpecRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  allocatePublicIp?: boolean(name='AllocatePublicIp', description='Specifies whether to allocate a public IP address.

Default value: false.', example='false', position='Query'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to automatically complete the payment. Valid values:

*   true: After you modify the bandwidth configurations, the payment is automatically complete. Make sure that you have a sufficient balance in your account before you set AutoPay to true. If your account balance is insufficient, your order cannot be paid in the ECS console and becomes invalid. You must cancel the order.
*   false: After you modify the bandwidth configurations, an order is generated but the payment is not complete. If your account balance is insufficient, you can set AutoPay to false to generate an unpaid order. Then, you can log on to the [ECS console](https://ecs.console.aliyun.com) to pay for the order.

Default value: true.', example='true', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  endTime?: string(name='EndTime', description='The end time of the temporary bandwidth upgrade. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddThhZ format. The time must be in UTC and accurate to **hours** (hh).

> The interval between the end time and the start time of the temporary bandwidth upgrade must be greater than or equal to 3 hours.', example='2017-12-06T22Z', position='Query'),
  ISP?: string(name='ISP', description='> This parameter is in invitational preview and is not publicly available.', example='null', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance for which you want to modify bandwidth configurations.', example='i-bp67acfmxazb4****', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   If the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of this parameter range from 1 to 10, and the default value is 10.
*   If the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter range from 1 to the value of `InternetMaxBandwidthOut`, and the default value is the value of `InternetMaxBandwidthOut`.', example='10', minimum=1, maximum=200, position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.', example='10', position='Query'),
  networkChargeType?: string(name='NetworkChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth
*   PayByTraffic

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidth values are used as the upper limits of bandwidths instead of guaranteed values. In scenarios where demand outstrips resource supplies, these maximum bandwidths may be limited. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The start time of the temporary bandwidth upgrade. Specify the time in the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddThh:mmZ format. The time must be in UTC and accurate to **minutes** (mm).', example='2017-12-05T22:40Z', position='Query'),
}

model ModifyInstanceNetworkSpecResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.', example='123457890'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceNetworkSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceNetworkSpecResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   From November 27, 2020, the maximum bandwidth value available for you to create ECS instances or to change ECS instance configurations is subject to the throttling policy for your account. To increase the maximum bandwidth value, submit a ticket. The following throttling policies apply:
  *     *   Within a single region, the sum of actual peak bandwidths of all ECS instances that use the pay-by-traffic billing method for network usage cannot exceed 5 Gbit/s.
  *     *   Within a single region, the sum of actual peak bandwidths of all ECS instances that use the pay-by-bandwidth billing method for network usage cannot exceed 50 Gbit/s.
  * *   If you upgrade the outbound public bandwidth (InternetMaxBandwidthOut) of a subscription (PrePaid) instance from 0 Mbit/s when you modify the bandwidth configurations of the instance, a public IP address is automatically assigned to the instance.
  * *   If you upgrade the outbound public bandwidth (InternetMaxBandwidthOut) of a pay-as-you-go (PostPaid) instance from 0 Mbit/s when you modify the bandwidth configurations of the instance, no public IP address is assigned to the instance. You must set `AllocatePublicIp` to true or call the [AllocatePublicIpAddress](~~25544~~) operation to assign a public IP address to the instance.
  * *   An instance in the classic network must be in the Stopped state before you can upgrade its outbound public bandwidth (InternetMaxBandwidthOut) from 0 Mbit/s.
  * *   After the bandwidth is upgraded, AutoPay is set to true by default and the payment is automatically made. Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and must be canceled. If your account balance is insufficient, you can set AutoPay to false. In this case, when you call the ModifyInstanceNetworkSpec operation, an unpaid order is generated. Then, you can log on to the ECS console to pay for the order.
  * *   The price difference is refunded to the payment account that you used. Vouchers or coupons that have been redeemed cannot be returned.
  *
 */
async function modifyInstanceNetworkSpec(request: ModifyInstanceNetworkSpecRequest): ModifyInstanceNetworkSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceNetworkSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceSpecRequest {
  systemDisk?: {
    category?: string(name='Category', description='The new category of the system disk. Valid values:

*   cloud_efficiency: ultra disk
*   cloud_ssd: standard SSD

>  This parameter takes effect only when you upgrade a non-I/O optimized instance of [a retired instance type](~~55263~~) to an I/O optimized instance of [an instance type available for purchase](~~25378~~).', example='cloud_ssd'),
  }(name='SystemDisk', position='Query'),
  temporary?: {
    endTime?: string(name='EndTime', description='>  This parameter is in invitational preview and is not publicly available.', example='hide'),
    internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='>  This parameter is in invitational preview and is not publicly available.', example='0', minimum=1, maximum=100),
    startTime?: string(name='StartTime', description='>  This parameter is in invitational preview and is not publicly available.', example='hide'),
  }(name='Temporary', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  allowMigrateAcrossZone?: boolean(name='AllowMigrateAcrossZone', description='Specifies whether cross-cluster instance type upgrades are supported.

*   true
*   false

Default value: false.

When `AllowMigrateAcrossZone` is set to true and you upgrade the instance based on the returned information, take note of the following items:

Instance that resides in the classic network:

*   For [retired instance types](~~55263~~), when a non-I/O optimized instance is upgraded to an I/O optimized instance, the private IP address, disk device names, and software authorization codes of the instance change. For a Linux instance, basic disks (`cloud`) are identified as xvd\\* such as **xvda** and **xvdb**, and ultra disks (`cloud_efficiency`) and standard SSDs (`cloud_ssd`) are identified as vd\\* such as **vda** and **vdb**.
*   For [instance families available for purchase](~~25378~~), when the instance type of an instance is changed, the private IP address of the instance changes.

Instance that resides in a virtual private cloud (VPC): For [retired instance types](~~55263~~), when a non-I/O optimized instance is upgraded to an I/O optimized instance, the disk device names and software authorization codes of the instance change. For a Linux instance, basic disks (`cloud`) are identified as xvd\\* such as **xvda** and **xvdb**, and ultra disks (`cloud_efficiency`) and standard SSDs (`cloud_ssd`) are identified as vd\\* such as **vda** and **vdb**.', example='false', position='Query'),
  async?: boolean(name='Async', description='Specifies whether to submit an asynchronous request. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. **The token can contain only ASCII characters and cannot exceed 64 characters in length.** For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  disk?: [ 
    {
      category?: string(name='Category', example='null'),
      diskId?: string(name='DiskId', example='null'),
      performanceLevel?: string(name='PerformanceLevel', example='null'),
    }
  ](name='Disk', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and unavailable ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false (default): performs a dry run and performs the actual request.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4p****', position='Query'),
  instanceType?: string(name='InstanceType', description='The new instance type. For more information, see [Overview of instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the most recent instance type list.', example='ecs.g6.large', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid value of this parameter ranges from 1 to 10 and the default value is 10.
*   When the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter are 1 to the `InternetMaxBandwidthOut` value and the default value is the `InternetMaxBandwidthOut` value.

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidth values may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='10', minimum=1, maximum=200, position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidth values may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='10', position='Query'),
  modifyMode?: string(name='ModifyMode', description='>  This parameter is not publicly available.', example='null', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInstanceSpecResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceSpecResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * For information about how to use ECS SDK for Python to change resource configurations, see [Query available resources for configuration changes](~~109517~~).
  * Take note of the following items:
  * *   Make sure that you have no overdue payments in your account.
  * *   You can adjust the public bandwidth of an instance only when the instance is in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  * *   Before you change the instance type of a pay-as-you-go instance, call the [DescribeResourcesModification](~~66187~~) operation to query compatible instance types.
  * *   You can change the instance type of an instance only when the instance is in the **Stopped** (`Stopped`) state.
  * *   The instance type and the public bandwidth of an instance cannot be changed together.
  * *   Starting November 27, 2020, the maximum bandwidth value that is available for you to create ECS instances or change ECS instance configurations is subject to the throttling policy of your account. To increase the maximum bandwidth value, submit a ticket. The following throttling policies apply:
  *     *   In each region, the sum of actual maximum bandwidths of all ECS instances that use the pay-by-traffic billing method for network usage cannot exceed 5 Gbit/s.
  *     *   In each region, the sum of actual maximum bandwidths of all ECS instances that use the pay-by-bandwidth billing method for network usage cannot exceed 50 Gbit/s.
  *
 */
async function modifyInstanceSpec(request: ModifyInstanceSpecRequest): ModifyInstanceSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceVncPasswdRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4ph****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vncPassword: string(name='VncPassword', description='The new VNC password of the instance.', example='Ecs123', position='Query'),
}

model ModifyInstanceVncPasswdResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceVncPasswdResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceVncPasswdResponseBody(name='body'),
}

/**
  * *   The password must be six characters in length and can contain only uppercase letters, lowercase letters, and digits.
  * *   After you modify the VNC password of an instance, take note of the following items:
  *     *   If the instance is I/O optimized, the new password takes effect immediately.
  *     *   If the instance is not I/O optimized, you must [restart the instance](~~25440~~) by using the ECS console or by calling the [RebootInstance](~~25502~~) operation for the new password to take effect.
  *
 */
async function modifyInstanceVncPasswd(request: ModifyInstanceVncPasswdRequest): ModifyInstanceVncPasswdResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceVncPasswd', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInstanceVpcAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp1iudwa5b1tqag1****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The new private IP address of the instance.

> The value of `PrivateIpAddress` depends on the value of `VSwitchId`. The specified IP address must be within the CIDR block of the specified vSwitch.

By default, if this parameter is not specified, a private IP address is randomly assigned from the CIDR block of the specified vSwitch.', example='172.17.**.**', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId?: [ string ](name='SecurityGroupId', description='The ID of security group N to which the instance belongs after the VPC is changed. This parameter is required only when the `VpcId` parameter is specified.

*   The specified security groups must be of the same type.
*   You can specify one or more security groups. The valid values of N depend on the maximum number of security groups to which an instance can belong. For more information, see [Limits](~~25412~~).
*   The specified security groups must belong to the VPC specified by the `VpcId` parameter.', example='sg-o6w9l8bc8dgmkw87****', position='Query'),
  vSwitchId: string(name='VSwitchId', description='The ID of the vSwitch.

*   If this parameter is set to the ID of the current vSwitch, the vSwitch of the instance remains unchanged.
*   If this parameter is set to the ID of a different vSwitch and the `VpcId` parameter is not specified, the new vSwitch must belong to the same zone and VPC as the current vSwitch.
*   If the `VpcId` parameter is specified, the vSwitch specified by this parameter must belong to the specified VPC and the same zone as the current vSwitch.', example='vsw-bp1s5fnvk4gn3tw12****', position='Query'),
  vpcId?: string(name='VpcId', description='The ID of the new VPC.', example='vpc-bp1vwnn14rqpyiczj****', position='Query'),
}

model ModifyInstanceVpcAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyInstanceVpcAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInstanceVpcAttributeResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * The instance that you want to manage must be in the **Stopped** (`Stopped`) state.
  * *   When you call this operation to change the private IP address or vSwitch of an instance, take note of the following items:
  *     *   If the instance is a new instance, you must restart the instance before you call this operation.
  *     *   After the private IP address or vSwitch of the instance is changed, you must restart the instance before you can recall this operation.
  * *   When you call this operation to change the VPC of an instance, take note of the following items:
  *     *   **Instance:**
  *         *   The instance cannot be associated with Server Load Balancer (SLB) instances.
  *         *   The instance cannot be in the Locked, To Be Released, Expired, Expired and Being Recycled, or Overdue and Being Recycled state. For more information, see [Instance lifecycle](~~25380~~).
  *         *   The instance cannot be used in other Alibaba Cloud services. For example, the instance cannot be in the process of being migrated or having its VPC changed, or the databases deployed on the instance cannot be managed by Data Transmission Service (DTS).
  *     *   **Network:**
  *         *   The cut-through mode or the multi-elastic IP address (EIP)-to-elastic network interface (ENI) mode cannot be enabled for the instance.
  *         *   The instance cannot be associated with a high-availability virtual IP address (HAVIP).
  *         *   The vSwitch of the instance cannot be associated with a custom route table.
  *         *   Global Accelerator (GA) cannot be activated for the instance.
  *         *   The instance cannot have secondary ENIs.
  *         *   The instance cannot be assigned an IPv6 address.
  *         *   The primary ENI of the instance cannot be associated with multiple IP addresses.
  *         *   The new vSwitch that you specify must belong to the new VPC.
  *         *   The original and new vSwitches must reside in the same zone.
  *         *   If you assign a private IP address to the primary ENI of the instance, the private IP address must be an idle IP address within the CIDR block of the new vSwitch. If you do not assign a private IP address to the primary ENI of the instance, a private IP address is randomly assigned to the ENI. Make sure that sufficient IP addresses are available in the CIDR block of the new vSwitch.
  *         *   The Alibaba Cloud account that owns the new VPC cannot share the VPC with other accounts.
  *     *   **Security group (SecurityGroupId.N):**
  *         *   All security groups must be of the same type.
  *         *   The valid values of N vary based on the maximum number of security groups to which an instance can belong. For more information, see the "Security group limits" section in [Limits](~~25412~~).
  *         *   The security groups that you specify must belong to the new VPC.
  *         *   You can switch the instance to security groups of a different type. To ensure network connectivity, we recommend that you understand the differences in rule configurations of the two security group types before you switch an instance to security groups of a different type. For more information, see [Overview](~~25387~~).
  *
 */
async function modifyInstanceVpcAttribute(request: ModifyInstanceVpcAttributeRequest): ModifyInstanceVpcAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInstanceVpcAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyInvocationAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandContent?: string(name='CommandContent', description='The content of the command after modification. The command content can be plaintext or Base64-encoded. Take note of the following items:

*   You can specify whether to retain the command after the command is run when you created the command. If you specified to retain the command, the Base64-encoded command content cannot exceed 18 KB in size. If you specified not to retain the command, the Base64-encoded command content cannot exceed 24 KB in size.

*   If the command content is Base64-encoded, set `ContentEncoding` to Base64.

*   If you set `EnableParameter` to true, the custom parameter feature is enabled and you can configure custom parameters based on the following rules:

    *   You can define custom parameters in the `{{}}` format. Within `{{}}`, the spaces and line feeds before and after the parameter names are ignored.
    *   The number of custom parameters cannot exceed 20.
    *   A custom parameter name can contain letters, digits, underscores (\\_), and hyphens (-). The name is case-insensitive. The ACS:: prefix cannot be used to specify non-built-in environment parameters.
    *   Each custom parameter name cannot exceed 64 bytes in length.

*   You can specify built-in environment parameters as custom parameters. Then, when you run the command, these parameters are automatically specified by Cloud Assistant. You can specify the following built-in environment parameters:

    *   `{{ACS::RegionId}}`: the region ID.

    *   `{{ACS::AccountId}}`: the UID of the Alibaba Cloud account.

    *   `{{ACS::InstanceId}}`: the instance ID. If you want to specify `{{ACS::InstanceId}}` as a built-in environment variable, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::InstanceName}}`: the instance name. When the command is run on multiple instances, if you want to specify `{{ACS::InstanceName}}` as a built-in environment variable, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.344
        *   Windows: 2.1.3.344

    *   `{{ACS::InvokeId}}`: the ID of the task. If you want to specify `{{ACS::InvokeId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::CommandId}}`: the command ID. If you want to specify `{{ACS::CommandId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309', example='ZWNobyAxMjM=', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of the command content that is specified by `CommandContent`. Valid values (case-insensitive):

*   PlainText: The command content is not encoded.
*   Base64: The command content is encoded in Base64.

Default value: PlainText. If the value is invalid, the PlainText mode is used.', example='PlainText', position='Query'),
  enableParameter?: boolean(name='EnableParameter', description='Specifies whether to include custom parameters in the command.

*   If you want to enable the custom parameter feature, or configure `Parameters` to modify the custom parameters in the command, set EnableParameter to `true`.
*   If you do not want to configure `Parameters` to modify the custom parameters in the command, leave EnableParameter empty or set it to `false`.', example='false', position='Query'),
  frequency?: string(name='Frequency', description='The frequency at which to run the command. This parameter takes effect only when `RepeatMode` is set to `Period`. You can configure a command to run at a fixed interval based on a rate expression, run only once at a specific point in time, or run at designated points in time based on a cron expression.

*   To run the command at a fixed interval, use a rate expression to specify the interval. You can specify the interval in seconds, minutes, hours, or days. This option is suitable for scenarios in which tasks need to be executed at a fixed interval. Specify the interval in the following format: `rate(<Execution interval value> <Execution interval unit>)`. For example, specify `rate(5m)` to run the command every 5 minutes. Take note of the following limits when you specify an interval:

    *   The specified interval must be in the range of 60 seconds to 7 days and must be longer than the timeout period specified when you created the scheduled task.
    *   The interval is the amount of time that elapses between two consecutive executions. The interval is irrelevant to the amount of time that is required to run the command once. For example, you set the interval to 5 minutes and the command requires 2 minutes to run once. Each time the command running is complete, the system waits 3 minutes instead of 5 minutes before the system runs the command again.
    *   The point in time at which the command is run the next time is calculated based on the creation time of the task (the [CreationTime](~~64840~~) value returned by the `DescribeInvocations` operation) and the modified execution interval.

*   To run a command only once at a specific time, specify a point in time and a time zone. Specify the point in time in the `at(yyyy-MM-dd HH:mm:ss <Time zone>)` format, which indicates `at(Year-Month-Day Hours:Minutes:Seconds <Time zone>)`. If you do not specify a time zone, the Coordinated Universal Time (UTC) time zone is used by default. You can specify a time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported.

    For example, to configure a command to run only once at 13:15:30 on June 6, 2022 (Shanghai time), set the time to `at(2022-06-06 13:15:30 Asia/Shanghai)`. To configure a command to run only once at 13:15:30 on June 6, 2022 (UTC-7), set the time to `at(2022-06-06 13:15:30 GMT-7:00)`.

*   To run a command at designated points in time, use a cron expression to define the schedule. Specify a schedule in the `<Cron expression> <Time zone>` format. The cron expression is in the `<Seconds> <Minutes> <Hours> <Day of the month> <Month> <Day of the week> <Year (optional)>` format. The system calculates the execution times of the command based on the specified cron expression and time zone and runs the command as scheduled. If you do not specify a time zone, the system time zones of the instances on which you want to run the command are used by default. For information about cron expressions, see [Cron expressions](~~64769~~). You can specify the time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported. For example, to configure a command to run at 10:15:00 every day in 2022 (Shanghai time), set the schedule to `0 15 10 ? * * 2022 Asia/Shanghai`. To configure a command to run every half an hour from 10:00:00 to 11:30:00 every day in 2022 (UTC+8), set the schedule to `0 0/30 10-11 * * ? 2022 GMT+8:00`. To configure a command to run every 5 minutes from 14:00:00 to 14:55:00 every October every two years from 2022 in UTC, set the schedule to `0 0/5 14 * 10 ? 2022/2 UTC`.

    **

    **Note** The minimum interval must be 10 seconds or longer and cannot be shorter than the timeout period of scheduled executions.', example='0 */20 * * * *', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The IDs of the ECS instances or managed instances that you want to add to the scheduled command task.', position='Query'),
  invokeId: string(name='InvokeId', description='The execution ID of the command.', example='t-hz0jdfwd9f****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  parameters?: map[string]any(name='Parameters', description='The key-value pairs of the custom parameters that are passed in if custom parameters are included in the command.

You can specify 0 to 10 custom parameters. Take note of the following items:

*   The key of a custom parameter can be up to 64 characters in length and cannot be an empty string.
*   The value of a custom parameter can be an empty string.
*   If you specified to retain the command when you create the command task, the total size of the custom parameters and original command content that are encoded in Base64 cannot exceed 18 KB. If you specified not to retain the command when you create the command task, the total size of the custom parameters and original command content that are encoded in Base64 cannot exceed 24 KB.
*   The custom parameter names that are specified by Parameters must be included in the custom parameter names that you specified when you created the command. You can use empty strings to represent the parameters that are not passed in.

This parameter is empty by default, which indicates not to modify the key-value pairs of the custom parameters.', example='{"name":"Jack", "accessKey":"LTAIdyvdIqaRY****"}', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The region ID.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyInvocationAttributeResponseBody = {
  commandId?: string(name='CommandId', description='The command ID.

*   A new command is added and the `CommandId` value of the new command is returned only when `CommandContent` is changed.
*   No new command is added and the `CommandId` value of the command that is running is returned if `CommandContent` is not changed.
*   If you set `KeepCommand` to `true` when you called the [InvokeCommand](~~64841~~) or [RunCommand](~~141751~~) operation, a new command is added and retained. Otherwise, commands related to the task are deleted after all executions of the task are complete or the task is manually stopped.', example='c-hz01272yr52****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyInvocationAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyInvocationAttributeResponseBody(name='body'),
}

/**
  * *   You can modify the execution information of a task that runs a command in one of the following modes. To query the execution mode of a command, you can call the [DescribeInvocations](~~2679916~~) operation and check the `RepeatMode` value in the response.
  *     *   Period: The task runs the command on a schedule.
  *     *   NextRebootOnly: The task runs the command the next time the associated instances start.
  *     *   EveryReboot: The task runs the command every time the associated instances start.
  * *   You can modify the execution information of a command task in one of the following execution states. To query the execution status of a command, you can call the [DescribeInvocations](~~2679916~~) operation and check the `InvocationStatus` value.
  *     *   Pending: The command is being verified or sent. When the execution state on at least one instance is Pending, the overall execution state is Pending.
  *     *   Running: The command is being run on instances. When the execution state on at least one instance is Running, the overall execution state is Running.
  *     *   Scheduled: The command that is set to run on a schedule is sent and waiting to be run. When the execution state on at least one instance is Scheduled, the overall execution state is Scheduled.
  *     *   Stopping: The command task is being stopped. When the execution state on at least one instance is Stopping, the overall execution state is Stopping.
  * *   Before you modify the execution information of a scheduled task, such as the command content, custom parameters, and execution frequency, make sure that the version of Cloud Assistant Agent on the ECS instances or managed instances associated with the task is later than the following versions:
  *     *   Linux: 2.2.3.541
  *     *   Windows: 2.1.3.541
  *     *   If the `InvalidOperation.CloudAssistantVersionUnsupported` error code is returned in the response, update Cloud Assistant Agent to the latest version.
  * *   You cannot modify `CommandContent` for a common Cloud Assistant command.
  * *   If you modify the `CommandContent` value of a command and set `KeepCommand` to `true` when you call the [InvokeCommand](~~64841~~) or [RunCommand](~~141751~~) operation to run the command, a new command is added and retained. The new command consumes the quota for Cloud Assistant commands. You can retain up to 500 to 50,000 Cloud Assistant commands in each region. You can apply for a quota increase. For information about how to query and increase quotas, see [Manage quotas](~~184116~~).
  *
 */
async function modifyInvocationAttribute(request: ModifyInvocationAttributeRequest): ModifyInvocationAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyInvocationAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyLaunchTemplateDefaultVersionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  defaultVersionNumber: long(name='DefaultVersionNumber', description='The default version number of the instance launch template.', example='2', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. You must specify the LaunchTemplateId or LaunchTemplateName parameter to determine an instance launch template.', example='lt-s-bp177juajht6****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the instance launch template. You must specify the LaunchTemplateId or LaunchTemplateName parameter to determine an instance launch template.', example='testLaunchTemplateName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the launch template. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyLaunchTemplateDefaultVersionResponseBody = {
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, see [DescribeLaunchTemplates](~~73759~~). You must specify `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template.', example='lt-bp1apo0bbbkuy0rj****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyLaunchTemplateDefaultVersionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyLaunchTemplateDefaultVersionResponseBody(name='body'),
}

/**
  * ## Debugging
  * [OpenAPI Explorer automatically calculates the signature value. For your convenience, we recommend that you call this operation in OpenAPI Explorer. OpenAPI Explorer dynamically generates the sample code of the operation for different SDKs.](https://api.aliyun.com/#product=Ecs\\&api=ModifyLaunchTemplateDefaultVersion\\&type=RPC\\&version=2014-05-26)
  *
 */
async function modifyLaunchTemplateDefaultVersion(request: ModifyLaunchTemplateDefaultVersionRequest): ModifyLaunchTemplateDefaultVersionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyLaunchTemplateDefaultVersion', 'POST', '/', 'json', false, 'json', request);
}

model ModifyManagedInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The new name of the managed instance. The name must be 1 to 128 characters in length. It must start with a letter and cannot start with a special character or a digit. It can contain letters, digits, periods (.), underscores (\\_), hyphens (-), and colons (:) and cannot start with `http://` or `https://`.', example='mi-hz01nmcf****', position='Query'),
  instanceName: string(name='InstanceName', description='The request ID.', example='testInstanceName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the managed instance.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyManagedInstanceResponseBody = {
  instance?: {
    instanceId?: string(name='InstanceId', example='mi-hz01nmcf****'),
    instanceName?: string(name='InstanceName', description='The ID of the managed instance.', example='testInstanceName'),
  }(name='Instance', description='The name of the managed instance.'),
  requestId?: string(name='RequestId', description='Details of the managed instance.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyManagedInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyManagedInstanceResponseBody(name='body'),
}

/**
  * The region ID. The following regions are supported: China (Qingdao), China (Beijing), China (Zhangjiakou), China (Hohhot), China (Hangzhou), China (Shanghai), China (Shenzhen), China (Heyuan), and China (Hong Kong).
  * You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.
  *
 */
async function modifyManagedInstance(request: ModifyManagedInstanceRequest): ModifyManagedInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyManagedInstance', 'POST', '/', 'json', false, 'json', request);
}

model ModifyNetworkInterfaceAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  connectionTrackingConfiguration?: {
    tcpClosedAndTimeWaitTimeout?: int32(name='TcpClosedAndTimeWaitTimeout', description='This parameter is unavailable for public use.'),
    tcpEstablishedTimeout?: int32(name='TcpEstablishedTimeout', description='This parameter is unavailable for public use.'),
    udpTimeout?: int32(name='UdpTimeout', description='This parameter is unavailable for public use.'),
  }(name='ConnectionTrackingConfiguration', description='This parameter is unavailable for public use.', position='Query'),
  deleteOnRelease?: boolean(name='DeleteOnRelease', description='Specifies whether to release the ENI when the associated instance is released. Valid values:

*   true
*   false', example='true', position='Query'),
  description?: string(name='Description', description='The description of the ENI. The description must be 2 to 255 characters in length and cannot start with [http:// or https://](http://https://。).

This parameter is left empty by default.', example='testDescription', position='Query'),
  enhancedNetwork?: {
    enableSriov?: boolean(name='EnableSriov', description='This parameter is unavailable for public use.'),
  }(name='EnhancedNetwork', description='This parameter is unavailable for public use.', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp67acfmxazb4p****', position='Query'),
  networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of the ENI. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

This parameter is left empty by default.', example='eniTestName', position='Query'),
  networkInterfaceTrafficConfig?: {
    networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of the ENI. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.

When the ENI is in the InUse state, take note of the following items:

*   The total number of ERIs attached to the instance cannot exceed the ERI quota for the instance type. To query the ERI quota for an instance type, call the DescribeInstanceTypes operation and check the EriQuantity value in the response.

>  This parameter is in invitational preview and is not publicly available.', example='HighPerformance'),
    queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI. When the ENI is in the InUse state, take note of the following items:

*   The value of this parameter cannot exceed the maximum number of queues allowed per ENI for the instance type.
*   The total number of queues for all ENIs on the instance cannot exceed the queue quota for the instance type. To query the maximum number of queues per ENI and the queue quota for an instance type, call the DescribeInstanceTypes operation and check the MaximumQueueNumberPerEnig and TotalEniQueueQuantity values in the response.

>  This parameter is in invitational preview and is not publicly available.', example='8'),
    queuePairNumber?: int32(name='QueuePairNumber', description='The number of queues supported by the ERI. When the ERI is in the InUse state, take note of the following items:

*   The value of this parameter cannot exceed the maximum number of queues allowed per ERI for the instance type. To query the maximum number of queues allowed per ERI for an instance type, call the DescribeInstanceTypes operation and check the QueuePairNumber value in the response.

>  This parameter is in invitational preview and is not publicly available.', example='8'),
    rxQueueSize?: int32(name='RxQueueSize', description='The receive (Rx) queue depth of the ENI.

Take note of the following items:

*   The Rx queue depth of an ENI must be the same as the transmit (Tx) queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Rx queue depth yields higher inbound throughput but consumes more memory.

>  This parameter is in invitational preview and is not publicly available.', example='8192'),
    txQueueSize?: int32(name='TxQueueSize', description='The Tx queue depth of the ENI.

Take note of the following items:

*   The Tx queue depth of an ENI must be the same as the Rx queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Tx queue depth yields higher outbound throughput but consumes more memory.

>  This parameter is in invitational preview and is not publicly available.', example='8192'),
  }(name='NetworkInterfaceTrafficConfig', description='The communication parameters of the ENI.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  queueNumber?: int32(name='QueueNumber', description='The number of queues supported by the ENI. Valid values: 1 to 2048.

*   You can change only the number of queues supported by the secondary ENI.
*   You can change the number of queues supported by the secondary ENI only when the ENI is in the `Available` state or the ENI is attached (`InUse`) to an instance that is in the `Stopped` state.
*   The number of queues supported by the secondary ENI cannot exceed the maximum number of queues that the instance allows for each ENI. The total number of queues for all ENIs on the instance cannot exceed the queue quota that the instance allows. To query the maximum number of queues per ENI and the queue quota for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and check the values of `MaximumQueueNumberPerEni` and `TotalEniQueueQuantity` in the response.', example='8', minimum=-1, position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  rxQueueSize?: int32(name='RxQueueSize', description='The receive (Rx) queue depth of the ENI.

Take note of the following items:

*   The Rx queue depth of an ENI must be the same as the transmit (Tx) queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Rx queue depth yields higher inbound throughput but consumes more memory.', example='8192', position='Query'),
  securityGroupId?: [ string ](name='SecurityGroupId', description='The IDs of the security groups to which to add the secondary ENI. The secondary ENI is added to the specified security groups and are removed from its original security groups.

*   The valid value range of N varies based on the number of security groups to which an ENI can be added. For more information, see [Limits](~~25412#SecurityGroupQuota~~).
*   The new security groups take effect after a short delay.', position='Query'),
  txQueueSize?: int32(name='TxQueueSize', description='The Tx queue depth of the ENI.

Take note of the following items:

*   The Tx queue depth of an ENI must be the same as the Rx queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Tx queue depth yields higher outbound throughput but consumes more memory.', example='8192', position='Query'),
}

model ModifyNetworkInterfaceAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyNetworkInterfaceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyNetworkInterfaceAttributeResponseBody(name='body'),
}

async function modifyNetworkInterfaceAttribute(request: ModifyNetworkInterfaceAttributeRequest): ModifyNetworkInterfaceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyNetworkInterfaceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyPhysicalConnectionAttributeRequest {
  circuitCode?: string(name='CircuitCode', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  lineOperator?: string(name='LineOperator', position='Query'),
  name?: string(name='Name', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  peerLocation?: string(name='PeerLocation', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  portType?: string(name='PortType', position='Query'),
  redundantPhysicalConnectionId?: string(name='RedundantPhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  bandwidth?: int32(name='bandwidth', position='Query'),
}

model ModifyPhysicalConnectionAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyPhysicalConnectionAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyPhysicalConnectionAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyPhysicalConnectionAttribute(request: ModifyPhysicalConnectionAttributeRequest): ModifyPhysicalConnectionAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyPhysicalConnectionAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyPrefixListRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  addEntry?: [ 
    {
      cidr: string(name='Cidr', description='The CIDR block in entry N to be added to the prefix list. Valid values of N: 0 to 200.

Take note of the following items when you add the entries:

*   The total number of entries in the prefix list cannot exceed the maximum number of entries you specified for the prefix list. You can call the [DescribePrefixListAttributes](~~205872~~) operation to query the maximum number of entries that the prefix list can contain.
*   You cannot specify duplicate CIDR blocks.
*   The CIDR blocks cannot be the same as the `RemoveEntry.N.Cidr` values.', example='192.168.2.0/24'),
      description?: string(name='Description', description='The description in entry N. The description must be 2 to 32 characters in length and cannot start with `http://` or `https://`. Valid values of N: 0 to 200.', example='Description Sample 01'),
    }
  ](name='AddEntry', description='The entries to be added to the prefix list.', position='Query'),
  description?: string(name='Description', description='The description of the prefix list. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='This is description.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  prefixListId: string(name='PrefixListId', description='The ID of the prefix list.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  prefixListName?: string(name='PrefixListName', description='The name of the prefix list. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://`, `https://`, `com.aliyun`, or `com.alibabacloud`. The name can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).', example='PrefixListNameSample', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the prefix list. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-chengdu', position='Query'),
  removeEntry?: [ 
    {
      cidr: string(name='Cidr', description='The CIDR block in entry N to be deleted from the prefix list. Valid values of N: 0 to 200.

Take note of the following items when you delete the entries:

*   You cannot specify duplicate CIDR blocks.
*   The CIDR blocks cannot be the same as the `AddEntry.N.Cidr` values.', example='192.168.1.0/24'),
    }
  ](name='RemoveEntry', description='The entries to be deleted from the prefix list.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyPrefixListResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='38793DB8-A4B2-4AEC-BFD3-111234E9188D'),
}

model ModifyPrefixListResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyPrefixListResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The specified CIDR block must be valid. For example, 10.0.0.0/8 is a valid CIDR block while 10.0.0.1/8 is not. For more information, see the [What is CIDR?](~~40637#section-jua-0tj-q5m~~) section in the "Network FAQ" topic.
  * *   When you add or delete an entry, you cannot specify duplicate CIDR blocks. Examples:
  *     *   For IPv4 CIDR blocks, you cannot specify the 10.0.0.0/8 CIDR block in two entries. You cannot specify the 10.0.0.1/32 CIDR block in one entry and the 10.0.0.1 CIDR block in another entry. The two CIDR blocks are the same.
  *     *   For IPv6 CIDR blocks, you cannot specify the 2001:fd01:0:0:0:0:0:0/32 CIDR block in one entry and the 2001:fd01::/32 CIDR block in another entry. The two CIDR blocks are the same.
  * *   The CIDR block in an entry to be added cannot the same as that in an entry to be deleted. For example, when you add an entry in which the 10.0.0.0/8 CIDR block is specified, make sure that the 10.0.0.0/8 CIDR block is not specified in an entry to be deleted.
  * *   If you want to modify the description of an entry, you must specify the CIDR block (`AddEntry.N.Cidr`) and new description (`AddEntry.N.Description`) for the entry.
  *
 */
async function modifyPrefixList(request: ModifyPrefixListRequest): ModifyPrefixListResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyPrefixList', 'POST', '/', 'json', false, 'json', request);
}

model ModifyPrepayInstanceSpecRequest {
  systemDisk?: {
    category?: string(name='Category', description='The new category of the system disk. Valid values:

*   cloud_efficiency: utra disk
*   cloud_ssd: standard SSD

>  This parameter takes effect on an instance only when you change from a [retired instance type](~~55263~~) to an instance type in an [instance family available for purchase](~~25378~~) and upgrade the instance from a non-I/O optimized instance type to an I/O optimized instance type.', example='cloud_efficiency'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to enable automatic payment when you upgrade the instance type. Valid values:

*   true: enables automatic payment.

    **

    **Note** Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and must be canceled. If your account balance is insufficient, you can set `AutoPay` to `false` to generate an unpaid order. Then, you can log on to the ECS console to pay for the order.

*   false: disables automatic payment. An order is generated but no payment is made.

Default value: true.

When `OperatorType` is set to `downgrade`, `AutoPay` is ignored.', example='true', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that you want to use to ensure the idempotency of the request. You can use the client to generate the value, but make sure that the value is unique among different requests. This value allows only ASCII characters and is up to 64 characters in length. For more information, see [How do I ensure the idempotence of a request?](~~25693~~)', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  disk?: [ 
    {
      category?: string(name='Category', description='>  This parameter is not publicly available.', example='null'),
      diskId?: string(name='DiskId', description='>  This parameter is not publicly available.', example='null'),
      performanceLevel?: string(name='PerformanceLevel', description='>  This parameter is not publicly available.', example='null'),
    }
  ](name='Disk', description='>  This parameter is not publicly available.', position='Query'),
  endTime?: string(name='EndTime', description='The end time of the temporary change. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2018-01-01T12:05Z', position='Query'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4ph****', position='Query'),
  instanceType: string(name='InstanceType', description='The new instance type. For information about available instance types, see [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation.', example='ecs.g5.xlarge', position='Query'),
  migrateAcrossZone?: boolean(name='MigrateAcrossZone', description='Specifies whether cross-cluster instance type upgrades are supported. Valid values:

*   true
*   false

Default value: false.

When you set `MigrateAcrossZone` to `true` and you upgrade the instance type of an instance based on the returned information, take note of the following items:

Instance that resides in the classic network:

*   For [retired instance types](~~55263~~), when a non-I/O optimized instance is upgraded to an I/O optimized instance, the private IP address, disk device names, and software authorization codes of the instance change. For a Linux instance, basic disks (cloud) are identified as xvd\\* such as xvda and xvdb, and ultra disks (cloud_efficiency) and standard SSDs (cloud_ssd) are identified as vd\\* such as vda and vdb.
*   For [instance families available for purchase](~~25378~~), the private IP address of the instance changes.

Instance that resides in a virtual private cloud (VPC): For retired instance types, when a non-I/O optimized instance is upgraded to an I/O optimized instance, the disk device names and software authorization codes of the instance change. For a Linux instance, basic disks (cloud) are identified as xvd\\* such as xvda and xvdb, and ultra disks (cloud_efficiency) and standard SSDs (cloud_ssd) are identified as vd\\* such as vda and vdb.', example='false', position='Query'),
  modifyMode?: string(name='ModifyMode', description='>  This parameter is not publicly available.', example='null', position='Query'),
  operatorType?: string(name='OperatorType', description='The type of the change to the instance. Valid values:

>  This parameter is optional. The system can automatically determine whether the instance change is an upgrade or a downgrade. If you want to specify this parameter, refer to the following valid values of the parameter.

*   upgrade: upgrades the instance type. Make sure that the balance in your account is sufficient.
*   downgrade: downgrades the instance type. When the new instance type specified by the `InstanceType` parameter has lower specifications than the current instance type, set `OperatorType` to downgrade.

>  You can refer to the preceding usage notes on how to upgrade or downgrade the instance type.', example='upgrade', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  rebootTime?: string(name='RebootTime', description='The restart time of the instance. The time follows the [ISO 8601](~~25696~~) standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2018-01-01T12:05Z', position='Query'),
  rebootWhenFinished?: boolean(name='RebootWhenFinished', description='Specifies whether to restart the instance immediately after the instance type is changed. Valid values:

*   true: restart the instance immediately after the instance type is changed.
*   false: does not restart the instance immediately after the instance type is changed.

Default value: false.

>  If the instance is in the **Stopping** state, the instance status remains unchanged and no operations are performed after the instance type is change regardless of whether you set the `RebootWhenFinished` parameter to true.', example='false', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyPrepayInstanceSpecResponseBody = {
  orderId?: string(name='OrderId', description='The ID of the order.', example='1234567890'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyPrepayInstanceSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyPrepayInstanceSpecResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Before you call this operation, we recommend that you familiarize yourself with the billing methods, pricing schedule, and refund rules of [ECS](https://www.alibabacloud.com/product/ecs#pricing). For information about the refund rules, see [Rules for unsubscribing from resources](~~476339~~).
  * Before you change the instance type of a subscription instance, call the [DescribeResourcesModification](~~66187~~) operation to query the instance types to which you can change the instance. You can use ECS SDK for Python. For more information, see [Query available resources for configuration changes](~~109517~~).
  * Take note of the following items:
  * *   To change the instance type of an expired instance, you must first renew the instance.
  * *   When you downgrade the instance type of an instance, take note of the following items:
  *     *   The instance must be in the **Stopped** (`Stopped`) state.
  *     *   The price difference is refunded to the payment account you used. Vouchers that have been redeemed are not refundable.
  * *   The operation is asynchronous. Wait 5 to 10 seconds for the instance type change to complete. Then, restart the instance by calling the RebootInstance operation or by using the ECS console for the instance type change to take effect. If you restart only the operating system of the instance, the instance type change does not take effect.
  *     *   If the instance is in the **Stopped** state, you only need to start the instance. You do not need to restart the instance after it enters the Running state.
  *     *   If `RebootWhenFinished` is set to true for the instance, you do not need to restart the instance.
  *
 */
async function modifyPrepayInstanceSpec(request: ModifyPrepayInstanceSpecRequest): ModifyPrepayInstanceSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyPrepayInstanceSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifyReservedInstanceAttributeRequest {
  description?: string(name='Description', description='The error code.', example='ri-example', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the reserved instance.', example='cn-hangzhou', position='Query'),
  reservedInstanceId: string(name='ReservedInstanceId', description='The new name of the reserved instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='ecsri-uf61hdhue4kcorqsk****', position='Query'),
  reservedInstanceName?: string(name='ReservedInstanceName', description='The new description of the reserved instance. The description must be 2 to 256 characters in length. It cannot start with `http://` or `https://`.

This parameter is empty by default.', example='testReservedInstanceName', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyReservedInstanceAttributeResponseBody = {
  code?: string(name='Code', description='Modifies the attributes of a reserved instance, such as its name and description.', example='200'),
  httpStatusCode?: int32(name='HttpStatusCode', description='The ID of the request.', example='200'),
  message?: string(name='Message', description='The error message for this instance operation. The return value Success indicates that this operation is successful. For more information, see the "Error codes" section in this topic.', example='Success'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model ModifyReservedInstanceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyReservedInstanceAttributeResponseBody(name='body'),
}

async function modifyReservedInstanceAttribute(request: ModifyReservedInstanceAttributeRequest): ModifyReservedInstanceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyReservedInstanceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyReservedInstanceAutoRenewAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The auto-renewal cycle.

Valid values: 1 and 3.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the auto-renewal duration.

Valid values: Year and Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the reserved instances. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  renewalStatus?: string(name='RenewalStatus', description='Specifies whether to automatically renew the reserved instances. Valid values:

*   AutoRenewal: automatically renews the reserved instances.
*   Normal: manually renews the reserved instances.', example='AutoRenewal', position='Query'),
  reservedInstanceId?: [ string ](name='ReservedInstanceId', description='The IDs of the reserved instances.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyReservedInstanceAutoRenewAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='2A4EA075-CB5B-41B7-B0EB-70D339F6****'),
}

model ModifyReservedInstanceAutoRenewAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyReservedInstanceAutoRenewAttributeResponseBody(name='body'),
}

async function modifyReservedInstanceAutoRenewAttribute(request: ModifyReservedInstanceAutoRenewAttributeRequest): ModifyReservedInstanceAutoRenewAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyReservedInstanceAutoRenewAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyReservedInstancesRequest {
  configuration?: [ 
    {
      instanceAmount?: int32(name='InstanceAmount', description='The ID of the request.', example='1'),
      instanceType?: string(name='InstanceType', description='The number of pay-as-you-go instances of the same instance type that the reserved instance can match. The value of this parameter must be greater than or equal to 1. Valid values of N: 1 to 100.', example='ecs.c5.4xlarge'),
      reservedInstanceName?: string(name='ReservedInstanceName', description='The zone ID of reserved instance N. Valid values of N: 1 to 100.

This parameter is required when `Scope` is set to `Zone`.

You can call the [DescribeZones](~~25609~~) operation to query the most recent zone list.', example='testReservedInstanceName'),
      scope?: string(name='Scope', description='The instance type that reserved instance N can match. Valid values of N: 1 to 100.

> The supported instance types are regularly updated. For more information, see the "Attributes" section of [Overview](~~100370~~).', example='Zone'),
      zoneId?: string(name='ZoneId', description='The scope of reserved instance N. Valid values:

*   Region
*   Zone

Valid values of N: 1 to 100.

Default value: Region.', example='cn-hangzhou-i'),
    }
  ](name='Configuration', description='The configurations of reserved instance N.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The IDs of reserved instances. Valid values of N: 1 to 20.', example='cn-hangzhou', position='Query'),
  reservedInstanceId: [ string ](name='ReservedInstanceId', description='The IDs of reserved instances. Valid values of N: 1 to 20.', example='ReservedInstanceId.1="ecsri-bp1cx3****",ReservedInstanceId.2="ecsri-bp15xx2****"......', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ModifyReservedInstancesResponseBody = {
  requestId?: string(name='RequestId', description='Details about the reserved instance.', example='ED9E4A5F-FF4D-4C96-BE80-6B4227060DD7'),
  reservedInstanceIdSets?: {
    reservedInstanceId?: [ string ](name='ReservedInstanceId')
  }(name='ReservedInstanceIdSets', description='The ID of the reserved instance.'),
}

model ModifyReservedInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyReservedInstancesResponseBody(name='body'),
}

/**
  * The region ID of the reserved instance.
  * You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.
  *
 */
async function modifyReservedInstances(request: ModifyReservedInstancesRequest): ModifyReservedInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyReservedInstances', 'POST', '/', 'json', false, 'json', request);
}

model ModifyRouterInterfaceAttributeRequest {
  description?: string(name='Description', position='Query'),
  healthCheckSourceIp?: string(name='HealthCheckSourceIp', position='Query'),
  healthCheckTargetIp?: string(name='HealthCheckTargetIp', position='Query'),
  name?: string(name='Name', position='Query'),
  oppositeInterfaceId?: string(name='OppositeInterfaceId', position='Query'),
  oppositeInterfaceOwnerId?: long(name='OppositeInterfaceOwnerId', position='Query'),
  oppositeRouterId?: string(name='OppositeRouterId', position='Query'),
  oppositeRouterType?: string(name='OppositeRouterType', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
}

model ModifyRouterInterfaceAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyRouterInterfaceAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyRouterInterfaceAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyRouterInterfaceAttribute(request: ModifyRouterInterfaceAttributeRequest): ModifyRouterInterfaceAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyRouterInterfaceAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyRouterInterfaceSpecRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  routerInterfaceId: string(name='RouterInterfaceId', position='Query'),
  spec: string(name='Spec', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model ModifyRouterInterfaceSpecResponseBody = {
  requestId?: string(name='RequestId'),
  spec?: string(name='Spec'),
}

model ModifyRouterInterfaceSpecResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyRouterInterfaceSpecResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyRouterInterfaceSpec(request: ModifyRouterInterfaceSpecRequest): ModifyRouterInterfaceSpecResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyRouterInterfaceSpec', 'POST', '/', 'json', false, 'json', request);
}

model ModifySecurityGroupAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', example='hide', position='Host'),
  description?: string(name='Description', description='The new description of the security group. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.

By default, this parameter is left empty.', example='TestDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='ECSforCloud@Alibaba.com', position='Query'),
  ownerId?: long(name='OwnerId', description='RAM用户的虚拟账号ID。', example='155780923770', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', description='资源主账号的账号名称。', example='ECSforCloud', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', description='资源主账号的ID，亦即UID。', example='155780923770', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The security group ID.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupName?: string(name='SecurityGroupName', description='The new name of the security group. The name must be 2 to 128 characters in length. The name must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

By default, this parameter is left empty.', example='SecurityGroupTestName', position='Query'),
}

model ModifySecurityGroupAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifySecurityGroupAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySecurityGroupAttributeResponseBody(name='body'),
}

async function modifySecurityGroupAttribute(request: ModifySecurityGroupAttributeRequest): ModifySecurityGroupAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySecurityGroupAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifySecurityGroupEgressRuleRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.**** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the security group rule. The description must be 1 to 512 characters in length.', example='This is a new securitygroup rule.', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block. IPv4 CIDR blocks and IPv4 addresses are supported.

By default, this parameter is left empty.', example='10.0.0.0/8', position='Query'),
  destGroupId?: string(name='DestGroupId', description='The ID of the destination security group. You must specify at least one of `DestGroupId` and `DestCidrIp`.

*   At least one of DestGroupId, DestCidrIp, Ipv6DestCidrIp, and DestPrefixListId must be specified.
*   If DestGroupId is specified but DestCidrIp is not specified, the NicType parameter can be set only to intranet.
*   If both DestGroupId and DestCidrIp are specified, DestCidrIp takes precedence.', example='sg-bp67acfmxa123b****', position='Query'),
  destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='The Alibaba Cloud account that manages the destination security group when you set security group rule N across accounts.', example='EcsforCloud@Alibaba.com', position='Query'),
  destGroupOwnerId?: long(name='DestGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the destination security group when you set security group rule N across accounts.', example='1234567890', position='Query'),
  destPrefixListId?: string(name='DestPrefixListId', description='The ID of the destination prefix list. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

If you specify `DestCidrIp`, `Ipv6DestCidrIp`, or `DestGroupId`, this parameter is ignored.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of the security group rule. The value of this parameter is case-insensitive. Valid values:

*   ICMP
*   GRE
*   TCP
*   UDP
*   ALL: All protocols are supported.', example='tcp', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block. IPv6 CIDR blocks and IPv6 addresses are supported.

>  Only the IP addresses of instances in virtual private clouds (VPCs) are supported. You cannot specify both Ipv6DestCidrIp and `DestCidrIp`.

By default, this parameter is left empty.', example='2001:db8:1233:1a00::***', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block. IPv6 CIDR blocks and IPv6 addresses are supported.

>  Only the IP addresses of instances in VPCs are supported. You cannot specify both Ipv6SourceCidrIp and `SourceCidrIp`.

By default, this parameter is left empty.', example='2001:db8:1234:1a00::***', position='Query'),
  nicType?: string(name='NicType', description='You cannot modify this parameter when you modify a security group rule by specifying its ID.\\
You can add a new rule that meets your business requirements and delete the original rule.', example='intranet', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  policy?: string(name='Policy', description='The action of the security group rule. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses.

Default value: accept.', example='accept', position='Query'),
  portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.', example='80/80', position='Query'),
  priority?: string(name='Priority', description='The priority of the security group rule. Valid values: 1 to 100.

Default value: 1.', example='1', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupRuleId?: string(name='SecurityGroupRuleId', description='The ID of the security group rule.\\
This parameter is required when you modify a security group rule based on the security group rule ID.', example='sgr-bp67acfmxazb4q****', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block. IPv4 CIDR blocks and IPv4 addresses are supported.

By default, this parameter is left empty.', example='10.0.0.0/8', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.', example='80/80', position='Query'),
}

model ModifySecurityGroupEgressRuleResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifySecurityGroupEgressRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySecurityGroupEgressRuleResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * In security group-related API documents, inbound traffic refers to the traffic that is sent by the source device and received at the destination device.
  * Take note of the following items:
  * *   An authorization object in a security group rule can be of one of the following types: IP address or CIDR block, security group, or prefix list. You cannot call this operation to change the type of an existing authorization object. For example, if an authorization object is an IP address, you can change the authorization object to another IP address or a CIDR block, but you cannot change the authorization object to a security group or prefix list.
  * *   You cannot change the IP address family of an existing authorization object. For example, if an authorization object is an IPv4 CIDR block, you cannot change the authorization object to an IPv6 CIDR block. If an authorization object is a prefix list of the IPv4 address family, you cannot change the authorization object to a prefix list of the IPv6 address family.
  * *   The modified security group rule cannot be the same as other existing rules.
  * *   You cannot delete the value of a non-empty parameter. If you want to delete the values of non-empty parameters, we recommend that you create another rule and delete the original rule.
  *
 */
async function modifySecurityGroupEgressRule(request: ModifySecurityGroupEgressRuleRequest): ModifySecurityGroupEgressRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySecurityGroupEgressRule', 'POST', '/', 'json', false, 'json', request);
}

model ModifySecurityGroupPolicyRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  innerAccessPolicy: string(name='InnerAccessPolicy', description='The internal access policy of the security group. Valid values:

*   Accept: All instances in the security group can communicate with each other.
*   Drop: All instances in the security group are isolated from each other.

The value of this parameter is not case-sensitive.', example='Drop', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4ph****', position='Query'),
}

model ModifySecurityGroupPolicyResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='CEF72CEB-54B6-4AE8-B225-F876FF7BA984'),
}

model ModifySecurityGroupPolicyResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySecurityGroupPolicyResponseBody(name='body'),
}

/**
  * Take note of the following items:
  * *   When InnerAccessPolicy is set to Accept for a security group, the instances in the security group can communicate with each other. In this case, the Accept internal access control policy takes precedence over user-created security group rules to keep instances in the security group accessible to each other.
  * *   When InnerAccessPolicy is set to Drop for a security group, the instances in the security group are isolated from each other. In this case, user-created security group rules take precedence over the Drop internal access control policy and can be used to allow access between the instances. For example, you can call the [AuthorizeSecurityGroup](~~25554~~) operation to create an inbound security group rule that allows the instances in the security group to communicate with each other.
  * *   You can call the [DescribeSecurityGroupAttribute](~~25555~~) operation to query the internal access policy of a security group.
  *
 */
async function modifySecurityGroupPolicy(request: ModifySecurityGroupPolicyRequest): ModifySecurityGroupPolicyResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySecurityGroupPolicy', 'POST', '/', 'json', false, 'json', request);
}

model ModifySecurityGroupRuleRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the security group rule. The description must be 1 to 512 characters in length.', example='This is a new security group rule.', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block. IPv4 CIDR blocks and IPv4 addresses are supported.

By default, this parameter is left empty.', example='10.0.0.0/8', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of the security group rule. The value of this parameter is case-insensitive. Valid values:

*   ICMP
*   GRE
*   TCP
*   UDP
*   ALL: All protocols are supported.', example='all', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block. IPv6 CIDR blocks and IPv6 addresses are supported.

>  Only the IP addresses of instances in VPCs are supported. You cannot specify both Ipv6DestCidrIp and `DestCidrIp`.

By default, this parameter is left empty.', example='2001:db8:1234:1a00::***', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block. IPv6 CIDR blocks and IPv6 addresses are supported.

>  Only the IP addresses of instances in virtual private clouds (VPCs) are supported. You cannot specify both Ipv6SourceCidrIp and `SourceCidrIp`.

By default, this parameter is left empty.', example='2001:db8:1233:1a00::***', position='Query'),
  nicType?: string(name='NicType', description='You cannot modify this parameter when you modify a security group rule by specifying its ID.\\
You can add a new rule that meets your business requirements and delete the original rule.', example='intranet', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  policy?: string(name='Policy', description='The action of the security group rule. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses.

Default value: accept.', example='accept', position='Query'),
  portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.', example='80/80', position='Query'),
  priority?: string(name='Priority', description='The priority of the security group rule. Valid values: 1 to 100.

Default value: 1', example='1', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The security group ID.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupRuleId?: string(name='SecurityGroupRuleId', description='The security group rule ID.\\
This parameter is required when you modify a security group rule based on the security group rule ID.', example='sgr-bp67acfmxa123b***', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block. IPv4 CIDR blocks and IPv4 addresses are supported.

By default, this parameter is left empty.', example='10.0.0.0/8', position='Query'),
  sourceGroupId?: string(name='SourceGroupId', description='The source security group ID. You must specify either `SourceGroupId` or `SourceCidrIp` or specify both of them.

*   If `SourceGroupId` is specified but `SourceCidrIp` is not specified, the value of `NicType` must be set to intranet.
*   If both `SourceGroupId` and `SourceCidrIp` are specified, the value of `SourceCidrIp` prevails by default.', example='sg-bp67acfmxa123b****', position='Query'),
  sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='The Alibaba Cloud account that manages the source security group when you configure a security group rule across accounts.

*   If both `SourceGroupOwnerId` and `SourceGroupOwnerAccount` are empty, access permissions are configured for another security group managed by your account.
*   If `SourceCidrIp` is specified, `SourceGroupOwnerAccount` is ignored.', example='EcsforCloud@Alibaba.com', position='Query'),
  sourceGroupOwnerId?: long(name='SourceGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the source security group when you configure a security group rule across accounts.

*   If both `SourceGroupOwnerId` and `SourceGroupOwnerAccount` are empty, access permissions are configured for another security group managed by your account.
*   If `SourceCidrIp` is specified, `SourceGroupOwnerId` is ignored.', example='12345678910', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Separate the start port number and the end port number with a forward slash (/). Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.', example='80/80', position='Query'),
  sourcePrefixListId?: string(name='SourcePrefixListId', description='The ID of the source prefix list to which you want to control access. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

If you specify `SourceCidrIp`, `Ipv6SourceCidrIp`, or `SourceGroupId`, this parameter is ignored.', example='pl-x1j1k5ykzqlixdcy****', position='Query'),
}

model ModifySecurityGroupRuleResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifySecurityGroupRuleResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySecurityGroupRuleResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * In security group-related API documents, inbound traffic refers to the traffic that is sent by the source device and received at the destination device.
  * Take note of the following items:
  * *   An authorization object in a security group rule can be one of the following types: IP address or CIDR block, security group, or prefix list. You cannot call this operation to change the type of an existing authorization object. For example, if an authorization object is an IP address, you can change the authorization object to another IP address or a CIDR block, but you cannot change the authorization object to a security group or prefix list.
  * *   You cannot change the IP address family of an existing authorization object. For example, if an authorization object is an IPv4 CIDR block, you cannot change the authorization object to an IPv6 CIDR block. If an authorization object is a prefix list of the IPv4 address family, you cannot change the authorization object to a prefix list of the IPv6 address family.
  * *   The new security group rule after modification cannot be the same as other existing rules.
  * *   You cannot delete the value of a non-empty parameter. If you want to delete the values of non-empty parameters, we recommend that you create another rule and delete the original rule.
  *
 */
async function modifySecurityGroupRule(request: ModifySecurityGroupRuleRequest): ModifySecurityGroupRuleResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySecurityGroupRule', 'POST', '/', 'json', false, 'json', request);
}

model ModifySnapshotAttributeRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  description?: string(name='Description', description='The description of the snapshot. The description must be 2 to 256 characters in length and cannot start with [http:// or https://](http://https://。).', example='testDescription', position='Query'),
  disableInstantAccess?: boolean(name='DisableInstantAccess', description='Specifies whether to disable the instant access feature. Valid values:

*   true
*   false

Default value: false.

>  This parameter is no longer used. By default, new normal snapshots of ESSDs are upgraded to instant access snapshots free of charge without the need for additional configurations. For more information, see [Use the instant access feature](~~193667~~).', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  retentionDays?: int32(name='RetentionDays', description='The retention period of the snapshot. After you specify this parameter, the end time of the new retention period is the specified number of days apart from the **creation time** of the snapshot, which follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format and is displayed in UTC. Valid values: 1 to 65536.

>  You can extend the retention period of the snapshot and cannot shorten the retention period.', example='10', position='Query'),
  snapshotId: string(name='SnapshotId', description='The ID of the snapshot.', example='s-bp199lyny9bb47pa****', position='Query'),
  snapshotName?: string(name='SnapshotName', description='The name of the snapshot. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).

The name cannot start with auto because snapshots whose names start with auto are recognized as automatic snapshots.', example='testSnapshotName', position='Query'),
}

model ModifySnapshotAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifySnapshotAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySnapshotAttributeResponseBody(name='body'),
}

async function modifySnapshotAttribute(request: ModifySnapshotAttributeRequest): ModifySnapshotAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySnapshotAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifySnapshotGroupRequest {
  description?: string(name='Description', description='The new name of the snapshot-consistent group. The name must be 2 to 128 characters in length. It can contain letters, digits, periods (.), underscores (\\_), hyphens (-), and colons (:). It must start with a letter or a digit and cannot start with `http://` or `https://`.', example='This is new description', position='Query'),
  name?: string(name='Name', description='The ID of the snapshot-consistent group. You can call the [DescribeSnapshotGroups](~~210940~~) operation to query the IDs of one or more snapshot-consistent groups.', example='testName02', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The operation that you want to perform. Set the value to **ModifySnapshotGroup**.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotGroupId: string(name='SnapshotGroupId', description='The region ID of the snapshot-consistent group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='ssg-j6ciyh3k52qp7ovm****', position='Query'),
}

model ModifySnapshotGroupResponseBody = {
  requestId?: string(name='RequestId', description='The new description of the snapshot-consistent group. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='A00B5E55-76B7-42C8-8A80-AF10E980DCC7'),
}

model ModifySnapshotGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifySnapshotGroupResponseBody(name='body'),
}

async function modifySnapshotGroup(request: ModifySnapshotGroupRequest): ModifySnapshotGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifySnapshotGroup', 'POST', '/', 'json', false, 'json', request);
}

model ModifyStorageCapacityUnitAttributeRequest {
  description?: string(name='Description', description='The new description of the SCU. The description must be 2 to 256 characters in length and cannot start with [http:// or https://.](http://https://。)', example='testNewScuDescription', position='Query'),
  name?: string(name='Name', description='The new name of the SCU. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with [http:// or https://. It can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).](http://https://。、（:）、（\\_）（-）。)', example='testNewScuName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='hide', position='Query'),
  ownerId?: long(name='OwnerId', example='111', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the SCU. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='hide', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='111', position='Query'),
  storageCapacityUnitId: string(name='StorageCapacityUnitId', description='The ID of the SCU.', example='scu-bp67acfmxazb4p****', position='Query'),
}

model ModifyStorageCapacityUnitAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ModifyStorageCapacityUnitAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyStorageCapacityUnitAttributeResponseBody(name='body'),
}

async function modifyStorageCapacityUnitAttribute(request: ModifyStorageCapacityUnitAttributeRequest): ModifyStorageCapacityUnitAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyStorageCapacityUnitAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyStorageSetAttributeRequest {
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the value, but you must make sure that it is unique among different requests. The value of **ClientToken** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the storage set.', example='testStorageSetDescription', position='Query'),
  ownerAccount?: string(name='OwnerAccount', example='hide', position='Query'),
  ownerId?: long(name='OwnerId', example='111', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the storage set. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', example='hide', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', example='111', position='Query'),
  storageSetId: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4ph****', position='Query'),
  storageSetName?: string(name='StorageSetName', description='The name of the storage set.', example='testStorageSetName', position='Query'),
}

model ModifyStorageSetAttributeResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='04F0F334-1335-436C-A1D7-6C044FE73369'),
}

model ModifyStorageSetAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyStorageSetAttributeResponseBody(name='body'),
}

async function modifyStorageSetAttribute(request: ModifyStorageSetAttributeRequest): ModifyStorageSetAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyStorageSetAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyUserBusinessBehaviorRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  statusKey: string(name='statusKey', position='Query'),
  statusValue: string(name='statusValue', position='Query'),
}

model ModifyUserBusinessBehaviorResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyUserBusinessBehaviorResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyUserBusinessBehaviorResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyUserBusinessBehavior(request: ModifyUserBusinessBehaviorRequest): ModifyUserBusinessBehaviorResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyUserBusinessBehavior', 'POST', '/', 'json', false, 'json', request);
}

model ModifyVRouterAttributeRequest {
  description?: string(name='Description', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vRouterId: string(name='VRouterId', position='Query'),
  vRouterName?: string(name='VRouterName', position='Query'),
}

model ModifyVRouterAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyVRouterAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyVRouterAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyVRouterAttribute(request: ModifyVRouterAttributeRequest): ModifyVRouterAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyVRouterAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyVSwitchAttributeRequest {
  description?: string(name='Description', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  vSwitchId: string(name='VSwitchId', position='Query'),
  vSwitchName?: string(name='VSwitchName', position='Query'),
}

model ModifyVSwitchAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyVSwitchAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyVSwitchAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyVSwitchAttribute(request: ModifyVSwitchAttributeRequest): ModifyVSwitchAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyVSwitchAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyVirtualBorderRouterAttributeRequest {
  circuitCode?: string(name='CircuitCode', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  description?: string(name='Description', position='Query'),
  localGatewayIp?: string(name='LocalGatewayIp', position='Query'),
  name?: string(name='Name', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  peerGatewayIp?: string(name='PeerGatewayIp', position='Query'),
  peeringSubnetMask?: string(name='PeeringSubnetMask', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vbrId: string(name='VbrId', position='Query'),
  vlanId?: int32(name='VlanId', position='Query'),
}

model ModifyVirtualBorderRouterAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyVirtualBorderRouterAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyVirtualBorderRouterAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyVirtualBorderRouterAttribute(request: ModifyVirtualBorderRouterAttributeRequest): ModifyVirtualBorderRouterAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyVirtualBorderRouterAttribute', 'POST', '/', 'json', false, 'json', request);
}

model ModifyVpcAttributeRequest {
  cidrBlock?: string(name='CidrBlock', position='Query'),
  description?: string(name='Description', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vpcId: string(name='VpcId', position='Query'),
  vpcName?: string(name='VpcName', position='Query'),
}

model ModifyVpcAttributeResponseBody = {
  requestId?: string(name='RequestId'),
}

model ModifyVpcAttributeResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ModifyVpcAttributeResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function modifyVpcAttribute(request: ModifyVpcAttributeRequest): ModifyVpcAttributeResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ModifyVpcAttribute', 'POST', '/', 'json', false, 'json', request);
}

model PurchaseReservedInstancesOfferingRequest {
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the reserved instance. Default value: false. Valid values:

true: enables auto-renewal for the reserved instance. false: does not enable auto-renewal for the reserved instance.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal term of the reserved instance. Unit: months. This parameter takes effect only when AutoRenew is set to true.

Valid values: 12 and 36.

Default value when PeriodUnit is set to Year: 12.', example='1', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **ClientToken** value can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the reserved instance. The description can be 2 to 256 characters in length and cannot start with [http:// or https://](http://https://。).

This parameter is left empty by default.', example='testDescription', position='Query'),
  instanceAmount?: int32(name='InstanceAmount', description='The number of pay-as-you-go instances of the same instance type that the reserved instance can match at the same time. Valid values: 1 to 50.

For example, if you set the InstanceAmount parameter to 3 and the InstanceType parameter to ecs.g5.large, the reserved instance can be matched three ecs.g5.large pay-as-you-go instances at the same time.', example='3', minimum=1, maximum=100, position='Query'),
  instanceType: string(name='InstanceType', description='The type of the reserved instance. For more information, see [Instance family](~~25378~~).', example='ecs.g5.large', position='Query'),
  offeringType?: string(name='OfferingType', description='The payment option of the reserved instance. Valid values:

*   No Upfront
*   Partial Upfront
*   All Upfront

Default value: All Upfront.', example='All Upfront', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The validity period of the reserved instance.

Valid values: 1 and 3.

Default value: 1.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the validity period of the reserved instance.

Valid value: Year.

Default value: Year.', example='Year', position='Query'),
  platform?: string(name='Platform', description='The operating system of the image used by the instance. Valid values:

*   Windows: Windows Server operating system
*   Linux: Linux and UNIX-like operating system

Default value: Linux.', example='Linux', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  reservedInstanceName?: string(name='ReservedInstanceName', description='The name of the reserved instance. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http:// or https://. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='testReservedInstanceName', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group.', example='rg-bp199lyny9b3****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  scope?: string(name='Scope', description='The scope of reserved instance N. Valid values:

*   Region: regional
*   Zone: zonal

Default value: Region.', example='Zone', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the reserved instance. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. It cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the reserved instance. Valid values of N: 1 to 20. The tag value cannot be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. It cannot start with `acs:` or `aliyun`.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
  zoneId?: string(name='ZoneId', description='The zone ID of the instance. This parameter is required when `Scope` is set to `Zone`. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.', example='cn-hangzhou-g', position='Query'),
}

model PurchaseReservedInstancesOfferingResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='8C314443-AF0D-4766-9562-C83B7F1A3C8B'),
  reservedInstanceIdSets?: {
    reservedInstanceId?: [ string ](name='ReservedInstanceId')
  }(name='ReservedInstanceIdSets', description='The IDs of the reserved instances.'),
}

model PurchaseReservedInstancesOfferingResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: PurchaseReservedInstancesOfferingResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   Before you call this operation, make sure that you fully understand the billing method of reserved instances. For more information, see [Reserved instances](~~100371~~).
  * *   Before you purchase a reserved instance, you can call the [DescribeAvailableResource](~~66186~~) operation to query available instance resources.
  *
 */
async function purchaseReservedInstancesOffering(request: PurchaseReservedInstancesOfferingRequest): PurchaseReservedInstancesOfferingResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'PurchaseReservedInstancesOffering', 'POST', '/', 'json', false, 'json', request);
}

model PurchaseStorageCapacityUnitRequest {
  amount?: int32(name='Amount', description='The number of SCUs that you want to purchase. Valid values: 1 to 20.

Default value: 1.', example='1', minimum=1, maximum=20, position='Query'),
  capacity: int32(name='Capacity', description='The capacity of the SCU. Unit: GiB. Valid values: 20, 40, 100, 200, 500, 1024, 2048, 5210, 10240, 20480, and 52100.', example='20', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but make sure that the token is unique across requests. The `token` can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='The description of the SCU. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='ScuPurchaseDemo', position='Query'),
  fromApp?: string(name='FromApp', description='The source of the request. The value is automatically set to OpenAPI and does not need to be changed. Default value: OpenAPI.', example='OpenAPI', position='Query'),
  name?: string(name='Name', description='The name of the SCU. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with `http://` or `https://`. The name can contain letters, digits, colons (:), underscores (\\_), and hyphens (-).', example='ScuPurchaseDemo', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The validity period of the SCU. Valid values:

*   Valid values when PeriodUnit is set to Month: 1, 2, 3, and 6.
*   Valid values when PeriodUnit is set to Year: 1, 3, and 5.

Default value: 1.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the validity period of the SCU. Valid values:

*   Month
*   Year

Default value: Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to purchase the SCU. The purchased SCU can offset the bills of pay-as-you-go disks that reside in the specified region. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The time at which the SCU takes effect. It can be up to six months later than the time at which the SCU is created. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.

This parameter is empty by default. If this parameter is left empty, the SCU takes effect immediately after it is created.', example='2020-09-09T02:00:00Z', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the SCU. N is the identifier of the tag key that you specify. Valid values of N: 1 to 20. The tag key cannot be an empty string. It can be up to 128 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. N is the identifier of the tag value that you specify and corresponds to the N in `Tag.N.Key`. Valid values: 1 to 20. The tag value can be an empty string. It can be up to 128 characters in length. It cannot start with `acs:` or contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The list of tags.', position='Query'),
}

model PurchaseStorageCapacityUnitResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.', example='204135153880****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  storageCapacityUnitIds?: {
    storageCapacityUnitId?: [ string ](name='StorageCapacityUnitId')
  }(name='StorageCapacityUnitIds', description='The IDs of the SCUs.'),
}

model PurchaseStorageCapacityUnitResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: PurchaseStorageCapacityUnitResponseBody(name='body'),
}

/**
  * Before you call this operation, make sure that you are familiar with the billing and pricing of SCUs. For more information, see [Storage capacity units](~~137897~~).
  *
 */
async function purchaseStorageCapacityUnit(request: PurchaseStorageCapacityUnitRequest): PurchaseStorageCapacityUnitResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'PurchaseStorageCapacityUnit', 'POST', '/', 'json', false, 'json', request);
}

model ReActivateInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId: string(name='InstanceId', description='The ID of the instance that you want to reactivate.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ReActivateInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='51AB7717-6E1A-4D1D-A44D-54CB123ABC'),
}

model ReActivateInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReActivateInstancesResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   The instance must be in the `Stopped` state.****
  * *   If an instance has overdue payments for more than 15 days, the instance is stopped and released, and data on the instance can no longer be recovered. You must complete the overdue payments and reactivate the instance within 15 days. If you cannot reactivate an instance that resides in a virtual private cloud (VPC), wait a few minutes and try again.
  * *   After the operation is called, the instance enters the `Starting` state.****
  * *   You cannot call this operation on ECS instances that are locked for security reasons. If `OperationLocks` in the response returned for the DescribeInstances operation contains `LockReason: security`, the instance is locked for security reasons. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  *
 */
async function reActivateInstances(request: ReActivateInstancesRequest): ReActivateInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReActivateInstances', 'POST', '/', 'json', false, 'json', request);
}

model ReInitDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoStartInstance?: boolean(name='AutoStartInstance', description='Specifies whether to automatically start the instance after the disk is re-initialized.

Default value: false.', example='true', position='Query'),
  diskId: string(name='DiskId', description='The ID of the disk.', example='d-bp67acfmxazb4ph****', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair. This parameter is empty by default.

> The parameter is applicable only to Linux instances. You can bind an SSH key pair to an instance as the logon credential when you re-initialize the system disk of the instance. After the SSH key pair is bound, the username and password-based logon method is disabled for the instance.', example='testKeyPairName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='Specifies whether to reset the password of the instance when you re-initialize its system disk. The password must be 8 to 30 characters in length and must contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include:

    ()`~!@#$%^&*-_+=|{}[]:;\\"<>,.?/

For Windows instances, passwords cannot start with a forward slash (/).

> If the `Password` parameter is specified, we recommend that you send requests over HTTPS to prevent password leaks.', example='EcsV587!', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to use Security Center free of charge after the system disk is re-initialized. Valid values:

*   Active: uses Security Center free of charge after the system disk is re-initialized. This value is applicable to only public images.
*   Deactive: does not use Security Center free of charge after the system disk is re-initialized. This value is applicable to all images.

Default value: Deactive.', example='Active', position='Query'),
}

model ReInitDiskResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ReInitDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReInitDiskResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The disk that you want to re-initialize must be in the **In Use** (In_use) state and the instance to which the disk is attached must be in the **Stopped** (Stopped) state.
  * *   If an instance has never been started since it was created, the disks attached to it cannot be re-initialized.
  * *   If a local snapshot has been created for a disk, the disk cannot be re-initialized.
  * *   If a system disk is re-initialized, the disk is restored to the state of the image from which it was created. If the image has been deleted, the disk cannot be re-initialized.
  * *   If a separately created data disk is re-initialized, the disk is restored to an empty data disk.
  * *   If a data disk that was created from a snapshot is re-initialized, the disk is restored to the state of the snapshot.
  * >  If the source snapshot is deleted, the disk cannot be re-initialized and an error is returned.
  *
 */
async function reInitDisk(request: ReInitDiskRequest): ReInitDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReInitDisk', 'POST', '/', 'json', false, 'json', request);
}

model RebootInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run. Valid values:

*   true: performs only a dry run. The system checks the required parameters, the request format, service limits, and available ECS resources. If the request fails the dry run, the corresponding error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and sends the request. If the request passes the dry run, the instance is restarted.

Default value: false.', example='false', position='Query'),
  forceStop?: boolean(name='ForceStop', description='Specifies whether to forcefully stop the instance before you restart the instance. Valid values:

*   true: stops the instance in a forceful manner. This operation is equivalent to the power-off operation. Cache data that is not written to storage devices on the instance is lost.
*   false (default): normally stops the instance.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4ph****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RebootInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model RebootInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RebootInstanceResponseBody(name='body'),
}

/**
  * *   Only instances that are in the `Running` state can be restarted.****
  * *   After an instance is restarted, the status of the instance changes to `Starting`.****
  * *   An instance can be forcibly restarted. A forced restart (`ForceStop`) is equivalent to performing a hard restart. This operation can cause data loss if data in the instance is not written to the disk.
  * *   If you call the DescribeInstances operation to query the details of an instance and `OperationLocks` in the response contains "LockReason": "security", the instance is locked for security reasons and cannot be restarted. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  *
 */
async function rebootInstance(request: RebootInstanceRequest): RebootInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RebootInstance', 'POST', '/', 'json', false, 'json', request);
}

model RebootInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  batchOptimization?: string(name='BatchOptimization', description='The batch operation mode. Valid values:

*   AllTogether: In this mode, if all instances are restarted, a success message is returned. If an instance fails the verification, all instances fail to be restarted and an error message is returned.
*   SuccessFirst: In this mode, each instance is restarted separately. The response contains the operation results of each instance.

Default value: AllTogether.', example='AllTogether', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and instance status. If the request fails the dry run, an error message is returned. If the request passes the dry run, `DRYRUN.SUCCESS` is returned.

>  If you set `BatchOptimization` to `SuccessFirst` and `DryRun` to true, only `DRYRUN.SUCCESS` is returned regardless of whether the request passes the dry run.

*   false: performs a dry run and sends the request. If the request passes the dry run, the instance is restarted.

Default value: false.', example='false', position='Query'),
  forceReboot?: boolean(name='ForceReboot', description='Specifies whether to forcefully restart the instance. Valid values:

*   true: forcefully restarts the instance. This operation is equivalent to the typical power-off operation. Cache data that is not written to storage devices on the instance is lost.
*   false: normally restarts the instance.

Default value: false.', example='false', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The instance IDs. You can specify up to 100 instance IDs.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RebootInstancesResponseBody = {
  instanceResponses?: {
    instanceResponse?: [ 
    {
      code?: string(name='Code', description='The error code returned for the instance. A return value of 200 indicates that the operation is successful. For more information, see the "Error codes" section of this topic.', example='200'),
      currentStatus?: string(name='CurrentStatus', description='The current state of the instance.', example='Stopping'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp1g6zv0ce8oghu7****'),
      message?: string(name='Message', description='The error message that is returned for the operation on the instance. The return value Success indicates that the operation is successful. For more information, see the "Error codes" section of this topic.', example='success'),
      previousStatus?: string(name='PreviousStatus', description='The state of the instance before the operation is called.', example='Running'),
    }
  ](name='InstanceResponse')
  }(name='InstanceResponses', description='Details about instance-specific responses, which contain the status of each instance before and after the operation is called and the results of the operation.'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model RebootInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RebootInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The ECS instances to be restarted must be in the **Running** (`Running`) state.
  * *   You can use `BatchOptimization` to specify the batch operation mode and restart multiple instances at a time.
  * *   Instances can be forcefully restarted. A forced restart (`ForceReboot`) is equivalent to powering off a traditional server and then starting the server. If data in the instance operating system is not written to block storage devices when the operation is called, the data is lost.
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of the instance, the instance is locked for security reasons and all operations are prohibited on it.
  *
 */
async function rebootInstances(request: RebootInstancesRequest): RebootInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RebootInstances', 'POST', '/', 'json', false, 'json', request);
}

model RecoverVirtualBorderRouterRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vbrId: string(name='VbrId', position='Query'),
}

model RecoverVirtualBorderRouterResponseBody = {
  requestId?: string(name='RequestId'),
}

model RecoverVirtualBorderRouterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RecoverVirtualBorderRouterResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function recoverVirtualBorderRouter(request: RecoverVirtualBorderRouterRequest): RecoverVirtualBorderRouterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RecoverVirtualBorderRouter', 'POST', '/', 'json', false, 'json', request);
}

model RedeployDedicatedHostRequest {
  dedicatedHostId: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp165p6xk2tlw61e****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RedeployDedicatedHostResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='FCED4B7A-53D5-4C04-ABE3-26D4F3890D57'),
}

model RedeployDedicatedHostResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RedeployDedicatedHostResponseBody(name='body'),
}

/**
  * If a dedicated host is in the UnderAssessment state, we recommend that you call this operation to migrate ECS instances away from the dedicated host to prevent permanent failures. You can call the [DescribeDedicatedHosts](~~134242~~) operation to query the status of a dedicated host.
  *
 */
async function redeployDedicatedHost(request: RedeployDedicatedHostRequest): RedeployDedicatedHostResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RedeployDedicatedHost', 'POST', '/', 'json', false, 'json', request);
}

model RedeployInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  forceStop?: boolean(name='ForceStop', description='Specifies whether to forcefully stop the instance that is in the Running state.

Default value: false.

> A forced stop is equivalent to a power outage, and unsaved data may be lost. We recommend that you redeploy instances that are in the Stopped state.', example='false', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp1azkttqpldxgted****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RedeployInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
  taskId?: string(name='TaskId', description='The ID of the redeployment task.

You can call the [DescribeTasks](~~25622~~) operation to query the redeployment result.', example='t-bp10e8orkp8x****'),
}

model RedeployInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RedeployInstanceResponseBody(name='body'),
}

/**
  * RedeployInstance is an asynchronous operation. This operation migrates data before it restarts the instance. After the instance is redeployed, the instance enters the `Running` state. If the instance fails to be redeployed, the instance returns to the original physical server and the state before redeployment.
  * Take note of the following items:
  * * The instance must be in the Running or Stopped state. After the instance is redeployed, the following changes occur to the status of the instance:
  *   * If the instance is in the `Running` state before redeployment, the instance enters the `Stopping` state.
  *   * If the instance is in the `Stopped` state before redeployment, the instance enters the `Starting` state.
  * * If an instance is deployed on a dedicated host, you cannot redeploy the instance.
  * * If the `OperationLocks` parameter in the response of the DescribeInstances operation contains `"LockReason" : "security"` for an instance, the instance is locked for security reasons and cannot be redeployed.
  * * If you receive notifications about simulated events that are created by calling the CreateSimulatedSystemEvent operation for an instance, you cannot redeploy the instance.
  * * If the damaged local disk is isolated but the **SystemMaintenance.RebootAndReInitErrorDisk** event is not sent when you handle a local disk-related system event for an instance, you can still call the RedeployInstance operation to redeploy the instance. The SystemMaintenance.RebootAndReInitErrorDisk event indicates that the instance is restarted and the damaged disks are reinitialized due to system maintenance. For more information, see [System events for ECS instances equipped with local disks](~~107693~~).
  * The following table describes the system events that you can handle by calling the RedeployInstance operation. The table also provides possible event status.
  * |System event|Event status|
  * |---|---|
  * |Instance restart due to system maintenance (SystemMaintenance.Reboot)|Inquiring and Scheduled|
  * |Instance redeployment due to system maintenance (SystemMaintenance.Redeploy)|Inquiring and Scheduled|
  * |Instance restart and replacement of damaged disks due to system maintenance (SystemMaintenance.RebootAndIsolateErrorDisk)|Inquiring|
  * |Instance restart and re-initialization of damaged disks due to system maintenance (SystemMaintenance.RebootAndReInitErrorDisk)|Inquiring|
  * |Instance redeployment due to system errors (SystemFailure.Redeploy)|Inquiring and Scheduled|
  * |For ECS instances that use only local disks: instance restart due to a system error (SystemFailure.Reboot)|Executing|
  * |Isolation of damaged disks due to system maintenance (SystemMaintenance.IsolateErrorDisk)|Inquiring|
  * |Re-initialization of damaged disks due to system maintenance (SystemMaintenance.ReInitErrorDisk)|Inquiring|
  * **Note**When instances that use local disks are redeployed, the local disks are re-initialized and data on the local disks is cleared.
  *
 */
async function redeployInstance(request: RedeployInstanceRequest): RedeployInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RedeployInstance', 'POST', '/', 'json', false, 'json', request);
}

model ReleaseCapacityReservationRequest {
  privatePoolOptions?: {
    id: string(name='Id', description='The ID of the capacity reservation.', example='crp-bp67acfmxazb4****'),
  }(name='PrivatePoolOptions', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Set the value to false. This indicates that the system directly releases the capacity reservation.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the capacity reservation. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ReleaseCapacityReservationResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ReleaseCapacityReservationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReleaseCapacityReservationResponseBody(name='body'),
}

/**
  * If the release mode of a capacity reservation that takes effect immediately is set to manual release, you can call this operation to release the capacity reservation.
  *
 */
async function releaseCapacityReservation(request: ReleaseCapacityReservationRequest): ReleaseCapacityReservationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReleaseCapacityReservation', 'POST', '/', 'json', false, 'json', request);
}

model ReleaseDedicatedHostRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dedicatedHostId: string(name='DedicatedHostId', description='The ID of the dedicated host.', example='dh-bp199lyny9b3****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ReleaseDedicatedHostResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='A1B15AC8-E6F6-49A4-8985-8C07104B9199'),
}

model ReleaseDedicatedHostResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReleaseDedicatedHostResponseBody(name='body'),
}

/**
  * ## Usage notes
  * Before you release a pay-as-you-go dedicated host, make sure that no ECS instances are deployed on the dedicated host.
  *
 */
async function releaseDedicatedHost(request: ReleaseDedicatedHostRequest): ReleaseDedicatedHostResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReleaseDedicatedHost', 'POST', '/', 'json', false, 'json', request);
}

model ReleaseEipAddressRequest {
  allocationId: string(name='AllocationId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ReleaseEipAddressResponseBody = {
  requestId?: string(name='RequestId'),
}

model ReleaseEipAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReleaseEipAddressResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function releaseEipAddress(request: ReleaseEipAddressRequest): ReleaseEipAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReleaseEipAddress', 'POST', '/', 'json', false, 'json', request);
}

model ReleasePublicIpAddressRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', description='> This parameter is unavailable.', example='hide', position='Query'),
  instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4p****', position='Query'),
  publicIpAddress: string(name='PublicIpAddress', description='The public IP address of the instance.', example='121.40.**.**', position='Query'),
  regionId?: string(name='RegionId', description='The region ID of the instance.', example='cn-hangzhou', position='Query'),
}

model ReleasePublicIpAddressResponseBody = {
  remainTimes?: string(name='RemainTimes', description='> This parameter is unavailable.', example='hide'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ReleasePublicIpAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReleasePublicIpAddressResponseBody(name='body'),
}

async function releasePublicIpAddress(request: ReleasePublicIpAddressRequest): ReleasePublicIpAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReleasePublicIpAddress', 'POST', '/', 'json', false, 'json', request);
}

model RemoveBandwidthPackageIpsRequest {
  bandwidthPackageId: string(name='BandwidthPackageId', position='Query'),
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  removedIpAddresses: [ string ](name='RemovedIpAddresses', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RemoveBandwidthPackageIpsResponseBody = {
  requestId?: string(name='RequestId'),
}

model RemoveBandwidthPackageIpsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RemoveBandwidthPackageIpsResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function removeBandwidthPackageIps(request: RemoveBandwidthPackageIpsRequest): RemoveBandwidthPackageIpsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RemoveBandwidthPackageIps', 'POST', '/', 'json', false, 'json', request);
}

model RemoveTagsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-shenzhen', position='Query'),
  resourceId: string(name='ResourceId', description='The ID of the resource. For example, if you set ResourceType to instance, you must set this parameter to the ID of the related instance.', example='s-946ntx4****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance
*   disk
*   snapshot
*   image
*   securitygroup
*   volume
*   eni
*   ddh
*   keypair
*   launchtemplate
*   reservedinstance
*   snapshotpolicy

All values must be in lowercase.', example='snapshot', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 64 characters in length and cannot contain [http:// or https://](http://https://。). The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain [http:// or https://](http://https://。). The tag value cannot start with acs: or aliyun.', example='TestValue'),
    }
  ](name='Tag', description='The tags.', position='Query'),
}

model RemoveTagsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model RemoveTagsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RemoveTagsResponseBody(name='body'),
}

async function removeTags(request: RemoveTagsRequest): RemoveTagsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RemoveTags', 'POST', '/', 'json', false, 'json', request);
}

model RenewDedicatedHostsRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate a client token. Make sure that a unique client token is used for each request. The token can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence?](~~25693~~)', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  dedicatedHostIds: string(name='DedicatedHostIds', description='The IDs of dedicated hosts. You can specify the IDs of up to 100 subscription dedicated hosts. Specify the dedicated host IDs in a JSON array. Example: `["dh-xxxxxxxxx", "dh-yyyyyyyyy", … "dh-zzzzzzzzz"]`. Separate the IDs with commas (,).', example='dh-bp199lyny9b3****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period: int32(name='Period', description='The renewal duration. Valid values:

*   Valid values when the PeriodUnit parameter is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.
*   Valid values when the PeriodUnit parameter is set to Year: 1, 2, 3, 4, and 5.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal period. Valid values:

*   Month
*   Year

Default value: Month.', example='Month', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the dedicated host. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RenewDedicatedHostsResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='2A4EA075-CB5B-41B7-B0EB-70D339F6****'),
}

model RenewDedicatedHostsResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RenewDedicatedHostsResponseBody(name='body'),
}

/**
  * Valid vouchers can be applied when you renew the subscription plan dedicated hosts. In order to use vouchers, make sure that your account supports the credit card payment method.
  *
 */
async function renewDedicatedHosts(request: RenewDedicatedHostsRequest): RenewDedicatedHostsResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RenewDedicatedHosts', 'POST', '/', 'json', false, 'json', request);
}

model RenewInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='0c593ea1-3bea-11e9-b96b-88e9fe637760', position='Query'),
  expectedRenewDay?: int32(name='ExpectedRenewDay', description='The synchronized expiration date. Set the value to a synchronized expiration date that you specified. Otherwise, the call fails. If you configure this parameter, your instance will be renewed to the specified synchronized expiration date. Valid values: 1 to 28.

For information about how to synchronize the expiration dates of instances, see [Synchronize the expiration dates of subscription instances](~~108486~~).

> The renewal period-related parameter pair (`Period` and `PeriodUnit`) and `ExpectedRenewDay` are mutually exclusive.', example='5', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance that you want to renew.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The renewal period of the subscription instance. If `DedicatedHostId` is specified, the value of Period cannot exceed the subscription period of the specified dedicated host.

Valid values when PeriodUnit is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, and 12.

> The renewal period-related parameter pair (`Period` and `PeriodUnit`) and `ExpectedRenewDay` are mutually exclusive.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the renewal period. Valid values:

Month

Default value: Month.', example='Month', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RenewInstanceResponseBody = {
  orderId?: string(name='OrderId', description='The order ID.', example='1234567890'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model RenewInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RenewInstanceResponseBody(name='body'),
}

/**
  * *   Before you call this operation, make sure that you are familiar with the billing methods and pricing of ECS. For more information, see the [Elastic Compute Service](https://www.alibabacloud.com/product/ecs#pricing) product page.
  * *   You can call this operation to renew a subscription instance for a specific period of time or to a synchronized expiration date.
  * *   You cannot call this operation to renew a subscription instance for a specific period of time and to a synchronized expiration date at the same time. The parameter pair (`Period` and `PeriodUnit`) that is related to the renewal period and `ExpectedRenewDay` are mutually exclusive.
  * *   Your account must have sufficient credits.
  *
 */
async function renewInstance(request: RenewInstanceRequest): RenewInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RenewInstance', 'POST', '/', 'json', false, 'json', request);
}

model RenewReservedInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  autoRenew?: boolean(name='AutoRenew', description='The auto-renewal duration. Unit: months. This parameter takes effect only when AutoRenew is set to true.

Valid values: 12 and 36. Default value: 12.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The request ID.', example='1', position='Query'),
  clientToken?: string(name='ClientToken', description='Specifies whether to enable auto-renewal for the reserved instance. Valid values:

*   true
*   false

Default value: false.', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  period?: int32(name='Period', description='The unit of the validity period of the reserved instance.

Set the value to Year.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='Year', position='Query'),
  regionId?: string(name='RegionId', description='The validity period of the reserved instance.

Valid values: 1 and 3.

Default value: 1.', example='cn-hangzhou', position='Query'),
  reservedInstanceId?: [ string ](name='ReservedInstanceId', description='The ID of the reserved instance. You can call the [DescribeReservedInstances](~~100065~~) operation to query the IDs of reserved instances that you purchased.

You can specify up to 10 IDs of reserved instances in a single request.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model RenewReservedInstancesResponseBody = {
  orderId?: string(name='OrderId', example='2023912123****'),
  requestId?: string(name='RequestId', description='The IDs of the reserved instances.', example='8C314443-AF0D-4766-9562-C83B7F1****'),
  reservedInstanceIdSets?: {
    reservedInstanceId?: [ string ](name='ReservedInstanceId')
  }(name='ReservedInstanceIdSets', description='The ID of the reserved instance.'),
}

model RenewReservedInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RenewReservedInstancesResponseBody(name='body'),
}

/**
  * The IDs of the reserved instances.
  *
 */
async function renewReservedInstances(request: RenewReservedInstancesRequest): RenewReservedInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RenewReservedInstances', 'POST', '/', 'json', false, 'json', request);
}

model ReplaceSystemDiskRequest {
  systemDisk?: {
    size?: int32(name='Size', description='The capacity of the new system disk. Unit: GiB. Valid values for different disk categories:

*   Basic disk: Max{20, Size of the image specified by ImageId} to 500.

*   Enterprise SSD (ESSD):

    *   PL0: Max{1, Size of the image specified by ImageId} to 2048.
    *   PL1: Max{20, Size of the image specified by ImageId} to 2048.
    *   PL2: Max{461, Size of the image specified by ImageId} to 2048.
    *   PL3: Max{1261, Size of the image specified by ImageId} to 2048.

*   ESSD AutoPL disk: Max{1, Size of the image specified by ImageId} to 2048.

*   Other disk categories: Max{20, Size of the image specified by ImageId} to 2048.

Default value: 40 or the size of the image specified by ImageId, whichever is greater.

>  If the capacity of the new system disk exceeds `Max{20, Capacity of the original system disk}`, you are charged for the excess capacity.', example='80'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  architecture?: string(name='Architecture', description='>  This parameter is deprecated.', example='i386', position='Query'),
  arn?: [ 
    {
      assumeRoleFor?: long(name='AssumeRoleFor', description='> This parameter is unavailable.', example='0'),
      roleType?: string(name='RoleType', description='> This parameter is not available for public use.', example='null'),
      rolearn?: string(name='Rolearn', description='> This parameter is not available for public use.', example='null'),
    }
  ](name='Arn', description='This parameter is not available for public use.', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotency of the request. You can use the client to generate the token, but make sure that the token is unique across requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  diskId?: string(name='DiskId', description='>  This parameter is deprecated. To improve compatibility, we recommend that you use `ImageId`.', example='d-bp67acfmxazb4ph****', position='Query'),
  encryptAlgorithm?: string(name='EncryptAlgorithm', description='> This parameter is not available for public use.', example='hide', position='Query'),
  encrypted?: boolean(name='Encrypted', description='Specifies whether to encrypt the disk. Valid values:

*   true: encrypts the disk.
*   false: does not encrypt the disk.

Default value: false', example='false', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image to be used to replace the system disk.

If the `DiskId` parameter is not specified, this parameter is required.', example='m-bp67acfmxazb4ph****', position='Query'),
  instanceId: string(name='InstanceId', description='The instance ID.', example='i-bp67acfmxazb4ph****', position='Query'),
  KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key to use for the system disk.', example='e522b26d-abf6-4e0d-b5da-04b7******3c', maxLength=64, position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.

> This parameter is applicable only to Linux instances. You can bind an SSH key pair to the instance as a logon credential. After you bind the SSH key pair, the username and password logon method is disabled for the instance.', example='testKeyPairName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='Specifies whether to reset the password for the instance. The password must be 8 to 30 characters in length and contain at least three of the following items: uppercase letters, lowercase letters, digits, and special characters. Special characters include:

    ()`~!@#$%^&*-_+=|{}[]:;\\"<>,.?/

The passwords of Windows instances cannot start with a forward slash (/).

This parameter is empty by default, which indicates that the current password remains unchanged.

> If you specify `Password`, we recommend that you send requests over HTTPS to prevent password leaks.', example='EcsV587!', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the preset password of the image.

Default value: false

> If the PasswordInherit parameter is specified, you must leave the Password parameter empty. Before you use this parameter, make sure that a password is preset for the image.', example='false', position='Query'),
  platform?: string(name='Platform', description='>  This parameter is deprecated.', example='CentOS', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to use Security Center Basic after the system disk is replaced. Valid values:

*   Active: uses Security Center Basic after the system disk is re-initialized. This value is applicable only to public images.
*   Deactive: does not use Security Center Basic after the system disk is re-initialized. This value is applicable to all images.

Default value: Deactive.', example='Active', position='Query'),
  useAdditionalService?: boolean(name='UseAdditionalService', description='Specifies whether to use the system configurations for virtual machines provided by Alibaba Cloud. System configurations for Windows: NTP and KMS. System configurations for Linux: NTP and YUM.

> This parameter takes effect only when you attach a system disk whose device name is /dev/xvda.', example='true', position='Query'),
}

model ReplaceSystemDiskResponseBody = {
  diskId?: string(name='DiskId', description='The ID of the new system disk.', example='d-bp67acfmxazb4ph****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ReplaceSystemDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReplaceSystemDiskResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The category of the system disk cannot be changed.
  * *   The billing method of the system disk cannot be changed.
  * *   The instance must be in the `Stopped` state.
  *     **
  *     **Note** The operation is applicable only to instances of the Virtual Private Cloud (VPC) type. If the instance is a pay-as-you-go instance and economical mode is enabled by default for the instance, you must disable economical mode and enable standard mode when you stop the instance. This prevents the instance from being unable to restart due to insufficient ECS resources after the system disk is replaced. For more information, see [StopInstance](~~25501~~).
  * *   The ECS instance cannot be locked for security reasons. If the value of `OperationLocks` in the DescribeInstances response contains `"LockReason": "security"` for an instance, the instance is locked for security reasons. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  * *   No unpaid orders are associated with the instance.
  * *   You can configure `SystemDisk.Size` to specify the capacity of the new system disk.
  * After you call the ReplaceSystemDisk operation, you can use one of the following methods to check whether the system disk is replaced:
  * *   Call the [DescribeDisks](~~25514~~) operation to query the status of the new system disk. If the new system disk is in the In Use state, the system disk is replaced.
  * *   Call the [DescribeInstances](~~25506~~) operation to query the status of the instance whose system disk is replaced. If the `OperationLocks` parameter is empty, the system disk is replaced.
  *
 */
async function replaceSystemDisk(request: ReplaceSystemDiskRequest): ReplaceSystemDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReplaceSystemDisk', 'POST', '/', 'json', false, 'json', request);
}

model ReportInstancesStatusRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  description: string(name='Description', description='The description of the exception.', example='The local disk is unavailable, the mount point is inaccessible, or files cannot be loaded.', position='Query'),
  device?: [ string ](name='Device', description='The device names of disks on an instance that have the exception. You can specify to 100 device names in a single request.

If you are using an ECS bare metal instance, enter the slot numbers of disks on the instance.

> For ECS bare metal instances, this parameter is required when the value of the `Reason` parameter is `abnormal-local-disk` or `abnormal-cloud-disk` or when the value of the `IssueCategory` parameter is `hardware-disk-error`.', example='/dev/xvdb', position='Query'),
  diskId?: [ string ](name='DiskId', description='The IDs of disks on an instance that have the exception. You can specify up to 100 disk IDs in a single request. If you are using an ECS bare metal instance, enter the serial numbers of disks on the instance.

> This parameter is required when the value of the `Reason` parameter is `abnormal-local-disk` or `abnormal-cloud-disk` or when the value of the `IssueCategory` parameter is `hardware-disk-error`.', example='d-bp1aeljlfad7x6u1****', position='Query'),
  endTime?: string(name='EndTime', description='The end time of the instance exception. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-31T06:32:31Z', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The IDs of instances. You can specify up to 100 instance IDs in a single request.', example='i-bp165p6xk2tmdhj0****', position='Query'),
  issueCategory?: string(name='IssueCategory', description='The category of the exception. This parameter is applicable only to ECS bare metal instances. Valid values:

*   hardware-cpu-error: CPU failure
*   hardware-motherboard-error: motherboard failure
*   hardware-mem-error: memory failure
*   hardware-power-error: power failure
*   hardware-disk-error: disk failure
*   hardware-networkcard-error: network interface controller (NIC) failure
*   hardware-raidcard-error: SAS/RAID card failure
*   hardware-fan-error: fan failure
*   others: other failures', example='hardware-cpu-error', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  reason?: string(name='Reason', description='The impact of the exception on the instance. Valid values:

*   instance-hang: The instance is unavailable or cannot be connected.
*   instance-stuck-in-status: The instance is stuck in a state such as Starting or Stopping.
*   abnormal-network: The instance has a network exception.
*   abnormal-local-disk: A local disk attached to the instance has an exception.
*   abnormal-cloud-disk: A disk or a Shared Block Storage device attached to the instance has an exception.
*   others: other exception types. If the impact is not of the preceding types, you can set `Reason` to others and specify the `Description` parameter.', example='abnormal-local-disk', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  startTime?: string(name='StartTime', description='The start time of the instance exception. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.', example='2017-11-30T06:32:31Z', position='Query'),
}

model ReportInstancesStatusResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model ReportInstancesStatusResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ReportInstancesStatusResponseBody(name='body'),
}

async function reportInstancesStatus(request: ReportInstancesStatusRequest): ReportInstancesStatusResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ReportInstancesStatus', 'POST', '/', 'json', false, 'json', request);
}

model ResetDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  diskId: string(name='DiskId', description='The ID of the disk that you want to roll back.', example='d-bp199lyny9b3****', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to check the validity of the request without actually making the request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and resource state limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, the rollback operation is performed.

Default value: false', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  snapshotId: string(name='SnapshotId', description='The ID of the snapshot that you want to use to roll back the disk.', example='s-bp199lyny9b3****', position='Query'),
}

model ResetDiskResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='F3CD6886-D8D0-4FEE-B93E-1B732396****'),
}

model ResetDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ResetDiskResponseBody(name='body'),
}

/**
  * When you call this operation, take note of the following items:
  * *   The disk must be in the In Use (In_Use) or Unattached (Available) state.
  * *   The Elastic Compute Service (ECS) instance to which the disk is attached must be in the Stopped (Stopped) state. You can call the [StopInstances](~~155372~~) operation to stop an instance.
  * *   The snapshot specified by the SnapshotId parameter must be created from the disk specified by the DiskId parameter.
  * *   When you call the [DescribeInstances](~~25506~~) operation to query instance information and the response contains `{"OperationLocks": {"LockReason" : "security"}}`, then this indicates that the instance is locked for security reasons and no operations can be performed on the instance.
  *
 */
async function resetDisk(request: ResetDiskRequest): ResetDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ResetDisk', 'POST', '/', 'json', false, 'json', request);
}

model ResetDisksRequest {
  disk: [ 
    {
      diskId?: string(name='DiskId', description='The ID of the disk that you want to roll back. You can specify up to 10 disk IDs.', example='d-j6cf7l0ewidb78lq****'),
      snapshotId?: string(name='SnapshotId', description='The ID of the disk snapshot that is contained in the instance snapshot. You can specify up to 10 disk snapshot IDs.', example='s-j6cdofbycydvg7ey****'),
    }
  ](name='Disk', description='The disks that you want to roll back.', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and resource state limits. If the request fails the dry run, an error code is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, the rollback operation is performed.

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model ResetDisksResponseBody = {
  operationProgressSet?: {
    operationProgress?: [ 
    {
      errorCode?: string(name='ErrorCode', description='The error code that is returned if the request failed. This parameter is empty if the request is successful.

For information about error codes and error messages, see [Service error codes](https://error-center.alibabacloud.com/status/product/Ecs).', example='400'),
      errorMsg?: string(name='ErrorMsg', description='The error message that is returned if the request failed. This parameter is empty if the request is successful.

For information about error codes and error messages, see [Service error codes](https://error-center.alibabacloud.com/status/product/Ecs).', example='testErrorMsg'),
      operationStatus?: string(name='OperationStatus', description='Indicates whether the request is successful. If the request is successful, Success is returned. If the request failed, an error code and an error message are returned.', example='Success'),
      relatedItemSet?: {
        relatedItem?: [ 
        {
          name?: string(name='Name', description='The resource name.', example='SnapshotId'),
          value?: string(name='Value', description='The resource ID.', example='s-j6cdofbycydvg7ey****'),
        }
      ](name='RelatedItem')
      }(name='RelatedItemSet', description='Details about the resources.'),
    }
  ](name='OperationProgress')
  }(name='OperationProgressSet', description='Details about the rollback operation.'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='3D66C85C-AA97-4A00-B0ED-2D9A80FE782C'),
}

model ResetDisksResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ResetDisksResponseBody(name='body'),
}

/**
  * This operation will be removed in the future. We recommend that you call the [ResetDisk](~~25520~~) operation to roll back a disk.
  *
 */
async function resetDisks(request: ResetDisksRequest): ResetDisksResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ResetDisks', 'POST', '/', 'json', false, 'json', request);
}

model ResizeDiskRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The ID of the order.

> This parameter is returned only when you resize subscription disks.', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  diskId: string(name='DiskId', description='The ID of the disk. You can call the [DescribeDisks](~~25514~~) operation to query available disk IDs.', example='d-bp67acfmxazb4p****', position='Query'),
  newSize: int32(name='NewSize', description='The new disk capacity. Unit: GiB. Valid values:

*   System disk:

    *   Basic disk (cloud): 20 to 500.

    *   ESSD (cloud_essd): Valid values vary based on the performance level of the ESSD. To query the performance level of an ESSD, call the DescribeDisks operation to query disk information and check the PerformanceLevel value in the response.

        *   PL0 ESSD: 1 to 2048.
        *   PL1 ESSD: 20 to 2048.
        *   PL2 ESSD: 461 to 2048.
        *   PL3 ESSD: 1261 to 2048.

    *   ESSD AutoPL disk (cloud_auto): 1 to 2048.

    *   Other disk categories: 20 to 2048.

*   Data disk:

    *   Ultra disk (cloud_efficiency): 20 to 32768.

    *   Standard SSD (cloud_ssd): 20 to 32768.

    *   ESSD (cloud_essd): Valid values vary based on the performance level of the ESSD.`` To query the performance level of an ESSD, call the [DescribeDisks](~~25514~~) operation to query disk information and check the `PerformanceLevel` value in the response.

        *   PL0 ESSD: 1 to 32768.
        *   PL1 ESSD: 20 to 32768.
        *   PL2 ESSD: 461 to 32768.
        *   PL3 ESSD: 1261 to 32768.

    *   Basic disk (cloud): 5 to 2000.

    *   ESSD AutoPL disk (cloud_auto): 1 to 32768.

    *   Standard elastic ephemeral disk (elastic_ephemeral_disk_standard): 64 to 8192.

    *   Premium elastic ephemeral disk (elastic_ephemeral_disk_premium): 64 to 8192.

>  The new disk capacity must be larger than the original disk capacity.', example='1900', minimum=1, maximum=65536, position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  type?: string(name='Type', description='The method that you want to use to resize the disk. Default value: offline. Valid values:

*   offline: resizes the disk offline. After you resize a disk offline, you must restart the associated instance in the ECS console or by calling the [RebootInstance](~~25502~~) operation for the resizing operation to take effect. For information about how to restart an ECS instance in the ECS console, see [Restart an instance](~~25440~~).
*   online: resizes the disk online. After you resize a disk online, the resizing operation immediately takes effect. You do not need to restart the associated instance. You can resize ultra disks, standard SSDs, ESSDs, and elastic ephemeral disks online.', example='offline', position='Query'),
}

model ResizeDiskResponseBody = {
  orderId?: string(name='OrderId', description='The ID of the request.', example='20413515388****'),
  requestId?: string(name='RequestId', example='F3CD6886-D8D0-4FEE-B93E-1B732396****'),
}

model ResizeDiskResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: ResizeDiskResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * >  Before you call this operation to resize a disk, you must check the partition format of the disk. A master boot record (MBR) disk cannot be resized to a size that is larger than 2 TiB. If you resize an MBR disk to a size that is larger than 2 TiB, data may be lost. If you want to resize an MBR disk to a size that is larger than 2 TiB, we recommend that you perform the following steps: Create another data disk that is larger than 2 TiB in size, partition and format the new data disk to GUID partition table (GPT), and then copy data from the MBR disk to the new GPT data disk. For more information, see [Step 1: Resize a disk to extend its capacity](~~44986~~).
  * *   You can resize disks of the following disk categories: basic disks (`cloud`), ultra disks (`cloud_efficiency`), standard SSDs (`cloud_ssd`), Enterprise SSDs (ESSDs) (`cloud_essd`), ESSD AutoPL disks (cloud_auto), standard elastic ephemeral disks (elastic_ephemeral_disk_standard), and premium elastic ephemeral disks (elastic_ephemeral_disk_premium).
  * *   You cannot resize a disk when a snapshot is being created for the disk.
  * *   The Elastic Compute Service (ECS) instance to which the disk is attached must be in the **Running** (`Running`) or **Stopped** (`Stopped`) state.
  * *   After you resize a disk, the partitions and file systems of the disk are not changed. You must allocate the increased storage space on the disk after the disk is resized.
  * *   Disks for which the multi-attach feature is enabled support online and offline resizing. Before you resize the disks offline, make sure that the instances to which the disks are attached are in the **Stopped** (`Stopped`) state.
  *
 */
async function resizeDisk(request: ResizeDiskRequest): ResizeDiskResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'ResizeDisk', 'POST', '/', 'json', false, 'json', request);
}

model RevokeSecurityGroupRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **ClientToken** value can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  description?: string(name='Description', description='This parameter is deprecated. Use `Permissions.N.Description` to specify the rule description.', example='This is description.', deprecated='true', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.DestCidrIp` to specify the destination IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='This parameter is deprecated. Use `Permissions.N.IpProtocol` to specify the transport layer protocol.', example='ALL', deprecated='true', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6DestCidrIp` to specify the destination IPv6 CIDR block.', example='2001:db8:1233:1a00::***', deprecated='true', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6SourceCidrIp` to specify the source IPv6 CIDR block.', example='2001:db8:1234:1a00::***', deprecated='true', position='Query'),
  nicType?: string(name='NicType', description='This parameter is deprecated. Use `Permissions.N.NicType` to specify the network interface type.', example='intranet', deprecated='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  permissions?: [ 
    {
      description?: string(name='Description', description='The description of security group rule N. The description must be 1 to 512 characters in length.

Valid values of N: 1 to 100.', example='This is description.'),
      destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block. CIDR blocks and IPv4 addresses are supported.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of security group rule N. The values of this parameter are not case-sensitive. Valid values:

*   TCP
*   UDP
*   ICMP
*   ICMPv6
*   GRE
*   ALL: All protocols are supported.

Valid values of N: 1 to 100.', example='TCP'),
      ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block. CIDR blocks and IPv6 addresses are supported.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.

> This parameter is valid only when the destination is an ECS instance that resides in a VPC and supports IPv6 CIDR blocks. You cannot specify both this parameter and the `DestCidrIp` parameter.', example='2001:db8:1233:1a00::***'),
      ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

Valid values of N: 1 to 100.

> This parameter is valid only when the source is an Elastic Compute Service (ECS) instance that resides in a virtual private cloud (VPC) and supports IPv6 CIDR blocks. You cannot specify both this parameter and the `SourceCidrIp` parameter.', example='2001:db8:1234:1a00::***'),
      nicType?: string(name='NicType', description='The network interface card (NIC) type of the security group rule if the security group is of the classic network type. Valid values:

*   internet: public NIC
*   intranet: internal NIC

If the security group is in a VPC, this parameter is set to intranet by default and cannot be changed.

If you specify only `SourceGroupId` when you configure access between security groups, this parameter must be set to intranet.

Default value: internet.

Valid values of N: 1 to 100.', example='intranet'),
      policy?: string(name='Policy', description='The action of security group rule N that determines whether to allow inbound access. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses. In this case, the request times out or the connection cannot be established.

Default value: accept.

Valid values of N: 1 to 100.', example='accept'),
      portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol of security group rule N. Valid values:

*   If the Permissions.N.IpProtocol parameter is set to TCP or UDP, the port range is 1 to 65535. Specify a port range in the format of \\<start port number>/\\<end port number>. Example: 1/200.
*   If the Permissions.N.IpProtocol parameter is set to ICMP, the port range is -1/-1, which indicates all ports.
*   If the Permissions.N.IpProtocol parameter is set to GRE, the port range is -1/-1, which indicates all ports.
*   If the Permissions.N.IpProtocol parameter is set to ALL, the port range is -1/-1, which indicates all ports.

Valid values of N: 1 to 100.', example='1/200'),
      priority?: string(name='Priority', description='The priority of security group rule N. A smaller value specifies a higher priority. Valid values: 1 to 100.

Default value: 1.

Valid values of N: 1 to 100.', example='1'),
      sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      sourceGroupId?: string(name='SourceGroupId', description='The ID of the source security group that is referenced in security group rule N.

*   Specify at least one of the following parameters: `SourceGroupId`, `SourceCidrIp`, `Ipv6SourceCidrIp`, and `SourcePrefixListId`.
*   If you specify `SourceGroupId` but you do not specify `SourceCidrIp` or `Ipv6SourceCidrIp`, you must set NicType to intranet.
*   If you specify `SourceGroupId` and `SourceCidrIp`, `SourceCidrIp` takes precedence.

When you specify this parameter, take note of the following items:

*   You cannot reference security groups as destinations or sources in the rules of advanced security groups.
*   You can reference up to 20 security groups as destinations or sources in the rules of each basic security group.

Valid values of N: 1 to 100.', example='sg-bp67acfmxa123b****'),
      sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='The Alibaba Cloud account that manages the source security group when you delete security group rule N across accounts.

*   If both `SourceGroupOwnerAccount` and `SourceGroupOwnerId` are not specified, the security group rule that controls access to other security groups managed by your account is deleted.
*   If you specify `SourceCidrIp`, `SourceGroupOwnerAccount` is ignored.

Valid values of N: 1 to 100.', example='Test@aliyun.com'),
      sourceGroupOwnerId?: long(name='SourceGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the source security group when you delete security group rule N across accounts.

*   If both `SourceGroupOwnerId` and `SourceGroupOwnerAccount` are not specified, the security group rule that controls access to other security groups managed by your account is deleted.
*   If you specify `SourceCidrIp`, `SourceGroupOwnerId` is ignored.

Valid values of N: 1 to 100.', example='12345678910'),
      sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol of security group rule N. Valid values:

*   If the Permissions.N.IpProtocol parameter is set to TCP or UDP, the port range is 1 to 65535. Specify a port range in the format of \\<start port number>/\\<end port number>. Example: 1/200.
*   If the Permissions.N.IpProtocol parameter is set to ICMP, the port range is -1/-1, which indicates all ports.
*   If the Permissions.N.IpProtocol parameter is set to GRE, the port range is -1/-1, which indicates all ports.
*   If the Permissions.N.IpProtocol parameter is set to ALL, the port range is -1/-1, which indicates all ports.

This parameter is supported by quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='80/80'),
      sourcePrefixListId?: string(name='SourcePrefixListId', description='The ID of the source prefix list that is referenced in security group rule N. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

When you specify this parameter, take note of the following items:

*   If the network type of a security group is classic network, you cannot reference prefix lists in the security group rules. For information about the limits on security groups and prefix lists, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota1~~).
*   If you specify the `SourceCidrIp`, `Ipv6SourceCidrIp`, or `SourceGroupId` parameter, this parameter is ignored.

Valid values of N: 1 to 100.', example='pl-x1j1k5ykzqlixdcy****'),
    }
  ](name='Permissions', description='The security group rules. Valid values of N: 1 to 100.', position='Query'),
  policy?: string(name='Policy', description='This parameter is deprecated. Use `Permissions.N.Policy` to specify whether to allow inbound access.', example='accept', deprecated='true', position='Query'),
  portRange?: string(name='PortRange', description='This parameter is deprecated. Use `Permissions.N.PortRange` to specify the range of destination ports.', example='1/200', deprecated='true', position='Query'),
  priority?: string(name='Priority', description='This parameter is deprecated. Use `Permissions.N.Priority` to specify the rule priority.', example='1', deprecated='true', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupRuleId?: [ string ](name='SecurityGroupRuleId', description='The IDs of the security group rules. Valid values of N: 1 to 100.', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.SourceCidrIp` to specify the source IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  sourceGroupId?: string(name='SourceGroupId', description='This parameter is deprecated. Use `Permissions.N.SourceGroupId` to specify the ID of the source security group.', example='sg-bp67acfmxa123b****', deprecated='true', position='Query'),
  sourceGroupOwnerAccount?: string(name='SourceGroupOwnerAccount', description='This parameter is deprecated. Use `Permissions.N.SourceGroupOwnerAccount` to specify the Alibaba Cloud account that manages the source security group.', example='Test@aliyun.com', deprecated='true', position='Query'),
  sourceGroupOwnerId?: long(name='SourceGroupOwnerId', description='This parameter is deprecated. Use `Permissions.N.SourceGroupOwnerId` to specify the ID of the Alibaba Cloud account that manages the source security group.', example='12345678910', deprecated='true', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='This parameter is deprecated. Use `Permissions.N.SourcePortRange` to specify the range of source ports.', example='80/80', deprecated='true', position='Query'),
  sourcePrefixListId?: string(name='SourcePrefixListId', description='This parameter is deprecated. Use `Permissions.N.SourcePrefixListId` to specify the ID of the source prefix list.', example='pl-x1j1k5ykzqlixdcy****', deprecated='true', position='Query'),
}

model RevokeSecurityGroupResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model RevokeSecurityGroupResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RevokeSecurityGroupResponseBody(name='body'),
}

/**
  * In the security group-related API documents, inbound traffic refers to the traffic sent by the source and received by the destination.
  * When you call this operation, you can use one of the following groups of parameters to specify the security group rules that you want to delete:
  * *   Parameters used to specify the IDs of security group rules. We recommend that you specify the IDs of security group rules to delete the rules. - If the security group rule ID that you specify does not exist, an error is reported. - You cannot specify the parameters that are no longer available and their Permissions.N-prefixed counterparts at the same time. - Sample request:
  *         http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroup
  *         &SecurityGroupId=sg-bp67acfmxazb4p****
  *         &SecurityGroupRuleId.1=sgr-bpdfmk****
  *         &SecurityGroupRuleId.2=sgr-bpdfmg****
  *         &<Common request parameters>
  * *   Parameters that are prefixed with Permissions.N.
  *     *   If no security group rule matches the specified parameters, the call to RevokeSecurityGroup is successful but no security group rules are deleted.
  *     *   You cannot specify SecurityGroupRuleId.N or the parameters that are not prefixed with Permissions.N.
  *     *   You can determine an inbound security group rule by specifying one of the following groups of parameters. You cannot determine an inbound security group rule by specifying only one parameter.
  *     *   Parameters used to determine an inbound security group rule that controls access from a CIDR block: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, DestCidrIp (optional), and SourceCidrIp. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourceCidrIp=10.0.0.0/8
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=80/80
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=accept
  *             &<Common request parameters>
  *     *   Parameters used to determine an inbound security group rule that controls access from another security group: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, DestCidrIp (optional), and SourceGroupId. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourceGroupId=sg-bp67acfmxa123b****
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=80/80
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=accept
  *             &<Common request parameters>
  *     *   Parameters used to determine an inbound security group rule that controls access from a prefix list: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, DestCidrIp (optional), and SourcePrefixListId. Sample request:
  *             http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroup
  *             &SecurityGroupId=sg-bp67acfmxazb4p****
  *             &Permissions.1.SourcePrefixListId=pl-x1j1k5ykzqlixdcy****
  *             &Permissions.1.IpProtocol=TCP
  *             &Permissions.1.PortRange=80/80
  *             &Permissions.1.NicType=intranet
  *             &Permissions.1.Policy=accept
  *             &<Common request parameters>
  *
 */
async function revokeSecurityGroup(request: RevokeSecurityGroupRequest): RevokeSecurityGroupResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RevokeSecurityGroup', 'POST', '/', 'json', false, 'json', request);
}

model RevokeSecurityGroupEgressRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E', position='Query'),
  description?: string(name='Description', description='This parameter is deprecated. Use `Permissions.N.Description` to specify the rule description.', example='This is description.', deprecated='true', position='Query'),
  destCidrIp?: string(name='DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.DestCidrIp` to specify the destination IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  destGroupId?: string(name='DestGroupId', description='This parameter is deprecated. Use `Permissions.N.DestGroupId` to specify the ID of the destination security group.', example='sg-bp67acfmxa123b****', deprecated='true', position='Query'),
  destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='This parameter is deprecated. Use `Permissions.N.DestGroupOwnerAccount` to specify the Alibaba Cloud account that manages the destination security group.', example='Test@aliyun.com', deprecated='true', position='Query'),
  destGroupOwnerId?: long(name='DestGroupOwnerId', description='This parameter is deprecated. Use `Permissions.N.DestGroupOwnerId` to specify the ID of the Alibaba Cloud account that manages the destination security group.', example='12345678910', deprecated='true', position='Query'),
  destPrefixListId?: string(name='DestPrefixListId', description='This parameter is deprecated. Use `Permissions.N.DestPrefixListId` to specify the ID of the destination prefix list.', example='pl-x1j1k5ykzqlixdcy****', deprecated='true', position='Query'),
  ipProtocol?: string(name='IpProtocol', description='This parameter is deprecated. Use `Permissions.N.IpProtocol` to specify the transport layer protocol.', example='TCP', deprecated='true', position='Query'),
  ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6DestCidrIp` to specify the destination IPv6 CIDR block.', example='2001:db8:1233:1a00::***', deprecated='true', position='Query'),
  ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.Ipv6SourceCidrIp` to specify the source IPv6 CIDR block.', example='2001:db8:1234:1a00::***', deprecated='true', position='Query'),
  nicType?: string(name='NicType', description='This parameter is deprecated. Use `Permissions.N.NicType` to specify the network interface type.', example='intranet', deprecated='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  permissions?: [ 
    {
      description?: string(name='Description', description='The description of security group rule N. The description must be 1 to 512 characters in length.

Valid values of N: 1 to 100.', example='This is description.'),
      destCidrIp?: string(name='DestCidrIp', description='The destination IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      destGroupId?: string(name='DestGroupId', description='The ID of the source security group that is referenced in security group rule N.

*   At least one of `DestGroupId`, `DestCidrIp`, `Ipv6DestCidrIp`, and `DestPrefixListId` must be specified.
*   If `DestGroupId` is specified but `DestCidrIp` is not specified, the `NicType` parameter must be set to intranet.
*   If both `DestGroupId` and `DestCidrIp` are specified, `DestCidrIp` takes precedence.

Take note of the following items:

*   For advanced security groups, security groups cannot be used as authorization objects.
*   For each basic security group, a maximum of 20 security groups can be used as authorization objects.

Valid values of N: 1 to 100.', example='sg-bp67acfmxa123b****'),
      destGroupOwnerAccount?: string(name='DestGroupOwnerAccount', description='The Alibaba Cloud account that manages the destination security group when you delete security group rules N across accounts.

*   If both `DestGroupOwnerAccount` and `DestGroupOwnerId` are not specified, the access control is revoked from another security group managed by your account.
*   If `DestCidrIp` is specified, `DestGroupOwnerAccount` is ignored.

Valid values of N: 1 to 100.', example='Test@aliyun.com'),
      destGroupOwnerId?: string(name='DestGroupOwnerId', description='The ID of the Alibaba Cloud account that manages the destination security group when you delete security group rule N across accounts.

*   If both `DestGroupOwnerId` and `DestGroupOwnerAccount` are not specified, the access control is revoked from another security group managed by your account.
*   If `DestCidrIp` is specified, `DestGroupOwnerId` is invalid.

Valid values of N: 1 to 100.', example='12345678910'),
      destPrefixListId?: string(name='DestPrefixListId', description='The ID of the destination prefix list that is referenced in security group rule N. You can call the [DescribePrefixLists](~~205046~~) operation to query the IDs of available prefix lists.

Take note of the following items:

*   If a security group is in the classic network, you cannot reference prefix lists in the security group rules. For information about the limits on security groups and prefix lists, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota1~~).
*   If you specify `DestCidrIp`, `Ipv6DestCidrIp`, or `DestGroupId`, this parameter is ignored.

Valid values of N: 1 to 100.', example='pl-x1j1k5ykzqlixdcy****'),
      ipProtocol?: string(name='IpProtocol', description='The transport layer protocol of security group rule N. The value of this parameter is case-insensitive. Valid values:

*   TCP
*   UDP
*   ICMP
*   ICMPv6
*   GRE
*   ALL: All protocols are supported.

Valid values of N: 1 to 100.', example='TCP'),
      ipv6DestCidrIp?: string(name='Ipv6DestCidrIp', description='The destination IPv6 CIDR block for security group rule N. CIDR blocks and IPv6 addresses are supported.

Valid values of N: 1 to 100.

> This parameter is valid only when the destination is Elastic Compute Service (ECS) instances that reside in virtual private clouds (VPCs) and support IPv6 CIDR blocks. You cannot specify both this parameter and the `DestCidrIp` parameter.', example='2001:db8:1233:1a00::***'),
      ipv6SourceCidrIp?: string(name='Ipv6SourceCidrIp', description='The source IPv6 CIDR block. CIDR blocks and IPv6 addresses are supported.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.

> This parameter is valid only when the source is ECS instances that reside in VPCs and support IPv6 CIDR blocks. You cannot specify both this parameter and the `SourceCidrIp` parameter.', example='2001:db8:1234:1a00::***'),
      nicType?: string(name='NicType', description='The network interface controller (NIC) type of security group rule N when the security group is in the classic network. Valid values:

*   internet: public NIC.
*   intranet: internal NIC.

If the security group is in a VPC, this parameter is set to intranet by default and cannot be modified.

If you specify only `SourceGroupId` when you configure access between security groups, this parameter must be set to intranet.

Default value: internet.

Valid values of N: 1 to 100.', example='intranet'),
      policy?: string(name='Policy', description='The action of security group rule N that determines whether to allow outbound access. Valid values:

*   accept: allows access.
*   drop: denies access and returns no responses. In this case, the request times out or the connection cannot be established.

Default value: accept.

Valid values of N: 1 to 100.', example='accept'),
      portRange?: string(name='PortRange', description='The range of destination ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Specify a port range in the format of \\<Start port number>/\\<End port number>. Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

Valid values of N: 1 to 100.', example='22/22'),
      priority?: string(name='Priority', description='The priority of security group rule N. A smaller value indicates a higher priority. Valid values: 1 to 100.

Default value: 1.

Valid values of N: 1 to 100.', example='1'),
      sourceCidrIp?: string(name='SourceCidrIp', description='The source IPv4 CIDR block for security group rule N. CIDR blocks and IPv4 addresses are supported.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='10.0.0.0/8'),
      sourcePortRange?: string(name='SourcePortRange', description='The range of source ports that correspond to the transport layer protocol for security group rule N. Valid values:

*   If you set IpProtocol to TCP or UDP, the port number range is 1 to 65535. Specify a port range in the format of \\<Start port number>/\\<End port number>. Example: 1/200.
*   If you set IpProtocol to ICMP, the port number range is -1/-1.
*   If you set IpProtocol to GRE, the port number range is -1/-1.
*   If you set IpProtocol to ALL, the port number range is -1/-1.

This parameter is specified to meet quintuple rules. For more information, see [Security group quintuple rules](~~97439~~).

Valid values of N: 1 to 100.', example='22/22'),
    }
  ](name='Permissions', description='Security group rule N. Valid values of N: 1 to 100.', position='Query'),
  policy?: string(name='Policy', description='This parameter is deprecated. Use `Permissions.N.Policy` to specify whether to allow outbound access.', example='accept', deprecated='true', position='Query'),
  portRange?: string(name='PortRange', description='This parameter is deprecated. Use `Permissions.N.PortRange` to specify the range of destination ports.', example='22/22', deprecated='true', position='Query'),
  priority?: string(name='Priority', description='This parameter is deprecated. Use `Permissions.N.Priority` to specify the rule priority.', example='1', deprecated='true', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the security group. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityGroupId: string(name='SecurityGroupId', description='The ID of the security group.', example='sg-bp67acfmxazb4p****', position='Query'),
  securityGroupRuleId?: [ string ](name='SecurityGroupRuleId', description='The ID of security group rule N. Valid values of N: 1 to 100.', position='Query'),
  sourceCidrIp?: string(name='SourceCidrIp', description='This parameter is deprecated. Use `Permissions.N.SourceCidrIp` to specify the source IPv4 CIDR block.', example='10.0.0.0/8', deprecated='true', position='Query'),
  sourcePortRange?: string(name='SourcePortRange', description='This parameter is deprecated. Use `Permissions.N.SourcePortRange` to specify the range of source ports.', example='22/22', deprecated='true', position='Query'),
}

model RevokeSecurityGroupEgressResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model RevokeSecurityGroupEgressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RevokeSecurityGroupEgressResponseBody(name='body'),
}

/**
  * In the security group-related API documents, outbound traffic refers to the traffic sent by the source and received by the destination.
  * When you call this operation, you can use one of the following groups of parameters to specify the security group rules that you want to delete:
  * *   Parameters used to specify the IDs of security group rules. We recommend that you specify the IDs of security group rules to delete the rules. - If the security group rule ID that you specify does not exist, an error is reported. - You cannot specify the parameters that are no longer available and their Permissions.N-prefixed counterparts at the same time. - Sample request:
  *         http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroupEgress
  *         &SecurityGroupId=sg-bp67acfmxazb4p****
  *         &SecurityGroupRuleId.1=sgr-bpdfmk****
  *         &SecurityGroupRuleId.2=sgr-bpdfmg****
  *         &<Common request parameters>
  * *   Parameters that are prefixed with Permissions.N.
  *     *   If no security group rule matches the specified parameters, the call to RevokeSecurityGroupEgress is successful but no security group rules are deleted.
  *     *   You cannot specify SecurityGroupRuleId.N or the parameters that are not prefixed with Permissions.N.
  *     *   You can determine a security group rule by specifying one of the following groups of parameters. You cannot determine a security group rule by specifying only one parameter.
  *         *   Parameters used to determine an outbound security group rule that controls access to a CIDR block: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, SourceCidrIp (optional), and DestCidrIp. Sample request:
  *                 http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroupEgress
  *                 &SecurityGroupId=sg-bp67acfmxazb4ph***
  *                 &Permissions.1.IpProtocol=TCP
  *                 &Permissions.1.DestCidrIp=10.0.0.0/8
  *                 &Permissions.1.PortRange=-22/22
  *                 &Permissions.1.NicType=intranet
  *                 &Permissions.1.Policy=accept
  *                 &<Common request parameters>
  *         *   Parameters used to determine an outbound security group rule that controls access to another security group: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, SourceCidrIp (optional), and DestGroupId. Sample request:
  *                 http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroupEgress
  *                 &SecurityGroupId=sg-bp67acfmxazb4ph***
  *                 &Permissions.1.DestGroupId=sg-bp67acfmxa123b****
  *                 &Permissions.1.IpProtocol=TCP
  *                 &Permissions.1.PortRange=22/22
  *                 &Permissions.1.NicType=intranet
  *                 &Permissions.1.Policy=accept
  *                 &<Common request parameters>
  *         *   Parameters used to determine an outbound security group rule that controls access to a prefix list: IpProtocol, PortRange, SourcePortRange (optional), NicType, Policy, SourceCidrIp (optional), and DestPrefixListId. Sample request:
  *                 http(s)://ecs.aliyuncs.com/?Action=RevokeSecurityGroupEgress
  *                 &SecurityGroupId=sg-bp67acfmxazb4ph***
  *                 &Permissions.1.IpProtocol=TCP
  *                 &Permissions.1.DestPrefixListId=pl-x1j1k5ykzqlixdcy****
  *                 &Permissions.1.PortRange=-22/22
  *                 &Permissions.1.NicType=intranet
  *                 &Permissions.1.Policy=accept
  *                 &<Common request parameters>
  *
 */
async function revokeSecurityGroupEgress(request: RevokeSecurityGroupEgressRequest): RevokeSecurityGroupEgressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RevokeSecurityGroupEgress', 'POST', '/', 'json', false, 'json', request);
}

model RunCommandRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The **token** can contain only ASCII characters and cannot exceed 64 characters in length. For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  commandContent: string(name='CommandContent', description='The content of the command. The command content can be plaintext or Base64-encoded. Take note of the following items:

*   If you want to retain the command, make sure that the Base64-encoded command content does not exceed 18 KB in size. If you do not want to retain the command, make sure that the Base64-encoded command content does not exceed 24 KB in size. You can set the `KeepCommand` parameter to specify whether to retain the command.

*   If the command content is encoded in Base6, set `ContentEncoding` to Base64.

*   If you set the `EnableParameter` parameter to true, the custom parameter feature is enabled and you can configure custom parameters based on the following rules:

    *   Specify custom parameters in the `{{}}` format. Within `{{}}`, the spaces and line feeds before and after the parameter names are ignored.
    *   You can specify up to 20 custom parameters.
    *   A custom parameter name can contain only letters, digits, underscores (\\_), and hyphens (-). The name is case-insensitive. The ACS:: prefix cannot be used to specify non-built-in environment parameters.
    *   Each custom parameter name cannot exceed 64 bytes in length.

*   You can specify built-in environment parameters as custom parameters. Then, when you run a command, the parameters are automatically specified by Cloud Assistant. You can specify the following built-in environment parameters:

    *   `{{ACS::RegionId}}`: the region ID.

    *   `{{ACS::AccountId}}`: the UID of the Alibaba Cloud account.

    *   `{{ACS::InstanceId}}`: the instance ID. If you want to run the command on multiple instances and specify `{{ACS::InstanceId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::InstanceName}}`: the instance name. If you want to run the command on multiple instances and specify `{{ACS::InstanceName}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.344
        *   Windows: 2.1.3.344

    *   `{{ACS::InvokeId}}`: the ID of the task. If you want to specify `{{ACS::InvokeId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309

    *   `{{ACS::CommandId}}`: the ID of the command. If you want to specify `{{ACS::CommandId}}` as a built-in environment parameter, make sure that the Cloud Assistant Agent version is not earlier than the following ones:

        *   Linux: 2.2.3.309
        *   Windows: 2.1.3.309', example='ZWNobyAxMjM=', position='Query'),
  containerId?: string(name='ContainerId', description='The ID of the container. Only 64-bit hexadecimal strings are supported. `docker://`, `containerd://`, or `cri-o://` can be used as the prefix to the container ID to specify the container runtime.

Take note of the following items:

*   If this parameter is specified, Cloud Assistant runs the command in the specified container of the instance.
*   If this parameter is specified, the command can run only on Linux instances on which Cloud Assistant Agent 2.2.3.344 or later is installed.
*   If this parameter is specified, the specified `Username` and `WorkingDir` parameters do not take effect. You can run the command in the default working directory of the container only by using the default user of the container. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).
*   If this parameter is specified, only shell scripts can be run in Linux containers. You cannot add a command in the format similar to `#!/usr/bin/python` at the beginning of a script to specify a script interpreter. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).', example='ab141ddfbacfe02d9dbc25966ed971536124527097398d419a6746873fea****', position='Query'),
  containerName?: string(name='ContainerName', description='The name of the container.

Take note of the following items:

*   If this parameter is specified, Cloud Assistant runs the command in the specified container of the instance.
*   If this parameter is specified, the command can run only on Linux instances on which Cloud Assistant Agent 2.2.3.344 or later is installed.
*   If this parameter is specified, the specified `Username` and `WorkingDir` parameters do not take effect. You can run the command in the default working directory of the container only by using the default user of the container. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).
*   If this parameter is specified, only shell scripts can be run in Linux containers. You cannot add a command in the format similar to `#!/usr/bin/python` at the beginning of a script to specify a script interpreter. For more information, see [Use Cloud Assistant to run commands in containers](~~456641~~).', example='test-container', position='Query'),
  contentEncoding?: string(name='ContentEncoding', description='The encoding mode of command content (`CommandContent`). The valid values are case-insensitive. Valid values:

*   PlainText: The command content is not encoded.
*   Base64: The command content is encoded in Base64.

Default value: PlainText. If the specified value of this parameter is invalid, PlainText is used by default.', example='Base64', position='Query'),
  description?: string(name='Description', description='The description of the command. The description supports all character sets and can be up to 512 characters in length.', example='testDescription', position='Query'),
  enableParameter?: boolean(name='EnableParameter', description='Specifies whether to include custom parameters in the command.

Default value: false.', example='false', position='Query'),
  frequency?: string(name='Frequency', description='The schedule on which to run the command. You can configure a command to run at a fixed interval based on a rate expression, run only once at a specified time, or run at designated times based on a cron expression.

*   To run a command at a fixed interval, use a rate expression to specify the interval. You can specify the interval in seconds, minutes, hours, or days. This option is suitable for scenarios in which tasks need to be executed at a fixed interval. Specify the interval in the following format: `rate(<Execution interval value> <Execution interval unit>)`. For example, specify `rate(5m)` to run the command every 5 minutes. When you specify an interval, take note of the following limits:

    *   The interval can be anywhere from 60 seconds to 7 days, but must be longer than the timeout period of the scheduled task.
    *   The interval is the amount of time that elapses between two consecutive executions. The interval is irrelevant to the amount of time that is required to run the command once. For example, assume that you set the interval to 5 minutes and that it takes 2 minutes to run the command each time. Each time the command is run, the system waits 3 minutes before the system runs the command again.
    *   A task is not immediately executed after the task is created. For example, assume that you set the interval to 5 minutes for a task. The task begins to be executed 5 minutes after it is created.

*   To run a command only once at a specific time, specify a point in time and a time zone. Specify the point in time in the `at(yyyy-MM-dd HH:mm:ss <Time zone>)` format, which indicates `at(Year-Month-Day Hour:Minute:Second <Time zone>)`. If you do not specify a time zone, the UTC time zone is used by default. You can specify the time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported.

    For example, to configure a command to run only once at 13:15:30 on June 6, 2022 (Shanghai time), set the time to `at(2022-06-06 13:15:30 Asia/Shanghai)`. To configure a command to run only once at 13:15:30 on June 6, 2022 (UTC-7), set the time to `at(2022-06-06 13:15:30 GMT-7:00)`.

*   To run a command at specific times, use a cron expression to define the schedule. Specify a schedule in the `<Cron expression> <Time zone>` format. The cron expression is in the `<seconds> <minutes> <hours> <day of the month> <month> <day of the week> <year (optional)>` format. The system calculates the execution times of the command based on the specified cron expression and time zone and runs the command as scheduled. If you do not specify a time zone, the system time zone of the instance on which you want to run the command is used by default. For more information about cron expressions, see [Cron expressions](~~64769~~). You can specify the time zone in the following forms:

    *   The time zone name. Examples: `Asia/Shanghai` and `America/Los_Angeles`.
    *   The time offset from GMT. Examples: `GMT+8:00` (UTC+8) and `GMT-7:00` (UTC-7). If you use the GMT format, you cannot add leading zeros to the hour value.
    *   The time zone abbreviation. Only UTC is supported. For example, to configure a command to run at 10:15:00 every day in 2022 (Shanghai time), set the schedule to `0 15 10 ? * * 2022 Asia/Shanghai`. To configure a command to run every half an hour from 10:00:00 to 11:30:00 every day in 2022 (UTC+8), set the schedule to `0 0/30 10-11 * * ? 2022 GMT+8:00`. To configure a command to run every 5 minutes from 14:00:00 to 14:55:00 every October every two years from 2022 in UTC, set the schedule to `0 0/5 14 * 10 ? 2022/2 UTC`.

    **

    **Note** The minimum interval must be 10 seconds or more and cannot be shorter than the timeout period of scheduled executions.', example='0 */20 * * * ?', position='Query'),
  instanceId?: [ string ](name='InstanceId', description='The IDs of instances on which to run the command. N indicates that you can specify multiple instance IDs at the same time. Valid values of N: 1 to 100.

If one of the specified instances does not meet the conditions for running the command, the call fails. To ensure that the call is successful, specify only the IDs of instances that meet the conditions.

You can apply for a quota increase in the Quota Center console. The quota name is Maximum number of instances supported for command execution.', example='i-bp185dy2o3o6neg****', position='Query'),
  keepCommand?: boolean(name='KeepCommand', description='Specifies whether to retain the command after the command is run. Valid values:

*   true: retains the command. Then, you can call the InvokeCommand operation to rerun the command. The retained command counts against the quota of Cloud Assistant commands.
*   false: does not retain the command. The command is automatically deleted after it is run and does not count against the quota of Cloud Assistant commands.

Default value: false.', example='false', position='Query'),
  name?: string(name='Name', description='The name of the command. The name supports all character sets and can be up to 128 characters in length.', example='testName', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  parameters?: map[string]any(name='Parameters', description='The key-value pairs of the custom parameters that are passed in when the command that can include custom parameters is run. For example, assume that the command content is `echo {{name}}`. The `Parameter` parameter can be used to pass in the `{"name":"Jack"}` key-value pair. The `name` key of the custom parameter is automatically replaced by the paired Jack value to generate a new command. As a result, the `echo Jack` command is run.

You can specify up to 10 custom parameters. Take note of the following items:

*   The key cannot be an empty string. It can be up to 64 characters in length.
*   The value can be an empty string.
*   If you want to retain the command, make sure that the command after Base64 encoding, including custom parameters and original command content, does not exceed 18 KB in size. If you do not want to retain the command, make sure that the command after Base64-encoding does not exceed 24 KB in size. You can set `KeepCommand` to specify whether to retain the command.
*   The custom parameter names that are specified by Parameters must be included in the custom parameter names that you specified when you created the command. You can use empty strings to represent the parameters that are not passed in.

This parameter is empty by default. You can leave this parameter empty to disable the custom parameter feature.', example='{"name":"Jack", "accessKey":"LTAIdyvdIqaRY****"}', shrink='json', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the command. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  repeatMode?: string(name='RepeatMode', description='Specifies how to run the command. Valid values:

*   Once: immediately runs the command.
*   Period: runs the command on a schedule. If you set this parameter to `Period`, you must specify `Frequency`.
*   NextRebootOnly: runs the command the next time the instance is started.
*   EveryReboot: runs the command every time the instance is started.

Default values:

*   If you do not specify the `Frequency` parameter, the default value is `Once`.
*   If you specify the `Frequency` parameter, `Period` is used as the value of RepeatMode regardless of whether RepeatMode is set to Period.

Take note of the following items:

*   You can call the [StopInvocation](~~64838~~) operation to stop the pending or scheduled executions of the command.
*   If you set this parameter to `Period` or `EveryReboot`, you can call the [DescribeInvocationResults](~~64845~~) operation with `IncludeHistory` set to true to query the results of historical scheduled executions.', example='Once', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the command executions. When you set this parameter, take note of the following items:

*   The instances specified by InstanceId.N must belong to the specified resource group.
*   After the command is run, you can set this parameter to call the [DescribeInvocations](~~64840~~) or [DescribeInvocationResults](~~64845~~) operation to query the execution results in the specified resource group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceTag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the instance.

Take note of the following items:

*   This parameter and InstanceId.N are mutually exclusive.
*   Valid values of N: 1 to 10. The tag key cannot be an empty string.
*   The number of instances that have the specified tags cannot exceed 50. If more than 50 instances have the specified tags, we recommend that you use batch tags such as batch: b1 to group the instances into batches of up to 50 instances.
*   The tag key can be up to 64 characters in length. It cannot start with aliyun or acs: and cannot contain http:// or https://.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N of the instance.

Take note of the following items:

*   Valid values of N: 1 to 10.
*   The tag value can be an empty string.
*   The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='ResourceTag', description='The tags of the instance. If you do not specify InstanceId.N, the command is run on the instances that have the specified tags.', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the command task. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all these tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call [ListTagResources](~~110425~~).

The tag key can be up to 64 characters in length and cannot start with `acs:` or `aliyun`. It cannot contain `http://` or `https://`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the command task. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The description of the command. The description supports all character sets and can be up to 512 characters in length.', position='Query'),
  terminationMode?: string(name='TerminationMode', description='Specifies how to stop the command task when a command execution is manually stopped or times out. Valid values:

*   Process: stops the process of the command.
*   ProcessTree: stops the process tree of the command. In this case, the process of the command and all subprocesses of the process are stopped.', example='ProcessTree', position='Query'),
  timed?: boolean(name='Timed', description='>  This parameter is no longer used and does not take effect.', example='true', position='Query'),
  timeout?: long(name='Timeout', description='The timeout period for the command execution. Unit: seconds.

A timeout error occurs if the command cannot be run because the process slows down or because a specific module or Cloud Assistant Agent does not exist. When an execution times out, the command process is forcefully terminated.

Default value: 60.', example='3600', position='Query'),
  type: string(name='Type', description='The language type of the command. Valid values:

*   RunBatScript: batch command, applicable to Windows instances.
*   RunPowerShellScript: PowerShell command, applicable to Windows instances.
*   RunShellScript: shell command, applicable to Linux instances.', example='RunShellScript', position='Query'),
  username?: string(name='Username', description='The username to use to run the command on the ECS instances. The username cannot exceed 255 characters in length.

*   For Linux instances, the root username is used by default.
*   For Windows instances, the System username is used by default.

You can also specify other usernames that already exist in the instances to run the command. For security purposes, we recommend that you run Cloud Assistant commands as a regular user. For more information, see [Run Cloud Assistant commands as a regular user](~~203771~~).', example='test', position='Query'),
  windowsPasswordName?: string(name='WindowsPasswordName', description='The name of the password to use to run the command on a Windows instance. The name cannot exceed 255 characters in length.

If you do not want to use the default System user to run the command on Windows instances, specify both WindowsPasswordName and `Username`. To mitigate the risk of password leaks, the password is stored in plaintext in CloudOps Orchestration Service (OOS) Parameter Store, and only the name of the password is passed in by using WindowsPasswordName. For more information, see [Manage encryption parameters](~~186828~~) and [Run Cloud Assistant commands as a regular user](~~203771~~).

>  If you use the root username for Linux instances or the System username for Windows instances to run the command, you do not need to specify WindowsPasswordName.', example='axtSecretPassword', position='Query'),
  workingDir?: string(name='WorkingDir', description='The working directory of the command on the instance. The value can be up to 200 characters in length.

Default values:

*   For Linux instances, the default value is `/root`, which is the home directory of the administrator (the root user).
*   For Windows instances, the default value is the directory where the Cloud Assistant Agent process resides, such as `C:\\Windows\\System32`.', example='/home/user', position='Query'),
}

model RunCommandResponseBody = {
  commandId?: string(name='CommandId', description='The command ID.', example='c-7d2a745b412b4601b2d47f6a768d****'),
  invokeId?: string(name='InvokeId', description='The command task ID.', example='t-7d2a745b412b4601b2d47f6a768d****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model RunCommandResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RunCommandResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Unlike the [CreateCommand](~~64844~~) and [InvokeCommand](~~64841~~) operations, the RunCommand operation can be used to create and run a command in a single request.
  * Take note of the following items:
  * *   The instances on which you want to run a command must be in the Running (`Running`) state. You can call the [DescribeInstances](~~25506~~) operation to query the status of instances.
  * *   [Cloud Assistant Agent](~~64921~~) must be installed on the instances.
  * *   Before you run a PowerShell command on a Windows instance, make sure that the PowerShell module is installed on the instance.
  * *   When you use a cron expression to specify a schedule, you can specify a time zone based on your business requirements. If you do not specify a time zone, the schedule is determined by the system time of the instances. Make sure that the time or time zone of the instances meets your business requirements. For information about time zones, see [Configure the NTP service for ECS instances that run CentOS 6](~~92803~~) or [Configure the NTP service for Windows instances](~~51890~~).
  * *   You can set `Timeout` to specify the timeout period for executions of the command on ECS instances. If an execution times out, Cloud Assistant Agent forcefully terminates the command process.
  *     *   When the one-time execution of the command times out, the execution state ([InvokeRecordStatus](~~64845~~)) of the command becomes Failed.
  *     *   For a scheduled task, the timeout period takes effect on each execution of the command. When a command execution times out, the subsequent executions of the command are not affected. When a scheduled execution of the command times out, the execution state ([InvokeRecordStatus](~~64845~~)) of the command becomes Failed.
  *     To ensure that scheduled tasks can run as expected, make sure that the version of Cloud Assistant Agent is not earlier than the following ones. A scheduled task can run a command at a specified interval, only once at a specified time, or at designated times based on a cron expression in a specified year or time zone. If the `ClientNeedUpgrade` error code is returned, you must update Cloud Assistant Agent to the latest version. For more information, see [Upgrade or disable upgrades of Cloud Assistant Agent](~~134383~~).
  *         - Linux: 2.2.3.282.
  *         - Windows: 2.1.3.282.
  * *   Command executions may fail due to instance status exceptions, network exceptions, or exceptions on Cloud Assistant Agent. If a command execution fails, no execution information is generated. For more information, see the [Command errors and solutions](~~87029~~) section in the "Check execution results and troubleshoot common issues" topic.
  * *   If you set `EnableParameter` to true, the custom parameter feature is enabled. When you configure `CommandContent`, you can define custom parameters in the `{{parameter}}` format. Then, when the command is run, the key-value pairs of the custom parameters are passed in.
  * *   You can retain up to 500 to 50,000 Cloud Assistant commands in each region. You can also apply for a quota increase. For information about how to query and increase quotas, see [Manage quotas](~~184116~~).
  * *   Before you run a command on instances, especially new instances, we recommend that you call the [DescribeCloudAssistantStatus](~~87346~~) operation to query the status of Cloud Assistant Agent on the instances and run the command when the value of CloudAssistantStatus in the response is true for the instances.
  *
 */
async function runCommand(request: RunCommandRequest): RunCommandResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RunCommand', 'POST', '/', 'json', false, 'json', request);
}

model RunInstancesRequest {
  cpuOptions?: {
    core?: int32(name='Core', description='The number of CPU cores. This parameter cannot be specified but only uses its default value.

For information about the default value, see [Customize CPU options](~~145895~~).', example='2'),
    numa?: string(name='Numa', description='This parameter is no longer used.', example='1'),
    threadsPerCore?: int32(name='ThreadsPerCore', description='The number of threads per CPU core. The following formula is used to calculate the number of vCPUs of the instance: `CpuOptions.Core` value × `CpuOptions.ThreadsPerCore` value.

*   If `CpuOptionsThreadPerCore` is set to 1, Hyper-Threading (HT) is disabled.
*   This parameter is applicable only to specific instance types.', example='2'),
    topologyType?: string(name='TopologyType', description='The CPU topology type of the instance. Valid values:

*   ContinuousCoreToHTMapping: The HT technology allows continuous threads to run on the same core in the CPU topology of the instance.``
*   DiscreteCoreToHTMapping: The HT technology allows discrete threads to run on the same core in the CPU topology of the instance.``

This parameter is empty by default.

>  This parameter is supported only for specific instance families. For more information about the supported instance families, see [View and modify the CPU topology](~~2636059~~).', example='DiscreteCoreToHTMapping'),
  }(name='CpuOptions', position='Query'),
  hibernationOptions?: {
    configured?: boolean(name='Configured', description='> This parameter is in invitational preview and is unavailable.', example='false'),
  }(name='HibernationOptions', position='Query'),
  privatePoolOptions?: {
    id?: string(name='Id', description='The ID of the private pool. The ID of a private pool is the same as that of the elasticity assurance or capacity reservation for which the private pool is generated.', example='eap-bp67acfmxazb4****'),
    matchCriteria?: string(name='MatchCriteria', description='The type of the private pool to use to create the instance. A private pool is generated after an elasticity assurance or a capacity reservation takes effect. You can select the private pool when you start an instance. Valid values:

*   Open: open private pool. The system selects a matching open private pool to create the instance. If no matching open private pools are found, resources in the public pool are used. When you set this parameter to Open, you can leave the `PrivatePoolOptions.Id` parameter empty.
*   Target: specified private pool. The system uses the capacity in a specified private pool to create the instance. If the specified private pool is unavailable, the instance cannot be created. If you set this parameter to Target, you must specify the `PrivatePoolOptions.Id` parameter.
*   None: no private pool. The capacity in private pools is not used.

Default value: None.

In the following scenarios, the PrivatePoolOptions.MatchCriteria parameter can be set only to `None` or left empty:

*   A preemptible instance is created.
*   The instance is created in the classic network.
*   The instance is created on a dedicated host.', example='Open'),
  }(name='PrivatePoolOptions', position='Query'),
  schedulerOptions?: {
    dedicatedHostClusterId?: string(name='DedicatedHostClusterId', description='The ID of the dedicated host cluster in which to create the instance. After this parameter is specified, the system selects one dedicated host from the specified cluster to create the instance.

> This parameter is valid only when the `Tenancy` parameter is set to `host`.

When you specify both the `DedicatedHostId` and `SchedulerOptions.DedicatedHostClusterId` parameters, take note of the following items:

*   If the specified dedicated host belongs to the specified dedicated host cluster, the instance is preferentially deployed on the specified dedicated host.
*   If the specified dedicated host does not belong to the specified dedicated host cluster, the instance cannot be created.

You can call the [DescribeDedicatedHostClusters](~~184145~~) operation to query the list of dedicated host cluster IDs.', example='dc-bp12wlf6am0vz9v2****'),
  }(name='SchedulerOptions', position='Query'),
  securityOptions?: {
    confidentialComputingMode?: string(name='ConfidentialComputingMode', description='The confidential computing mode. Set the value to Enclave.

A value of Enclave indicates that an enclave-based confidential computing environment is built on the instance. When you call the `RunInstances` operation, you can set this parameter only for c7, g7, or r7 instances to use enclave-based confidential computing. Take note of the following items:

*   The confidential computing feature is in invitational preview.
*   When you use the ECS API to create instances that support enclave-based confidential computing, you can call only the `RunInstances` operation. The `CreateInstance` operation does not support the `SecurityOptions.ConfidentialComputingMode` parameter.
*   Enclave-based confidential computing is implemented based on Alibaba Cloud Trusted System (vTPM). When you build a confidential computing environment on an instance by using Enclave, Alibaba Cloud Trusted System is enabled for the instance. If you set `SecurityOptions.ConfidentialComputingMode` to Enclave when you call this operation, the created instances use enclave-based confidential computing and Alibaba Cloud Trusted System regardless of whether `SecurityOptions.TrustedSystemMode` is set to vTPM.

For more information about confidential computing, see [Build a confidential computing environment by using Enclave](~~203433~~).', example='Enclave'),
    trustedSystemMode?: string(name='TrustedSystemMode', description='The trusted system mode. Set the value to vTPM.

The trusted system mode supports the following instance families:

*   g7, c7, and r7
*   Security-enhanced instance families: g7t, c7t, and r7t

When you create instances of the preceding instance families, you must set this parameter. Take note of the following items:

*   To use the Alibaba Cloud trusted system, set this parameter to vTPM. Then, the Alibaba Cloud trusted system performs trust verifications when the instances start.
*   If you do not want to use the Alibaba Cloud trusted system, leave this parameter empty. Note that if your created instances use an enclave-based confidential computing environment (with `SecurityOptions.ConfidentialComputingMode` set to Enclave), the Alibaba Cloud trusted system is enabled for the instances.
*   When you use the ECS API to create instances that use the trusted system, you can call only the `RunInstances` operation. The `CreateInstance` operation does not support the `SecurityOptions.TrustedSystemMode` parameter.

> If you have configured an instance as a trusted one when you created the instance, you can use only an image that support the trusted system to replace the system disk of the instance.

For more information about the trusted system, see [Overview](~~201394~~).', example='vTPM'),
  }(name='SecurityOptions', position='Query'),
  systemDisk?: {
    autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to the system disk.', example='sp-bp67acfmxazb4p****'),
    category?: string(name='Category', description='The category of the system disk. Valid values:

*   cloud_efficiency: utra disk
*   cloud_ssd: standard SSD
*   cloud_essd: enhanced SSD (ESSD)
*   cloud: basic disk
*   cloud_auto: ESSD AutoPL disk
*   cloud_essd_entry: ESSD Entry disk

>  The value of this parameter can be `cloud_essd_entry` only when `InstanceType` is set to `ecs.u1` or `ecs.e`. ecs.u1 indicates the u1 universal instance family and ecs.e indicates the e economy instance family. For information about the u1 and e instance families, see the [u1, universal instance family](~~457079~~) section in the "Universal instance families" topic and the [e, economy instance family](~~108489~~) section in the "Shared instance families" topic.

For non-I/O optimized instances of retired instance types, the default value is cloud. For other types of instances, the default value is cloud_efficiency.', example='cloud_ssd'),
    description?: string(name='Description', description='The description of the system disk. The description must be 2 to 256 characters in length. The description can contain letters but cannot start with `http://` or `https://`.', example='SystemDisk_Description'),
    diskName?: string(name='DiskName', description='The name of the system disk. The name must be 2 to 128 characters in length and support Unicode characters under the Decimal Number category and the categories whose names contain Letter. The name can contain colons (:), underscores (\\_), periods (.), and hyphens (-).', example='cloud_ssdSystem'),
    performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as the system disk. Default value: PL1. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1: A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL0'),
    size?: string(name='Size', description='The size of the system disk. Unit: GiB. Valid values:

*   Basic disk: 20 to 500.

*   ESSD: Valid values vary based on the performance level of the ESSD.

    *   PL0 ESSD: 1 to 2048.
    *   PL1 ESSD: 20 to 2048.
    *   PL2 ESSD: 461 to 2048.
    *   PL3 ESSD: 1261 to 2048.

*   ESSD AutoPL disk: 1 to 2048.

*   Other disk categories: 20 to 2048.

The value of this parameter must be at least 1 and greater than or equal to the image size.

Default value: 40 or the image size, whichever is greater.', example='40'),
    burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for the system disk. Valid values:

*   true: enables the performance burst feature for the system disk.
*   false: disables the performance burst feature for the system disk.

>  This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`. For more information, see [ESSD AutoPL disks](~~368372~~).', example='false'),
    encryptAlgorithm?: string(name='EncryptAlgorithm', description='>  This parameter is not publicly available.', example='ase-256'),
    encrypted?: string(name='Encrypted', description='Specifies whether to encrypt the system disk. Valid values:

*   true: encrypts the system disk.
*   false: does not encrypt the system disk.

Default value: false.

>  The system disks of instances cannot be encrypted during instance creation in Hong Kong Zone D or Singapore Zone A.', example='false'),
    KMSKeyId?: string(name='KMSKeyId', description='The ID of the KMS key to use for the system disk.', example='0e478b7a-4262-4802-b8cb-00d3fb40****', maxLength=64),
    provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk to use as the system disk. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}.

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}

>  This parameter is available only if you set `SystemDisk.Category` to `cloud_auto`. For more information, see [ESSD AutoPL disks](~~368372~~).', example='40000', minimum=0),
    storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster to which the system disk belongs. If you want to use disks in a dedicated block storage cluster as system disks when you create instances, specify this parameter.', example='dbsc-j5e1sf2vaf5he8m2****'),
  }(name='SystemDisk', position='Query'),
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  affinity?: string(name='Affinity', description='Specifies whether to associate an instance on a dedicated host with the dedicated host. Valid values:

*   default: does not associate the instance with the dedicated host. When you start an instance that was stopped in economical mode, the instance is automatically deployed to another dedicated host in the automatic deployment resource pool if the available resources of the original dedicated host are insufficient.
*   host: associates the instance with the dedicated host. When you start an instance that was stopped in economical mode, the instance remains on the original dedicated host. If the available resources of the original dedicated host are insufficient, the instance cannot be started.

Default value: default.', example='default', position='Query'),
  amount?: int32(name='Amount', description='The desired number of ECS instances. Valid values: 1 to 100.

The number of ECS instances that can be created varies based on the Amount and MinAmount values.

*   If you do not specify MinAmount, the RunInstances operation creates ECS instances based on the Amount value. If the available resources are insufficient to create the desired number of ECS instances, the RunInstances operation returns an error response and no ECS instances are created.

*   If you specify MinAmount, take note of the following items:

    *   If the available resources are insufficient to create the minimum number of ECS instances, no ECS instances are created and the RunInstances operation returns an error response.
    *   If the available resources are insufficient to create the desired number of ECS instances but are sufficient to create the minimum number of ECS instances, the RunInstances operation uses the available resources to create ECS instances and returns a success response. In this case, the number of ECS instances that can be created is less than the desired number of ECS instances.
    *   If the available resources are sufficient to create the desired number of ECS instances, the RunInstances operation uses the available resources to create the desired number of ECS instances and returns a success response.

Default value: 1.', example='3', minimum=1, maximum=1000, position='Query'),
  arn?: [ 
    {
      assumeRoleFor?: long(name='AssumeRoleFor', description='This parameter is not publicly available.', example='0'),
      roleType?: string(name='RoleType', description='This parameter is not publicly available.', example='null'),
      rolearn?: string(name='Rolearn', description='This parameter is not publicly available.', example='null'),
    }
  ](name='Arn', description='This parameter is not publicly available.', position='Query'),
  autoPay?: boolean(name='AutoPay', description='Specifies whether to automatically complete the payment for instance creation. Valid values:

*   true: The payment is automatically completed.

    **

    **Note** Make sure that your account balance is sufficient. Otherwise, your order becomes invalid and is canceled. If your account balance is insufficient, you can set `AutoPay` to `false` to generate an unpaid order. Then, you can log on to the ECS console to pay for the order.

*   false: An order is generated but no payment is made.

    **

    **Note** When `InstanceChargeType` is set to `PostPaid`, `AutoPay` cannot be set to `false`.

Default value: true.', example='true', position='Query'),
  autoReleaseTime?: string(name='AutoReleaseTime', description='The time when to automatically release the pay-as-you-go instance. Specify the time in the [ISO 8601 standard](~~25696~~) in the `yyyy-MM-ddTHH:mm:ssZ` format. The time must be in UTC.

*   If the value of seconds (`ss`) is not `00`, the start time is automatically rounded to the nearest minute based on the value of minutes (`mm`).
*   The specified time must be at least 30 minutes later than the current time.
*   The specified time can be at most three years later than the current time.', example='2018-01-01T12:05:00Z', position='Query'),
  autoRenew?: boolean(name='AutoRenew', description='Specifies whether to enable auto-renewal for the instance. This parameter is valid only when the `InstanceChargeType` parameter is set to `PrePaid`. Valid values:

*   true: enables auto-renewal.
*   false: does not enable auto-renewal.

Default value: false.', example='true', position='Query'),
  autoRenewPeriod?: int32(name='AutoRenewPeriod', description='The auto-renewal period of the instance. Valid values:

*   Valid values when PeriodUnit is set to Week: 1, 2, and 3.
*   Valid values when PeriodUnit is set to Month: 1, 2, 3, 6, 12, 24, 36, 48, and 60.

Default value: 1.', example='1', position='Query'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but you must make sure that the token is unique among different requests. The token can contain only ASCII characters and cannot exceed 64 characters in length.**** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  creditSpecification?: string(name='CreditSpecification', description='The performance mode of the burstable instance. Valid values:

*   Standard: the standard mode. For more information, see the "Standard mode" section in [Overview of burstable instances](~~59977~~).
*   Unlimited: the unlimited mode. For more information, see the "Unlimited mode" section in [Burstable instances](~~59977~~).', example='Standard', position='Query'),
  dataDisk?: [ 
    {
      autoSnapshotPolicyId?: string(name='AutoSnapshotPolicyId', description='The ID of the automatic snapshot policy to apply to data disk N.', example='sp-bp67acfmxazb4p****'),
      burstingEnabled?: boolean(name='BurstingEnabled', description='Specifies whether to enable the performance burst feature for data disk N. Valid values:

*   true: enables the performance burst feature for the data disk.
*   false: disables the performance burst feature for the data disk.

>  This parameter is available only if you set DataDisk.N.Category to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~).', example='false'),
      category?: string(name='Category', description='The category of data disk N. Valid values:

*   cloud_efficiency: ultra disk.

*   cloud_ssd: standard SSD.

*   cloud_essd: ESSD.

*   cloud: basic disk.

*   cloud_auto: ESSD AutoPL disk.

*   cloud_essd_entry: ESSD Entry disk.

    **

    **Note** This parameter can be set to `cloud_essd_entry` only when `InstanceType` is set to `ecs.u1` or `ecs.e`.

*   elastic_ephemeral_disk_standard: standard elastic ephemeral disk.

*   elastic_ephemeral_disk_premium: premium elastic ephemeral disk.

For I/O optimized instances, the default value is cloud_efficiency. For non-I/O optimized instances, the default value is cloud.', example='cloud_ssd'),
      deleteWithInstance?: boolean(name='DeleteWithInstance', description='Specifies whether to release data disk N when the instance is released. Valid values:

*   true: releases data disk N when the instance is released.
*   false: does not release data disk N when the instance is released.

Default value: true.', example='true'),
      description?: string(name='Description', description='The description of data disk N. The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.', example='DataDisk_Description'),
      device?: string(name='Device', description='The mount point of data disk N. The mount points are named based on the number of data disks:

*   1st to 25th data disks: /dev/xvd`[b-z]`.
*   From the 26th data disk on: /dev/xvd`[aa-zz]`. For example, the 26th data disk is named /dev/xvdaa, the 27th data disk is named /dev/xvdab, and so on.

>  This parameter is applicable to scenarios in which a full image is used to create instances. A full image is an image that contains an operating system, application software, and business data. For these scenarios, you can set the parameter to the mount point of data disk N contained in the full image and modify `DataDisk.N.Size` and `DataDisk.N.Category` to change the category and size of data disk N created based on the image.', example='/dev/xvdb'),
      diskName?: string(name='DiskName', description='The name of data disk N. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).', example='cloud_ssdData'),
      encryptAlgorithm?: string(name='EncryptAlgorithm', description='>  This parameter is not publicly available.', example='aes-256'),
      encrypted?: string(name='Encrypted', description='Specifies whether to encrypt data disk N. Valid values:

*   true: encrypts data disk N.
*   false: does not encrypt data disk N.

Default value: false.', example='false'),
      KMSKeyId?: string(name='KMSKeyId', description='The ID of the Key Management Service (KMS) key to use for data disk N.', example='0e478b7a-4262-4802-b8cb-00d3fb40****', maxLength=64),
      performanceLevel?: string(name='PerformanceLevel', description='The performance level of the ESSD to use as data disk N. The value of N must be the same as that in `DataDisk.N.Category` when DataDisk.N.Category is set to cloud_essd. Valid values:

*   PL0: A single ESSD can deliver up to 10,000 random read/write IOPS.
*   PL1 (default): A single ESSD can deliver up to 50,000 random read/write IOPS.
*   PL2: A single ESSD can deliver up to 100,000 random read/write IOPS.
*   PL3: A single ESSD can deliver up to 1,000,000 random read/write IOPS.

For more information about ESSD performance levels, see [ESSDs](~~122389~~).', example='PL1'),
      provisionedIops?: long(name='ProvisionedIops', description='The provisioned read/write IOPS of the ESSD AutoPL disk to use as data disk N. Valid values: 0 to min{50,000, 1,000 × Capacity - Baseline IOPS}.

Baseline IOPS = min{1,800 + 50 × Capacity, 50,000}.

>  This parameter is available only if you set DataDisk.N.Category to cloud_auto. For more information, see [ESSD AutoPL disks](~~368372~~).', example='40000', minimum=0),
      size?: int32(name='Size', description='The size of data disk N. Valid values of N: 1 to 16. Unit: GiB. Valid values:

*   Valid values when DataDisk.N.Category is set to cloud_efficiency: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_ssd: 20 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_essd: vary based on the value of `DataDisk.N.PerformanceLevel`.

    *   Valid values when DataDisk.N.PerformanceLevel is set to PL0: 1 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL1: 20 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL2: 461 to 32768.
    *   Valid values when DataDisk.N.PerformanceLevel is set to PL3: 1261 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud: 5 to 2000.

*   Valid values when DataDisk.N.Category is set to cloud_auto: 1 to 32768.

*   Valid values when DataDisk.N.Category is set to cloud_essd_entry: 10 to 32768.

>  The value of this parameter must be greater than or equal to the size of the snapshot specified by `DataDisk.N.SnapshotId`.', example='2000'),
      snapshotId?: string(name='SnapshotId', description='The ID of the snapshot to use to create data disk N. Valid values of N: 1 to 16.

If `DataDisk.N.SnapshotId` is specified, `DataDisk.N.Size` is ignored. The data disk is created based on the size of the specified snapshot. Use snapshots created after July 15, 2013. Otherwise, an error is returned and your request is rejected.', example='s-bp17441ohwka0yuh****'),
      storageClusterId?: string(name='StorageClusterId', description='The ID of the dedicated block storage cluster to which data disk N belongs. If you want to use a disk in a dedicated block storage cluster as data disk N when you create the instance, specify this parameter.', example='dbsc-j5e1sf2vaf5he8m2****'),
    }
  ](name='DataDisk', description='The data disks.', position='Query'),
  dedicatedHostId?: string(name='DedicatedHostId', description='The ID of the dedicated host on which to create the instance. If you set the `DedicatedHostId` parameter, the `SpotStrategy` and `SpotPriceLimit` parameters are ignored. This is because preemptible instances cannot be created on dedicated hosts.

You can call the [DescribeDedicatedHosts](~~134242~~) operation to query the list of dedicated host IDs.', example='dh-bp67acfmxazb4p****', position='Query'),
  deletionProtection?: boolean(name='DeletionProtection', description='Specifies whether to enable release protection for the instance. This parameter determines whether you can use the ECS console or call the [DeleteInstance](~~25507~~) operation to release the instance. Valid values:

*   true: enables release protection for the instance.
*   false: disables release protection for the instance.

Default value: false.

> This parameter is applicable to only pay-as-you-go instances. It can protect instances against manual releases, but not against automatic releases.', example='false', position='Query'),
  deploymentSetGroupNo?: int32(name='DeploymentSetGroupNo', description='The number of the deployment set group to which to deploy the instance. If the deployment set specified by the DeploymentSetId parameter uses the high availability group strategy (AvailabilityGroup), you can use the DeploymentSetGroupNo parameter to specify a deployment set group in the deployment set. Valid values: 1 to 7.', example='1', position='Query'),
  deploymentSetId?: string(name='DeploymentSetId', description='The ID of the deployment set to which to deploy the instance.', example='ds-bp1brhwhoqinyjd6****', position='Query'),
  description?: string(name='Description', description='The description of the instance. The description must be 2 to 256 characters in length, and cannot start with `http://` or `https://`.', example='Instance_Description', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to check the validity of the request without actually making the request. Default value: false. Valid values:

*   true: The validity of the request is checked but the request is not made. Check items include whether required parameters are specified, the request format, service limits, and available ECS resources. If the check fails, the corresponding error code is returned. If the check succeeds, the `DryRunOperation` error code is returned.
*   false: The validity of the request is checked, and the request is made if the check succeeds.', example='false', position='Query'),
  hostName?: string(name='HostName', description='The hostname of the instance. Take note of the following items:

*   The hostname cannot start or end with a period (.) or hyphen (-). It cannot contain consecutive periods (.) or hyphens (-).

*   For Windows instances, the hostname must be 2 to 15 characters in length and cannot contain periods (.) or contain only digits. It can contain letters, digits, and hyphens (-).

*   For instances that run other operating systems such as Linux, take note of the following items:

    *   The hostname must be 2 to 64 characters in length. You can use periods (.) to separate a hostname into multiple segments. Each segment can contain letters, digits, and hyphens (-).
    *   You can use the `${instance_id}` placeholder to pass instance IDs into the hostname specified by `HostName`. For example, if you set `HostName` to k8s-${instance_id} and the instance is assigned an ID of `i-123abc****`, the hostname of the instance is `k8s-i-123abc****`.

When you create multiple instances, you can perform the following operations:

*   Batch configure sequential hostnames for the instances. For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).
*   Use the `HostNames.N` parameter to configure different hostnames for instances. You cannot specify both the `HostName` and `HostNames.N` parameters.', example='k8s-node-[1,4]-ecshost', position='Query'),
  hostNames?: [ string ](name='HostNames', description='The hostname of instance N. You can use this parameter to specify different hostnames for multiple instances.', example='ecs-host-01', position='Query'),
  hpcClusterId?: string(name='HpcClusterId', description='The ID of the high performance computing (HPC) cluster to which the instance belongs.

This parameter is required when you create instances of a Supper Computing Cluster (SCC) instance type. For information about how to create an HPC cluster, see [CreateHpcCluster](~~109138~~).', example='hpc-bp67acfmxazb4p****', position='Query'),
  httpEndpoint?: string(name='HttpEndpoint', description='Specifies whether to enable the access channel for instance metadata. Valid values:

*   enabled
*   disabled

Default value: enabled.

> For more information about instance metadata, see [Overview of ECS instance metadata](~~49122~~).', example='enabled', position='Query'),
  httpPutResponseHopLimit?: int32(name='HttpPutResponseHopLimit', description='The HTTP PUT response hop limit for accessing instance metadata. Valid values: 1 to 64.

Default value: 1.', example='3', position='Query'),
  httpTokens?: string(name='HttpTokens', description='Specifies whether to forcefully use the security-enhanced mode (IMDSv2) to access instance metadata. Valid values:

*   optional: does not forcefully use the security-enhanced mode (IMDSv2).
*   required: forcefully uses the security-enhanced mode (IMDSv2). After you set this parameter to required, you cannot access instance metadata in normal mode.

Default value: optional.

> For more information about the modes of accessing instance metadata, see [Access mode of instance metadata](~~150575~~).', example='optional', position='Query'),
  imageFamily?: string(name='ImageFamily', description='The name of the image family. You can set this parameter to obtain the latest available custom image from the specified image family to create instances.

*   If you specify `ImageId`, you cannot specify ImageFamily.
*   If you do not specify `ImageId` but use the `LaunchTemplateId` or `LaunchTemplateName` parameter to specify a launch template that has the `ImageId` parameter specified, you cannot specify ImageFamily.
*   If you do not specify `ImageId` but use the `LaunchTemplateId` or `LaunchTemplateName` parameter to specify a launch template that does not have the `ImageId` parameter specified, you can specify ImageFamily.
*   If you do not specify `ImageId`, `LaunchTemplateId`, or `LaunchTemplateName`, you can specify ImageFamily.

>  For information about image families that are associated with Alibaba Cloud official images, see [Overview of public images](~~108393~~).', example='hangzhou-daily-update', position='Query'),
  imageId?: string(name='ImageId', description='The ID of the image. You can call the [DescribeImages](~~25534~~) operation to query available images. If you do not use `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template and do not set `ImageFamily` to obtain the latest available custom image from a specified image family, you must specify `ImageId`.', example='aliyun_2_1903_x64_20G_alibase_20200324.vhd', position='Query'),
  imageOptions?: {
    loginAsNonRoot?: boolean(name='LoginAsNonRoot', description='Specifies whether the instance that uses the image supports logons of the ecs-user user. Valid values:

*   true
*   false', example='false'),
  }(name='ImageOptions', description='Details about the image options.', position='Query'),
  instanceChargeType?: string(name='InstanceChargeType', description='The billing method of the instance. Valid values:

*   PrePaid: subscription
*   PostPaid: pay-as-you-go

Default value: PostPaid.

If you set this parameter to PrePaid, make sure that your account has sufficient balance or credit. Otherwise, an `InvalidPayMethod` error is returned.', example='PrePaid', position='Query'),
  instanceName?: string(name='InstanceName', description='The name of the instance. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-). The default value of this parameter is the `InstanceId` value.

When you batch create instances, you can batch configure sequential names for the instances. The sequential names can contain brackets (\\[ ]) and commas (,). For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).', example='k8s-node-[1,4]-alibabacloud', position='Query'),
  instanceType?: string(name='InstanceType', description='The instance type. If you do not use `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template, you must set the `InstanceType` parameter.

*   Select an instance type. See [Instance families](~~25378~~) or call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of an instance type, or see [Best practices for instance type selection](~~58291~~) to learn about how to select instance types.
*   Query available resources. Call the [DescribeAvailableResource](~~66186~~) operation to query available resources in a specific region or zone.', example='ecs.g6.large', position='Query'),
  internetChargeType?: string(name='InternetChargeType', description='The billing method for network usage. Valid values:

*   PayByBandwidth: pay-by-bandwidth
*   PayByTraffic: pay-by-traffic

Default value: PayByTraffic.

> When the **pay-by-traffic** billing method for network usage is used, the maximum inbound and outbound bandwidths are used as the upper limits of bandwidths instead of guaranteed performance specifications. In scenarios where demand outstrips resource supplies, these maximum bandwidth values may not be reached. If you want guaranteed bandwidths for your instance, use the **pay-by-bandwidth** billing method for network usage.', example='PayByTraffic', position='Query'),
  internetMaxBandwidthIn?: int32(name='InternetMaxBandwidthIn', description='The maximum inbound public bandwidth. Unit: Mbit/s. Valid values:

*   When the purchased outbound public bandwidth is less than or equal to 10 Mbit/s, the valid values of InternetMaxBandwidthIn are 1 to 10, and the default value is 10.
*   When the purchased outbound public bandwidth is greater than 10 Mbit/s, the valid values of this parameter are 1 to the `InternetMaxBandwidthOut` value and the default value is the `InternetMaxBandwidthOut` value.', example='10', position='Query'),
  internetMaxBandwidthOut?: int32(name='InternetMaxBandwidthOut', description='The maximum outbound public bandwidth. Unit: Mbit/s. Valid values: 0 to 100.

Default value: 0.', example='10', position='Query'),
  ioOptimized?: string(name='IoOptimized', description='Specifies whether the instance is I/O optimized. For instances of [retired instance types](~~55263~~), the default value is none. For instances of other instance types, the default value is optimized. Valid values:

*   none: The instance is not I/O optimized.
*   optimized: The instance is I/O optimized.', example='optimized', position='Query'),
  ipv6Address?: [ string ](name='Ipv6Address', description='IPv6 address N to be assigned to the primary ENI. Valid values of N: 1 to 10.

Example: `Ipv6Address.1=2001:db8:1234:1a00::***`.

Take note of the following items:

*   If the `Ipv6Address.N` parameter is specified, you must set the `Amount` parameter to 1 and leave the `Ipv6AddressCount` parameter empty.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot set `Ipv6Addresses.N` or `Ipv6AddressCount` and must set `NetworkInterface.N.Ipv6Addresses.N` or `NetworkInterface.N.Ipv6AddressCount`.', example='Ipv6Address.1=2001:db8:1234:1a00::***', position='Query'),
  ipv6AddressCount?: int32(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the primary ENI. Valid values: 1 to 10.

Take note of the following items:

*   You cannot specify both the `Ipv6Addresses.N` and `Ipv6AddressCount` parameters.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `Ipv6Address.N` or `Ipv6AddressCount` but can specify `NetworkInterface.N.Ipv6Address.N` or `NetworkInterface.N.Ipv6AddressCount`.', example='1', position='Query'),
  isp?: string(name='Isp', description='> This parameter is in invitational preview and is unavailable.', example='null', position='Query'),
  keyPairName?: string(name='KeyPairName', description='The name of the key pair.

> For Windows instances, this parameter is ignored. This parameter is empty by default. The `Password` parameter takes effect even if the KeyPairName parameter is specified.', example='KeyPair_Name', position='Query'),
  launchTemplateId?: string(name='LaunchTemplateId', description='The ID of the launch template. For more information, call the [DescribeLaunchTemplates](~~73759~~) operation.

To use a launch template to create an instance, you must use the `LaunchTemplateId` or `LaunchTemplateName` parameter to specify the launch template.', example='lt-bp1apo0bbbkuy0rj****', position='Query'),
  launchTemplateName?: string(name='LaunchTemplateName', description='The name of the launch template.

To use a launch template to create an instance, you must use the `LaunchTemplateId` or `LaunchTemplateName` parameter to specify the launch template.', example='LaunchTemplate_Name', position='Query'),
  launchTemplateVersion?: long(name='LaunchTemplateVersion', description='The version of the launch template. If you set the `LaunchTemplateId` or `LaunchTemplateName` parameter but do not set the version number of the launch template, the default template version is used.', example='3', position='Query'),
  minAmount?: int32(name='MinAmount', description='The minimum number of ECS instances to be created. Valid values: 1 to 100.

The number of ECS instances that can be created varies based on the Amount and MinAmount values.

*   If you do not specify MinAmount, the RunInstances operation creates ECS instances based on the Amount value. If the available resources are insufficient to create the desired number of ECS instances, the RunInstances operation returns an error response and no ECS instances are created.

*   If you specify MinAmount, take note of the following items:

    *   If the available resources are insufficient to create the minimum number of ECS instances, no ECS instances are created and the RunInstances operation returns an error response.
    *   If the available resources are insufficient to create the desired number of ECS instances but are sufficient to create the minimum number of ECS instances, the RunInstances operation uses the available resources to create ECS instances and returns a success response. In this case, the number of ECS instances that can be created is less than the desired number of ECS instances.
    *   If the available resources are sufficient to create the desired number of ECS instances, the RunInstances operation uses the available resources to create the desired number of ECS instances and returns a success response.', example='2', minimum=1, maximum=100, position='Query'),
  networkInterface?: [ 
    {
      deleteOnRelease?: boolean(name='DeleteOnRelease', description='Specifies whether to retain ENI N when the associated instance is released. Valid values:

*   true: releases the ENI when the associated instance is released.
*   false: retains the ENI when the associated instance is released.

Default value: true.

>  This parameter takes effect only for secondary ENIs.', example='true'),
      description?: string(name='Description', description='The description of ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   The description must be 2 to 256 characters in length and cannot start with `http://` or `https://`.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you do not need to specify this parameter.', example='Network_Description'),
      instanceType?: string(name='InstanceType', description='The type of ENI N. Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.

Valid values:

*   Primary: the primary ENI.
*   Secondary: the secondary ENI.

Default value: Secondary.', example='Secondary'),
      ipv6Address?: [ string ](name='Ipv6Address', description='IPv6 address N to assign to the primary ENI. You can assign up to 10 IPv6 addresses to the primary ENI. Valid values of the second N: 1 to 10.

Example: `Ipv6Address.1=2001:db8:1234:1a00::***`.

Take note of the following items:

*   This parameter is valid only when `NetworkInterface.N.InstanceType` is set to `Primary`. If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, you cannot specify this parameter.
*   If you specify this parameter, you must set `Amount` to 1 and cannot specify `Ipv6AddressCount`, `Ipv6Address.N`, or `NetworkInterface.N.Ipv6AddressCount`.'),
      ipv6AddressCount?: long(name='Ipv6AddressCount', description='The number of IPv6 addresses to randomly generate for the primary ENI. Valid values: 1 to 10.

Take note of the following items:

*   This parameter is valid only when `NetworkInterface.N.InstanceType` is set to `Primary`. If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, you cannot specify this parameter.
*   If this parameter is specified, you cannot specify `Ipv6AddressCount`, `Ipv6Address.N`, or `NetworkInterface.N.Ipv6Address.N`.', example='1'),
      networkCardIndex?: int32(name='NetworkCardIndex', description='The index of the network card for ENI N.

Take note of the following items:

*   You can specify network card indexes only for instances of specific instance types.
*   When NetworkInterface.N.InstanceType is set to Primary, you can set NetworkInterface.N.NetworkCardIndex only to 0 for instance types that support network cards.
*   When NetworkInterface.N.InstanceType is set to Secondary or left empty, you can specify NetworkInterface.N.NetworkCardIndex based on instance types if the instance types support network cards. For more information, see [Overview of instance families](~~25378~~).', example='0'),
      networkInterfaceId?: string(name='NetworkInterfaceId', description='The ID of ENI N to attach to the instance.

>  This parameter takes effect only for secondary ENIs. After you specify an existing secondary ENI, you cannot specify other ENI creation parameters.', example='eni-bp1gn106np8jhxhj****'),
      networkInterfaceName?: string(name='NetworkInterfaceName', description='The name of ENI N. The name must be 2 to 128 characters in length and can contain letters, digits, colons (:), underscores (\\_), periods (.), and hyphens (-).

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you do not need to specify this parameter.', example='Network_Name'),
      networkInterfaceTrafficMode?: string(name='NetworkInterfaceTrafficMode', description='The communication mode of ENI N. Valid values:

*   Standard: uses the TCP communication mode.
*   HighPerformance: uses the remote direct memory access (RDMA) communication mode with Elastic RDMA Interface (ERI) enabled.

Default value: Standard.

>  The number of ERIs on an instance cannot exceed the maximum number of ERIs that the instance type supports. For more information, see [Overview of instance families](~~25378~~).', example='Standard'),
      primaryIpAddress?: string(name='PrimaryIpAddress', description='The primary IP address to assign to ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2.

    *   If the value of N is 1, you can configure a primary or secondary ENI. If this parameter is specified, `Amount` is set to a numeric value greater than 1, and NetworkInterface.N.InstanceType is set to Primary, the specified number of instances are created and consecutive primary IP addresses starting from the specified IP address are assigned to the instances. In this case, you cannot attach secondary ENIs to the instances.
    *   If the value of N is 2, you can configure a primary ENI and a secondary ENI. If this parameter is specified, `Amount` is set to a numeric value greater than 1, and NetworkInterface.N.InstanceType is set to Primary, you cannot set `NetworkInterface.2.InstanceType` to Secondary to attach a secondary ENI.

*   If `NetworkInterface.N.InstanceType` is set to `Primary`, this parameter is equivalent to `PrivateIpAddress`. You cannot specify both this parameter and `PrivateIpAddress` in the same request.

*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, the specified primary IP address is assigned to the secondary ENI. The default value is an IP address that is randomly selected from within the CIDR block of the vSwitch to which to connect the secondary ENI.

> 

*   You can attach only a single secondary ENI when you create an ECS instance. After the instance is created, you can call the [CreateNetworkInterface](~~58504~~) and [AttachNetworkInterface](~~58515~~) operations to attach more secondary ENIs.

*   The first IP address and last three IP addresses of each vSwitch CIDR block are reserved. You cannot specify the IP addresses. For example, if a vSwitch CIDR block is 192.168.1.0/24, the following IP addresses are reserved: 192.168.1.0, 192.168.1.253, 192.168.1.254, and 192.168.1.255.', example='172.16.**.**'),
      queueNumber?: int32(name='QueueNumber', description='The number of queues supported by ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   The value of this parameter cannot exceed the maximum number of queues allowed per ENI.
*   The total number of queues for all ENIs on the instance cannot exceed the queue quota for the instance type. To query the maximum number of queues per ENI and the queue quota for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation and check the `MaximumQueueNumberPerEni` and `TotalEniQueueQuantity` values in the response.
*   If this parameter is set and `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `NetworkInterfaceQueueNumber`.', example='8', minimum=1),
      queuePairNumber?: long(name='QueuePairNumber', description='The number of queues supported by the ERI.', example='0'),
      rxQueueSize?: int32(name='RxQueueSize', description='The receive (Rx) queue depth of ENI N.

Take note of the following items:

*   The Rx queue depth of an ENI must be the same as the transmit (Tx) queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Rx queue depth yields higher inbound throughput but consumes more memory.', example='8192'),
      securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which to assign ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must specify this parameter. In this case, this parameter is equivalent to `SecurityGroupId`. You cannot specify `SecurityGroupId`, `SecurityGroupIds.N`, or `NetworkInterface.N.SecurityGroupIds.N`.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, you do not need to specify this parameter. The default value is the ID of the security group to which to assign the instance.', example='sg-bp67acfmxazb4p****'),
      securityGroupIds?: [ string ](name='SecurityGroupIds', description='The ID of security group N to which to assign ENI N.

*   Valid values of the first N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   The second N indicates that one or more security group IDs can be specified. The valid values of N vary based on the maximum number of security groups to which an instance can belong. For more information, see the [Security group limits](~~25412#SecurityGroupQuota1~~) section of the "Limits" topic.

Take note of the following items:

*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must specify this parameter or `NetworkInterface.N.SecurityGroupId`. In this case, this parameter is equivalent to `SecurityGroupIds.N`. You cannot specify `SecurityGroupId`, `SecurityGroupIds.N`, or `NetworkInterface.N.SecurityGroupId`.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, you do not need to specify this parameter. The default value is the ID of the security group to which to assign the instance.', example='sg-bp15ed6xe1yxeycg7****'),
      txQueueSize?: int32(name='TxQueueSize', description='The Tx queue depth of ENI N.

Take note of the following items:

*   The Tx queue depth of an ENI must be the same as the Rx queue depth of the ENI. Valid values: powers of 2 in the range of 8192 to 16384.
*   A larger Tx queue depth yields higher outbound throughput but consumes more memory.', example='8192'),
      vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect ENI N.

Take note of the following items:

*   Valid values of N: 1 and 2. If the value of N is 1, you can configure a primary or secondary ENI. If the value of N is 2, you must configure a primary ENI and a secondary ENI.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you must specify this parameter. In this case, this parameter is equivalent to `VSwitchId`. You cannot specify both NetworkInterface.N.VSwitchId and `VSwitchId` in the same request.
*   If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, you do not need to specify this parameter. The default value is the VSwitchId value.', example='vsw-bp67acfmxazb4p****'),
    }
  ](name='NetworkInterface', description='The information of the elastic network interfaces (ENIs).', position='Query'),
  networkInterfaceQueueNumber?: int32(name='NetworkInterfaceQueueNumber', description='The number of queues supported by the primary ENI. Take note of the following items:

*   The value of this parameter cannot exceed the maximum number of queues per ENI allowed for the instance type.
*   The total number of queues for all ENIs on the instance cannot exceed the queue quota for the instance type. To query the maximum number of queues per ENI and the queue quota for an instance type, you can call the [DescribeInstanceTypes](~~25620~~) operation to query the `MaximumQueueNumberPerEni` and `TotalEniQueueQuantity` values.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `NetworkInterfaceQueueNumber` but can specify `NetworkInterface.N.QueueNumber`.', example='8', minimum=1, position='Query'),
  networkOptions?: {
    enableJumboFrame?: boolean(name='EnableJumboFrame', description='Specifies whether to enable the Jumbo Frames feature for the instance. Valid values:

*   false: does not enable the Jumbo Frames feature for the instance. The maximum transmission unit (MTU) value of all ENIs on the instance is set to 1500.
*   true: enables the Jumbo Frames feature for the instance. The MTU value of all ENIs on the instance is set to 8500.

Default value: true.

>  The Jumbo Frames feature is supported by only 8th-generation or later instance types. For more information, see [MTUs](~~200512~~).', example='false'),
  }(name='NetworkOptions', description='Details about network options.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  password?: string(name='Password', description='The password of the instance. The password must be 8 to 30 characters in length and contain at least three of the following character types: uppercase letters, lowercase letters, digits, and special characters. Special characters include:

    ()`~!@#$%^&*-_+=|{}[]:;\\"<>,.?/

For Windows instances, the password cannot start with a forward slash (/).

> If the `Password` parameter is specified, we recommend that you send requests over HTTPS to prevent password leaks.', example='EcsV587!', position='Query'),
  passwordInherit?: boolean(name='PasswordInherit', description='Specifies whether to use the password preset in the image. Valid values:

*   true: uses the preset password.
*   false: does not use the preset password.

Default value: false.

> If you set this parameter to true, make sure that you leave the Password parameter empty and the selected image has a preset password.', example='false', position='Query'),
  period?: int32(name='Period', description='The subscription period of the instance. The unit is specified by the `PeriodUnit` parameter. This parameter is valid and required only when `InstanceChargeType` is set to `PrePaid`. If the `DedicatedHostId` parameter is specified, the value of Period must not exceed the subscription period of the specified dedicated host. Valid values:

*   Valid values when PeriodUnit is set to Week: 1, 2, 3, and 4.
*   Valid values when PeriodUnit is set to Month: 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 48, and 60.', example='1', position='Query'),
  periodUnit?: string(name='PeriodUnit', description='The unit of the subscription period. Default value: Month. Valid values:

*   Week
*   Month', example='Month', position='Query'),
  privateIpAddress?: string(name='PrivateIpAddress', description='The private IP address to assign to the instance. To assign a private IP address to an instance that resides in a VPC, make sure that the IP address is an idle IP address within the CIDR block of the vSwitch specified by `VSwitchId`.

Take note of the following items:

*   If `PrivateIpAddress` is specified, take note of the following items:

    *   If `Amount` is set to 1, a single instance is created and the specified private IP address is assigned to the instance.
    *   If `Amount` is set to a numeric value greater than 1, the specified number of instances are created and consecutive private IP addresses starting from the specified one are assigned to the instances. In this case, you cannot specify parameters that start with `NetworkInterface.N` to attach secondary ENIs to the instances.

*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `PrivateIpAddress` but can specify `NetworkInterface.N.PrimaryIpAddress`.

>  The first IP address and last three IP addresses of each vSwitch CIDR block are reserved. You cannot specify the IP addresses. For example, if a vSwitch CIDR block is 192.168.1.0/24, the IP addresses 192.168.1.0, 192.168.1.253, 192.168.1.254, and 192.168.1.255 are reserved.', example='10.1.**.**', position='Query'),
  ramRoleName?: string(name='RamRoleName', description='The name of the Resource Access Management (RAM) role. You can call the [ListRoles](~~28713~~) operation provided by RAM to query the instance RAM roles that you created.', example='RAM_Name', position='Query'),
  regionId: string(name='RegionId', description='The ID of the region in which to create the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which to assign the instance.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  securityEnhancementStrategy?: string(name='SecurityEnhancementStrategy', description='Specifies whether to enable security hardening. Valid values:

*   Active: enables security hardening. This value is applicable only to public images.
*   Deactive: does not enable security hardening. This value is applicable to all images.', example='Active', position='Query'),
  securityGroupId?: string(name='SecurityGroupId', description='The ID of the security group to which you want to assign the instance. Instances in the same security group can communicate with each other. The maximum number of instances allowed in a security group varies based on the type of the security group. For more information, see the "Security group limits" section in [Limits](~~25412#SecurityGroupQuota~~).

>  The network type of the new instance is the same as the network type of the security group specified by `SecurityGroupId`. For example, if the specified security group is of the VPC type, the new instance is also of the VPC type and you must specify `VSwitchId`.

If you do not use `LaunchTemplateId` or `LaunchTemplateName` to specify a launch template, you must specify a security group ID. Take note of the following items:

*   You can set `SecurityGroupId` to specify a single security group or set `SecurityGroupIds.N` to specify one or more security groups. However, you cannot specify both `SecurityGroupId` and `SecurityGroupIds.N` in the same request.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `SecurityGroupId` or `SecurityGroupIds.N` but can specify `NetworkInterface.N.SecurityGroupId` or `NetworkInterface.N.SecurityGroupIds.N`.', example='sg-bp15ed6xe1yxeycg7****', position='Query'),
  securityGroupIds?: [ string ](name='SecurityGroupIds', description='The ID of security group N to which to assign the instance. The valid values of N vary based on the maximum number of security groups to which an instance can belong. For more information, see the [Security group limits](~~101348~~) section of the "Limits" topic.

Take note of the following items:

*   You cannot specify both `SecurityGroupId` and `SecurityGroupIds.N` in the same request.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `SecurityGroupId` or `SecurityGroupIds.N` but can specify `NetworkInterface.N.SecurityGroupId` or `NetworkInterface.N.SecurityGroupIds.N`.', example='sg-bp15ed6xe1yxeycg7****', position='Query'),
  spotDuration?: int32(name='SpotDuration', description='The protection period of the preemptible instance. Unit: hours. Default value: 1. Valid values:

*   1: After a preemptible instance is created, Alibaba Cloud ensures that the instance is not automatically released within 1 hour. After the 1-hour protection period ends, the system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.
*   0: After a preemptible instance is created, Alibaba Cloud does not ensure that the instance runs for 1 hour. The system compares the bid price with the market price and checks the resource inventory to determine whether to retain or release the instance.

Alibaba Cloud sends an ECS system event to notify you 5 minutes before the instance is released. Preemptible instances are billed by second. We recommend that you specify an appropriate protection period based on your business requirements.', example='1', minimum=0, maximum=6, position='Query'),
  spotInterruptionBehavior?: string(name='SpotInterruptionBehavior', description='The interruption mode of the preemptible instance. Valid values:

*   Terminate: The instance is released.

*   Stop: The instance is stopped in economical mode. To use the economical mode, submit a ticket.

    For information about the economical mode, see [Economical mode](~~63353~~).

Default value: Terminate.', example='Terminate', position='Query'),
  spotPriceLimit?: float(name='SpotPriceLimit', description='The maximum hourly price of the instance. The value is accurate to three decimal places. This parameter is valid only when the `SpotStrategy` parameter is set to `SpotWithPriceLimit`.', example='0.97', minimum=0, maximum=999999, position='Query'),
  spotStrategy?: string(name='SpotStrategy', description='The bidding policy for the pay-as-you-go instance. This parameter is valid only when the `InstanceChargeType` parameter is set to `PostPaid`. Valid values:

*   NoSpot: The instance is created as a pay-as-you-go instance.
*   SpotWithPriceLimit: The instance is created as a preemptible instance with a user-defined maximum hourly price.
*   SpotAsPriceGo: The instance is created as a preemptible instance for which the market price at the time of purchase is automatically used as the bid price.

Default value: NoSpot.', example='NoSpot', position='Query'),
  storageSetId?: string(name='StorageSetId', description='The ID of the storage set.', example='ss-bp67acfmxazb4p****', position='Query'),
  storageSetPartitionNumber?: int32(name='StorageSetPartitionNumber', description='The maximum number of partitions in the storage set. Valid values: greater than or equal to 2.', example='2', minimum=1, position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the instance, disks, and primary ENI. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain http:// or https://. The tag key cannot start with acs: or aliyun.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the instance, disks, and primary ENI. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain http:// or https://.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the instance, disks, and primary ENI.', position='Query'),
  tenancy?: string(name='Tenancy', description='Specifies whether to create the instance on a dedicated host. Valid values:

*   default: creates the instance on a non-dedicated host.
*   host: creates the instance on a dedicated host. If you do not set the `DedicatedHostId` parameter, Alibaba Cloud selects a dedicated host for the instance.

Default value: default.', example='default', position='Query'),
  uniqueSuffix?: boolean(name='UniqueSuffix', description='Specifies whether to automatically append incremental suffixes to the hostname specified by the `HostName` parameter and to the instance name specified by the `InstanceName` parameter when you batch create instances. The incremental suffixes can range from 001 to 999. Valid values:

*   true
*   false

Default value: false.

When the `HostName` or `InstanceName` value is set in the `name_prefix[begin_number,bits]` format without `name_suffix`, the `UniqueSuffix` parameter does not take effect. The names are sorted in the specified sequence.

For more information, see [Batch configure sequential names or hostnames for multiple instances](~~196048~~).', example='true', position='Query'),
  userData?: string(name='UserData', description='The user data of the instance. You must specify Base64-encoded data. The instance user data cannot exceed 32 KB in size before Base64 encoding.

For information about the limits, formats, and running frequencies of instance user data, see [Instance user data](~~49121~~).

>  To ensure security, we recommend that you do not use plaintext to pass in confidential information, such as passwords or private keys, as user data. If you need to pass in confidential information, we recommend that you encrypt and encode the information in Base64 and then decode and decrypt the information in the same manner in the instance.', example='ZWNobyBoZWxsbyBlY3Mh', position='Query'),
  vSwitchId?: string(name='VSwitchId', description='The ID of the vSwitch to which to connect to the instance. You must set this parameter when you create an instance of the VPC type. The specified vSwitch and security group must belong to the same VPC. You can call the [DescribeVSwitches](~~35748~~) operation to query available vSwitches.

Take note of the following items:

*   If you specify the `VSwitchId` parameter, the zone specified by the `ZoneId` parameter must be the zone where the specified vSwitch is located. You can also leave the `ZoneId` parameter empty. Then, the system selects the zone where the specified vSwitch resides.
*   If `NetworkInterface.N.InstanceType` is set to `Primary`, you cannot specify `VSwitchId` but can specify `NetworkInterface.N.VSwitchId`.', example='vsw-bp1s5fnvk4gn2tws0****', position='Query'),
  zoneId?: string(name='ZoneId', description='The ID of the zone in which to create the instance. You can call the [DescribeZones](~~25610~~) operation to query the most recent zone list.

> If you specify the `VSwitchId` parameter, the zone specified by the `ZoneId` parameter must be the zone where the vSwitch is located. You can also leave the `ZoneId` parameter empty. Then, the system selects the zone where the specified vSwitch is located.

This parameter is empty by default.', example='cn-hangzhou-g', position='Query'),
}

model RunInstancesResponseBody = {
  instanceIdSets?: {
    instanceIdSet?: [ string ](name='InstanceIdSet')
  }(name='InstanceIdSets', description='The IDs of the instances (`InstanceIdSet`).'),
  orderId?: string(name='OrderId', description='The ID of the order. This parameter is returned only when `InstanceChargeType` is set to PrePaid.', example='123456****'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
  tradePrice?: float(name='TradePrice', description='The transaction price.', example='0.165'),
}

model RunInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: RunInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   **Preparations**:
  *     *   Cost estimation: Learn about the billing methods of ECS resources. For more information, see [Billing overview](~~25398~~).
  *     *   Instance type selection: Call the [DescribeInstanceTypes](~~25620~~) operation to query the performance data of instance types, or see [Best practices for selecting instance types](~~58291~~) to learn about how to select instance types.
  *     *   Query of available resources: Call the [DescribeAvailableResource](~~66186~~) operation to query resources available in a specific region or zone.
  *     *   Network planning: Make sure that you have security groups available for use. For more information, see [CreateSecurityGroup](~~25553~~). Before you create an instance of the Virtual Private Cloud (VPC) type, [create a VPC](~~65430~~) in the region where you want to create the instance.
  * *   **Comparison with CreateInstance**:
  *     RunInstances has the following advantages over CreateInstance:
  *     *   You can call the RunInstances operation to create up to 100 instances at a time, instead of repeatedly calling the CreateInstance operation.
  *     *   After an instance is created, the instance enters the `Starting` state and then transitions to the `Running` state. You do not need to call the [StartInstance](~~25500~~) operation to start the instance.
  *     *   When you create an instance, you can specify `InternetMaxBandwidthOut` to assign a public IP address to the instance, without the need to call the [AllocatePublicIpAddress](~~25544~~) operation.
  *     *   You can use `AutoReleaseTime` to set the time when to automatically release the instances, without the need to call the [ModifyInstanceAutoReleaseTime](~~47576~~) operation.
  *     *   You can specify `LaunchTemplateId` and `LaunchTemplateVersion` to use a launch template. This way, you do not need to configure a large number of parameters every time you create instances.
  *     *   You can specify `UniqueSuffix` to batch configure sequential names or hostnames for multiple instances for easy management and retrieval.
  *     *   When you call the RunInstances operation to create instances, you can configure the enclave-based confidential computing mode and the trusted system mode for the instances.
  *     *   You can set `NetworkOptions.EnableJumboFrame` to true to enable the Jumbo Frames feature when you create instances. For more information, see [MTUs](~~200512~~).
  * *   **Considerations**:
  *     *   You can create up to 100 instances at a time.
  *     *   You can use `AutoReleaseTime` to set the time when to automatically release the instances.
  *     *   After you create instances and obtain their IDs, you can call the [DescribeInstances](~~25506~~) operation to check the status of the instances.
  *     *   By default, instances automatically start after they are created. Instances are ready for use when they are in the Running (`Running`) state.
  *     *   Starting November 27, 2020, the maximum bandwidth value that is available for you to create ECS instances or change ECS instance configurations is subject to the throttling policy of your account. To increase the maximum bandwidth value, submit a ticket. The throttling policy imposes the following constraints: In a single region, the total maximum bandwidth value of all instances that use the pay-by-traffic billing method for network usage cannot exceed 5 Gbit/s and the total maximum bandwidth value of all instances that use the pay-by-bandwidth billing method for network usage cannot exceed 50 Gbit/s.
  *     *   Different from the [CreateInstance](~~25499~~) operation, the `RunInstances` operation allows the system to assign public IP addresses to new instances if you set `InternetMaxBandwidthOut` to a value greater than 0.
  *     *   When you call the RunInstances operation to create an instance, you can use one of the following methods to attach a primary elastic network interface (ENI) to the instance. Take note that you can use only one of the methods to configure the primary ENI in each call. Otherwise, the call fails and an error message is returned.
  *         *   Specify parameters such as `SecurityGroupId`, `VSwitchId`, `PrivateIpAddress`, `NetworkInterfaceQueueNumber`, and `Ipv6AddressCount` to configure the primary ENI.
  *         *   Specify parameters that start with `NetworkInterface.N.` to configure the primary and secondary ENIs. If `NetworkInterface.N.InstanceType` is set to `Primary`, the primary ENI is attached to the instance. If `NetworkInterface.N.InstanceType` is set to `Secondary` or left empty, the secondary ENI is attached to the instance.
  *     *   If a parameter is invalid or available resources are insufficient, an error is returned after you call the RunInstances operation. For more information, see the "Error codes" section of this topic.
  *         *   If the maximum number of instances of the specified instance type that can be created in the specified region or the maximum number of vCPUs for all instance types in a zone is exceeded, the `QuotaExceed.ElasticQuota` error is returned when you call the operation. You can go to the [ECS console](https://ecs.console.aliyun.com/?spm=a2c8b.12215451.favorites.decs.5e3a336aMGTtzy#/privileges/quota) or the [Quota Center](https://quotas.console.aliyun.com/products/ecs/quotas) to request a quota increase.
  *         *   If the capacity of disks that belong to the specified disk category exceeds the quota limit for the specified zone, the `QuotaExceed.DiskCapacity` error is returned when you call the operation. You can go to the [Quota Center](https://quotas.console.aliyun.com/products/disk/quotas) to view and increase the disk capacity quota.
  * *   **Best practices**:
  *     *   We recommend that you use auto provisioning groups in the following scenarios: Resources are insufficient to create more than 100 instances at a time, you want to quickly create instances regardless of resource configurations such as instance types or zones, or you want to create instances to consume a specific total number of vCPUs regardless of the number of instances. You can call the [CreateAutoProvisioningGroup](~~122738~~) operation to create an auto provisioning group to deploy an instance cluster across different zones, different billing methods, and instance families. For more information, see [Use auto provisioning group-related API operations to batch create ECS instances](~~200772~~).
  *     *   You can call the `RunInstances` operation to batch create instances. To better manage and search for the instances, we recommend that you add tags to the instances by specifying `Tag.N.Key` and `Tag.N.Value`. You can also append incremental suffixes (`UniqueSuffix`) to the hostname (`HostName`) and to the instance name (`InstanceName`).
  *     *   A launch template contains parameters required to create an instance so that you do not have to specify these parameters every time you create instances. You can call the [CreateLaunchTemplate](~~74686~~) operation to create a launch template. Then, in your request to call the `RunInstances` operation, you can specify `LaunchTemplateId` and `LaunchTemplateVersion` to use the launch template.
  * ### [](#-1)Example 1: Create a subscription instance
  * Use the aliyun\\_3\\_x64\\_20G_alibase\\_20221102.vhd image to create a one-month subscription instance of the ecs.g7.large instance type in the China (Hangzhou) region, and enable auto-renewal to renew the instance for one month on expiration. The instance uses a 40 GiB enhanced SSD (ESSD) as the system disk and a 100 GiB ESSD as a data disk and is automatically assigned private and public IP addresses. The outbound public bandwidth of the instance is 10 Mbit/s. The instance name is ECS-test and the logon password of the instance is ECS@test1234.
  *     http(s)://ecs.aliyuncs.com/?Action=RunInstances
  *     &RegionId=cn-hangzhou
  *     &ImageId=aliyun_3_x64_20G_alibase_20221102.vhd
  *     &InstanceType=ecs.g7.large
  *     &SecurityGroupId=sg-bp150uqocpf9jj70****
  *     &VSwitchId=vsw-bp1qo7s91cbch5i4l****
  *     &InstanceChargeType=PrePaid
  *     &SystemDisk.Size=40
  *     &DataDisk.1.Size=100
  *     &DataDisk.1.Category=cloud_essd
  *     &SystemDisk.Category=cloud_essd
  *     &Amount=1
  *     &Period=1
  *     &PeriodUnit=Month
  *     &AutoRenew=true
  *     &AutoRenewPeriod=1
  *     &HostName=ECS-test
  *     &Password=ECS@test1234
  *     &InternetMaxBandwidthOut=10
  *     &<Common request parameters>
  * ### [](#-2)Example 2: Create a pay-as-you-go instance
  * Use the aliyun\\_3\\_x64\\_20G_alibase\\_20221102.vhd image to create a pay-as-you-go instance of the ecs.g7.large instance type in the China (Hangzhou) region. The instance uses a 40 GiB ESSD as the system disk and a 100 GiB ESSD as a data disk and is automatically assigned private and public IP addresses. The outbound public bandwidth of the instance is 10 Mbit/s. The instance name is ECS-test and the logon password of the instance is ECS@test1234.
  *     http(s)://ecs.aliyuncs.com/?Action=RunInstances
  *     &RegionId=cn-hangzhou
  *     &ImageId=aliyun_3_x64_20G_alibase_20221102.vhd
  *     &InstanceType=ecs.g7.large
  *     &SecurityGroupId=sg-bp150uqocpf9jj70****
  *     &VSwitchId=vsw-bp1qo7s91cbch5i4l****
  *     &InstanceChargeType=PostPaid
  *     &SystemDisk.Size=40
  *     &DataDisk.1.Size=100
  *     &DataDisk.1.Category=cloud_essd
  *     &SystemDisk.Category=cloud_essd
  *     &HostName=ECS-test
  *     &Password=ECS@test1234
  *     &InternetMaxBandwidthOut=10
  *     &<Common request parameters>
  * ### [](#-3)Example 3: Create a preemptible instance
  * Use the aliyun\\_3\\_x64\\_20G_alibase\\_20221102.vhd image to create a preemptible instance of the ecs.g7.large instance type that has a 1-hour protection period in the China (Hangzhou) region. The market price of the instance type at the time of purchase is automatically used as the bidding price. The instance uses a 40 GiB ESSD as the system disk and a 100 GiB ESSD as a data disk and is automatically assigned private and public IP addresses. The outbound public bandwidth of the instance is 10 Mbit/s. The instance name is ECS-test and the logon password of the instance is ECS@test1234.
  *     http(s)://ecs.aliyuncs.com/?Action=RunInstances
  *     &RegionId=cn-hangzhou
  *     &ImageId=aliyun_3_x64_20G_alibase_20221102.vhd
  *     &InstanceType=ecs.g7.large
  *     &SecurityGroupId=sg-bp150uqocpf9jj70****
  *     &VSwitchId=vsw-bp1qo7s91cbch5i4l****
  *     &InstanceChargeType=PostPaid
  *     &SystemDisk.Size=40
  *     &DataDisk.1.Size=100
  *     &DataDisk.1.Category=cloud_essd
  *     &SystemDisk.Category=cloud_essd
  *     &HostName=ECS-test
  *     &Password=ECS@test1234
  *     &InternetMaxBandwidthOut=10
  *     &SpotStrategy=SpotAsPriceGo
  *     &SpotDuration=1
  *     &<Common request parameters>
  * ### [](#-4)Example 4: Create a subscription instance on a dedicated host
  * Use the aliyun\\_3\\_x64\\_20G_alibase\\_20221102.vhd image to create a one-month subscription instance of the ecs.g7.large instance type on the dh-bp12w10wll9xcjq2\\*\\*\\*\\* dedicated host in the China (Hangzhou) region. The instance uses a 40 GiB ESSD as the system disk and a 100 GiB ESSD as a data disk and is automatically assigned private and public IP addresses. The outbound public bandwidth of the instance is 10 Mbit/s. The instance name is ECS-test and the logon password of the instance is ECS@test1234.
  *     http(s)://ecs.aliyuncs.com/?Action=RunInstances
  *     &RegionId=cn-hangzhou
  *     &ImageId=aliyun_3_x64_20G_alibase_20221102.vhd
  *     &InstanceType=ecs.g7.large
  *     &SecurityGroupId=sg-bp150uqocpf9jj70****
  *     &VSwitchId=vsw-bp1qo7s91cbch5i4l****
  *     &InstanceChargeType=PrePaid
  *     &Amount=1
  *     &Period=1
  *     &PeriodUnit=Month
  *     &SystemDisk.Size=40
  *     &DataDisk.1.Size=100
  *     &DataDisk.1.Category=cloud_essd
  *     &SystemDisk.Category=cloud_essd
  *     &HostName=ECS-test
  *     &Password=ECS@test1234
  *     &InternetMaxBandwidthOut=10
  *     &DedicatedHostId=dh-bp12w10wll9xcjq2****
  *     &<Common request parameters>
  *
 */
async function runInstances(request: RunInstancesRequest): RunInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'RunInstances', 'POST', '/', 'json', false, 'json', request);
}

model SendFileRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  content: string(name='Content', description='The content of the file. The file must not exceed 32 KB in size after it is encoded in Base64.

*   If `ContentType` is set to `PlainText`, the value of Content is in plaintext.
*   If `ContentType` is set to `Base64`, the value of Content is Base64-encoded.', example='#!/bin/bash  echo "Current User is :"  echo $(ps | grep "$$" | awk \\"{print $2}\\")  --------  oss://bucketName/objectName', position='Query'),
  contentType?: string(name='ContentType', description='The content type of the file. Valid values:

*   PlainText: The file content is not encoded.
*   Base64: The file content is encoded in Base64.

Default value: PlainText.', example='PlainText', position='Query'),
  description?: string(name='Description', description='The description of the file. The description can be up to 512 characters in length and can contain any characters.', example='This is a test file.', position='Query'),
  fileGroup?: string(name='FileGroup', description='The group of the file. This parameter takes effect only on Linux instances. Default value: root. The value can be up to 64 characters in length.

>  If you want to use a non-root user group, make sure that the user group exists in the instances.', example='test', position='Query'),
  fileMode?: string(name='FileMode', description='The permissions on the file. This parameter takes effect only on Linux instances. You can configure this parameter in the same way as you configure the chmod command.

Default value: 0644, which indicates that the owner of the file has the read and write permissions on the file and that the user group of the file and other users have the read-only permissions on the file.', example='0644', position='Query'),
  fileOwner?: string(name='FileOwner', description='The owner of the file. This parameter takes effect only on Linux instances. Default value: root. The value can be up to 64 characters in length.

>  If you want to use a non-root user, make sure that the user exists in the instances.', example='test', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The IDs of instances to which to send the file. You can specify up to 50 instance IDs in each request. Valid values of N: 1 to 50.', example='i-bp185dy2o3o6n****', position='Query'),
  name: string(name='Name', description='The name of the file. The name can be up to 255 characters in length and can contain any characters.', example='file.txt', position='Query'),
  overwrite?: boolean(name='Overwrite', description='Specifies whether to overwrite a file in the destination directory if the file has the same name as the sent file.

*   true
*   false

Default value: false.', example='true', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance to which to send the file. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group. When you specify this parameter, take note of the following items:

*   The instance specified by the InstanceId parameter must belong to the specified resource group.
*   If you specify this parameter, you can call the [DescribeSendFileResults](~~184117~~) operation to query file sending results in the specified resource group.', example='rg-bp67acfmxazb4p****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  tag?: [ 
    {
      key?: string(name='Key', description='The key of tag N of the file sending task. Valid values of N: 1 to 20. The tag key cannot be an empty string.

If a single tag is specified to query resources, up to 1,000 resources that have this tag added can be displayed in the response. If multiple tags are specified to query resources, up to 1,000 resources that have all the tags added can be displayed in the response. To query more than 1,000 resources that have specified tags, call the [ListTagResources](~~110425~~) operation.

The tag key can be up to 64 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the file sending task. Valid values of N: 1 to 20. The tag value can be an empty string.

The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the file sending task.', position='Query'),
  targetDir: string(name='TargetDir', description='The destination directory on the instance to which to send the file. If the specified directory does not exist, the system creates the directory on the instance. The value cannot exceed 255 characters in length.', example='/home', position='Query'),
  timeout?: long(name='Timeout', description='The timeout period for the file sending task. Unit: seconds.

*   A timeout error occurs when a file cannot be sent because the process slows down or because a specific module or Cloud Assistant Agent does not exist.
*   If the specified timeout period is less than 10 seconds, the system sets the timeout period to 10 seconds to ensure that the file can be sent to the instances.

Default value: 60.', example='60', position='Query'),
}

model SendFileResponseBody = {
  invokeId?: string(name='InvokeId', description='The ID of the command task.', example='f-7d2a745b412b46****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model SendFileResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SendFileResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The instances to which you want to send a file must be in the Running (`Running`) state.
  * *   [Cloud Assistant Agent](~~64921~~) must be installed on the instances.
  * *   Only Cloud Assistant Agent versions that are later than the following ones support file sending. If the `ClientNeedUpgrade` error code is returned, update Cloud Assistant Agent to the latest version.
  *     *   For Linux instances, the version of Cloud Assistant Agent must be later than 1.0.2.569.
  *     *   For Windows instances, the version of Cloud Assistant Agent must be later than 1.0.0.149.
  * *   The file to be sent must not exceed 32 KB in size after it is encoded in Base64.
  * *   The file may fail to be sent due to instance exceptions, network exceptions, or exceptions on Cloud Assistant Agent. If the file fails to be sent, call the [DescribeSendFileResults](~~184117~~) operation or see [Check execution results and troubleshoot common issues](~~87029~~) for troubleshooting.
  *
 */
async function sendFile(request: SendFileRequest): SendFileResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SendFile', 'POST', '/', 'json', false, 'json', request);
}

model StartImagePipelineExecutionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  clientToken?: string(name='ClientToken', description='The client token that is used to ensure the idempotence of the request. You can use the client to generate the token, but make sure that the token is unique among requests. **The token can contain only ASCII characters and cannot exceed 64 characters in length.** For more information, see [How to ensure idempotence](~~25693~~).', example='123e4567-e89b-12d3-a456-426655440000', position='Query'),
  imagePipelineId: string(name='ImagePipelineId', description='The ID of the image template.', example='ip-2ze5tsl5bp6nf2b3****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  templateTag?: [ 
    {
      key?: string(name='Key', description='> This parameter is deprecated.', example='null'),
      value?: string(name='Value', description='> This parameter is deprecated.', example='null'),
    }
  ](name='TemplateTag', description='> This parameter is deprecated.', position='Query'),
}

model StartImagePipelineExecutionResponseBody = {
  executionId?: string(name='ExecutionId', description='The ID of the image creation task.', example='exec-5fb8facb8ed7427c****'),
  requestId?: string(name='RequestId', description='The request ID.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model StartImagePipelineExecutionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartImagePipelineExecutionResponseBody(name='body'),
}

/**
  * *   After you create an image template, you can call the StartImagePipelineExecution operation to create a pipeline task. The system creates, copies, and shares images based on the parameters configured in the image template.
  * *   You can execute only one pipeline task for each image template.
  *
 */
async function startImagePipelineExecution(request: StartImagePipelineExecutionRequest): StartImagePipelineExecutionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartImagePipelineExecution', 'POST', '/', 'json', false, 'json', request);
}

model StartInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  dryRun?: boolean(name='DryRun', example='true', position='Query'),
  initLocalDisk?: boolean(name='InitLocalDisk', description='The request ID.', example='true', position='Query'),
  instanceId: string(name='InstanceId', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks whether your AccessKey pair is valid, whether RAM users are granted permissions, and whether the required parameters are specified. If the request fails the dry run, an error message is returned. If the request passes the dry run, the DryRunOperation error code is returned.
*   false: performs a dry run and performs the actual request. If the request passes the dry run, a 2xx HTTP status code is returned and the operation is performed.

Default value: false.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model StartInstanceResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model StartInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartInstanceResponseBody(name='body'),
}

/**
  * $.parameters[2].schema.example
  *
 */
async function startInstance(request: StartInstanceRequest): StartInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartInstance', 'POST', '/', 'json', false, 'json', request);
}

model StartInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  batchOptimization?: string(name='BatchOptimization', description='The IDs of the ECS instances. You can specify up to 100 ECS instance IDs.', example='AllTogether', position='Query'),
  dryRun?: boolean(name='DryRun', description='The region ID of the ECS instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='false', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The ID of instance N. Valid values of N: 1 to 100.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The batch operation mode. Valid values:

*   AllTogether: starts all ECS instances at the same time. If all ECS instances are started, a success message is returned. If an ECS instance fails to be started, all the specified instances fail to be started and an error message is returned.
*   SuccessFirst: separately starts each ECS instance. The response contains the operation results of each ECS instance.

Default value: AllTogether.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model StartInstancesResponseBody = {
  instanceResponses?: {
    instanceResponse?: [ 
    {
      code?: string(name='Code', description='The error code returned for the operation on the instance. The status code 200 indicates that the request was successful. For more information, see the "Error codes" section of this topic.', example='200'),
      currentStatus?: string(name='CurrentStatus', description='The status of the instance after the operation is called.', example='Starting'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4p****'),
      message?: string(name='Message', description='The error message returned for the operation on the instance. The status code 200 indicates that the request was successful. For more information, see the "Error codes" section of this topic.', example='success'),
      previousStatus?: string(name='PreviousStatus', description='The status of the instance before the operation is called.', example='Stopped'),
    }
  ](name='InstanceResponse')
  }(name='InstanceResponses', description='The status of the instances before and after the operation is called and the operation results.'),
  requestId?: string(name='RequestId', description='The information about the ECS instance, such as the status of each instance before and after the operation is called and the operation results.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3****'),
}

model StartInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The instances to be started must be in the **Stopped** (`Stopped`) state.
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of an instance, the instance is locked for security reasons. No operations are allowed on the instance.
  * *   You can use `BatchOptimization` to specify the batch operation mode and restart multiple instances at a time.
  *
 */
async function startInstances(request: StartInstancesRequest): StartInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartInstances', 'POST', '/', 'json', false, 'json', request);
}

model StartTerminalSessionRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  commandLine?: string(name='CommandLine', description='The command to run after the session is initiated. The command length cannot exceed 512 characters.

>  If you specify the `CommandLine` parameter, you cannot specify the `PortNumber` or `TargetServer` parameter.', example='ssh root@192.168.0.246', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The instance IDs.', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  portNumber?: int32(name='PortNumber', description='The port number of the ECS instance. The port is used to forward data. After this parameter is configured, Cloud Assistant Agent forwards data to the specified port. For example, you can set this parameter to 22 for data forwarding over SSH.

This parameter is empty by default, which indicates that no port is configured to forward data.', example='22', position='Query'),
  regionId: string(name='RegionId', description='The region ID. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  targetServer?: string(name='TargetServer', description='The IP address of the instance. You can use the IP address to access the destination service in a virtual private cloud (VPC).

>  If this parameter is not empty, `PortNumber` specifies the port number that is used by the managed instance to access the destination service in the VPC.', example='192.168.0.246', position='Query'),
  username?: string(name='Username', description='The username used for connection establishment.', example='testUser', position='Query'),
}

model StartTerminalSessionResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='EB5173B0-8E80-564E-AAD1-3135412*****'),
  securityToken?: string(name='SecurityToken', description='The security token included in the WebSocket request header. The system uses this token to authenticate the request.', example='d86c2df2-d19c-4bd8-b817-a19ef123****'),
  sessionId?: string(name='SessionId', description='The session ID.', example='s-hz023od0x9****'),
  webSocketUrl?: string(name='WebSocketUrl', description='The URL of the WebSocket session that is used to connect to the instance. The URL includes the session ID (`SessionId`) and the authentication token (`SecurityToken`).', example='wss://cn-hangzhou.axt.aliyuncs.com/session?sessionId=s-hz023od0x9****&token=d86c2df2-d19c-4bd8-b817-a19ef123****'),
}

model StartTerminalSessionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartTerminalSessionResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * When you use custom code to connect to an ECS instance that serves as a client, you can call this operation to obtain the WebSocket URL that is used to connect to the instance. Take note of the following items:
  * *   The ECS instance must be in the Running state.
  * *   Cloud Assistant Agent must be installed on the ECS instance. You can call the [DescribeCloudAssistantStatus](~~87346~~) operation to check whether Cloud Assistant Agent is installed on the ECS instance and query the version number of the installed Cloud Assistant Agent.
  *     *   If Cloud Assistant Agent is not installed on the ECS instance, call the [InstallCloudAssistant](~~85916~~) operation to install Cloud Assistant Agent.
  *     *   The Cloud Assistant Agent versions that are later than the following ones support the session management feature. If you need to upgrade the Cloud Assistant Agent version, follow the instructions in [Upgrade or disable upgrades for Cloud Assistant Agent](~~134383~~).
  *         *   Linux operating system: 2.2.3.256
  *         *   Windows operating system: 2.1.3.256
  * *   Each WebSocket URL returned by the StartTerminalSession operation remains valid for 10 minutes.
  * *   Up to 1,000 sessions can be created and available in a region. Each ECS instance can have up to 20 sessions in the connected state.
  *
 */
async function startTerminalSession(request: StartTerminalSessionRequest): StartTerminalSessionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartTerminalSession', 'POST', '/', 'json', false, 'json', request);
}

model StopInstanceRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  confirmStop?: boolean(name='ConfirmStop', description='This parameter will be removed in the future and is retained only to ensure compatibility. We recommend that you ignore this parameter.', example='true', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, service limits, and available ECS resources. If the request fails the dry run, an error message is returned. If the request passes the dry run, the `DryRunOperation` error code is returned.
*   false: performs a dry run and performs the actual request.

Default value: false.', example='true', position='Query'),
  forceStop?: boolean(name='ForceStop', description='Specifies whether to forcibly stop the instance. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  hibernate?: boolean(name='Hibernate', description='> This parameter is in invitational preview and is not publicly available.', example='hide', position='Query'),
  instanceId: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4ph****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  stoppedMode?: string(name='StoppedMode', description='The stop mode of the pay-as-you-go instance. Valid values:

*   StopCharging: economical mode. For information about how `StopCharging` takes effect, see the "Conditions for enabling economical mode" section in [Economical mode](~~63353~~).
*   KeepCharging: standard mode. You continue to be charged for instances that are stopped in standard mode.

Default value: If the conditions for enabling the economical mode are met and you have enabled this mode in the ECS console, the default value is [StopCharging](~~63353#default~~). For more information, see the "Enable economical mode" section in `Economical mode`. Otherwise, the default value is `KeepCharging`.', example='KeepCharging', position='Query'),
}

model StopInstanceResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='1C488B66-B819-4D14-8711-C4EAAA13AC01'),
}

model StopInstanceResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopInstanceResponseBody(name='body'),
}

/**
  * *   If you call the DescribeInstances operation to query the details of an instance and `OperationLocks` in the response contains `"LockReason": "security"`, the instance is locked for security reasons and cannot be stopped. For more information, see [API behavior when an instance is locked for security reasons](~~25695~~).
  * *   If the economical mode is enabled, you can set `StoppedMode` to KeepCharging to switch to the standard mode. This allows an instance that is stopped in standard mode to retain its instance type resources and public IP address. However, you continue to be charged for the instance.
  *
 */
async function stopInstance(request: StopInstanceRequest): StopInstanceResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopInstance', 'POST', '/', 'json', false, 'json', request);
}

model StopInstancesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  batchOptimization?: string(name='BatchOptimization', description='The batch operation mode. Valid values:

*   AllTogether: In this mode, if all instances are stopped, a success message is returned. If an instance fails the verification, all instances fail to stop and an error message is returned.
*   SuccessFirst: In this mode, each instance is separately stopped. The response contains the operation results for each instance.

Default value: AllTogether.', example='AllTogether', position='Query'),
  dryRun?: boolean(name='DryRun', description='Specifies whether to perform only a dry run, without performing the actual request. Valid values:

*   true: performs only a dry run. The system checks the request for potential issues, including missing parameter values, incorrect request syntax, and instance status. If the request fails the dry run, an error message is returned. If the request passes the dry run, `DRYRUN.SUCCESS` is returned.

>  If you set `BatchOptimization` to `SuccessFirst` and `DryRun` to true, only `DRYRUN.SUCCESS` is returned, regardless of whether the request passes the dry run.

*   false: performs a dry run and performs the actual request. If the request passes the dry run, instances are stopped.

Default value: false.', example='false', position='Query'),
  forceStop?: boolean(name='ForceStop', description='Specifies whether to forcefully stop instances. Valid values:

*   true. This operation is equivalent to the typical power-off operation. Cache data that is not written to storage devices on instances is lost.
*   false.

Default value: false.', example='false', position='Query'),
  instanceId: [ string ](name='InstanceId', description='The IDs of instances.', example='i-bp67acfmxazb4p****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the instance. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  stoppedMode?: string(name='StoppedMode', description='The stop mode of the pay-as-you-go instance. Valid values:

*   StopCharging: economical mode. For information about how `StopCharging` takes effect, see the "Prerequisites" section in [Economical mode](~~63353~~).
*   KeepCharging: standard mode. After the instance is stopped in standard mode, you continue to be charged for it.

Default value: If the prerequisites required for enabling economical mode are met and you have enabled the mode in the ECS console, the default value is [StopCharging](~~63353#default~~). For more information, see the "Enable economical mode" section in `Economical mode`. Otherwise, the default value is `KeepCharging`.', example='KeepCharging', position='Query'),
}

model StopInstancesResponseBody = {
  instanceResponses?: {
    instanceResponse?: [ 
    {
      code?: string(name='Code', description='The error code returned for the instance. A return value of 200 indicates that the operation was successful. For more information, see the "Error codes" section of this topic.', example='200'),
      currentStatus?: string(name='CurrentStatus', description='The current status of the instance.', example='Stopping'),
      instanceId?: string(name='InstanceId', description='The ID of the instance.', example='i-bp67acfmxazb4p****'),
      message?: string(name='Message', description='The error message returned for the instance. A return value of success indicates that the operation was successful. For more information, see the "Error codes" section of this topic.', example='success'),
      previousStatus?: string(name='PreviousStatus', description='The status of the instance before the operation was called.', example='Running'),
    }
  ](name='InstanceResponse')
  }(name='InstanceResponses', description='The instance-specific responses, which contain the status of each instance before and after the operation was called and the results of the operation.'),
  requestId?: string(name='RequestId', description='The request ID.', example='1C488B66-B819-4D14-8711-C4EAAA13AC01'),
}

model StopInstancesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopInstancesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   If the response contains `{"OperationLocks": {"LockReason" : "security"}}` when you query the information of an instance, the instance is locked for security reasons. No operations are allowed on the instance.
  * *   After you enable economical mode for a pay-as-you-go instance that resides in a virtual private cloud (VPC), you can set `StoppedMode` to KeepCharging. This way, the pay-as-you-go instance continues to be billed after the instance is stopped. The instance type resources and public IP address of the instance are retained.
  * *   Batch operations are supported. You can use `BatchOptimization` to specify the batch operation mode.
  *
 */
async function stopInstances(request: StopInstancesRequest): StopInstancesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopInstances', 'POST', '/', 'json', false, 'json', request);
}

model StopInvocationRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  instanceId?: [ string ](name='InstanceId', description='The ID of instance N on which you want to stop the process of the Cloud Assistant command. You can specify up to 50 instance IDs in each request. Valid values of N: 1 to 50.', example='i-bp67acfmxazb4p****', position='Query'),
  invokeId: string(name='InvokeId', description='The ID of the command task. You can call the [DescribeInvocations](~~64840~~) operation to query all task IDs.', example='t-7d2a745b412b4601b2d47f6a768d****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The ID of the command task. You can call the [DescribeInvocations](~~64840~~) operation to query the IDs of all command tasks.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model StopInvocationResponseBody = {
  requestId?: string(name='RequestId', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model StopInvocationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StopInvocationResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   If you stop the process of a command that runs only once, the executions that have started are not interrupted. The executions that have not started are canceled.
  * *   If you stop the process of a command that runs on a schedule, the executions that have started are not interrupted. Subsequent executions are not scheduled.
  *
 */
async function stopInvocation(request: StopInvocationRequest): StopInvocationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StopInvocation', 'POST', '/', 'json', false, 'json', request);
}

model TagResourcesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent list of regions.', example='cn-hangzhou', position='Query'),
  resourceId: [ string ](name='ResourceId', description='The ID of resource N. Valid values of N: 1 to 50.', example='i-bp67acfmxazb4ph****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: elastic network interface (ENI)
*   ddh: dedicated host
*   ddhcluster: dedicated host cluster
*   keypair: SSH key pair
*   launchtemplate: launch template
*   reservedinstance: reserved instance
*   snapshotpolicy: automatic snapshot policy
*   elasticityassurance: elasticity assurance
*   capacityreservation: capacity reservation
*   command: Cloud Assistant command
*   invocation: Cloud Assistant command execution result', example='instance', position='Query'),
  tag: [ 
    {
      key?: string(name='Key', description='The key of tag N to add to the resource. Valid values of N: 1 to 20. The tag key cannot be an empty string. The tag key can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag key cannot start with `acs:` or `aliyun`.', example='TestKey'),
      value?: string(name='Value', description='The value of tag N to add to the resource. Valid values of N: 1 to 20. The tag value can be an empty string. The tag value can be up to 128 characters in length and cannot contain `http://` or `https://`. The tag value cannot start with `acs:`.', example='TestValue'),
    }
  ](name='Tag', description='The tags to add to the resource.', position='Query'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model TagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TagResourcesResponseBody(name='body'),
}

/**
  * Before you add tags to a resource, Alibaba Cloud checks the number of existing tags of the resource. If the maximum number of tags is reached, an error message is returned. For more information, see the "Tag limits" section in [Limits](~~25412~~).
  *
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TagResources', 'POST', '/', 'json', false, 'json', request);
}

model TerminatePhysicalConnectionRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  physicalConnectionId: string(name='PhysicalConnectionId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
}

model TerminatePhysicalConnectionResponseBody = {
  requestId?: string(name='RequestId'),
}

model TerminatePhysicalConnectionResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TerminatePhysicalConnectionResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function terminatePhysicalConnection(request: TerminatePhysicalConnectionRequest): TerminatePhysicalConnectionResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TerminatePhysicalConnection', 'POST', '/', 'json', false, 'json', request);
}

model TerminateVirtualBorderRouterRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  userCidr?: string(name='UserCidr', position='Query'),
  vbrId: string(name='VbrId', position='Query'),
}

model TerminateVirtualBorderRouterResponseBody = {
  requestId?: string(name='RequestId'),
}

model TerminateVirtualBorderRouterResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: TerminateVirtualBorderRouterResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function terminateVirtualBorderRouter(request: TerminateVirtualBorderRouterRequest): TerminateVirtualBorderRouterResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'TerminateVirtualBorderRouter', 'POST', '/', 'json', false, 'json', request);
}

model UnassignIpv6AddressesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ipv6Address?: [ string ](name='Ipv6Address', description='IPv6 address N to unassign. Valid values of N: 1 to 10.', example='2001:db8:1234:1a00::***', position='Query'),
  ipv6Prefix?: [ string ](name='Ipv6Prefix', description='IPv6 prefix N to unassign. Valid values of N: 1 to 10.', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp14v2sdd3v8ht****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model UnassignIpv6AddressesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model UnassignIpv6AddressesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnassignIpv6AddressesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * Take note of the following items:
  * *   The ENI must be in the **Available** (Available) or **InUse** (InUse) state.
  * *   If the ENI is a primary ENI, the Elastic Compute Service (ECS) instance to which the ENI is attached must be in the **Running** (Running) or **Stopped** (Stopped) state.
  *
 */
async function unassignIpv6Addresses(request: UnassignIpv6AddressesRequest): UnassignIpv6AddressesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnassignIpv6Addresses', 'POST', '/', 'json', false, 'json', request);
}

model UnassignPrivateIpAddressesRequest {
  sourceRegionId?: string(name='SourceRegionId', position='Host'),
  ipv4Prefix?: [ string ](name='Ipv4Prefix', description='The IPv4 prefixes to unassign.', position='Query'),
  networkInterfaceId: string(name='NetworkInterfaceId', description='The ID of the ENI.', example='eni-bp67acfmxazb4ph****', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  privateIpAddress?: [ string ](name='PrivateIpAddress', description='The secondary private IP addresses to unassign.', example='192.168.**.**', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the ENI. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model UnassignPrivateIpAddressesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the request.', example='473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E'),
}

model UnassignPrivateIpAddressesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnassignPrivateIpAddressesResponseBody(name='body'),
}

/**
  * ## [](#)Usage notes
  * *   The ENI from which to unassign secondary private IP addresses must be in the **Available** (Available) or **InUse** (InUse) state.
  * *   If the ENI is a primary ENI, the Elastic Compute Service (ECS) instance to which the ENI is attached must be in the **Running** (Running) or **Stopped** (Stopped) state.
  *
 */
async function unassignPrivateIpAddresses(request: UnassignPrivateIpAddressesRequest): UnassignPrivateIpAddressesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnassignPrivateIpAddresses', 'POST', '/', 'json', false, 'json', request);
}

model UnassociateEipAddressRequest {
  allocationId: string(name='AllocationId', position='Query'),
  instanceId: string(name='InstanceId', position='Query'),
  instanceType?: string(name='InstanceType', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId?: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model UnassociateEipAddressResponseBody = {
  requestId?: string(name='RequestId'),
}

model UnassociateEipAddressResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnassociateEipAddressResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function unassociateEipAddress(request: UnassociateEipAddressRequest): UnassociateEipAddressResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnassociateEipAddress', 'POST', '/', 'json', false, 'json', request);
}

model UnassociateHaVipRequest {
  clientToken?: string(name='ClientToken', position='Query'),
  force?: string(name='Force', position='Query'),
  haVipId: string(name='HaVipId', position='Query'),
  instanceId: string(name='InstanceId', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
}

model UnassociateHaVipResponseBody = {
  requestId?: string(name='RequestId'),
}

model UnassociateHaVipResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UnassociateHaVipResponseBody(name='body'),
}

/**
  * @deprecated
  *
 */
// Deprecated
async function unassociateHaVip(request: UnassociateHaVipRequest): UnassociateHaVipResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UnassociateHaVip', 'POST', '/', 'json', false, 'json', request);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='Specifies whether to remove all tags from the resource. This parameter takes effect only if you do not specify TagKey.N. Valid values:

*   true
*   false

Default value: false.', example='false', position='Query'),
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  regionId: string(name='RegionId', description='The region ID of the resource. You can call the [DescribeRegions](~~25609~~) operation to query the most recent region list.', example='cn-hangzhou', position='Query'),
  resourceId: [ string ](name='ResourceId', description='The resource IDs. Valid values of N: 1 to 50.', example='i-bp67acfmxazb4ph****', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  resourceType: string(name='ResourceType', description='The type of the resource. Valid values:

*   instance: ECS instance
*   disk: disk
*   snapshot: snapshot
*   image: image
*   securitygroup: security group
*   volume: storage volume
*   eni: elastic network interface (ENI)
*   ddh: dedicated host
*   ddhcluster: dedicated host cluster
*   keypair: SSH key pair
*   launchtemplate: launch template
*   reservedinstance: reserved instance
*   snapshotpolicy: automatic snapshot policy
*   elasticityassurance: elasticity assurance
*   capacityreservation: capacity reservation
*   command: Cloud Assistant command
*   invocation: Cloud Assistant command execution result', example='instance', position='Query'),
  tagKey?: [ string ](name='TagKey', description='The tag keys. Valid values of N: 1 to 20.', example='TestKey', position='Query'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', description='The request ID.', example='C46FF5A8-C5F0-4024-8262-B16B639225A0'),
}

model UntagResourcesResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: UntagResourcesResponseBody(name='body'),
}

async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'UntagResources', 'POST', '/', 'json', false, 'json', request);
}

