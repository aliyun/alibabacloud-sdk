/**
 *
 */
import BaseClientBuilder;
import TeaAsyncHandler;
import TeaRequest;
import AsyncRequestBody;
import RequestBody;
import AsyncResponseHandler;
import ClientConfiguration;
import ClientExecutionParams;
extends BaseClientBuilder;
type @product = string
type @version = string
type @endpointRule = string
type @endpointMap = map[string]string
type @REQUEST = TeaRequest
type @handler = TeaAsyncHandler

init(configuration: ClientConfiguration){
  @handler = new TeaAsyncHandler(configuration);
  @product = 'Dypnsapi-intl';
  @version = '2017-07-25';
  @endpointRule = '';
  @endpointMap = {
  };
}

function close(): void {
  @handler.close();
}

model CheckVerificationRequest {
  code: string(name='Code', description='The verification code.', example='1234', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  serviceSid?: string(name='ServiceSid', description='The service ID that is displayed in the Phone Number Verification Service console.', example='FA00000000000001', position='Query'),
  to?: string(name='To', description='The mobile phone number of the recipient. You must add the country code to the beginning of the mobile phone number. Example: 6212345\\*\\*\\*\\*01.', example='6212345****01', position='Query'),
  verificationId: string(name='VerificationId', description='The unique authentication ID that is returned by calling the StartVerification operation.', example='rJXlaR2q5LpKfREtpRPMBfDVQvELZwmBbK5yVR7gr3nLbNAcolLGPYCJaVHt/i+I', position='Query'),
}

model CheckVerificationResponseBody = {
  code?: string(name='Code', description='The HTTP status code that was returned.', example='OK'),
  message?: string(name='Message', description='The message that was returned.', example='OK'),
  model?: map[string]any(name='Model', description='The data that was returned for the successful request. Example: "Model": { "phoneNumber": "", "channel": "", "verificationId": "", "status": "approved" },'),
  requestId?: string(name='RequestId', description='The ID of the request. An ID is a unique identifier that Alibaba Cloud generates for a request.', example='HF14955E-EEB5-3CE4-AE50-00F7FC8C1D62'),
  success?: string(name='Success', description='Indicates whether the request was successful. Valid values: true: The request was successful. false: The request failed.', example='true'),
}

model CheckVerificationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: CheckVerificationResponseBody(name='body'),
}

async function checkVerification(request: CheckVerificationRequest): CheckVerificationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'CheckVerification', 'POST', '/', 'json', false, 'json', request);
}

model SearchVerificationRequest {
  code?: string(name='Code', description='The verification code.', example='1234', position='Query'),
  currentPage?: long(name='CurrentPage', description='The number of the page to return. Pages start from page 1.', example='1', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  pageSize?: long(name='PageSize', description='The number of entries to return on each page.', example='10', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  sendDate?: long(name='SendDate', description='The time when a text message is sent, in milliseconds. You can query text messages that were sent within the last 30 days.

Example: 1677600000000.', example='1677600000000,', position='Query'),
  serviceSid?: string(name='ServiceSid', description='The service ID that is displayed in the Phone Number Verification Service console.', example='FA00000000000001', position='Query'),
  to?: string(name='To', description='The mobile phone number of the recipient. You must add the country code to the beginning of the mobile phone number. Example: 6212345\\*\\*\\*\\*01.', example='6212345****01', position='Query'),
  verificationId?: string(name='VerificationId', description='The unique authentication ID that is returned by calling the StartVerification operation.', example='rJXlaR2q5LpKfREtpRPMBfDVQvELZwmBbK5yVR7gr3nLbNAcolLGPYCJaVHt/i+I', position='Query'),
}

model SearchVerificationResponseBody = {
  code?: string(name='Code', description='The HTTP status code that was returned for the request.', example='OK'),
  message?: string(name='Message', description='The message that was returned.', example='OK'),
  model?: map[string]any(name='Model', description='The data that was returned for the request. Example: "Model": { "records": \\[ { "sendDate":, "channel": "", "serviceSid": "", "to": "", "updatedDate":, "verificationId": "", "status": "" } ], "pageNo": , "totalPage": 1, "pageSize": 20, "totalCount": 1, }'),
  requestId?: string(name='RequestId', description='The ID of the request. An ID is a unique identifier that Alibaba Cloud generates for a request.', example='HF14955E-EEB5-3CE4-AE50-00F7FC8C1D62'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values: true: The request was successful. false: The request failed.', example='true'),
}

model SearchVerificationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: SearchVerificationResponseBody(name='body'),
}

async function searchVerification(request: SearchVerificationRequest): SearchVerificationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'SearchVerification', 'POST', '/', 'json', false, 'json', request);
}

model StartVerificationRequest {
  channel: string(name='Channel', description='The channels that you can use for verification.

Valid values:

*   Voice

    <!-- -->

    <!-- -->

    <!-- -->

*   SMS

    <!-- -->

    <!-- -->

    <!-- -->

*   WhatsApp

    <!-- -->

    <!-- -->

    <!-- -->', example='SMS', position='Query'),
  ownerId?: long(name='OwnerId', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', position='Query'),
  serviceSid: string(name='ServiceSid', description='The service ID that is displayed in the Phone Number Verification Service console.', example='FA00000000000001', position='Query'),
  to: string(name='To', description='The mobile phone number of the recipient. You must add the country code to the beginning of the mobile phone number. Example: 6212345\\*\\*\\*\\*01.', example='6212345****01', position='Query'),
}

model StartVerificationResponseBody = {
  code?: string(name='Code', description='The HTTP status code that was returned for the request.', example='OK'),
  message?: string(name='Message', description='The message that was returned.', example='OK'),
  model?: map[string]any(name='Model', description='The data that was returned only if the request was successful. Example: "Model": { "verifyCode": "", "verificationId": "", "status": "" }'),
  requestId?: string(name='RequestId', description='The ID of the request. An ID is a unique identifier that Alibaba Cloud generates for a request.', example='HF14955E-EEB5-3CE4-AE50-00F7FC8C1D62'),
  success?: boolean(name='Success', description='Indicates whether the request was successful. Valid values: true: The request was successful. false: The request failed.', example='true'),
}

model StartVerificationResponse = {
  headers?: map[string]string(name='headers'),
  statusCode?: int32(name='statusCode'),
  body?: StartVerificationResponseBody(name='body'),
}

async function startVerification(request: StartVerificationRequest): StartVerificationResponse {
  @handler.validateRequestModel(request);
  return @handler.do('RPC', 'StartVerification', 'POST', '/', 'json', false, 'json', request);
}

