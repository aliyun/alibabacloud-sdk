/**
 *
 */
import Util;
import OpenApi;
import OpenApiUtil;
import EndpointUtil;

extends OpenApi;


init(config: OpenApi.Config){
  super(config);
  @endpointRule = 'regional';
  @endpointMap = {
    cn-qingdao = 'ddosbgp.aliyuncs.com',
    cn-beijing = 'ddosbgp.aliyuncs.com',
    cn-zhangjiakou = 'ddosbgp.aliyuncs.com',
    cn-huhehaote = 'ddosbgp.aliyuncs.com',
    cn-hangzhou = 'ddosbgp.aliyuncs.com',
    cn-shanghai = 'ddosbgp.aliyuncs.com',
    cn-shenzhen = 'ddosbgp.aliyuncs.com',
    ap-northeast-1 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    ap-south-1 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    ap-southeast-2 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    ap-southeast-3 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    ap-southeast-5 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    cn-chengdu = 'ddosbgp.aliyuncs.com',
    eu-central-1 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    eu-west-1 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    me-east-1 = 'ddosbgp.ap-southeast-1.aliyuncs.com',
    cn-hangzhou-finance = 'ddosbgp.aliyuncs.com',
    cn-shenzhen-finance-1 = 'ddosbgp.aliyuncs.com',
    cn-shanghai-finance-1 = 'ddosbgp.aliyuncs.com',
    cn-north-2-gov-1 = 'ddosbgp.aliyuncs.com',
  };

  checkConfig(config);
  @endpoint = getEndpoint('ddosbgp', @regionId, @endpointRule, @network, @suffix, @endpointMap, @endpoint);
}

function getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: map[string]string, endpoint: string) throws: string{
  if (!Util.empty(endpoint)) {
    return endpoint;
  }
  
  if (!Util.isUnset(endpointMap) && !Util.empty(endpointMap[regionId])) {
    return endpointMap[regionId];
  }
  return EndpointUtil.getEndpointRules(productId, regionId, endpointRule, network, suffix);
}

model AddIpRequest {
  instanceId?: string(name='InstanceId', description='The ID of the resource group to which the Anti-DDoS Origin Enterprise instance belongs in Resource Management. This parameter is empty by default, which indicates that the instance belongs to the default resource group.

For more information about resource groups, see [Create a resource group](~~94485~~).', example='ddosbgp-cn-npk1z7t9****'),
  ipList?: string(name='IpList', description='The region ID of the Anti-DDoS Origin Enterprise instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query all regions supported by Anti-DDoS Origin.', example='[{"ip":"1.XX.XX.1"},{"ip":"2.XX.XX.2"}]'),
  regionId?: string(name='RegionId', description='The ID of the request.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='rg-acfm2pz25js****'),
}

model AddIpResponseBody = {
  requestId?: string(name='RequestId', description='Adds IP addresses to an Anti-DDoS Origin Enterprise instance.', example='C33EB3D5-AF96-43CA-9C7E-37A81BC06A1E'),
}

model AddIpResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: AddIpResponseBody(name='body'),
}

async function addIpWithOptions(request: AddIpRequest, runtime: Util.RuntimeOptions): AddIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipList)) {
    query['IpList'] = request.ipList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'AddIp',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function addIp(request: AddIpRequest): AddIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return addIpWithOptions(request, runtime);
}

model CheckAccessLogAuthRequest {
  regionId?: string(name='RegionId', description='Indicates whether Anti-DDoS Origin was authorized to access Log Service. Valid values:

*   **true**: Anti-DDoS Origin was authorized.
*   **false**: Anti-DDoS Origin was not authorized.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the request.', example='rg-acfm2pz25js****'),
}

model CheckAccessLogAuthResponseBody = {
  accessLogAuth?: boolean(name='AccessLogAuth', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='true'),
  requestId?: string(name='RequestId', example='864FE2F4-CB2E-4024-B9EF-D59FD08ABD41'),
}

model CheckAccessLogAuthResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: CheckAccessLogAuthResponseBody(name='body'),
}

async function checkAccessLogAuthWithOptions(request: CheckAccessLogAuthRequest, runtime: Util.RuntimeOptions): CheckAccessLogAuthResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CheckAccessLogAuth',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function checkAccessLogAuth(request: CheckAccessLogAuthRequest): CheckAccessLogAuthResponse {
  var runtime = new Util.RuntimeOptions{};
  return checkAccessLogAuthWithOptions(request, runtime);
}

model CheckGrantRequest {
  regionId?: string(name='RegionId', description='WB269094', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='CheckGrant', example='rg-acfm2pz25js****'),
}

model CheckGrantResponseBody = {
  requestId?: string(name='RequestId', example='DB002CE5-5E6C-5F11-AE15-B525299A40F6'),
  status?: int32(name='Status', example='1'),
}

model CheckGrantResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: CheckGrantResponseBody(name='body'),
}

/**
  * Indicates whether Anti-DDoS Origin is authorized to obtain information about the assets within the current Alibaba Cloud account. Valid values:
  * *   **1**: Anti-DDoS Origin is authorized to obtain information about the assets within the current Alibaba Cloud account.
  * *   **0**: Anti-DDoS Origin is not authorized to obtain information about the assets within the current Alibaba Cloud account.
  *
  * @param request CheckGrantRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return CheckGrantResponse
 */
async function checkGrantWithOptions(request: CheckGrantRequest, runtime: Util.RuntimeOptions): CheckGrantResponse {
  Util.validateModel(request);
  var query = OpenApiUtil.query(Util.toMap(request));
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CheckGrant',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'GET',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * Indicates whether Anti-DDoS Origin is authorized to obtain information about the assets within the current Alibaba Cloud account. Valid values:
  * *   **1**: Anti-DDoS Origin is authorized to obtain information about the assets within the current Alibaba Cloud account.
  * *   **0**: Anti-DDoS Origin is not authorized to obtain information about the assets within the current Alibaba Cloud account.
  *
  * @param request CheckGrantRequest
  * @return CheckGrantResponse
 */
async function checkGrant(request: CheckGrantRequest): CheckGrantResponse {
  var runtime = new Util.RuntimeOptions{};
  return checkGrantWithOptions(request, runtime);
}

model ConfigSchedruleOnDemandRequest {
  instanceId?: string(name='InstanceId', description='The name of the scheduling rule.

The name can contain lowercase letters, digits, hyphens (-), and underscores (\\_). The name can be up to 32 characters in length. We recommend that you use the ID of the on-demand instance as the name. Example: `ddosbgp-cn-z2q1qzxb****`.', example='ddosbgp-cn-z2q1qzxb****'),
  regionId?: string(name='RegionId', description='The ID of the request.', example='cn-zhangjiakou'),
  ruleAction?: string(name='RuleAction', description='Specifies whether the scheduling rule is enabled. Valid values:

*   **on**: enabled
*   **off**: disabled', example='declare'),
  ruleConditionCnt?: string(name='RuleConditionCnt', description='The scheduling action. Set the value to **declare**, which indicates that the route is advertised.', example='3'),
  ruleConditionKpps?: string(name='RuleConditionKpps', description='If the inbound bandwidth or packets consecutively exceed the threshold for the specified number of times, the scheduling rule is triggered and traffic is rerouted to the on-demand instance. The specified number of times is the value of this parameter.

>  The threshold of inbound bandwidth is the value of **RuleConditionMbps**. The threshold of inbound packets is the value of **RuleConditionKpps**.', example='10'),
  ruleConditionMbps?: string(name='RuleConditionMbps', description='The threshold of inbound packets. Unit: Kpps. Minimum value: **10**.', example='100'),
  ruleName?: string(name='RuleName', description='The threshold of inbound bandwidth. Unit: Mbit/s. Minimum value: **100**.', example='ddosbgp-cn-z2q1qzxb****'),
  ruleSwitch?: string(name='RuleSwitch', description='The stop method of the scheduling rule. Valid values:

*   **auto**: The scheduling rule automatically stops.
*   **manual**: The scheduling rule is manually stopped.', example='on'),
  ruleUndoBeginTime?: string(name='RuleUndoBeginTime', description='The end time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.', example='03:00'),
  ruleUndoEndTime?: string(name='RuleUndoEndTime', description='The time zone of the time when the scheduling rule automatically stops. The time zone must be in the `GMT-hh:mm` format.

For example, the value `GMT-08:00` indicates that the time zone is UTC+8.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='03:05'),
  ruleUndoMode?: string(name='RuleUndoMode', description='The start time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.

If the system detects that DDoS attacks stop, the system no longer reroutes traffic to the on-demand instance from the time you specified. We recommend that you set this parameter to a value that is defined as off-peak hours.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='manual'),
  timeZone?: string(name='TimeZone', description='The region ID of the on-demand instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query all regions supported by Anti-DDoS Origin.', example='GMT-08:00'),
}

model ConfigSchedruleOnDemandResponseBody = {
  requestId?: string(name='RequestId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='BD06F539-2FBE-450D-9391-7EFF787128F5'),
}

model ConfigSchedruleOnDemandResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ConfigSchedruleOnDemandResponseBody(name='body'),
}

async function configSchedruleOnDemandWithOptions(request: ConfigSchedruleOnDemandRequest, runtime: Util.RuntimeOptions): ConfigSchedruleOnDemandResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.ruleAction)) {
    query['RuleAction'] = request.ruleAction;
  }
  if (!Util.isUnset(request.ruleConditionCnt)) {
    query['RuleConditionCnt'] = request.ruleConditionCnt;
  }
  if (!Util.isUnset(request.ruleConditionKpps)) {
    query['RuleConditionKpps'] = request.ruleConditionKpps;
  }
  if (!Util.isUnset(request.ruleConditionMbps)) {
    query['RuleConditionMbps'] = request.ruleConditionMbps;
  }
  if (!Util.isUnset(request.ruleName)) {
    query['RuleName'] = request.ruleName;
  }
  if (!Util.isUnset(request.ruleSwitch)) {
    query['RuleSwitch'] = request.ruleSwitch;
  }
  if (!Util.isUnset(request.ruleUndoBeginTime)) {
    query['RuleUndoBeginTime'] = request.ruleUndoBeginTime;
  }
  if (!Util.isUnset(request.ruleUndoEndTime)) {
    query['RuleUndoEndTime'] = request.ruleUndoEndTime;
  }
  if (!Util.isUnset(request.ruleUndoMode)) {
    query['RuleUndoMode'] = request.ruleUndoMode;
  }
  if (!Util.isUnset(request.timeZone)) {
    query['TimeZone'] = request.timeZone;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ConfigSchedruleOnDemand',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function configSchedruleOnDemand(request: ConfigSchedruleOnDemandRequest): ConfigSchedruleOnDemandResponse {
  var runtime = new Util.RuntimeOptions{};
  return configSchedruleOnDemandWithOptions(request, runtime);
}

model CreateSchedruleOnDemandRequest {
  instanceId?: string(name='InstanceId', description='The threshold of inbound bandwidth. Unit: Mbit/s. Minimum value: **100**.', example='ddosbgp-cn-z2q1qzxb****'),
  regionId?: string(name='RegionId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='cn-zhangjiakou'),
  ruleAction?: string(name='RuleAction', description='The stop method of the scheduling rule. Valid values:

*   **auto**: The scheduling rule automatically stops.
*   **manual**: The scheduling rule is manually stopped.', example='declare'),
  ruleConditionCnt?: string(name='RuleConditionCnt', description='Specifies whether the scheduling rule is enabled. Valid values:

*   **on**: enabled
*   **off**: disabled', example='3'),
  ruleConditionKpps?: string(name='RuleConditionKpps', description='The scheduling action. Set the value to **declare**, which indicates that the route is advertised.', example='10'),
  ruleConditionMbps?: string(name='RuleConditionMbps', description='If the inbound bandwidth or packets consecutively exceed the threshold for the specified number of times, the scheduling rule is triggered and traffic is rerouted to the on-demand instance. The specified number of times is the value of this parameter.

>  The threshold of inbound bandwidth is the value of **RuleConditionMbps**. The threshold of inbound packets is the value of **RuleConditionKpps**.', example='100'),
  ruleName?: string(name='RuleName', description='The threshold of inbound packets. Unit: Kpps. Minimum value: **10**.', example='ddosbgp-cn-z2q1qzxb****'),
  ruleSwitch?: string(name='RuleSwitch', description='The start time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.

If the system detects that DDoS attacks stop, the system no longer reroutes traffic to the on-demand instance from the time you specified. We recommend that you set this parameter to a value that is defined as off-peak hours.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='on'),
  ruleUndoBeginTime?: string(name='RuleUndoBeginTime', description='The time zone of the time when the scheduling rule automatically stops. The time zone must be in the `GMT-hh:mm` format.

For example, the value `GMT-08:00` indicates that the time zone is UTC+8.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='03:00'),
  ruleUndoEndTime?: string(name='RuleUndoEndTime', description='The region ID of the on-demand instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query all regions supported by Anti-DDoS Origin.', example='03:05'),
  ruleUndoMode?: string(name='RuleUndoMode', description='The end time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.', example='auto'),
  timeZone?: string(name='TimeZone', description='The ID of the request.', example='GMT-08:00'),
}

model CreateSchedruleOnDemandResponseBody = {
  requestId?: string(name='RequestId', description='Creates a scheduling rule for an on-demand instance.', example='BD06F539-2FBE-450D-9391-7EFF787128F5'),
}

model CreateSchedruleOnDemandResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: CreateSchedruleOnDemandResponseBody(name='body'),
}

async function createSchedruleOnDemandWithOptions(request: CreateSchedruleOnDemandRequest, runtime: Util.RuntimeOptions): CreateSchedruleOnDemandResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.ruleAction)) {
    query['RuleAction'] = request.ruleAction;
  }
  if (!Util.isUnset(request.ruleConditionCnt)) {
    query['RuleConditionCnt'] = request.ruleConditionCnt;
  }
  if (!Util.isUnset(request.ruleConditionKpps)) {
    query['RuleConditionKpps'] = request.ruleConditionKpps;
  }
  if (!Util.isUnset(request.ruleConditionMbps)) {
    query['RuleConditionMbps'] = request.ruleConditionMbps;
  }
  if (!Util.isUnset(request.ruleName)) {
    query['RuleName'] = request.ruleName;
  }
  if (!Util.isUnset(request.ruleSwitch)) {
    query['RuleSwitch'] = request.ruleSwitch;
  }
  if (!Util.isUnset(request.ruleUndoBeginTime)) {
    query['RuleUndoBeginTime'] = request.ruleUndoBeginTime;
  }
  if (!Util.isUnset(request.ruleUndoEndTime)) {
    query['RuleUndoEndTime'] = request.ruleUndoEndTime;
  }
  if (!Util.isUnset(request.ruleUndoMode)) {
    query['RuleUndoMode'] = request.ruleUndoMode;
  }
  if (!Util.isUnset(request.timeZone)) {
    query['TimeZone'] = request.timeZone;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'CreateSchedruleOnDemand',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function createSchedruleOnDemand(request: CreateSchedruleOnDemandRequest): CreateSchedruleOnDemandResponse {
  var runtime = new Util.RuntimeOptions{};
  return createSchedruleOnDemandWithOptions(request, runtime);
}

model DeleteBlackholeRequest {
  instanceId?: string(name='InstanceId', description='DeleteBlackhole', example='ddosbgp-cn-n6w1r7nz****'),
  ip?: string(name='Ip', description='Deactivates blackhole filtering for a protected IP address.', example='47.89.XX.XX'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='WB269094', example='rg-acfm2pz25js****'),
}

model DeleteBlackholeResponseBody = {
  requestId?: string(name='RequestId', example='C33EB3D5-AF96-43CA-9C7E-37A81BC06A1E'),
}

model DeleteBlackholeResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DeleteBlackholeResponseBody(name='body'),
}

/**
  * The operation that you want to perform. Set the value to **DeleteBlackhole**.
  *
  * @param request DeleteBlackholeRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DeleteBlackholeResponse
 */
async function deleteBlackholeWithOptions(request: DeleteBlackholeRequest, runtime: Util.RuntimeOptions): DeleteBlackholeResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteBlackhole',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The operation that you want to perform. Set the value to **DeleteBlackhole**.
  *
  * @param request DeleteBlackholeRequest
  * @return DeleteBlackholeResponse
 */
async function deleteBlackhole(request: DeleteBlackholeRequest): DeleteBlackholeResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteBlackholeWithOptions(request, runtime);
}

model DeleteIpRequest {
  instanceId?: string(name='InstanceId', description='The ID of the request.', example='ddosbgp-cn-npk1z7t9****'),
  ipList?: string(name='IpList', description='The region ID of the Anti-DDoS Origin Enterprise instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query all regions supported by Anti-DDoS Origin.', example='[{"ip":"1.XX.XX.1"},{"ip":"2.XX.XX.2"}]'),
  regionId?: string(name='RegionId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The Anti-DDoS Origin Enterprise instance no longer protects the IP addresses that are removed.', example='rg-acfm2pz25js****'),
}

model DeleteIpResponseBody = {
  requestId?: string(name='RequestId', description='Removes specific IP addresses from an Anti-DDoS Origin Enterprise instance.', example='C33EB3D5-AF96-43CA-9C7E-37A81BC06A1E'),
}

model DeleteIpResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DeleteIpResponseBody(name='body'),
}

/**
  * The ID of the Anti-DDoS Origin Enterprise instance.
  * >  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin Enterprise instances.
  *
  * @param request DeleteIpRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DeleteIpResponse
 */
async function deleteIpWithOptions(request: DeleteIpRequest, runtime: Util.RuntimeOptions): DeleteIpResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ipList)) {
    query['IpList'] = request.ipList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteIp',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The ID of the Anti-DDoS Origin Enterprise instance.
  * >  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin Enterprise instances.
  *
  * @param request DeleteIpRequest
  * @return DeleteIpResponse
 */
async function deleteIp(request: DeleteIpRequest): DeleteIpResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteIpWithOptions(request, runtime);
}

model DeleteSchedruleOnDemandRequest {
  instanceId?: string(name='InstanceId', description='The name of the scheduling rule that you want to delete.', example='ddosbgp-cn-z2q1qzxb****'),
  regionId?: string(name='RegionId', description='The ID of the request.', example='cn-zhangjiakou'),
  ruleName?: string(name='RuleName', description='The region ID of the on-demand instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query all regions supported by Anti-DDoS Origin.', example='testrule'),
}

model DeleteSchedruleOnDemandResponseBody = {
  requestId?: string(name='RequestId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='BD06F539-2FBE-450D-9391-7EFF787128F5'),
}

model DeleteSchedruleOnDemandResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DeleteSchedruleOnDemandResponseBody(name='body'),
}

async function deleteSchedruleOnDemandWithOptions(request: DeleteSchedruleOnDemandRequest, runtime: Util.RuntimeOptions): DeleteSchedruleOnDemandResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.ruleName)) {
    query['RuleName'] = request.ruleName;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DeleteSchedruleOnDemand',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function deleteSchedruleOnDemand(request: DeleteSchedruleOnDemandRequest): DeleteSchedruleOnDemandResponse {
  var runtime = new Util.RuntimeOptions{};
  return deleteSchedruleOnDemandWithOptions(request, runtime);
}

model DescribeDdosEventRequest {
  endTime?: int32(name='EndTime', description='The time when the DDoS attack stopped. This value is a UNIX timestamp. Unit: seconds.', example='1638288000'),
  instanceId?: string(name='InstanceId', description='The start time of the DDoS attack event to query. This value is a UNIX timestamp. Unit: seconds.', example='ddosbgp-cn-n6w1r7nz****'),
  ip?: string(name='Ip', description='The status of the DDoS attack event. Valid values:

*   **hole_begin**: indicates that blackhole filtering is triggered for the attacked IP address.
*   **hole_end**: indicates that blackhole filtering is deactivated for the attacked IP address.
*   **defense_begin**: indicates that attack traffic is being scrubbed.
*   **defense_end**: indicates that attack traffic is scrubbed.', example='47.89.XX.XX'),
  pageNo?: int32(name='PageNo', description='The attacked IP address to query.', example='1'),
  pageSize?: int32(name='PageSize', description='The ID of the Anti-DDoS Origin instance to query.

>  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin instances.', example='10'),
  regionId?: string(name='RegionId', description='The details about the DDoS attack event.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The number of the page to return.', example='rg-acfm2pz25js****'),
  startTime?: int32(name='StartTime', description='The operation that you want to perform. Set the value to **DescribeDdosEvent**', example='1633017600'),
}

model DescribeDdosEventResponseBody = {
  events?: [ 
    {
      endTime?: int32(name='EndTime', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='1637554335'),
      ip?: string(name='Ip', example='47.89.XX.XX'),
      mbps?: int32(name='Mbps', description='WB269094', example='0'),
      pps?: int32(name='Pps', example='456'),
      startTime?: int32(name='StartTime', description='DescribeDdosEvent', example='1637554034'),
      status?: string(name='Status', description='Queries the details about the DDoS attack events that occurred on a specific Anti-DDoS Origin instance.', example='defense_end'),
    }
  ](name='Events', description='The number of packets at the start of the DDoS attack. Unit: packets per second (PPS).'),
  requestId?: string(name='RequestId', description='The ID of the request.', example='F3B6C3F9-6B21-519D-B976-A1E14166F909'),
  total?: long(name='Total', description='The time when the DDoS attack started. This value is a UNIX timestamp. Unit: seconds.', example='1'),
}

model DescribeDdosEventResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeDdosEventResponseBody(name='body'),
}

/**
  * The number of entries to return on each page.
  *
  * @param request DescribeDdosEventRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeDdosEventResponse
 */
async function describeDdosEventWithOptions(request: DescribeDdosEventRequest, runtime: Util.RuntimeOptions): DescribeDdosEventResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.pageNo)) {
    query['PageNo'] = request.pageNo;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeDdosEvent',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The number of entries to return on each page.
  *
  * @param request DescribeDdosEventRequest
  * @return DescribeDdosEventResponse
 */
async function describeDdosEvent(request: DescribeDdosEventRequest): DescribeDdosEventResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeDdosEventWithOptions(request, runtime);
}

model DescribeExcpetionCountRequest {
  regionId?: string(name='RegionId', description='DescribeExcpetionCount', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='Queries the number of assets that are in an abnormal state and the number of Anti-DDoS Origin instances that are about to expire in a specific region.', example='rg-acfm2pz25js****'),
}

model DescribeExcpetionCountResponseBody = {
  exceptionIpCount?: int32(name='ExceptionIpCount', description='WB269094', example='0'),
  expireTimeCount?: int32(name='ExpireTimeCount', example='1'),
  requestId?: string(name='RequestId', example='4B45279A-B1BE-5EEE-87CA-58AF4183EA58'),
}

model DescribeExcpetionCountResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeExcpetionCountResponseBody(name='body'),
}

/**
  * The operation that you want to perform. Set the value to **DescribeExcpetionCount**.
  *
  * @param request DescribeExcpetionCountRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeExcpetionCountResponse
 */
async function describeExcpetionCountWithOptions(request: DescribeExcpetionCountRequest, runtime: Util.RuntimeOptions): DescribeExcpetionCountResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeExcpetionCount',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The operation that you want to perform. Set the value to **DescribeExcpetionCount**.
  *
  * @param request DescribeExcpetionCountRequest
  * @return DescribeExcpetionCountResponse
 */
async function describeExcpetionCount(request: DescribeExcpetionCountRequest): DescribeExcpetionCountResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeExcpetionCountWithOptions(request, runtime);
}

model DescribeInstanceListRequest {
  instanceIdList?: string(name='InstanceIdList', description='The details about the Anti-DDoS Origin instance.', example='["ddosbgp-cn-oew1pjrk****"]'),
  instanceType?: string(name='InstanceType', description='The IDs of the Anti-DDoS Origin instances to query. Specify the value is in the `["<Instance ID 1>","<Instance ID 2>",……]` format.', example='0'),
  instanceTypeList?: [ string ](name='InstanceTypeList'),
  ip?: string(name='Ip', description='The remarks of the Anti-DDoS Origin instance to query. Fuzzy match is supported.', example='47.89.XX.XX'),
  ipVersion?: string(name='IpVersion', description='The time when the instance was purchased. This value is a UNIX timestamp. Unit: milliseconds.', example='IPv4'),
  orderby?: string(name='Orderby', description='The mitigation plan of the Anti-DDoS Origin instance to query. Valid values:

*   **0**: the Professional mitigation plan
*   **1**: the Enterprise mitigation plan', example='expireTime'),
  orderdire?: string(name='Orderdire', description='The key of the tag that is added to the Anti-DDoS Origin instance to query.', example='desc'),
  pageNo?: int32(name='PageNo', description='The total number of Anti-DDoS Origin instances.', example='1'),
  pageSize?: int32(name='PageSize', description='The IP address of the object that is protected by the Anti-DDoS Origin instance to query.', example='10'),
  regionId?: string(name='RegionId', description='The ID of the region where the Anti-DDoS Origin instance to query resides.

>  You can call the [DescribeRegions](~~118703~~) operation to query the most recent region list.', example='cn-hangzhou'),
  remark?: string(name='Remark', description='Indicates whether auto-renewal is enabled for the instance. Valid values:

*   **true**: enabled
*   **false**: disabled', example='test'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the resource group to which the Anti-DDoS Origin instance belongs in Resource Management.

If you do not specify this parameter, the instance belongs to the default resource group.', example='rg-acfm2pz25js****'),
  tag?: [ 
    {
      key?: string(name='Key', description='The ID of the instance.', example='test-key'),
      value?: string(name='Value', description='The field that is used to sort the Anti-DDoS Origin instances. Set the value to **expireTime**, which indicates that the instances are sorted based on the expiration time.

You can set the **Orderdire** parameter to specify the sorting method.', example='test-value'),
    }
  ](name='Tag'),
}

model DescribeInstanceListResponseBody = {
  instanceList?: [ 
    {
      autoRenewal?: boolean(name='AutoRenewal', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='false'),
      blackholdingCount?: string(name='BlackholdingCount', example='0'),
      coverageType?: int32(name='CoverageType'),
      expireTime?: long(name='ExpireTime', description='DescribeInstanceList', example='1640275200000'),
      gmtCreate?: long(name='GmtCreate', example='1592886047000'),
      instanceId?: string(name='InstanceId', example='ddosbgp-cn-oew1pjrk****'),
      instanceType?: string(name='InstanceType', example='1'),
      ipType?: string(name='IpType', description='The ID of the request.', example='IPv4'),
      product?: string(name='Product', description='WB269094', example='gamebox'),
      remark?: string(name='Remark', description='Queries the details of all Anti-DDoS Origin instances.', example='test'),
      status?: string(name='Status', description='The remarks of the instance.', example='1'),
    }
  ](name='InstanceList', description='The number of the page to return.'),
  requestId?: string(name='RequestId', description='The value of the tag that is added to the Anti-DDoS Origin instance to query.', example='381D5D33-BB8F-395F-8EE4-AE3BB4B523C4'),
  total?: long(name='Total', description='The type of the cloud service that is associated with the Anti-DDoS Origin instance. By default, this parameter is not returned. If the Anti-DDoS Origin instance is created by using a different cloud service, the code of the cloud service is returned.

Valid values:

*   **gamebox**: The Anti-DDoS Origin instance is created by using Game Security Box.
*   **eip**: The Anti-DDoS Origin instance is created by using an elastic IP address (EIP) for which Anti-DDoS (Enhanced Edition) is enabled.', example='1'),
}

model DescribeInstanceListResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeInstanceListResponseBody(name='body'),
}

/**
  * The status of the instance. Valid values:
  * *   **1**: normal
  * *   **2**: expired
  * *   **3**: released
  *
  * @param request DescribeInstanceListRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeInstanceListResponse
 */
async function describeInstanceListWithOptions(request: DescribeInstanceListRequest, runtime: Util.RuntimeOptions): DescribeInstanceListResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceIdList)) {
    query['InstanceIdList'] = request.instanceIdList;
  }
  if (!Util.isUnset(request.instanceType)) {
    query['InstanceType'] = request.instanceType;
  }
  if (!Util.isUnset(request.instanceTypeList)) {
    query['InstanceTypeList'] = request.instanceTypeList;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.ipVersion)) {
    query['IpVersion'] = request.ipVersion;
  }
  if (!Util.isUnset(request.orderby)) {
    query['Orderby'] = request.orderby;
  }
  if (!Util.isUnset(request.orderdire)) {
    query['Orderdire'] = request.orderdire;
  }
  if (!Util.isUnset(request.pageNo)) {
    query['PageNo'] = request.pageNo;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeInstanceList',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The status of the instance. Valid values:
  * *   **1**: normal
  * *   **2**: expired
  * *   **3**: released
  *
  * @param request DescribeInstanceListRequest
  * @return DescribeInstanceListResponse
 */
async function describeInstanceList(request: DescribeInstanceListRequest): DescribeInstanceListResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeInstanceListWithOptions(request, runtime);
}

model DescribeInstanceSpecsRequest {
  instanceIdList?: string(name='InstanceIdList', description='The ID of the resource group to which the Anti-DDoS Origin Enterprise instance belongs in Resource Management. This parameter is empty by default, which indicates that the Anti-DDoS Origin Enterprise instance belongs to the default resource group.

For more information about resource groups, see [Create a resource group](~~94485~~).', example='["ddosbgp-cn-n6w1r7nz****"]'),
  regionId?: string(name='RegionId', description='The normal clean bandwidth. Unit: Mbit/s.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='Indicates whether the unlimited protection feature is enabled. Valid values:

*   **0**: The unlimited protection feature is disabled.
*   **1**: The unlimited protection feature is enabled.', example='rg-acfm2pz25js****'),
}

model DescribeInstanceSpecsResponseBody = {
  instanceSpecs?: [ 
    {
      availableDefenseTimes?: int32(name='AvailableDefenseTimes', description='The ID of the Anti-DDoS Origin Enterprise instance. This parameter value is a string consisting of JSON arrays. Each element in a JSON array indicates an instance ID. If you want to query more than one instance, separate instance IDs with commas (,).

>  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin Enterprise instances in a specific region.', example='2'),
      availableDeleteBlackholeCount?: string(name='AvailableDeleteBlackholeCount', description='The basic protection bandwidth of the Anti-DDoS Origin Enterprise instance. Unit: Gbit/s.', example='100'),
      instanceId?: string(name='InstanceId', description='The number of IP addresses that can be protected by the Anti-DDoS Origin Enterprise instance.', example='ddosbgp-cn-n6w1r7nz****'),
      isFullDefenseMode?: int32(name='IsFullDefenseMode', description='The region ID of the Anti-DDoS Origin Enterprise instance.

>  You can call the [DescribeRegions](~~118703~~) operation to query the name of the region.', example='1'),
      packConfig?: {
        bandwidth?: long(name='Bandwidth', example='2'),
        bindIpCount?: int32(name='BindIpCount', description='The ID of the Anti-DDoS Origin Enterprise instance.', example='0'),
        ipAdvanceThre?: int32(name='IpAdvanceThre', description='DescribeInstanceSpecs', example='300'),
        ipBasicThre?: int32(name='IpBasicThre', description='WB269094', example='20'),
        ipSpec?: int32(name='IpSpec', example='100'),
        normalBandwidth?: int32(name='NormalBandwidth', description='DescribeInstanceSpecs', example='200'),
        packAdvThre?: int32(name='PackAdvThre', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='300'),
        packBasicThre?: int32(name='PackBasicThre', description='The ID of the request.', example='20'),
      }(name='PackConfig', description='The specifications of the Anti-DDoS Origin Enterprise instance, including whether the unlimited protection feature is enabled, and the numbers of times that the unlimited protection feature can be enabled and has been enabled.'),
      region?: string(name='Region', description='The number of times that blackhole filtering can be deactivated.', example='cn-hangzhou'),
      totalDefenseTimes?: int32(name='TotalDefenseTimes', description='The number of times that the unlimited protection feature can be enabled.', example='2'),
    }
  ](name='InstanceSpecs', description='The number of IP addresses that are protected by the Anti-DDoS Origin Enterprise instance.'),
  requestId?: string(name='RequestId', description='The number of times that the unlimited protection feature can be enabled.', example='5840AB9F-1419-4620-807D-5EA476090247'),
}

model DescribeInstanceSpecsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeInstanceSpecsResponseBody(name='body'),
}

async function describeInstanceSpecsWithOptions(request: DescribeInstanceSpecsRequest, runtime: Util.RuntimeOptions): DescribeInstanceSpecsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceIdList)) {
    query['InstanceIdList'] = request.instanceIdList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeInstanceSpecs',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function describeInstanceSpecs(request: DescribeInstanceSpecsRequest): DescribeInstanceSpecsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeInstanceSpecsWithOptions(request, runtime);
}

model DescribeOnDemandDdosEventRequest {
  endTime?: int32(name='EndTime', description='The timestamp that indicates the end time of the attack. Unit: seconds. The timestamp follows the UNIX time format. It is the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970.', example='1557909844'),
  instanceId?: string(name='InstanceId', description='The timestamp that specifies the beginning of the time range to query. Unit: seconds. The timestamp follows the UNIX time format. It is the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970.', example='ddosbgp-cn-n6w1r7nz****'),
  ip?: string(name='Ip', description='The status of the event. Valid values:

*   **hole_begin **: indicates that the event is in the blackhole state.
*   **hole_end **: indicates that blackhole ends.
*   **defense_begin **: indicates that the event is in the cleaning state.
*   **defense_end **: indicates that cleaning ends.', example='192.XX.XX.1'),
  pageNo?: int32(name='PageNo', description='The IP address of the protection target.', example='1'),
  pageSize?: int32(name='PageSize', description='The ID of the on-demand instance to query.', example='10'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The number of the page to return. Default value: **1**.', example='rg-acfm2pz25js****'),
  startTime?: int32(name='StartTime', description='The operation that you want to perform. Set the value to **DescribeOnDemandDdosEvent**.', example='1557305044'),
}

model DescribeOnDemandDdosEventResponseBody = {
  events?: [ 
    {
      endTime?: int32(name='EndTime', description='The packet forwarding rate of the DDoS attack. Unit: packets per second (PPS).', example='1557891306'),
      ip?: string(name='Ip', example='192.XX.XX.1'),
      mbps?: int32(name='Mbps', example='110000'),
      pps?: int32(name='Pps', example='0'),
      startTime?: int32(name='StartTime', example='1557889506'),
      status?: string(name='Status', example='defense_end'),
    }
  ](name='Events', description='The ID of the request.'),
  requestId?: string(name='RequestId', description='The timestamp that indicates the start time of the attack. Unit: seconds. The timestamp follows the UNIX time format. It is the number of seconds that have elapsed since 00:00:00 Thursday, 1 January 1970.', example='6A507DC8-F657-4C13-84E2-D1D1B9400753'),
  total?: long(name='Total', description='The list of DDoS events and the details of each event.', example='1'),
}

model DescribeOnDemandDdosEventResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeOnDemandDdosEventResponseBody(name='body'),
}

/**
  * The ID of the resource group.
  *
  * @param request DescribeOnDemandDdosEventRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeOnDemandDdosEventResponse
 */
async function describeOnDemandDdosEventWithOptions(request: DescribeOnDemandDdosEventRequest, runtime: Util.RuntimeOptions): DescribeOnDemandDdosEventResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.pageNo)) {
    query['PageNo'] = request.pageNo;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeOnDemandDdosEvent',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The ID of the resource group.
  *
  * @param request DescribeOnDemandDdosEventRequest
  * @return DescribeOnDemandDdosEventResponse
 */
async function describeOnDemandDdosEvent(request: DescribeOnDemandDdosEventRequest): DescribeOnDemandDdosEventResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeOnDemandDdosEventWithOptions(request, runtime);
}

model DescribeOnDemandInstanceStatusRequest {
  instanceIdList?: [ string ](name='InstanceIdList', description='The mode used to start the on-demand instance. Valid values:

*   **manual**: The instance is manually started.
*   **netflow-auto**: The instance is automatically started by using NetFlow that monitors network traffic.', example='ddosbgp-cn-z2q1qzxb****'),
  regionId?: string(name='RegionId', description='The details of the on-demand instance.', example='cn-zhangjiakou'),
}

model DescribeOnDemandInstanceStatusResponseBody = {
  instances?: [ 
    {
      declared?: string(name='Declared', description='WB269094', example='[{\\"region\\":\\"oe24\\",\\"declared\\":0},{\\"region\\":\\"oe26\\",\\"declared\\":0},{\\"region\\":\\"oe28\\",\\"declared\\":0},{\\"region\\":\\"oi39\\",\\"declared\\":0},{\\"region\\":\\"us50\\",\\"declared\\":0},{\\"region\\":\\"jp141\\",\\"declared\\":0}]'),
      desc?: string(name='Desc', example='test'),
      instanceId?: string(name='InstanceId', description='DescribeOnDemandInstanceStatus', example='ddosbgp-cn-z2q1qzxb****'),
      mode?: string(name='Mode', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='netflow-auto'),
      net?: string(name='Net', example='47.***.***.0/24'),
      registedAs?: string(name='RegistedAs', description='DescribeOnDemandInstanceStatus', example='0'),
      userId?: string(name='UserId', description='The ID of the request.', example='171986973287****'),
    }
  ](name='Instances', description='The ID of the Alibaba Cloud account.'),
  requestId?: string(name='RequestId', description='The CIDR block of the on-demand instance.', example='CC49FF51-612F-429B-AB1E-374B3F115396'),
}

model DescribeOnDemandInstanceStatusResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeOnDemandInstanceStatusResponseBody(name='body'),
}

async function describeOnDemandInstanceStatusWithOptions(request: DescribeOnDemandInstanceStatusRequest, runtime: Util.RuntimeOptions): DescribeOnDemandInstanceStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceIdList)) {
    query['InstanceIdList'] = request.instanceIdList;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeOnDemandInstanceStatus',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function describeOnDemandInstanceStatus(request: DescribeOnDemandInstanceStatusRequest): DescribeOnDemandInstanceStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeOnDemandInstanceStatusWithOptions(request, runtime);
}

model DescribeOpEntitiesRequest {
  currentPage?: int32(name='CurrentPage', description='The operation that you want to perform. Set the value to **DescribeOpEntities**.', example='1'),
  endTime?: long(name='EndTime', description='The details of the operation log.', example='1640880000000'),
  instanceId?: string(name='InstanceId', description='The page number of the returned page.', example='ddosbgp-cn-n6w1r7nz****'),
  orderBy?: string(name='OrderBy', description='The sort order of operation logs. Valid values:

*   **ASC**: the ascending order.
*   **DESC**: the descending order.', example='opdate'),
  orderDir?: string(name='OrderDir', description='The ID of the region where the Anti-DDoS Origin instance resides.

>  You can call the [DescribeRegions](~~118703~~) operation to query the most recent region list.', example='ASC'),
  pageSize?: int32(name='PageSize', description='The type of the operation object. The value is fixed as **1**, which indicates Anti-DDoS Origin instances.', example='10'),
  regionId?: string(name='RegionId', description='The ID of the Alibaba Cloud account that performs the operation.

>  If the value is **system**, the operation is performed by Anti-DDoS Origin.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The details about the operation. The value is a string that consists of a JSON struct. The JSON struct contains the following fields:

*   **entity**: the operation object. Data type: object. The fields that are included in the value of the **entity** parameter vary based on the value of the **OpAction** parameter. Take note of the following items:

    *   If the value of the **OpAction** parameter is **3**, the value of the **entity** parameter consists of the following field:

        *   **ips**: the public IP addresses that are protected by the Anti-DDoS Origin instance. Data type: array

    *   If the value of the **OpAction** parameter is **4**, the value of the **entity** parameter consists of the following field:

        *   **ips**: the public IP addresses that are no longer protected by the Anti-DDoS Origin instance. Data type: array.

    *   If the value of the **OpAction** parameter is **5**, the value of the **entity** parameter consists of the following fields:

        *   **baseBandwidth**: the basic protection bandwidth. Unit: Gbit/s. Data type: integer.
        *   **elasticBandwidth**: the burstable protection bandwidth. Unit: Gbit/s. Data type: integer.
        *   **opSource**: the source of the operation. The value is fixed as **1**, indicating that the operation is performed by Anti-DDoS Origin. Data type: integer.

    *   If the value of the **OpAction** parameter is **6**, the value of the **entity** parameter consists of the following field:

        *   **ips**: the public IP addresses for which to deactivate blackhole filtering. Data type: array.

    *   If the value of the **OpAction** parameter is **7**, the **entity** parameter is not returned.

    *   If the value of the **OpAction** parameter is **8**, the value of the **entity** parameter consists of the following fields:

        *   **baseBandwidth**: the basic protection bandwidth. Unit: Gbit/s. Data type: integer.
        *   **elasticBandwidth**: the burstable protection bandwidth. Unit: Gbit/s. Data type: integer.', example='rg-acfm2pz25js****'),
  startTime?: long(name='StartTime', description='The sorting method of operation logs. Set the value to **opdate**, which indicates sorting based on the operation time.', example='1609430400000'),
}

model DescribeOpEntitiesResponseBody = {
  opEntities?: [ 
    {
      entityObject?: string(name='EntityObject', description='Queries the operation logs of an Anti-DDoS Origin instance.', example='ddosbgp-cn-n6w1r7nz****'),
      entityType?: int32(name='EntityType', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='1'),
      gmtCreate?: long(name='GmtCreate', description='WB01342967', example='1635818114000'),
      opAccount?: string(name='OpAccount', example='171986973287****'),
      opAction?: int32(name='OpAction', description='DescribeOpEntities', example='8'),
      opDesc?: string(name='OpDesc', example='{"entity":{"baseBandwidth":20,"elasticBandwidth":20}}'),
    }
  ](name='OpEntities', description='The ID of the request.'),
  requestId?: string(name='RequestId', description='The end time. Operation logs that were generated before this time are queried.**** This value is a UNIX timestamp. Unit: milliseconds.', example='52C8ECB0-0B1A-4E66-A31C-B6A855120E82'),
  totalCount?: int32(name='TotalCount', description='The time when the log was generated. This value is a UNIX timestamp. Unit: milliseconds.', example='1'),
}

model DescribeOpEntitiesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeOpEntitiesResponseBody(name='body'),
}

/**
  * The start time. Operation logs that were generated after this time are queried.**** This value is a UNIX timestamp. Unit: milliseconds.
  *
  * @param request DescribeOpEntitiesRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeOpEntitiesResponse
 */
async function describeOpEntitiesWithOptions(request: DescribeOpEntitiesRequest, runtime: Util.RuntimeOptions): DescribeOpEntitiesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.currentPage)) {
    query['CurrentPage'] = request.currentPage;
  }
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.orderBy)) {
    query['OrderBy'] = request.orderBy;
  }
  if (!Util.isUnset(request.orderDir)) {
    query['OrderDir'] = request.orderDir;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeOpEntities',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The start time. Operation logs that were generated after this time are queried.**** This value is a UNIX timestamp. Unit: milliseconds.
  *
  * @param request DescribeOpEntitiesRequest
  * @return DescribeOpEntitiesResponse
 */
async function describeOpEntities(request: DescribeOpEntitiesRequest): DescribeOpEntitiesResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeOpEntitiesWithOptions(request, runtime);
}

model DescribePackIpListRequest {
  instanceId?: string(name='InstanceId', description='The ID of the resource group to which the Anti-DDoS Origin instance belongs in Resource Management.

If you do not specify this parameter, the instance belongs to the default resource group.', example='ddosbgp-cn-n6w1r7nz****'),
  ip?: string(name='Ip', description='The number of the page to return.', example='47.98.XX.XX'),
  pageNo?: int32(name='PageNo', description='The operation that you want to perform. Set the value to **DescribePackIpList**.', example='1'),
  pageSize?: int32(name='PageSize', description='The type of the cloud asset to which the protected IP address to query belongs. Valid values:

*   **ECS**: an Elastic Compute Service (ECS) instance.
*   **SLB**: a Classic Load Balancer (CLB) instance, originally called a Server Load Balancer (SLB) instance.
*   **EIP**: an elastic IP address (EIP). An Internet-facing Application Load Balancer (ALB) instance uses an EIP. If the IP address belongs to the Internet-facing ALB instance, set this parameter to EIP.
*   **WAF**: a Web Application Firewall (WAF) instance.', example='10'),
  productName?: string(name='ProductName', description='The protected IP address to query.', example='ECS'),
  regionId?: string(name='RegionId', description='The list of IP addresses that are protected by the Anti-DDoS Origin instance.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The type of the cloud asset to which the IP address belongs. Valid values:

*   **ECS**: an ECS instance.
*   **SLB**: an CLB instance.
*   **EIP**: an EIP. If the IP address belongs to an ALB instance, the value EIP is returned.
*   **WAF**: a WAF instance.', example='rg-acfm2pz25js****'),
}

model DescribePackIpListResponseBody = {
  code?: string(name='Code', description='The ID of the request.', example='200'),
  ipList?: [ 
    {
      ip?: string(name='Ip', example='47.98.XX.XX'),
      product?: string(name='Product', example='ECS'),
      region?: string(name='Region'),
      remark?: string(name='Remark', example='test'),
      status?: string(name='Status', example='normal'),
    }
  ](name='IpList', description='WB269094'),
  requestId?: string(name='RequestId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='4FD1578A-BD77-50B7-A969-45A374A7ED22'),
  success?: boolean(name='Success', description='DescribePackIpList', example='true'),
  total?: int32(name='Total', description='Queries the IP addresses that are protected by a specific Anti-DDoS Origin instance.', example='1'),
}

model DescribePackIpListResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribePackIpListResponseBody(name='body'),
}

/**
  * The number of entries to return on each page.
  *
  * @param request DescribePackIpListRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribePackIpListResponse
 */
async function describePackIpListWithOptions(request: DescribePackIpListRequest, runtime: Util.RuntimeOptions): DescribePackIpListResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.pageNo)) {
    query['PageNo'] = request.pageNo;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.productName)) {
    query['ProductName'] = request.productName;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribePackIpList',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The number of entries to return on each page.
  *
  * @param request DescribePackIpListRequest
  * @return DescribePackIpListResponse
 */
async function describePackIpList(request: DescribePackIpListRequest): DescribePackIpListResponse {
  var runtime = new Util.RuntimeOptions{};
  return describePackIpListWithOptions(request, runtime);
}

model DescribeRegionsRequest {
  regionId?: string(name='RegionId', description='The ID of the request.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The HTTP status code.', example='rg-acfm2pz25js****'),
}

model DescribeRegionsResponseBody = {
  code?: string(name='Code', description='Indicates whether the request is successful. Valid values:

*   **true**: The request is successful.
*   **false**: The request failed.', example='200'),
  regions?: [ 
    {
      regionEnName?: string(name='RegionEnName', description='The ID of the region.', example='China (Hangzhou)'),
      regionId?: string(name='RegionId', example='cn-hangzhou'),
      regionName?: string(name='RegionName', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.'),
    }
  ](name='Regions', description='The name of the region where the cloud assets reside.'),
  requestId?: string(name='RequestId', description='The information about regions of the cloud assets that are supported by the Anti-DDoS Origin instance. The information includes region IDs and names.', example='F7CA8B4E-FB15-4336-A351-8DC29D66EA82'),
  success?: boolean(name='Success', description='The English name of the region where the cloud assets reside.', example='true'),
}

model DescribeRegionsResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeRegionsResponseBody(name='body'),
}

async function describeRegionsWithOptions(request: DescribeRegionsRequest, runtime: Util.RuntimeOptions): DescribeRegionsResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeRegions',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function describeRegions(request: DescribeRegionsRequest): DescribeRegionsResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeRegionsWithOptions(request, runtime);
}

model DescribeTrafficRequest {
  endTime?: int32(name='EndTime', description='The time when the traffic statistics are calculated. This value is a UNIX timestamp. Unit: seconds.', example='1563445054'),
  flowType?: string(name='FlowType', description='The ID of the region where the Anti-DDoS Origin instance resides.

>  You can call the [DescribeRegions](~~118703~~) operation to query the most recent region list.', example='max'),
  instanceId?: string(name='InstanceId', description='The type of the traffic statistics to query. Valid values:

*   **max**: the peak traffic within the specified interval
*   **avg**: the average traffic within the specified interval', example='ddosbgp-cn-n6w203qg****'),
  interval?: int32(name='Interval', description='The interval at which the traffic statistics are calculated. Unit: seconds. Default value: **5**.', example='5'),
  ip?: string(name='Ip', description='The packet forwarding rate of attack traffic. Unit: packets per second.

>  This parameter is returned only if attack traffic exists.', example='39.XX.XX.96'),
  ipnet?: string(name='Ipnet', description='The operation that you want to perform. Set the value to **DescribeTraffic**.', example='111.XX.XX.0/24'),
  regionId?: string(name='RegionId', description='The bandwidth of the total traffic. Unit: Kbit/s.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the Anti-DDoS Origin instance to query.

>  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin instances.

If you specify an on-demand instance, you must configure the **Interval** parameter.', example='rg-acfm2pz25js****'),
  startTime?: int32(name='StartTime', description='The end of the time range to query. The value is a UNIX timestamp. Unit: seconds.

If you do not specify this parameter, the current system time is used as the end time.', example='1619798400'),
}

model DescribeTrafficResponseBody = {
  flowList?: [ 
    {
      attackBps?: long(name='AttackBps', example='0'),
      attackPps?: long(name='AttackPps', description='Queries traffic statistics of an Anti-DDoS Origin instance within a specific time period.', example='0'),
      flowType?: string(name='FlowType', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the "**Examples**" section of this topic.', example='max'),
      kbps?: int32(name='Kbps', example='417'),
      name?: string(name='Name', description='DescribeTraffic', example='8e33f19e-5644-11eb-b5c1-d89d67182200'),
      pps?: int32(name='Pps', description='WB269094', example='274'),
      time?: int32(name='Time', description='The ID of the request.', example='1620951900'),
    }
  ](name='FlowList', description='The ID of the traffic statistics.'),
  requestId?: string(name='RequestId', description='The beginning of the time range to query. The value is a UNIX timestamp. Unit: seconds.', example='6A507DC8-F657-4C13-84E2-D1D1B9400753'),
}

model DescribeTrafficResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: DescribeTrafficResponseBody(name='body'),
}

/**
  * The bandwidth of attack traffic. Unit: bit/s.
  * >  This parameter is returned only if attack traffic exists.
  *
  * @param request DescribeTrafficRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return DescribeTrafficResponse
 */
async function describeTrafficWithOptions(request: DescribeTrafficRequest, runtime: Util.RuntimeOptions): DescribeTrafficResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.endTime)) {
    query['EndTime'] = request.endTime;
  }
  if (!Util.isUnset(request.flowType)) {
    query['FlowType'] = request.flowType;
  }
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.interval)) {
    query['Interval'] = request.interval;
  }
  if (!Util.isUnset(request.ip)) {
    query['Ip'] = request.ip;
  }
  if (!Util.isUnset(request.ipnet)) {
    query['Ipnet'] = request.ipnet;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.startTime)) {
    query['StartTime'] = request.startTime;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'DescribeTraffic',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The bandwidth of attack traffic. Unit: bit/s.
  * >  This parameter is returned only if attack traffic exists.
  *
  * @param request DescribeTrafficRequest
  * @return DescribeTrafficResponse
 */
async function describeTraffic(request: DescribeTrafficRequest): DescribeTrafficResponse {
  var runtime = new Util.RuntimeOptions{};
  return describeTrafficWithOptions(request, runtime);
}

model GetSlsOpenStatusRequest {
  regionId?: string(name='RegionId', description='Indicates whether Log Service was activated. Valid values:

*   **true**: Log Service was activated.
*   **false**: Log Service was not activated.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the request.', example='rg-acfm2pz25js****'),
}

model GetSlsOpenStatusResponseBody = {
  requestId?: string(name='RequestId', example='D01666F5-541B-4C78-98A6-D29E02DAAC7C'),
  slsOpenStatus?: boolean(name='SlsOpenStatus', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='true'),
}

model GetSlsOpenStatusResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: GetSlsOpenStatusResponseBody(name='body'),
}

async function getSlsOpenStatusWithOptions(request: GetSlsOpenStatusRequest, runtime: Util.RuntimeOptions): GetSlsOpenStatusResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'GetSlsOpenStatus',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function getSlsOpenStatus(request: GetSlsOpenStatusRequest): GetSlsOpenStatusResponse {
  var runtime = new Util.RuntimeOptions{};
  return getSlsOpenStatusWithOptions(request, runtime);
}

model ListOpenedAccessLogInstancesRequest {
  pageNumber?: int32(name='PageNumber', description='The number of the Anti-DDoS Origin instances for which log analysis was enabled.', example='1'),
  pageSize?: int32(name='PageSize', description='The ID of the request.', example='10'),
  resourceGroupId?: string(name='ResourceGroupId', description='The number of entries to return on each page. Default value: **10**.', example='rg-acfm2pz25js****'),
}

model ListOpenedAccessLogInstancesResponseBody = {
  requestId?: string(name='RequestId', description='The ID of the Anti-DDoS Origin instance.', example='4DB64811-70A1-41C9-A0CE-CD8B260ED551'),
  slsConfigStatus?: [ 
    {
      enable?: boolean(name='Enable', example='true'),
      instanceId?: string(name='InstanceId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='ddosbgp-cn-m7r1zce2****'),
    }
  ](name='SlsConfigStatus', description='Indicates whether log analysis was enabled for the Anti-DDoS Origin instance. Valid values:

*   **true**: Log analysis was enabled.
*   **false**: Log analysis was disabled.'),
  totalCount?: int32(name='TotalCount', description='The configuration of log analysis for the Anti-DDoS Origin instance.', example='1'),
}

model ListOpenedAccessLogInstancesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListOpenedAccessLogInstancesResponseBody(name='body'),
}

async function listOpenedAccessLogInstancesWithOptions(request: ListOpenedAccessLogInstancesRequest, runtime: Util.RuntimeOptions): ListOpenedAccessLogInstancesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.pageNumber)) {
    query['PageNumber'] = request.pageNumber;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListOpenedAccessLogInstances',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function listOpenedAccessLogInstances(request: ListOpenedAccessLogInstancesRequest): ListOpenedAccessLogInstancesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listOpenedAccessLogInstancesWithOptions(request, runtime);
}

model ListTagKeysRequest {
  currentPage?: int32(name='CurrentPage', description='The ID of the resource group.', example='1'),
  pageSize?: int32(name='PageSize', description='The number of the page to return. Pages start from page **1**. Default value: **1**.', example='20'),
  regionId?: string(name='RegionId', description='The type of the resource. Valid value: **INSTANCE**.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The page number of the returned page.', example='test'),
  resourceType?: string(name='ResourceType', description='The number of entries to return on each page. Valid values: 1 to **50**. Default value: **10**.', example='INSTANCE'),
}

model ListTagKeysResponseBody = {
  currentPage?: int32(name='CurrentPage', description='The ID of the request.', example='1'),
  pageSize?: int32(name='PageSize', description='The total number of tags.', example='20'),
  requestId?: string(name='RequestId', description='The number of entries returned per page.', example='97935DF1-0289-4AA2-9DD1-72377838B16B'),
  tagKeys?: [ 
    {
      tagCount?: int32(name='TagCount', description='The key of each tag.', example='1'),
      tagKey?: string(name='TagKey', example='a'),
    }
  ](name='TagKeys', description='The total number of tag values that correspond to each key.'),
  totalCount?: int32(name='TotalCount', description='The list of tags and the details of each tag.', example='6'),
}

model ListTagKeysResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListTagKeysResponseBody(name='body'),
}

async function listTagKeysWithOptions(request: ListTagKeysRequest, runtime: Util.RuntimeOptions): ListTagKeysResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.currentPage)) {
    query['CurrentPage'] = request.currentPage;
  }
  if (!Util.isUnset(request.pageSize)) {
    query['PageSize'] = request.pageSize;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagKeys',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function listTagKeys(request: ListTagKeysRequest): ListTagKeysResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagKeysWithOptions(request, runtime);
}

model ListTagResourcesRequest {
  nextToken?: string(name='NextToken', description='The ID of the resource group to which the Anti-DDoS Origin instance belongs in Resource Management.

If you do not specify this parameter, the instance belongs to the default resource group.', example='RGuYpqDdKhzXb8C3.D1BwQgc1tMBsoxdGiEKHHUUCf****'),
  regionId?: string(name='RegionId', description='The operation that you want to perform. Set the value to **ListTagResources**.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The ID of the Anti-DDoS Origin instance.', example='rg-acfm2pz25js****'),
  resourceId?: [ string ](name='ResourceId', description='The value of the tag that is added to the instance.', example='ddosbgp-cn-v0h1fmwbc024'),
  resourceType?: string(name='ResourceType', description='The value of the tag to query.

>  The **ResourceIds.N** parameter and the key-value pair (Tag.N.Key and Tag.N.Value) cannot be left empty at the same time.', example='INSTANCE'),
  tag?: [ 
    {
      key?: string(name='Key', description='The ID of the request.', example='testKey1'),
      value?: string(name='Value', description='The type of the resource. The value is fixed as **INSTANCE**, which indicates instances.', example='testValue1'),
    }
  ](name='Tag', description='The key of the tag to query.

>  The **ResourceIds.N** parameter and the key-value pair (Tag.N.Key and Tag.N.Value) cannot be left empty at the same time.'),
}

model ListTagResourcesResponseBody = {
  nextToken?: string(name='NextToken', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='RGuYpqDdKhzXb8C3.D1BwQgc1tMBsoxdGiEKHHUUCf****'),
  requestId?: string(name='RequestId', description='ListTagResources', example='C3F7E6AE-43B2-4730-B6A3-FD17552B8F65'),
  tagResources?: {
    tagResource?: [ 
    {
      resourceId?: string(name='ResourceId', example='ddosbgp-cn-n6w1r7nz****'),
      resourceType?: string(name='ResourceType', example='INSTANCE'),
      tagKey?: string(name='TagKey', example='testKey1'),
      tagValue?: string(name='TagValue', example='testValue1'),
    }
  ](name='TagResource')
  }(name='TagResources', description='WB269094'),
}

model ListTagResourcesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ListTagResourcesResponseBody(name='body'),
}

/**
  * The ID of the region where the Anti-DDoS Origin instance resides.
  * >  You can call the [DescribeRegions](~~118703~~) operation to query the most recent region list.
  *
  * @param request ListTagResourcesRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ListTagResourcesResponse
 */
async function listTagResourcesWithOptions(request: ListTagResourcesRequest, runtime: Util.RuntimeOptions): ListTagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.nextToken)) {
    query['NextToken'] = request.nextToken;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ListTagResources',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The ID of the region where the Anti-DDoS Origin instance resides.
  * >  You can call the [DescribeRegions](~~118703~~) operation to query the most recent region list.
  *
  * @param request ListTagResourcesRequest
  * @return ListTagResourcesResponse
 */
async function listTagResources(request: ListTagResourcesRequest): ListTagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return listTagResourcesWithOptions(request, runtime);
}

model ModifyRemarkRequest {
  instanceId?: string(name='InstanceId', description='Adds remarks for a specific Anti-DDoS Origin instance.', example='ddosbgp-cn-n6w1r7nz****'),
  regionId?: string(name='RegionId', example='cn-hangzhou'),
  remark?: string(name='Remark', description='ModifyRemark', example='test-remark'),
  resourceGroupId?: string(name='ResourceGroupId', description='WB269094', example='rg-acfm2pz25js****'),
}

model ModifyRemarkResponseBody = {
  requestId?: string(name='RequestId', example='6AC3597B-7FD5-5E68-97C3-E11F4D010732'),
}

model ModifyRemarkResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: ModifyRemarkResponseBody(name='body'),
}

/**
  * The operation that you want to perform. Set the value to **ModifyRemark**.
  *
  * @param request ModifyRemarkRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return ModifyRemarkResponse
 */
async function modifyRemarkWithOptions(request: ModifyRemarkRequest, runtime: Util.RuntimeOptions): ModifyRemarkResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.remark)) {
    query['Remark'] = request.remark;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'ModifyRemark',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The operation that you want to perform. Set the value to **ModifyRemark**.
  *
  * @param request ModifyRemarkRequest
  * @return ModifyRemarkResponse
 */
async function modifyRemark(request: ModifyRemarkRequest): ModifyRemarkResponse {
  var runtime = new Util.RuntimeOptions{};
  return modifyRemarkWithOptions(request, runtime);
}

model QuerySchedruleOnDemandRequest {
  instanceId?: string(name='InstanceId', description='The ID of the request.', example='ddosbgp-cn-z2q1qzxb****'),
  regionId?: string(name='RegionId', description='The ID of the on-demand instance.', example='cn-zhangjiakou'),
}

model QuerySchedruleOnDemandResponseBody = {
  instanceId?: string(name='InstanceId', description='The configurations of the scheduling rule.', example='ddosbgp-cn-z2q1qzxb****'),
  requestId?: string(name='RequestId', description='The ID of the Alibaba Cloud account.', example='4A8F9980-5ACB-497F-9F15-48E9D6B29028'),
  ruleConfig?: [ 
    {
      ruleAction?: string(name='RuleAction', description='The stop method of the scheduling rule. Valid values:

*   **auto**: The scheduling rule automatically stops.
*   **manual**: The scheduling rule is manually stopped.', example='declare'),
      ruleConditionCnt?: string(name='RuleConditionCnt', description='The name of the scheduling rule.', example='3'),
      ruleConditionKpps?: string(name='RuleConditionKpps', description='The start time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.

If the system detects that DDoS attacks stop, the system no longer reroutes traffic to the on-demand instance from the time you specified. We recommend that you set this parameter to a value that is defined as off-peak hours.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='10'),
      ruleConditionMbps?: string(name='RuleConditionMbps', description='The scheduling action. Set the value to **declare**, which indicates that the route is advertised.', example='100'),
      ruleName?: string(name='RuleName', description='The scheduling status. Valid values:

*   **scheduled**
*   **unscheduled**', example='ddosbgp-cn-z2q1qzxb****'),
      ruleSwitch?: string(name='RuleSwitch', description='The time zone of the time when the scheduling rule automatically stops. The time zone must be in the `GMT-hh:mm` format.

For example, the value `GMT-08:00` indicates that the time zone is UTC+8.

>  This parameter takes effect only when the **RuleUndoMode** parameter is set to **auto**.', example='on'),
      ruleUndoBeginTime?: string(name='RuleUndoBeginTime', description='The end time of the period during which the scheduling rule is automatically stopped. The time must be in the 24-hour clock and in the `hh:mm` format.', example='03:00'),
      ruleUndoEndTime?: string(name='RuleUndoEndTime', description='The status of the scheduling rule.', example='03:05'),
      ruleUndoMode?: string(name='RuleUndoMode', description='If the inbound bandwidth or packets consecutively exceed the threshold for the specified number of times, the scheduling rule is triggered and traffic is rerouted to the on-demand instance. The specified number of times is the value of this parameter.

>  The threshold of inbound bandwidth is the value of **RuleConditionMbps**. The threshold of inbound packets is the value of **RuleConditionKpps**.', example='auto'),
      timeZone?: string(name='TimeZone', description='The threshold of inbound packets. Unit: Kpps. Minimum value: **10**.', example='GMT-08:00'),
    }
  ](name='RuleConfig', description='The threshold of inbound bandwidth. Unit: Mbit/s. Minimum value: **100**.'),
  ruleStatus?: [ 
    {
      net?: string(name='Net', example='47.***.***.0/24'),
      ruleSchedStatus?: string(name='RuleSchedStatus', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='unscheduled'),
    }
  ](name='RuleStatus', description='The CIDR block of the on-demand instance.'),
  userId?: string(name='UserId', description='Indicates whether the scheduling rule is enabled. Valid values:

*   **on**: enabled
*   **off**: disabled', example='171986973287****'),
}

model QuerySchedruleOnDemandResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: QuerySchedruleOnDemandResponseBody(name='body'),
}

async function querySchedruleOnDemandWithOptions(request: QuerySchedruleOnDemandRequest, runtime: Util.RuntimeOptions): QuerySchedruleOnDemandResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceId)) {
    query['InstanceId'] = request.instanceId;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'QuerySchedruleOnDemand',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function querySchedruleOnDemand(request: QuerySchedruleOnDemandRequest): QuerySchedruleOnDemandResponse {
  var runtime = new Util.RuntimeOptions{};
  return querySchedruleOnDemandWithOptions(request, runtime);
}

model SetInstanceModeOnDemandRequest {
  instanceIdList?: [ string ](name='InstanceIdList', description='SetInstanceModeOnDemand', example='ddosbgp-cn-z2q1qzxb****'),
  mode?: string(name='Mode', description='SetInstanceModeOnDemand', example='netflow-auto'),
  regionId?: string(name='RegionId', description='WB269094', example='cn-zhangjiakou'),
}

model SetInstanceModeOnDemandResponseBody = {
  requestId?: string(name='RequestId', example='BD06F539-2FBE-450D-9391-7EFF787128F5'),
}

model SetInstanceModeOnDemandResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: SetInstanceModeOnDemandResponseBody(name='body'),
}

async function setInstanceModeOnDemandWithOptions(request: SetInstanceModeOnDemandRequest, runtime: Util.RuntimeOptions): SetInstanceModeOnDemandResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.instanceIdList)) {
    query['InstanceIdList'] = request.instanceIdList;
  }
  if (!Util.isUnset(request.mode)) {
    query['Mode'] = request.mode;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'SetInstanceModeOnDemand',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function setInstanceModeOnDemand(request: SetInstanceModeOnDemandRequest): SetInstanceModeOnDemandResponse {
  var runtime = new Util.RuntimeOptions{};
  return setInstanceModeOnDemandWithOptions(request, runtime);
}

model TagResourcesRequest {
  regionId?: string(name='RegionId', description='All Alibaba Cloud API operations must include common request parameters. For more information about common request parameters, see [Common parameters](~~118841~~).

For more information about sample requests, see the **"Examples"** section of this topic.', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The operation that you want to perform. Set the value to **TagResources**.', example='rg-acfm2pz25js****'),
  resourceId?: [ string ](name='ResourceId', example='ddosbgp-cn-v0h1fmwb****'),
  resourceType?: string(name='ResourceType', description='Adds tags to Anti-DDoS Origin instances.', example='INSTANCE'),
  tag?: [ 
    {
      key?: string(name='Key', description='WB269094', example='test-key'),
      value?: string(name='Value', example='test-value'),
    }
  ](name='Tag'),
}

model TagResourcesResponseBody = {
  requestId?: string(name='RequestId', example='7078CD1E-F609-47A4-9C39-B288CC27C686'),
}

model TagResourcesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: TagResourcesResponseBody(name='body'),
}

/**
  * The ID of Anti-DDoS Origin Instance N to which you want to add tags.
  * >  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin instances.
  *
  * @param request TagResourcesRequest
  * @param runtime runtime options for this request RuntimeOptions
  * @return TagResourcesResponse
 */
async function tagResourcesWithOptions(request: TagResourcesRequest, runtime: Util.RuntimeOptions): TagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tag)) {
    query['Tag'] = request.tag;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'TagResources',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

/**
  * The ID of Anti-DDoS Origin Instance N to which you want to add tags.
  * >  You can call the [DescribeInstanceList](~~118698~~) operation to query the IDs of all Anti-DDoS Origin instances.
  *
  * @param request TagResourcesRequest
  * @return TagResourcesResponse
 */
async function tagResources(request: TagResourcesRequest): TagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return tagResourcesWithOptions(request, runtime);
}

model UntagResourcesRequest {
  all?: boolean(name='All', description='The operation that you want to perform. Set the value to **UntagResources**.', example='false'),
  regionId?: string(name='RegionId', description='testKey1', example='cn-hangzhou'),
  resourceGroupId?: string(name='ResourceGroupId', description='The type of the specified resource. Set the value to **INSTANCE**.', example='test'),
  resourceId?: [ string ](name='ResourceId', example='ddosbgp-cn-v0h1fmwbc024'),
  resourceType?: string(name='ResourceType', description='The ID of the request.', example='INSTANCE'),
  tagKey?: [ string ](name='TagKey', example='testKey1'),
}

model UntagResourcesResponseBody = {
  requestId?: string(name='RequestId', example='F2D86AED-BA27-4584-BADC-B43BDA7EEBCA'),
}

model UntagResourcesResponse = {
  headers: map[string]string(name='headers'),
  statusCode: int32(name='statusCode'),
  body: UntagResourcesResponseBody(name='body'),
}

async function untagResourcesWithOptions(request: UntagResourcesRequest, runtime: Util.RuntimeOptions): UntagResourcesResponse {
  Util.validateModel(request);
  var query = {};
  if (!Util.isUnset(request.all)) {
    query['All'] = request.all;
  }
  if (!Util.isUnset(request.regionId)) {
    query['RegionId'] = request.regionId;
  }
  if (!Util.isUnset(request.resourceGroupId)) {
    query['ResourceGroupId'] = request.resourceGroupId;
  }
  if (!Util.isUnset(request.resourceId)) {
    query['ResourceId'] = request.resourceId;
  }
  if (!Util.isUnset(request.resourceType)) {
    query['ResourceType'] = request.resourceType;
  }
  if (!Util.isUnset(request.tagKey)) {
    query['TagKey'] = request.tagKey;
  }
  var req = new OpenApi.OpenApiRequest{ 
    query = OpenApiUtil.query(query),
  };
  var params = new OpenApi.Params{
    action = 'UntagResources',
    version = '2018-07-20',
    protocol = 'HTTPS',
    pathname = '/',
    method = 'POST',
    authType = 'AK',
    style = 'RPC',
    reqBodyType = 'formData',
    bodyType = 'json',
  };
  return callApi(params, req, runtime);
}

async function untagResources(request: UntagResourcesRequest): UntagResourcesResponse {
  var runtime = new Util.RuntimeOptions{};
  return untagResourcesWithOptions(request, runtime);
}

